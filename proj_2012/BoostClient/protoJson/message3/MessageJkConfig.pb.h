// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageJkConfig.proto

#ifndef PROTOBUF_MessageJkConfig_2eproto__INCLUDED
#define PROTOBUF_MessageJkConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>//$(JIAKAO_SDK)\protobuf-2.6.1\protobuf-2.6.1\src 2.6.1是没有这个文件的；
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace OPMessage {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MessageJkConfig_2eproto();
void protobuf_AssignDesc_MessageJkConfig_2eproto();
void protobuf_ShutdownFile_MessageJkConfig_2eproto();

class BasicCarStop;
class BasicClutch;
class BasicDengGuangMoNiItem;
class BasicDoor;
class BasicDottedLine;
class BasicFireUp;
class BasicFlameout;
class BasicFullLine;
class BasicHandBrake;
class BasicHorn;
class BasicLeftMirror;
class BasicLeftTurnLamp;
class BasicMiddleMirror;
class BasicRightMirror;
class BasicRightTurnLamp;
class BasicRoundCar;
class BasicSafety;
class BasicSeat;
class BasicSlowDown;
class BasicTimeout;
class CftcPressLine;
class ConfigInfoBasic;
class ConfigPhysicSensor;
class CoreInfo;
class DcrkPressLine;
class GlobalJudgeRule;
class ItemJudgeBasic;
class ItemJudgeDistance;
class ItemJudgeRuleBianGengCheDao;
class ItemJudgeRuleCftc;
class ItemJudgeRuleChaoChe;
class ItemJudgeRuleDcrk;
class ItemJudgeRuleDengGuangMoNi;
class ItemJudgeRuleDiaoTou;
class ItemJudgeRuleDk;
class ItemJudgeRuleGongGongQiCheZhan;
class ItemJudgeRuleHuiChe;
class ItemJudgeRuleJiaJianDang;
class ItemJudgeRuleKaoBianTingChe;
class ItemJudgeRuleLuKouYouZhuan;
class ItemJudgeRuleLuKouZuoZhuan;
class ItemJudgeRuleQiBu;
class ItemJudgeRuleQxxs;
class ItemJudgeRuleRenXingHengDao;
class ItemJudgeRuleShangCheZhunBei;
class ItemJudgeRuleSpqb;
class ItemJudgeRuleXueXiaoQuYu;
class ItemJudgeRuleZero;
class ItemJudgeRuleZhiXianTongGuoLuKou;
class ItemJudgeRuleZhiXianXingShi;
class ItemJudgeRuleZjzw;
class ItemJudgeSpeed;
class ItemJudgeTime;
class ItemsJudgeRules;
class JudgeItemInfo;
class OtherConfigInfo;
class SoftwareStartInfo;

enum enum_physic_sensor {
  PS_FlameOut = 0,
  PS_Brake = 1,
  PS_LeftTurn = 2,
  PS_RightTurn = 3,
  PS_HandBrake = 4,
  PS_SafetyBelt = 5,
  PS_Door = 6,
  PS_Horn = 7,
  PS_AuxiliaryBrake = 8,
  PS_Clutch = 9,
  PS_FarLamp = 10,
  PS_NearLamp = 11,
  PS_FogLamp = 12,
  PS_WarnLamp = 13,
  PS_PositionLamp = 14,
  PS_AirBrake = 15,
  PS_Fireup = 16,
  PS_ManNear = 17,
  PS_ManOnSeat = 18,
  PS_LeftMirror = 19,
  PS_MiddleMirror = 20,
  PS_RightMirror = 21,
  PS_Seat = 22,
  PS_LfRoundCar = 23,
  PS_RfRoundCar = 24,
  PS_LbRoundCar = 25,
  PS_RbRoundCar = 26
};
bool enum_physic_sensor_IsValid(int value);
const enum_physic_sensor enum_physic_sensor_MIN = PS_FlameOut;
const enum_physic_sensor enum_physic_sensor_MAX = PS_RbRoundCar;
const int enum_physic_sensor_ARRAYSIZE = enum_physic_sensor_MAX + 1;

const ::google::protobuf::EnumDescriptor* enum_physic_sensor_descriptor();
inline const ::std::string& enum_physic_sensor_Name(enum_physic_sensor value) {
  return ::google::protobuf::internal::NameOfEnum(
    enum_physic_sensor_descriptor(), value);
}
inline bool enum_physic_sensor_Parse(
    const ::std::string& name, enum_physic_sensor* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enum_physic_sensor>(
    enum_physic_sensor_descriptor(), name, value);
}
enum enum_judge_retake {
  retake_start_next_item = 0,
  retake_start_item_dk = 1
};
bool enum_judge_retake_IsValid(int value);
const enum_judge_retake enum_judge_retake_MIN = retake_start_next_item;
const enum_judge_retake enum_judge_retake_MAX = retake_start_item_dk;
const int enum_judge_retake_ARRAYSIZE = enum_judge_retake_MAX + 1;

const ::google::protobuf::EnumDescriptor* enum_judge_retake_descriptor();
inline const ::std::string& enum_judge_retake_Name(enum_judge_retake value) {
  return ::google::protobuf::internal::NameOfEnum(
    enum_judge_retake_descriptor(), value);
}
inline bool enum_judge_retake_Parse(
    const ::std::string& name, enum_judge_retake* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enum_judge_retake>(
    enum_judge_retake_descriptor(), name, value);
}
enum enum_judge_points {
  points_car_all = 0,
  points_call_body = 1,
  points_call_wheel = 2
};
bool enum_judge_points_IsValid(int value);
const enum_judge_points enum_judge_points_MIN = points_car_all;
const enum_judge_points enum_judge_points_MAX = points_call_wheel;
const int enum_judge_points_ARRAYSIZE = enum_judge_points_MAX + 1;

const ::google::protobuf::EnumDescriptor* enum_judge_points_descriptor();
inline const ::std::string& enum_judge_points_Name(enum_judge_points value) {
  return ::google::protobuf::internal::NameOfEnum(
    enum_judge_points_descriptor(), value);
}
inline bool enum_judge_points_Parse(
    const ::std::string& name, enum_judge_points* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enum_judge_points>(
    enum_judge_points_descriptor(), name, value);
}
enum CheckStartTypeStart {
  Start_Stop_500ms_Forward_500ms = 0,
  Start_LeftRightLamp_Light_So_goout = 1,
  Start_Skip_Dk_Manual_Operation = 2
};
bool CheckStartTypeStart_IsValid(int value);
const CheckStartTypeStart CheckStartTypeStart_MIN = Start_Stop_500ms_Forward_500ms;
const CheckStartTypeStart CheckStartTypeStart_MAX = Start_Skip_Dk_Manual_Operation;
const int CheckStartTypeStart_ARRAYSIZE = CheckStartTypeStart_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckStartTypeStart_descriptor();
inline const ::std::string& CheckStartTypeStart_Name(CheckStartTypeStart value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckStartTypeStart_descriptor(), value);
}
inline bool CheckStartTypeStart_Parse(
    const ::std::string& name, CheckStartTypeStart* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckStartTypeStart>(
    CheckStartTypeStart_descriptor(), name, value);
}
enum enum_judge_dengguangmoni_type {
  night_no_lamp_poor_lighting = 0,
  night_no_lamp_poor_lighting_in_city = 1,
  night_close_with_car_same_direction = 2,
  night_no_lamp_poor_lighting_in_suburban = 3,
  night_through_curve_ramp_bridge = 4,
  fog_driving = 5,
  night_passing_in_narrow_road = 6,
  night_passing_nearly_150_other_car = 7,
  night_car_road_down = 8,
  night_through_no_traffic_signal_road = 9,
  simulation_test_done_close_all_light = 10
};
bool enum_judge_dengguangmoni_type_IsValid(int value);
const enum_judge_dengguangmoni_type enum_judge_dengguangmoni_type_MIN = night_no_lamp_poor_lighting;
const enum_judge_dengguangmoni_type enum_judge_dengguangmoni_type_MAX = simulation_test_done_close_all_light;
const int enum_judge_dengguangmoni_type_ARRAYSIZE = enum_judge_dengguangmoni_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* enum_judge_dengguangmoni_type_descriptor();
inline const ::std::string& enum_judge_dengguangmoni_type_Name(enum_judge_dengguangmoni_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    enum_judge_dengguangmoni_type_descriptor(), value);
}
inline bool enum_judge_dengguangmoni_type_Parse(
    const ::std::string& name, enum_judge_dengguangmoni_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<enum_judge_dengguangmoni_type>(
    enum_judge_dengguangmoni_type_descriptor(), name, value);
}
enum CheckFinishCarPositionXueXiaoQuYu {
  XueXiaoQuYu_Car_Forward_Car_All_In_Zero = 0,
  XueXiaoQuYu_Car_Forward_Car_Head_HasPts_Four = 1,
  XueXiaoQuYu_Car_Forward_Car_End_HasPts_Four = 2
};
bool CheckFinishCarPositionXueXiaoQuYu_IsValid(int value);
const CheckFinishCarPositionXueXiaoQuYu CheckFinishCarPositionXueXiaoQuYu_MIN = XueXiaoQuYu_Car_Forward_Car_All_In_Zero;
const CheckFinishCarPositionXueXiaoQuYu CheckFinishCarPositionXueXiaoQuYu_MAX = XueXiaoQuYu_Car_Forward_Car_End_HasPts_Four;
const int CheckFinishCarPositionXueXiaoQuYu_ARRAYSIZE = CheckFinishCarPositionXueXiaoQuYu_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionXueXiaoQuYu_descriptor();
inline const ::std::string& CheckFinishCarPositionXueXiaoQuYu_Name(CheckFinishCarPositionXueXiaoQuYu value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionXueXiaoQuYu_descriptor(), value);
}
inline bool CheckFinishCarPositionXueXiaoQuYu_Parse(
    const ::std::string& name, CheckFinishCarPositionXueXiaoQuYu* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionXueXiaoQuYu>(
    CheckFinishCarPositionXueXiaoQuYu_descriptor(), name, value);
}
enum CheckFinishCarPositionLuKouZuoZhuan {
  LuKouZuoZhuan_Car_Forward_Car_All_In_Zero = 0,
  LuKouZuoZhuan_Car_Forward_Car_Head_HasPts_Four = 1,
  LuKouZuoZhuan_Car_Forward_Car_End_HasPts_Four = 2
};
bool CheckFinishCarPositionLuKouZuoZhuan_IsValid(int value);
const CheckFinishCarPositionLuKouZuoZhuan CheckFinishCarPositionLuKouZuoZhuan_MIN = LuKouZuoZhuan_Car_Forward_Car_All_In_Zero;
const CheckFinishCarPositionLuKouZuoZhuan CheckFinishCarPositionLuKouZuoZhuan_MAX = LuKouZuoZhuan_Car_Forward_Car_End_HasPts_Four;
const int CheckFinishCarPositionLuKouZuoZhuan_ARRAYSIZE = CheckFinishCarPositionLuKouZuoZhuan_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionLuKouZuoZhuan_descriptor();
inline const ::std::string& CheckFinishCarPositionLuKouZuoZhuan_Name(CheckFinishCarPositionLuKouZuoZhuan value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionLuKouZuoZhuan_descriptor(), value);
}
inline bool CheckFinishCarPositionLuKouZuoZhuan_Parse(
    const ::std::string& name, CheckFinishCarPositionLuKouZuoZhuan* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionLuKouZuoZhuan>(
    CheckFinishCarPositionLuKouZuoZhuan_descriptor(), name, value);
}
enum CheckFinishCarPositionLuKouYouZhuan {
  LuKouYouZhuan_Car_Forward_Car_All_In_Zero = 0,
  LuKouYouZhuan_Car_Forward_Car_Head_HasPts_Four = 1,
  LuKouYouZhuan_Car_Forward_Car_End_HasPts_Four = 2
};
bool CheckFinishCarPositionLuKouYouZhuan_IsValid(int value);
const CheckFinishCarPositionLuKouYouZhuan CheckFinishCarPositionLuKouYouZhuan_MIN = LuKouYouZhuan_Car_Forward_Car_All_In_Zero;
const CheckFinishCarPositionLuKouYouZhuan CheckFinishCarPositionLuKouYouZhuan_MAX = LuKouYouZhuan_Car_Forward_Car_End_HasPts_Four;
const int CheckFinishCarPositionLuKouYouZhuan_ARRAYSIZE = CheckFinishCarPositionLuKouYouZhuan_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionLuKouYouZhuan_descriptor();
inline const ::std::string& CheckFinishCarPositionLuKouYouZhuan_Name(CheckFinishCarPositionLuKouYouZhuan value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionLuKouYouZhuan_descriptor(), value);
}
inline bool CheckFinishCarPositionLuKouYouZhuan_Parse(
    const ::std::string& name, CheckFinishCarPositionLuKouYouZhuan* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionLuKouYouZhuan>(
    CheckFinishCarPositionLuKouYouZhuan_descriptor(), name, value);
}
enum CheckFinishCarPositionZhiXianTongGuoLuKou {
  ZhiXianTongGuoLuKou_Car_Forward_Car_All_In_Zero = 0,
  ZhiXianTongGuoLuKou_Car_Forward_Car_Head_HasPts_Four = 1,
  ZhiXianTongGuoLuKou_Car_Forward_Car_End_HasPts_Four = 2
};
bool CheckFinishCarPositionZhiXianTongGuoLuKou_IsValid(int value);
const CheckFinishCarPositionZhiXianTongGuoLuKou CheckFinishCarPositionZhiXianTongGuoLuKou_MIN = ZhiXianTongGuoLuKou_Car_Forward_Car_All_In_Zero;
const CheckFinishCarPositionZhiXianTongGuoLuKou CheckFinishCarPositionZhiXianTongGuoLuKou_MAX = ZhiXianTongGuoLuKou_Car_Forward_Car_End_HasPts_Four;
const int CheckFinishCarPositionZhiXianTongGuoLuKou_ARRAYSIZE = CheckFinishCarPositionZhiXianTongGuoLuKou_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionZhiXianTongGuoLuKou_descriptor();
inline const ::std::string& CheckFinishCarPositionZhiXianTongGuoLuKou_Name(CheckFinishCarPositionZhiXianTongGuoLuKou value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionZhiXianTongGuoLuKou_descriptor(), value);
}
inline bool CheckFinishCarPositionZhiXianTongGuoLuKou_Parse(
    const ::std::string& name, CheckFinishCarPositionZhiXianTongGuoLuKou* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionZhiXianTongGuoLuKou>(
    CheckFinishCarPositionZhiXianTongGuoLuKou_descriptor(), name, value);
}
enum CheckFinishCarPositionGongGongQiCheZhan {
  GongGongQiCheZhan_Car_Forward_Car_All_In_Zero = 0,
  GongGongQiCheZhan_Car_Forward_Car_Head_HasPts_Four = 1,
  GongGongQiCheZhan_Car_Forward_Car_End_HasPts_Four = 2
};
bool CheckFinishCarPositionGongGongQiCheZhan_IsValid(int value);
const CheckFinishCarPositionGongGongQiCheZhan CheckFinishCarPositionGongGongQiCheZhan_MIN = GongGongQiCheZhan_Car_Forward_Car_All_In_Zero;
const CheckFinishCarPositionGongGongQiCheZhan CheckFinishCarPositionGongGongQiCheZhan_MAX = GongGongQiCheZhan_Car_Forward_Car_End_HasPts_Four;
const int CheckFinishCarPositionGongGongQiCheZhan_ARRAYSIZE = CheckFinishCarPositionGongGongQiCheZhan_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionGongGongQiCheZhan_descriptor();
inline const ::std::string& CheckFinishCarPositionGongGongQiCheZhan_Name(CheckFinishCarPositionGongGongQiCheZhan value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionGongGongQiCheZhan_descriptor(), value);
}
inline bool CheckFinishCarPositionGongGongQiCheZhan_Parse(
    const ::std::string& name, CheckFinishCarPositionGongGongQiCheZhan* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionGongGongQiCheZhan>(
    CheckFinishCarPositionGongGongQiCheZhan_descriptor(), name, value);
}
enum CheckFinishCarPositionRenXingHengDao {
  RenXingHengDao_Car_Forward_Car_All_In_Zero = 0,
  RenXingHengDao_Car_Forward_Car_Head_HasPts_Four = 1,
  RenXingHengDao_Car_Forward_Car_End_HasPts_Four = 2
};
bool CheckFinishCarPositionRenXingHengDao_IsValid(int value);
const CheckFinishCarPositionRenXingHengDao CheckFinishCarPositionRenXingHengDao_MIN = RenXingHengDao_Car_Forward_Car_All_In_Zero;
const CheckFinishCarPositionRenXingHengDao CheckFinishCarPositionRenXingHengDao_MAX = RenXingHengDao_Car_Forward_Car_End_HasPts_Four;
const int CheckFinishCarPositionRenXingHengDao_ARRAYSIZE = CheckFinishCarPositionRenXingHengDao_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionRenXingHengDao_descriptor();
inline const ::std::string& CheckFinishCarPositionRenXingHengDao_Name(CheckFinishCarPositionRenXingHengDao value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionRenXingHengDao_descriptor(), value);
}
inline bool CheckFinishCarPositionRenXingHengDao_Parse(
    const ::std::string& name, CheckFinishCarPositionRenXingHengDao* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionRenXingHengDao>(
    CheckFinishCarPositionRenXingHengDao_descriptor(), name, value);
}
enum CheckFinishCarPositionZhiXianXingShi {
  ZhiXianXingShi_Car_Forward_Car_All_In_Zero = 0,
  ZhiXianXingShi_Car_Forward_Car_Head_HasPts_Four = 1,
  ZhiXianXingShi_Car_Forward_Car_End_HasPts_Four = 2
};
bool CheckFinishCarPositionZhiXianXingShi_IsValid(int value);
const CheckFinishCarPositionZhiXianXingShi CheckFinishCarPositionZhiXianXingShi_MIN = ZhiXianXingShi_Car_Forward_Car_All_In_Zero;
const CheckFinishCarPositionZhiXianXingShi CheckFinishCarPositionZhiXianXingShi_MAX = ZhiXianXingShi_Car_Forward_Car_End_HasPts_Four;
const int CheckFinishCarPositionZhiXianXingShi_ARRAYSIZE = CheckFinishCarPositionZhiXianXingShi_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionZhiXianXingShi_descriptor();
inline const ::std::string& CheckFinishCarPositionZhiXianXingShi_Name(CheckFinishCarPositionZhiXianXingShi value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionZhiXianXingShi_descriptor(), value);
}
inline bool CheckFinishCarPositionZhiXianXingShi_Parse(
    const ::std::string& name, CheckFinishCarPositionZhiXianXingShi* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionZhiXianXingShi>(
    CheckFinishCarPositionZhiXianXingShi_descriptor(), name, value);
}
enum AddToLimitedGear {
  Add_To_One_Gear = 0,
  Add_To_Two_Gear = 1,
  Add_To_Three_Gear = 2,
  Add_To_Four_Gear = 3,
  Add_To_Five_Gear = 4,
  Add_To_Six_Gear = 5
};
bool AddToLimitedGear_IsValid(int value);
const AddToLimitedGear AddToLimitedGear_MIN = Add_To_One_Gear;
const AddToLimitedGear AddToLimitedGear_MAX = Add_To_Six_Gear;
const int AddToLimitedGear_ARRAYSIZE = AddToLimitedGear_MAX + 1;

const ::google::protobuf::EnumDescriptor* AddToLimitedGear_descriptor();
inline const ::std::string& AddToLimitedGear_Name(AddToLimitedGear value) {
  return ::google::protobuf::internal::NameOfEnum(
    AddToLimitedGear_descriptor(), value);
}
inline bool AddToLimitedGear_Parse(
    const ::std::string& name, AddToLimitedGear* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AddToLimitedGear>(
    AddToLimitedGear_descriptor(), name, value);
}
enum ReduceToLimitedGear {
  Reduce_To_One_Gear = 0,
  Reduce_To_Two_Gear = 1,
  Reduce_To_Three_Gear = 2,
  Reduce_To_Four_Gear = 3,
  Reduce_To_Five_Gear = 4,
  Reduce_To_Six_Gear = 5
};
bool ReduceToLimitedGear_IsValid(int value);
const ReduceToLimitedGear ReduceToLimitedGear_MIN = Reduce_To_One_Gear;
const ReduceToLimitedGear ReduceToLimitedGear_MAX = Reduce_To_Six_Gear;
const int ReduceToLimitedGear_ARRAYSIZE = ReduceToLimitedGear_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReduceToLimitedGear_descriptor();
inline const ::std::string& ReduceToLimitedGear_Name(ReduceToLimitedGear value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReduceToLimitedGear_descriptor(), value);
}
inline bool ReduceToLimitedGear_Parse(
    const ::std::string& name, ReduceToLimitedGear* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReduceToLimitedGear>(
    ReduceToLimitedGear_descriptor(), name, value);
}
enum CheckFinishCarPositionDiaoTou {
  DiaoTou_Car_Forward_Car_All_In_Zero = 0,
  DiaoTou_Car_Forward_Car_Head_HasPts_Four = 1,
  DiaoTou_Car_Forward_Car_End_HasPts_Four = 2
};
bool CheckFinishCarPositionDiaoTou_IsValid(int value);
const CheckFinishCarPositionDiaoTou CheckFinishCarPositionDiaoTou_MIN = DiaoTou_Car_Forward_Car_All_In_Zero;
const CheckFinishCarPositionDiaoTou CheckFinishCarPositionDiaoTou_MAX = DiaoTou_Car_Forward_Car_End_HasPts_Four;
const int CheckFinishCarPositionDiaoTou_ARRAYSIZE = CheckFinishCarPositionDiaoTou_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionDiaoTou_descriptor();
inline const ::std::string& CheckFinishCarPositionDiaoTou_Name(CheckFinishCarPositionDiaoTou value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionDiaoTou_descriptor(), value);
}
inline bool CheckFinishCarPositionDiaoTou_Parse(
    const ::std::string& name, CheckFinishCarPositionDiaoTou* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionDiaoTou>(
    CheckFinishCarPositionDiaoTou_descriptor(), name, value);
}
enum CheckFinishCarPositionBianGengCheDao {
  BianGengCheDao_Car_Forward_Car_All_In_Zero = 0,
  BianGengCheDao_Car_Forward_Car_Head_HasPts_Four = 1,
  BianGengCheDao_Car_Forward_Car_End_HasPts_Four = 2
};
bool CheckFinishCarPositionBianGengCheDao_IsValid(int value);
const CheckFinishCarPositionBianGengCheDao CheckFinishCarPositionBianGengCheDao_MIN = BianGengCheDao_Car_Forward_Car_All_In_Zero;
const CheckFinishCarPositionBianGengCheDao CheckFinishCarPositionBianGengCheDao_MAX = BianGengCheDao_Car_Forward_Car_End_HasPts_Four;
const int CheckFinishCarPositionBianGengCheDao_ARRAYSIZE = CheckFinishCarPositionBianGengCheDao_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionBianGengCheDao_descriptor();
inline const ::std::string& CheckFinishCarPositionBianGengCheDao_Name(CheckFinishCarPositionBianGengCheDao value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionBianGengCheDao_descriptor(), value);
}
inline bool CheckFinishCarPositionBianGengCheDao_Parse(
    const ::std::string& name, CheckFinishCarPositionBianGengCheDao* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionBianGengCheDao>(
    CheckFinishCarPositionBianGengCheDao_descriptor(), name, value);
}
enum CheckFinishCarPositionChaoChe {
  ChaoChe_Car_Forward_Car_All_In_Zero = 0,
  ChaoChe_Car_Forward_Car_Head_HasPts_Four = 1,
  ChaoChe_Car_Forward_Car_End_HasPts_Four = 2
};
bool CheckFinishCarPositionChaoChe_IsValid(int value);
const CheckFinishCarPositionChaoChe CheckFinishCarPositionChaoChe_MIN = ChaoChe_Car_Forward_Car_All_In_Zero;
const CheckFinishCarPositionChaoChe CheckFinishCarPositionChaoChe_MAX = ChaoChe_Car_Forward_Car_End_HasPts_Four;
const int CheckFinishCarPositionChaoChe_ARRAYSIZE = CheckFinishCarPositionChaoChe_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionChaoChe_descriptor();
inline const ::std::string& CheckFinishCarPositionChaoChe_Name(CheckFinishCarPositionChaoChe value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionChaoChe_descriptor(), value);
}
inline bool CheckFinishCarPositionChaoChe_Parse(
    const ::std::string& name, CheckFinishCarPositionChaoChe* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionChaoChe>(
    CheckFinishCarPositionChaoChe_descriptor(), name, value);
}
enum CheckStartCarPositionZjzw {
  Zjzw_Car_Forward_Car_HasPts_In_One = 0,
  Zjzw_Car_Forward_Car_HasPts_In_One_Five = 1
};
bool CheckStartCarPositionZjzw_IsValid(int value);
const CheckStartCarPositionZjzw CheckStartCarPositionZjzw_MIN = Zjzw_Car_Forward_Car_HasPts_In_One;
const CheckStartCarPositionZjzw CheckStartCarPositionZjzw_MAX = Zjzw_Car_Forward_Car_HasPts_In_One_Five;
const int CheckStartCarPositionZjzw_ARRAYSIZE = CheckStartCarPositionZjzw_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckStartCarPositionZjzw_descriptor();
inline const ::std::string& CheckStartCarPositionZjzw_Name(CheckStartCarPositionZjzw value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckStartCarPositionZjzw_descriptor(), value);
}
inline bool CheckStartCarPositionZjzw_Parse(
    const ::std::string& name, CheckStartCarPositionZjzw* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckStartCarPositionZjzw>(
    CheckStartCarPositionZjzw_descriptor(), name, value);
}
enum CheckFinishCarPositionZjzw {
  Zjzw_Car_Forward_Car_All_In_Zero_Two = 0,
  Zjzw_Car_Forward_Car_Head_HasPts_Two = 1,
  Zjzw_Car_Forward_Car_End_HasPts_Two = 2
};
bool CheckFinishCarPositionZjzw_IsValid(int value);
const CheckFinishCarPositionZjzw CheckFinishCarPositionZjzw_MIN = Zjzw_Car_Forward_Car_All_In_Zero_Two;
const CheckFinishCarPositionZjzw CheckFinishCarPositionZjzw_MAX = Zjzw_Car_Forward_Car_End_HasPts_Two;
const int CheckFinishCarPositionZjzw_ARRAYSIZE = CheckFinishCarPositionZjzw_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionZjzw_descriptor();
inline const ::std::string& CheckFinishCarPositionZjzw_Name(CheckFinishCarPositionZjzw value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionZjzw_descriptor(), value);
}
inline bool CheckFinishCarPositionZjzw_Parse(
    const ::std::string& name, CheckFinishCarPositionZjzw* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionZjzw>(
    CheckFinishCarPositionZjzw_descriptor(), name, value);
}
enum CheckStartCarPositionQxxs {
  Qxxs_Car_Forward_Car_HasPts_In_One = 0,
  Qxxs_Car_Forward_Car_HasPts_In_One_Five = 1
};
bool CheckStartCarPositionQxxs_IsValid(int value);
const CheckStartCarPositionQxxs CheckStartCarPositionQxxs_MIN = Qxxs_Car_Forward_Car_HasPts_In_One;
const CheckStartCarPositionQxxs CheckStartCarPositionQxxs_MAX = Qxxs_Car_Forward_Car_HasPts_In_One_Five;
const int CheckStartCarPositionQxxs_ARRAYSIZE = CheckStartCarPositionQxxs_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckStartCarPositionQxxs_descriptor();
inline const ::std::string& CheckStartCarPositionQxxs_Name(CheckStartCarPositionQxxs value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckStartCarPositionQxxs_descriptor(), value);
}
inline bool CheckStartCarPositionQxxs_Parse(
    const ::std::string& name, CheckStartCarPositionQxxs* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckStartCarPositionQxxs>(
    CheckStartCarPositionQxxs_descriptor(), name, value);
}
enum CheckFinishCarPositionQxxs {
  Qxxs_Car_Forward_Car_All_In_Zero_Two = 0,
  Qxxs_Car_Forward_Car_Head_HasPts_Two = 1,
  Qxxs_Car_Forward_Car_End_HasPts_Two = 2
};
bool CheckFinishCarPositionQxxs_IsValid(int value);
const CheckFinishCarPositionQxxs CheckFinishCarPositionQxxs_MIN = Qxxs_Car_Forward_Car_All_In_Zero_Two;
const CheckFinishCarPositionQxxs CheckFinishCarPositionQxxs_MAX = Qxxs_Car_Forward_Car_End_HasPts_Two;
const int CheckFinishCarPositionQxxs_ARRAYSIZE = CheckFinishCarPositionQxxs_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionQxxs_descriptor();
inline const ::std::string& CheckFinishCarPositionQxxs_Name(CheckFinishCarPositionQxxs value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionQxxs_descriptor(), value);
}
inline bool CheckFinishCarPositionQxxs_Parse(
    const ::std::string& name, CheckFinishCarPositionQxxs* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionQxxs>(
    CheckFinishCarPositionQxxs_descriptor(), name, value);
}
enum CheckStartCarPositionCftc {
  Cftc_Car_Forward_Car_HasPts_In_One = 0,
  Cftc_Car_Stop_In_Two_Eight = 1,
  Cftc_Car_Back_Car_In_Two_Eight = 2,
  Cftc_Car_Head_In_Two_Back = 3,
  Cftc_Car_Forward_Car_HasPts_In_Two = 4,
  Cftc_Car_Back_Car_Leave_Two = 5
};
bool CheckStartCarPositionCftc_IsValid(int value);
const CheckStartCarPositionCftc CheckStartCarPositionCftc_MIN = Cftc_Car_Forward_Car_HasPts_In_One;
const CheckStartCarPositionCftc CheckStartCarPositionCftc_MAX = Cftc_Car_Back_Car_Leave_Two;
const int CheckStartCarPositionCftc_ARRAYSIZE = CheckStartCarPositionCftc_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckStartCarPositionCftc_descriptor();
inline const ::std::string& CheckStartCarPositionCftc_Name(CheckStartCarPositionCftc value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckStartCarPositionCftc_descriptor(), value);
}
inline bool CheckStartCarPositionCftc_Parse(
    const ::std::string& name, CheckStartCarPositionCftc* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckStartCarPositionCftc>(
    CheckStartCarPositionCftc_descriptor(), name, value);
}
enum CheckFinishCarPositionCftc {
  Cftc_Car_Forward_Car_HasPts_Eight = 0,
  Cftc_Car_Forward_When_Car_End = 1,
  Cftc_Car_Stop_When_Car_End = 2,
  Cftc_Car_Forward_Car_All_In_Zero_Two = 3,
  Cftc_Car_Forward_Car_Head_HasPts_Two = 4,
  Cftc_Car_Forward_Car_End_HasPts_Two = 5,
  Cftc_Car_Forward_Car_Leave_Six = 6
};
bool CheckFinishCarPositionCftc_IsValid(int value);
const CheckFinishCarPositionCftc CheckFinishCarPositionCftc_MIN = Cftc_Car_Forward_Car_HasPts_Eight;
const CheckFinishCarPositionCftc CheckFinishCarPositionCftc_MAX = Cftc_Car_Forward_Car_Leave_Six;
const int CheckFinishCarPositionCftc_ARRAYSIZE = CheckFinishCarPositionCftc_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionCftc_descriptor();
inline const ::std::string& CheckFinishCarPositionCftc_Name(CheckFinishCarPositionCftc value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionCftc_descriptor(), value);
}
inline bool CheckFinishCarPositionCftc_Parse(
    const ::std::string& name, CheckFinishCarPositionCftc* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionCftc>(
    CheckFinishCarPositionCftc_descriptor(), name, value);
}
enum CheckStartCarPositionSpqb {
  Spqb_Car_Forward_Car_HasPts_In_One = 0
};
bool CheckStartCarPositionSpqb_IsValid(int value);
const CheckStartCarPositionSpqb CheckStartCarPositionSpqb_MIN = Spqb_Car_Forward_Car_HasPts_In_One;
const CheckStartCarPositionSpqb CheckStartCarPositionSpqb_MAX = Spqb_Car_Forward_Car_HasPts_In_One;
const int CheckStartCarPositionSpqb_ARRAYSIZE = CheckStartCarPositionSpqb_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckStartCarPositionSpqb_descriptor();
inline const ::std::string& CheckStartCarPositionSpqb_Name(CheckStartCarPositionSpqb value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckStartCarPositionSpqb_descriptor(), value);
}
inline bool CheckStartCarPositionSpqb_Parse(
    const ::std::string& name, CheckStartCarPositionSpqb* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckStartCarPositionSpqb>(
    CheckStartCarPositionSpqb_descriptor(), name, value);
}
enum CheckFinishCarPositionSpqb {
  Spqb_Car_Forward_When_Car_CKing = 0,
  Spqb_Car_Forward_Car_All_In_Zero_Two = 1,
  Spqb_Car_Forward_Car_Head_HasPts_Two = 2,
  Spqb_Car_Forward_Car_End_HasPts_Two = 3
};
bool CheckFinishCarPositionSpqb_IsValid(int value);
const CheckFinishCarPositionSpqb CheckFinishCarPositionSpqb_MIN = Spqb_Car_Forward_When_Car_CKing;
const CheckFinishCarPositionSpqb CheckFinishCarPositionSpqb_MAX = Spqb_Car_Forward_Car_End_HasPts_Two;
const int CheckFinishCarPositionSpqb_ARRAYSIZE = CheckFinishCarPositionSpqb_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionSpqb_descriptor();
inline const ::std::string& CheckFinishCarPositionSpqb_Name(CheckFinishCarPositionSpqb value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionSpqb_descriptor(), value);
}
inline bool CheckFinishCarPositionSpqb_Parse(
    const ::std::string& name, CheckFinishCarPositionSpqb* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionSpqb>(
    CheckFinishCarPositionSpqb_descriptor(), name, value);
}
enum CheckStartCarPositionDcrk {
  Dcrk_Car_Forward_Car_HasPts_In_One = 0,
  Dcrk_Car_Back_Car_In_Two_Ten = 1,
  Dcrk_Car_Head_In_Two_Back = 2,
  Dcrk_Car_Forward_Car_HasPts_In_Two = 3,
  Dcrk_Car_Back_Car_Leave_Two = 4
};
bool CheckStartCarPositionDcrk_IsValid(int value);
const CheckStartCarPositionDcrk CheckStartCarPositionDcrk_MIN = Dcrk_Car_Forward_Car_HasPts_In_One;
const CheckStartCarPositionDcrk CheckStartCarPositionDcrk_MAX = Dcrk_Car_Back_Car_Leave_Two;
const int CheckStartCarPositionDcrk_ARRAYSIZE = CheckStartCarPositionDcrk_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckStartCarPositionDcrk_descriptor();
inline const ::std::string& CheckStartCarPositionDcrk_Name(CheckStartCarPositionDcrk value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckStartCarPositionDcrk_descriptor(), value);
}
inline bool CheckStartCarPositionDcrk_Parse(
    const ::std::string& name, CheckStartCarPositionDcrk* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckStartCarPositionDcrk>(
    CheckStartCarPositionDcrk_descriptor(), name, value);
}
enum CheckFinishCarPositionDcrk {
  Dcrk_Car_Forward_Car_All_In_Zero_Two = 0,
  Dcrk_Car_Forward_Car_Head_HasPts_Two = 1,
  Dcrk_Car_Forward_Car_End_HasPts_Two = 2
};
bool CheckFinishCarPositionDcrk_IsValid(int value);
const CheckFinishCarPositionDcrk CheckFinishCarPositionDcrk_MIN = Dcrk_Car_Forward_Car_All_In_Zero_Two;
const CheckFinishCarPositionDcrk CheckFinishCarPositionDcrk_MAX = Dcrk_Car_Forward_Car_End_HasPts_Two;
const int CheckFinishCarPositionDcrk_ARRAYSIZE = CheckFinishCarPositionDcrk_MAX + 1;

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionDcrk_descriptor();
inline const ::std::string& CheckFinishCarPositionDcrk_Name(CheckFinishCarPositionDcrk value) {
  return ::google::protobuf::internal::NameOfEnum(
    CheckFinishCarPositionDcrk_descriptor(), value);
}
inline bool CheckFinishCarPositionDcrk_Parse(
    const ::std::string& name, CheckFinishCarPositionDcrk* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CheckFinishCarPositionDcrk>(
    CheckFinishCarPositionDcrk_descriptor(), name, value);
}
// ===================================================================

class SoftwareStartInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.SoftwareStartInfo) */ {
 public:
  SoftwareStartInfo();
  virtual ~SoftwareStartInfo();

  SoftwareStartInfo(const SoftwareStartInfo& from);

  inline SoftwareStartInfo& operator=(const SoftwareStartInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoftwareStartInfo& default_instance();

  void Swap(SoftwareStartInfo* other);

  // implements Message ----------------------------------------------

  inline SoftwareStartInfo* New() const { return New(NULL); }

  SoftwareStartInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SoftwareStartInfo& from);
  void MergeFrom(const SoftwareStartInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SoftwareStartInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string app_start_sound = 1;
  bool has_app_start_sound() const;
  void clear_app_start_sound();
  static const int kAppStartSoundFieldNumber = 1;
  const ::std::string& app_start_sound() const;
  void set_app_start_sound(const ::std::string& value);
  void set_app_start_sound(const char* value);
  void set_app_start_sound(const char* value, size_t size);
  ::std::string* mutable_app_start_sound();
  ::std::string* release_app_start_sound();
  void set_allocated_app_start_sound(::std::string* app_start_sound);

  // optional bool app_run_mode_xl = 2;
  bool has_app_run_mode_xl() const;
  void clear_app_run_mode_xl();
  static const int kAppRunModeXlFieldNumber = 2;
  bool app_run_mode_xl() const;
  void set_app_run_mode_xl(bool value);

  // optional bool app_run_mode_mn = 3;
  bool has_app_run_mode_mn() const;
  void clear_app_run_mode_mn();
  static const int kAppRunModeMnFieldNumber = 3;
  bool app_run_mode_mn() const;
  void set_app_run_mode_mn(bool value);

  // optional bool app_run_mode_ks = 4;
  bool has_app_run_mode_ks() const;
  void clear_app_run_mode_ks();
  static const int kAppRunModeKsFieldNumber = 4;
  bool app_run_mode_ks() const;
  void set_app_run_mode_ks(bool value);

  // optional bool app_run_server_monitor = 5;
  bool has_app_run_server_monitor() const;
  void clear_app_run_server_monitor();
  static const int kAppRunServerMonitorFieldNumber = 5;
  bool app_run_server_monitor() const;
  void set_app_run_server_monitor(bool value);

  // optional string app_run_server_monitor_ip = 6;
  bool has_app_run_server_monitor_ip() const;
  void clear_app_run_server_monitor_ip();
  static const int kAppRunServerMonitorIpFieldNumber = 6;
  const ::std::string& app_run_server_monitor_ip() const;
  void set_app_run_server_monitor_ip(const ::std::string& value);
  void set_app_run_server_monitor_ip(const char* value);
  void set_app_run_server_monitor_ip(const char* value, size_t size);
  ::std::string* mutable_app_run_server_monitor_ip();
  ::std::string* release_app_run_server_monitor_ip();
  void set_allocated_app_run_server_monitor_ip(::std::string* app_run_server_monitor_ip);

  // optional int32 app_run_server_monitor_port = 7;
  bool has_app_run_server_monitor_port() const;
  void clear_app_run_server_monitor_port();
  static const int kAppRunServerMonitorPortFieldNumber = 7;
  ::google::protobuf::int32 app_run_server_monitor_port() const;
  void set_app_run_server_monitor_port(::google::protobuf::int32 value);

  // optional bool whether_use_iccard = 8;
  bool has_whether_use_iccard() const;
  void clear_whether_use_iccard();
  static const int kWhetherUseIccardFieldNumber = 8;
  bool whether_use_iccard() const;
  void set_whether_use_iccard(bool value);

  // optional int32 app_sound_rate = 9;
  bool has_app_sound_rate() const;
  void clear_app_sound_rate();
  static const int kAppSoundRateFieldNumber = 9;
  ::google::protobuf::int32 app_sound_rate() const;
  void set_app_sound_rate(::google::protobuf::int32 value);

  // optional bool whether_use_second_idcard = 10;
  bool has_whether_use_second_idcard() const;
  void clear_whether_use_second_idcard();
  static const int kWhetherUseSecondIdcardFieldNumber = 10;
  bool whether_use_second_idcard() const;
  void set_whether_use_second_idcard(bool value);

  // optional string secondid_verification_net_fail_voice = 11;
  bool has_secondid_verification_net_fail_voice() const;
  void clear_secondid_verification_net_fail_voice();
  static const int kSecondidVerificationNetFailVoiceFieldNumber = 11;
  const ::std::string& secondid_verification_net_fail_voice() const;
  void set_secondid_verification_net_fail_voice(const ::std::string& value);
  void set_secondid_verification_net_fail_voice(const char* value);
  void set_secondid_verification_net_fail_voice(const char* value, size_t size);
  ::std::string* mutable_secondid_verification_net_fail_voice();
  ::std::string* release_secondid_verification_net_fail_voice();
  void set_allocated_secondid_verification_net_fail_voice(::std::string* secondid_verification_net_fail_voice);

  // optional string secondid_verification_waiting_voice = 12;
  bool has_secondid_verification_waiting_voice() const;
  void clear_secondid_verification_waiting_voice();
  static const int kSecondidVerificationWaitingVoiceFieldNumber = 12;
  const ::std::string& secondid_verification_waiting_voice() const;
  void set_secondid_verification_waiting_voice(const ::std::string& value);
  void set_secondid_verification_waiting_voice(const char* value);
  void set_secondid_verification_waiting_voice(const char* value, size_t size);
  ::std::string* mutable_secondid_verification_waiting_voice();
  ::std::string* release_secondid_verification_waiting_voice();
  void set_allocated_secondid_verification_waiting_voice(::std::string* secondid_verification_waiting_voice);

  // optional string secondid_verification_round_started_voice = 13;
  bool has_secondid_verification_round_started_voice() const;
  void clear_secondid_verification_round_started_voice();
  static const int kSecondidVerificationRoundStartedVoiceFieldNumber = 13;
  const ::std::string& secondid_verification_round_started_voice() const;
  void set_secondid_verification_round_started_voice(const ::std::string& value);
  void set_secondid_verification_round_started_voice(const char* value);
  void set_secondid_verification_round_started_voice(const char* value, size_t size);
  ::std::string* mutable_secondid_verification_round_started_voice();
  ::std::string* release_secondid_verification_round_started_voice();
  void set_allocated_secondid_verification_round_started_voice(::std::string* secondid_verification_round_started_voice);

  // optional string secondid_verification_registration_unvalid_voice = 14;
  bool has_secondid_verification_registration_unvalid_voice() const;
  void clear_secondid_verification_registration_unvalid_voice();
  static const int kSecondidVerificationRegistrationUnvalidVoiceFieldNumber = 14;
  const ::std::string& secondid_verification_registration_unvalid_voice() const;
  void set_secondid_verification_registration_unvalid_voice(const ::std::string& value);
  void set_secondid_verification_registration_unvalid_voice(const char* value);
  void set_secondid_verification_registration_unvalid_voice(const char* value, size_t size);
  ::std::string* mutable_secondid_verification_registration_unvalid_voice();
  ::std::string* release_secondid_verification_registration_unvalid_voice();
  void set_allocated_secondid_verification_registration_unvalid_voice(::std::string* secondid_verification_registration_unvalid_voice);

  // optional string secondid_verification_registration_valid_voice = 15;
  bool has_secondid_verification_registration_valid_voice() const;
  void clear_secondid_verification_registration_valid_voice();
  static const int kSecondidVerificationRegistrationValidVoiceFieldNumber = 15;
  const ::std::string& secondid_verification_registration_valid_voice() const;
  void set_secondid_verification_registration_valid_voice(const ::std::string& value);
  void set_secondid_verification_registration_valid_voice(const char* value);
  void set_secondid_verification_registration_valid_voice(const char* value, size_t size);
  ::std::string* mutable_secondid_verification_registration_valid_voice();
  ::std::string* release_secondid_verification_registration_valid_voice();
  void set_allocated_secondid_verification_registration_valid_voice(::std::string* secondid_verification_registration_valid_voice);

  // optional string secondid_verification_timeout_voice = 16;
  bool has_secondid_verification_timeout_voice() const;
  void clear_secondid_verification_timeout_voice();
  static const int kSecondidVerificationTimeoutVoiceFieldNumber = 16;
  const ::std::string& secondid_verification_timeout_voice() const;
  void set_secondid_verification_timeout_voice(const ::std::string& value);
  void set_secondid_verification_timeout_voice(const char* value);
  void set_secondid_verification_timeout_voice(const char* value, size_t size);
  ::std::string* mutable_secondid_verification_timeout_voice();
  ::std::string* release_secondid_verification_timeout_voice();
  void set_allocated_secondid_verification_timeout_voice(::std::string* secondid_verification_timeout_voice);

  // @@protoc_insertion_point(class_scope:OPMessage.SoftwareStartInfo)
 private:
  inline void set_has_app_start_sound();
  inline void clear_has_app_start_sound();
  inline void set_has_app_run_mode_xl();
  inline void clear_has_app_run_mode_xl();
  inline void set_has_app_run_mode_mn();
  inline void clear_has_app_run_mode_mn();
  inline void set_has_app_run_mode_ks();
  inline void clear_has_app_run_mode_ks();
  inline void set_has_app_run_server_monitor();
  inline void clear_has_app_run_server_monitor();
  inline void set_has_app_run_server_monitor_ip();
  inline void clear_has_app_run_server_monitor_ip();
  inline void set_has_app_run_server_monitor_port();
  inline void clear_has_app_run_server_monitor_port();
  inline void set_has_whether_use_iccard();
  inline void clear_has_whether_use_iccard();
  inline void set_has_app_sound_rate();
  inline void clear_has_app_sound_rate();
  inline void set_has_whether_use_second_idcard();
  inline void clear_has_whether_use_second_idcard();
  inline void set_has_secondid_verification_net_fail_voice();
  inline void clear_has_secondid_verification_net_fail_voice();
  inline void set_has_secondid_verification_waiting_voice();
  inline void clear_has_secondid_verification_waiting_voice();
  inline void set_has_secondid_verification_round_started_voice();
  inline void clear_has_secondid_verification_round_started_voice();
  inline void set_has_secondid_verification_registration_unvalid_voice();
  inline void clear_has_secondid_verification_registration_unvalid_voice();
  inline void set_has_secondid_verification_registration_valid_voice();
  inline void clear_has_secondid_verification_registration_valid_voice();
  inline void set_has_secondid_verification_timeout_voice();
  inline void clear_has_secondid_verification_timeout_voice();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr app_start_sound_;
  bool app_run_mode_xl_;
  bool app_run_mode_mn_;
  bool app_run_mode_ks_;
  bool app_run_server_monitor_;
  ::google::protobuf::int32 app_run_server_monitor_port_;
  ::google::protobuf::internal::ArenaStringPtr app_run_server_monitor_ip_;
  ::google::protobuf::int32 app_sound_rate_;
  bool whether_use_iccard_;
  bool whether_use_second_idcard_;
  ::google::protobuf::internal::ArenaStringPtr secondid_verification_net_fail_voice_;
  ::google::protobuf::internal::ArenaStringPtr secondid_verification_waiting_voice_;
  ::google::protobuf::internal::ArenaStringPtr secondid_verification_round_started_voice_;
  ::google::protobuf::internal::ArenaStringPtr secondid_verification_registration_unvalid_voice_;
  ::google::protobuf::internal::ArenaStringPtr secondid_verification_registration_valid_voice_;
  ::google::protobuf::internal::ArenaStringPtr secondid_verification_timeout_voice_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static SoftwareStartInfo* default_instance_;
};
// -------------------------------------------------------------------

class OtherConfigInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.OtherConfigInfo) */ {
 public:
  OtherConfigInfo();
  virtual ~OtherConfigInfo();

  OtherConfigInfo(const OtherConfigInfo& from);

  inline OtherConfigInfo& operator=(const OtherConfigInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OtherConfigInfo& default_instance();

  void Swap(OtherConfigInfo* other);

  // implements Message ----------------------------------------------

  inline OtherConfigInfo* New() const { return New(NULL); }

  OtherConfigInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OtherConfigInfo& from);
  void MergeFrom(const OtherConfigInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OtherConfigInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool whether_use_gps_modify_local_time = 1;
  bool has_whether_use_gps_modify_local_time() const;
  void clear_whether_use_gps_modify_local_time();
  static const int kWhetherUseGpsModifyLocalTimeFieldNumber = 1;
  bool whether_use_gps_modify_local_time() const;
  void set_whether_use_gps_modify_local_time(bool value);

  // optional string gps_valid_sound = 2;
  bool has_gps_valid_sound() const;
  void clear_gps_valid_sound();
  static const int kGpsValidSoundFieldNumber = 2;
  const ::std::string& gps_valid_sound() const;
  void set_gps_valid_sound(const ::std::string& value);
  void set_gps_valid_sound(const char* value);
  void set_gps_valid_sound(const char* value, size_t size);
  ::std::string* mutable_gps_valid_sound();
  ::std::string* release_gps_valid_sound();
  void set_allocated_gps_valid_sound(::std::string* gps_valid_sound);

  // optional string gps_invalid_sound = 3;
  bool has_gps_invalid_sound() const;
  void clear_gps_invalid_sound();
  static const int kGpsInvalidSoundFieldNumber = 3;
  const ::std::string& gps_invalid_sound() const;
  void set_gps_invalid_sound(const ::std::string& value);
  void set_gps_invalid_sound(const char* value);
  void set_gps_invalid_sound(const char* value, size_t size);
  ::std::string* mutable_gps_invalid_sound();
  ::std::string* release_gps_invalid_sound();
  void set_allocated_gps_invalid_sound(::std::string* gps_invalid_sound);

  // optional bool whether_ks_mode_alarm_ring = 4;
  bool has_whether_ks_mode_alarm_ring() const;
  void clear_whether_ks_mode_alarm_ring();
  static const int kWhetherKsModeAlarmRingFieldNumber = 4;
  bool whether_ks_mode_alarm_ring() const;
  void set_whether_ks_mode_alarm_ring(bool value);

  // @@protoc_insertion_point(class_scope:OPMessage.OtherConfigInfo)
 private:
  inline void set_has_whether_use_gps_modify_local_time();
  inline void clear_has_whether_use_gps_modify_local_time();
  inline void set_has_gps_valid_sound();
  inline void clear_has_gps_valid_sound();
  inline void set_has_gps_invalid_sound();
  inline void clear_has_gps_invalid_sound();
  inline void set_has_whether_ks_mode_alarm_ring();
  inline void clear_has_whether_ks_mode_alarm_ring();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gps_valid_sound_;
  ::google::protobuf::internal::ArenaStringPtr gps_invalid_sound_;
  bool whether_use_gps_modify_local_time_;
  bool whether_ks_mode_alarm_ring_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static OtherConfigInfo* default_instance_;
};
// -------------------------------------------------------------------

class ConfigPhysicSensor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ConfigPhysicSensor) */ {
 public:
  ConfigPhysicSensor();
  virtual ~ConfigPhysicSensor();

  ConfigPhysicSensor(const ConfigPhysicSensor& from);

  inline ConfigPhysicSensor& operator=(const ConfigPhysicSensor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigPhysicSensor& default_instance();

  void Swap(ConfigPhysicSensor* other);

  // implements Message ----------------------------------------------

  inline ConfigPhysicSensor* New() const { return New(NULL); }

  ConfigPhysicSensor* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigPhysicSensor& from);
  void MergeFrom(const ConfigPhysicSensor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfigPhysicSensor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OPMessage.enum_physic_sensor sensor_type = 1;
  bool has_sensor_type() const;
  void clear_sensor_type();
  static const int kSensorTypeFieldNumber = 1;
  ::OPMessage::enum_physic_sensor sensor_type() const;
  void set_sensor_type(::OPMessage::enum_physic_sensor value);

  // optional int32 physic_bit = 2;
  bool has_physic_bit() const;
  void clear_physic_bit();
  static const int kPhysicBitFieldNumber = 2;
  ::google::protobuf::int32 physic_bit() const;
  void set_physic_bit(::google::protobuf::int32 value);

  // optional int32 physic_power = 3;
  bool has_physic_power() const;
  void clear_physic_power();
  static const int kPhysicPowerFieldNumber = 3;
  ::google::protobuf::int32 physic_power() const;
  void set_physic_power(::google::protobuf::int32 value);

  // optional bool whether_use = 4;
  bool has_whether_use() const;
  void clear_whether_use();
  static const int kWhetherUseFieldNumber = 4;
  bool whether_use() const;
  void set_whether_use(bool value);

  // optional string physic_sensor_name = 5;
  bool has_physic_sensor_name() const;
  void clear_physic_sensor_name();
  static const int kPhysicSensorNameFieldNumber = 5;
  const ::std::string& physic_sensor_name() const;
  void set_physic_sensor_name(const ::std::string& value);
  void set_physic_sensor_name(const char* value);
  void set_physic_sensor_name(const char* value, size_t size);
  ::std::string* mutable_physic_sensor_name();
  ::std::string* release_physic_sensor_name();
  void set_allocated_physic_sensor_name(::std::string* physic_sensor_name);

  // optional string physic_sensor_description = 6;
  bool has_physic_sensor_description() const;
  void clear_physic_sensor_description();
  static const int kPhysicSensorDescriptionFieldNumber = 6;
  const ::std::string& physic_sensor_description() const;
  void set_physic_sensor_description(const ::std::string& value);
  void set_physic_sensor_description(const char* value);
  void set_physic_sensor_description(const char* value, size_t size);
  ::std::string* mutable_physic_sensor_description();
  ::std::string* release_physic_sensor_description();
  void set_allocated_physic_sensor_description(::std::string* physic_sensor_description);

  // @@protoc_insertion_point(class_scope:OPMessage.ConfigPhysicSensor)
 private:
  inline void set_has_sensor_type();
  inline void clear_has_sensor_type();
  inline void set_has_physic_bit();
  inline void clear_has_physic_bit();
  inline void set_has_physic_power();
  inline void clear_has_physic_power();
  inline void set_has_whether_use();
  inline void clear_has_whether_use();
  inline void set_has_physic_sensor_name();
  inline void clear_has_physic_sensor_name();
  inline void set_has_physic_sensor_description();
  inline void clear_has_physic_sensor_description();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int sensor_type_;
  ::google::protobuf::int32 physic_bit_;
  ::google::protobuf::int32 physic_power_;
  bool whether_use_;
  ::google::protobuf::internal::ArenaStringPtr physic_sensor_name_;
  ::google::protobuf::internal::ArenaStringPtr physic_sensor_description_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ConfigPhysicSensor* default_instance_;
};
// -------------------------------------------------------------------

class JudgeItemInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.JudgeItemInfo) */ {
 public:
  JudgeItemInfo();
  virtual ~JudgeItemInfo();

  JudgeItemInfo(const JudgeItemInfo& from);

  inline JudgeItemInfo& operator=(const JudgeItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JudgeItemInfo& default_instance();

  void Swap(JudgeItemInfo* other);

  // implements Message ----------------------------------------------

  inline JudgeItemInfo* New() const { return New(NULL); }

  JudgeItemInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JudgeItemInfo& from);
  void MergeFrom(const JudgeItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JudgeItemInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 item_id = 1;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::int32 item_id() const;
  void set_item_id(::google::protobuf::int32 value);

  // optional int32 item_index = 2 [default = -1];
  bool has_item_index() const;
  void clear_item_index();
  static const int kItemIndexFieldNumber = 2;
  ::google::protobuf::int32 item_index() const;
  void set_item_index(::google::protobuf::int32 value);

  // optional string item_name = 3;
  bool has_item_name() const;
  void clear_item_name();
  static const int kItemNameFieldNumber = 3;
  const ::std::string& item_name() const;
  void set_item_name(const ::std::string& value);
  void set_item_name(const char* value);
  void set_item_name(const char* value, size_t size);
  ::std::string* mutable_item_name();
  ::std::string* release_item_name();
  void set_allocated_item_name(::std::string* item_name);

  // @@protoc_insertion_point(class_scope:OPMessage.JudgeItemInfo)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_item_index();
  inline void clear_has_item_index();
  inline void set_has_item_name();
  inline void clear_has_item_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 item_index_;
  ::google::protobuf::internal::ArenaStringPtr item_name_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static JudgeItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class ConfigInfoBasic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ConfigInfoBasic) */ {
 public:
  ConfigInfoBasic();
  virtual ~ConfigInfoBasic();

  ConfigInfoBasic(const ConfigInfoBasic& from);

  inline ConfigInfoBasic& operator=(const ConfigInfoBasic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigInfoBasic& default_instance();

  void Swap(ConfigInfoBasic* other);

  // implements Message ----------------------------------------------

  inline ConfigInfoBasic* New() const { return New(NULL); }

  ConfigInfoBasic* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigInfoBasic& from);
  void MergeFrom(const ConfigInfoBasic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfigInfoBasic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string com_gps = 1 [default = "COM1"];
  bool has_com_gps() const;
  void clear_com_gps();
  static const int kComGpsFieldNumber = 1;
  const ::std::string& com_gps() const;
  void set_com_gps(const ::std::string& value);
  void set_com_gps(const char* value);
  void set_com_gps(const char* value, size_t size);
  ::std::string* mutable_com_gps();
  ::std::string* release_com_gps();
  void set_allocated_com_gps(::std::string* com_gps);

  // optional string com_sensor = 2 [default = "COM2"];
  bool has_com_sensor() const;
  void clear_com_sensor();
  static const int kComSensorFieldNumber = 2;
  const ::std::string& com_sensor() const;
  void set_com_sensor(const ::std::string& value);
  void set_com_sensor(const char* value);
  void set_com_sensor(const char* value, size_t size);
  ::std::string* mutable_com_sensor();
  ::std::string* release_com_sensor();
  void set_allocated_com_sensor(::std::string* com_sensor);

  // optional string com_printer = 3 [default = "COM3"];
  bool has_com_printer() const;
  void clear_com_printer();
  static const int kComPrinterFieldNumber = 3;
  const ::std::string& com_printer() const;
  void set_com_printer(const ::std::string& value);
  void set_com_printer(const char* value);
  void set_com_printer(const char* value, size_t size);
  ::std::string* mutable_com_printer();
  ::std::string* release_com_printer();
  void set_allocated_com_printer(::std::string* com_printer);

  // optional bool com_printer_whether_use = 4 [default = true];
  bool has_com_printer_whether_use() const;
  void clear_com_printer_whether_use();
  static const int kComPrinterWhetherUseFieldNumber = 4;
  bool com_printer_whether_use() const;
  void set_com_printer_whether_use(bool value);

  // optional string com_printer_header = 5;
  bool has_com_printer_header() const;
  void clear_com_printer_header();
  static const int kComPrinterHeaderFieldNumber = 5;
  const ::std::string& com_printer_header() const;
  void set_com_printer_header(const ::std::string& value);
  void set_com_printer_header(const char* value);
  void set_com_printer_header(const char* value, size_t size);
  ::std::string* mutable_com_printer_header();
  ::std::string* release_com_printer_header();
  void set_allocated_com_printer_header(::std::string* com_printer_header);

  // optional string com_printer_footer = 6;
  bool has_com_printer_footer() const;
  void clear_com_printer_footer();
  static const int kComPrinterFooterFieldNumber = 6;
  const ::std::string& com_printer_footer() const;
  void set_com_printer_footer(const ::std::string& value);
  void set_com_printer_footer(const char* value);
  void set_com_printer_footer(const char* value, size_t size);
  ::std::string* mutable_com_printer_footer();
  ::std::string* release_com_printer_footer();
  void set_allocated_com_printer_footer(::std::string* com_printer_footer);

  // optional double station_latitude = 7;
  bool has_station_latitude() const;
  void clear_station_latitude();
  static const int kStationLatitudeFieldNumber = 7;
  double station_latitude() const;
  void set_station_latitude(double value);

  // optional double station_longitude = 8;
  bool has_station_longitude() const;
  void clear_station_longitude();
  static const int kStationLongitudeFieldNumber = 8;
  double station_longitude() const;
  void set_station_longitude(double value);

  // optional double station_altitude = 9;
  bool has_station_altitude() const;
  void clear_station_altitude();
  static const int kStationAltitudeFieldNumber = 9;
  double station_altitude() const;
  void set_station_altitude(double value);

  // optional double station_centerLontitude = 10;
  bool has_station_centerlontitude() const;
  void clear_station_centerlontitude();
  static const int kStationCenterLontitudeFieldNumber = 10;
  double station_centerlontitude() const;
  void set_station_centerlontitude(double value);

  // optional double align_frontAntennaHigh = 11;
  bool has_align_frontantennahigh() const;
  void clear_align_frontantennahigh();
  static const int kAlignFrontAntennaHighFieldNumber = 11;
  double align_frontantennahigh() const;
  void set_align_frontantennahigh(double value);

  // optional double align_backAntennaHigh = 12;
  bool has_align_backantennahigh() const;
  void clear_align_backantennahigh();
  static const int kAlignBackAntennaHighFieldNumber = 12;
  double align_backantennahigh() const;
  void set_align_backantennahigh(double value);

  // optional double align_underpanHigh = 13;
  bool has_align_underpanhigh() const;
  void clear_align_underpanhigh();
  static const int kAlignUnderpanHighFieldNumber = 13;
  double align_underpanhigh() const;
  void set_align_underpanhigh(double value);

  // optional double align_baseLine = 14;
  bool has_align_baseline() const;
  void clear_align_baseline();
  static const int kAlignBaseLineFieldNumber = 14;
  double align_baseline() const;
  void set_align_baseline(double value);

  // optional double align_pitch = 15;
  bool has_align_pitch() const;
  void clear_align_pitch();
  static const int kAlignPitchFieldNumber = 15;
  double align_pitch() const;
  void set_align_pitch(double value);

  // optional double align_track = 16;
  bool has_align_track() const;
  void clear_align_track();
  static const int kAlignTrackFieldNumber = 16;
  double align_track() const;
  void set_align_track(double value);

  // optional int32 align_terminalDataHz = 17;
  bool has_align_terminaldatahz() const;
  void clear_align_terminaldatahz();
  static const int kAlignTerminalDataHzFieldNumber = 17;
  ::google::protobuf::int32 align_terminaldatahz() const;
  void set_align_terminaldatahz(::google::protobuf::int32 value);

  // optional double align_minspeed = 18;
  bool has_align_minspeed() const;
  void clear_align_minspeed();
  static const int kAlignMinspeedFieldNumber = 18;
  double align_minspeed() const;
  void set_align_minspeed(double value);

  // repeated .OPMessage.JudgeItemInfo judge_test_items_array = 19;
  int judge_test_items_array_size() const;
  void clear_judge_test_items_array();
  static const int kJudgeTestItemsArrayFieldNumber = 19;
  const ::OPMessage::JudgeItemInfo& judge_test_items_array(int index) const;
  ::OPMessage::JudgeItemInfo* mutable_judge_test_items_array(int index);
  ::OPMessage::JudgeItemInfo* add_judge_test_items_array();
  ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >*
      mutable_judge_test_items_array();
  const ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >&
      judge_test_items_array() const;

  // repeated .OPMessage.JudgeItemInfo judge_test_items_array3 = 20;
  int judge_test_items_array3_size() const;
  void clear_judge_test_items_array3();
  static const int kJudgeTestItemsArray3FieldNumber = 20;
  const ::OPMessage::JudgeItemInfo& judge_test_items_array3(int index) const;
  ::OPMessage::JudgeItemInfo* mutable_judge_test_items_array3(int index);
  ::OPMessage::JudgeItemInfo* add_judge_test_items_array3();
  ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >*
      mutable_judge_test_items_array3();
  const ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >&
      judge_test_items_array3() const;

  // repeated .OPMessage.JudgeItemInfo judge_manual_test_items_array = 21;
  int judge_manual_test_items_array_size() const;
  void clear_judge_manual_test_items_array();
  static const int kJudgeManualTestItemsArrayFieldNumber = 21;
  const ::OPMessage::JudgeItemInfo& judge_manual_test_items_array(int index) const;
  ::OPMessage::JudgeItemInfo* mutable_judge_manual_test_items_array(int index);
  ::OPMessage::JudgeItemInfo* add_judge_manual_test_items_array();
  ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >*
      mutable_judge_manual_test_items_array();
  const ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >&
      judge_manual_test_items_array() const;

  // optional bool judge_item_whether_sequence = 22;
  bool has_judge_item_whether_sequence() const;
  void clear_judge_item_whether_sequence();
  static const int kJudgeItemWhetherSequenceFieldNumber = 22;
  bool judge_item_whether_sequence() const;
  void set_judge_item_whether_sequence(bool value);

  // repeated .OPMessage.ConfigPhysicSensor phpsic_sensor_array = 23;
  int phpsic_sensor_array_size() const;
  void clear_phpsic_sensor_array();
  static const int kPhpsicSensorArrayFieldNumber = 23;
  const ::OPMessage::ConfigPhysicSensor& phpsic_sensor_array(int index) const;
  ::OPMessage::ConfigPhysicSensor* mutable_phpsic_sensor_array(int index);
  ::OPMessage::ConfigPhysicSensor* add_phpsic_sensor_array();
  ::google::protobuf::RepeatedPtrField< ::OPMessage::ConfigPhysicSensor >*
      mutable_phpsic_sensor_array();
  const ::google::protobuf::RepeatedPtrField< ::OPMessage::ConfigPhysicSensor >&
      phpsic_sensor_array() const;

  // @@protoc_insertion_point(class_scope:OPMessage.ConfigInfoBasic)
 private:
  inline void set_has_com_gps();
  inline void clear_has_com_gps();
  inline void set_has_com_sensor();
  inline void clear_has_com_sensor();
  inline void set_has_com_printer();
  inline void clear_has_com_printer();
  inline void set_has_com_printer_whether_use();
  inline void clear_has_com_printer_whether_use();
  inline void set_has_com_printer_header();
  inline void clear_has_com_printer_header();
  inline void set_has_com_printer_footer();
  inline void clear_has_com_printer_footer();
  inline void set_has_station_latitude();
  inline void clear_has_station_latitude();
  inline void set_has_station_longitude();
  inline void clear_has_station_longitude();
  inline void set_has_station_altitude();
  inline void clear_has_station_altitude();
  inline void set_has_station_centerlontitude();
  inline void clear_has_station_centerlontitude();
  inline void set_has_align_frontantennahigh();
  inline void clear_has_align_frontantennahigh();
  inline void set_has_align_backantennahigh();
  inline void clear_has_align_backantennahigh();
  inline void set_has_align_underpanhigh();
  inline void clear_has_align_underpanhigh();
  inline void set_has_align_baseline();
  inline void clear_has_align_baseline();
  inline void set_has_align_pitch();
  inline void clear_has_align_pitch();
  inline void set_has_align_track();
  inline void clear_has_align_track();
  inline void set_has_align_terminaldatahz();
  inline void clear_has_align_terminaldatahz();
  inline void set_has_align_minspeed();
  inline void clear_has_align_minspeed();
  inline void set_has_judge_item_whether_sequence();
  inline void clear_has_judge_item_whether_sequence();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  static ::std::string* _default_com_gps_;
  ::google::protobuf::internal::ArenaStringPtr com_gps_;
  static ::std::string* _default_com_sensor_;
  ::google::protobuf::internal::ArenaStringPtr com_sensor_;
  static ::std::string* _default_com_printer_;
  ::google::protobuf::internal::ArenaStringPtr com_printer_;
  ::google::protobuf::internal::ArenaStringPtr com_printer_header_;
  ::google::protobuf::internal::ArenaStringPtr com_printer_footer_;
  double station_latitude_;
  double station_longitude_;
  double station_altitude_;
  double station_centerlontitude_;
  double align_frontantennahigh_;
  double align_backantennahigh_;
  double align_underpanhigh_;
  double align_baseline_;
  bool com_printer_whether_use_;
  bool judge_item_whether_sequence_;
  ::google::protobuf::int32 align_terminaldatahz_;
  double align_pitch_;
  double align_track_;
  double align_minspeed_;
  ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo > judge_test_items_array_;
  ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo > judge_test_items_array3_;
  ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo > judge_manual_test_items_array_;
  ::google::protobuf::RepeatedPtrField< ::OPMessage::ConfigPhysicSensor > phpsic_sensor_array_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ConfigInfoBasic* default_instance_;
};
// -------------------------------------------------------------------

class BasicSafety : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicSafety) */ {
 public:
  BasicSafety();
  virtual ~BasicSafety();

  BasicSafety(const BasicSafety& from);

  inline BasicSafety& operator=(const BasicSafety& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicSafety& default_instance();

  void Swap(BasicSafety* other);

  // implements Message ----------------------------------------------

  inline BasicSafety* New() const { return New(NULL); }

  BasicSafety* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicSafety& from);
  void MergeFrom(const BasicSafety& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicSafety* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool safety_whether_check = 1;
  bool has_safety_whether_check() const;
  void clear_safety_whether_check();
  static const int kSafetyWhetherCheckFieldNumber = 1;
  bool safety_whether_check() const;
  void set_safety_whether_check(bool value);

  // optional int32 safety_deduction = 2;
  bool has_safety_deduction() const;
  void clear_safety_deduction();
  static const int kSafetyDeductionFieldNumber = 2;
  ::google::protobuf::int32 safety_deduction() const;
  void set_safety_deduction(::google::protobuf::int32 value);

  // optional string safety_voice = 3;
  bool has_safety_voice() const;
  void clear_safety_voice();
  static const int kSafetyVoiceFieldNumber = 3;
  const ::std::string& safety_voice() const;
  void set_safety_voice(const ::std::string& value);
  void set_safety_voice(const char* value);
  void set_safety_voice(const char* value, size_t size);
  ::std::string* mutable_safety_voice();
  ::std::string* release_safety_voice();
  void set_allocated_safety_voice(::std::string* safety_voice);

  // optional int32 safety_lasting_time = 4;
  bool has_safety_lasting_time() const;
  void clear_safety_lasting_time();
  static const int kSafetyLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 safety_lasting_time() const;
  void set_safety_lasting_time(::google::protobuf::int32 value);

  // optional int32 safety_deduction_number = 5;
  bool has_safety_deduction_number() const;
  void clear_safety_deduction_number();
  static const int kSafetyDeductionNumberFieldNumber = 5;
  ::google::protobuf::int32 safety_deduction_number() const;
  void set_safety_deduction_number(::google::protobuf::int32 value);

  // optional int32 safety_judge_number = 6;
  bool has_safety_judge_number() const;
  void clear_safety_judge_number();
  static const int kSafetyJudgeNumberFieldNumber = 6;
  ::google::protobuf::int32 safety_judge_number() const;
  void set_safety_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicSafety)
 private:
  inline void set_has_safety_whether_check();
  inline void clear_has_safety_whether_check();
  inline void set_has_safety_deduction();
  inline void clear_has_safety_deduction();
  inline void set_has_safety_voice();
  inline void clear_has_safety_voice();
  inline void set_has_safety_lasting_time();
  inline void clear_has_safety_lasting_time();
  inline void set_has_safety_deduction_number();
  inline void clear_has_safety_deduction_number();
  inline void set_has_safety_judge_number();
  inline void clear_has_safety_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool safety_whether_check_;
  ::google::protobuf::int32 safety_deduction_;
  ::google::protobuf::internal::ArenaStringPtr safety_voice_;
  ::google::protobuf::int32 safety_lasting_time_;
  ::google::protobuf::int32 safety_deduction_number_;
  ::google::protobuf::int32 safety_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicSafety* default_instance_;
};
// -------------------------------------------------------------------

class BasicDoor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicDoor) */ {
 public:
  BasicDoor();
  virtual ~BasicDoor();

  BasicDoor(const BasicDoor& from);

  inline BasicDoor& operator=(const BasicDoor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicDoor& default_instance();

  void Swap(BasicDoor* other);

  // implements Message ----------------------------------------------

  inline BasicDoor* New() const { return New(NULL); }

  BasicDoor* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicDoor& from);
  void MergeFrom(const BasicDoor& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicDoor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool door_whether_check = 1;
  bool has_door_whether_check() const;
  void clear_door_whether_check();
  static const int kDoorWhetherCheckFieldNumber = 1;
  bool door_whether_check() const;
  void set_door_whether_check(bool value);

  // optional int32 door_deduction = 2;
  bool has_door_deduction() const;
  void clear_door_deduction();
  static const int kDoorDeductionFieldNumber = 2;
  ::google::protobuf::int32 door_deduction() const;
  void set_door_deduction(::google::protobuf::int32 value);

  // optional string door_voice = 3;
  bool has_door_voice() const;
  void clear_door_voice();
  static const int kDoorVoiceFieldNumber = 3;
  const ::std::string& door_voice() const;
  void set_door_voice(const ::std::string& value);
  void set_door_voice(const char* value);
  void set_door_voice(const char* value, size_t size);
  ::std::string* mutable_door_voice();
  ::std::string* release_door_voice();
  void set_allocated_door_voice(::std::string* door_voice);

  // optional int32 door_lasting_time = 4;
  bool has_door_lasting_time() const;
  void clear_door_lasting_time();
  static const int kDoorLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 door_lasting_time() const;
  void set_door_lasting_time(::google::protobuf::int32 value);

  // optional int32 door_deduction_number = 5;
  bool has_door_deduction_number() const;
  void clear_door_deduction_number();
  static const int kDoorDeductionNumberFieldNumber = 5;
  ::google::protobuf::int32 door_deduction_number() const;
  void set_door_deduction_number(::google::protobuf::int32 value);

  // optional int32 door_judge_number = 6;
  bool has_door_judge_number() const;
  void clear_door_judge_number();
  static const int kDoorJudgeNumberFieldNumber = 6;
  ::google::protobuf::int32 door_judge_number() const;
  void set_door_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicDoor)
 private:
  inline void set_has_door_whether_check();
  inline void clear_has_door_whether_check();
  inline void set_has_door_deduction();
  inline void clear_has_door_deduction();
  inline void set_has_door_voice();
  inline void clear_has_door_voice();
  inline void set_has_door_lasting_time();
  inline void clear_has_door_lasting_time();
  inline void set_has_door_deduction_number();
  inline void clear_has_door_deduction_number();
  inline void set_has_door_judge_number();
  inline void clear_has_door_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool door_whether_check_;
  ::google::protobuf::int32 door_deduction_;
  ::google::protobuf::internal::ArenaStringPtr door_voice_;
  ::google::protobuf::int32 door_lasting_time_;
  ::google::protobuf::int32 door_deduction_number_;
  ::google::protobuf::int32 door_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicDoor* default_instance_;
};
// -------------------------------------------------------------------

class BasicHorn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicHorn) */ {
 public:
  BasicHorn();
  virtual ~BasicHorn();

  BasicHorn(const BasicHorn& from);

  inline BasicHorn& operator=(const BasicHorn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicHorn& default_instance();

  void Swap(BasicHorn* other);

  // implements Message ----------------------------------------------

  inline BasicHorn* New() const { return New(NULL); }

  BasicHorn* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicHorn& from);
  void MergeFrom(const BasicHorn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicHorn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool horn_whether_check = 1;
  bool has_horn_whether_check() const;
  void clear_horn_whether_check();
  static const int kHornWhetherCheckFieldNumber = 1;
  bool horn_whether_check() const;
  void set_horn_whether_check(bool value);

  // optional int32 horn_deduction = 2;
  bool has_horn_deduction() const;
  void clear_horn_deduction();
  static const int kHornDeductionFieldNumber = 2;
  ::google::protobuf::int32 horn_deduction() const;
  void set_horn_deduction(::google::protobuf::int32 value);

  // optional string horn_voice = 3;
  bool has_horn_voice() const;
  void clear_horn_voice();
  static const int kHornVoiceFieldNumber = 3;
  const ::std::string& horn_voice() const;
  void set_horn_voice(const ::std::string& value);
  void set_horn_voice(const char* value);
  void set_horn_voice(const char* value, size_t size);
  ::std::string* mutable_horn_voice();
  ::std::string* release_horn_voice();
  void set_allocated_horn_voice(::std::string* horn_voice);

  // optional int32 horn_lasting_time = 4;
  bool has_horn_lasting_time() const;
  void clear_horn_lasting_time();
  static const int kHornLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 horn_lasting_time() const;
  void set_horn_lasting_time(::google::protobuf::int32 value);

  // optional int32 horn_deduction_number = 5;
  bool has_horn_deduction_number() const;
  void clear_horn_deduction_number();
  static const int kHornDeductionNumberFieldNumber = 5;
  ::google::protobuf::int32 horn_deduction_number() const;
  void set_horn_deduction_number(::google::protobuf::int32 value);

  // optional int32 horn_judge_number = 6;
  bool has_horn_judge_number() const;
  void clear_horn_judge_number();
  static const int kHornJudgeNumberFieldNumber = 6;
  ::google::protobuf::int32 horn_judge_number() const;
  void set_horn_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicHorn)
 private:
  inline void set_has_horn_whether_check();
  inline void clear_has_horn_whether_check();
  inline void set_has_horn_deduction();
  inline void clear_has_horn_deduction();
  inline void set_has_horn_voice();
  inline void clear_has_horn_voice();
  inline void set_has_horn_lasting_time();
  inline void clear_has_horn_lasting_time();
  inline void set_has_horn_deduction_number();
  inline void clear_has_horn_deduction_number();
  inline void set_has_horn_judge_number();
  inline void clear_has_horn_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool horn_whether_check_;
  ::google::protobuf::int32 horn_deduction_;
  ::google::protobuf::internal::ArenaStringPtr horn_voice_;
  ::google::protobuf::int32 horn_lasting_time_;
  ::google::protobuf::int32 horn_deduction_number_;
  ::google::protobuf::int32 horn_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicHorn* default_instance_;
};
// -------------------------------------------------------------------

class BasicFlameout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicFlameout) */ {
 public:
  BasicFlameout();
  virtual ~BasicFlameout();

  BasicFlameout(const BasicFlameout& from);

  inline BasicFlameout& operator=(const BasicFlameout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicFlameout& default_instance();

  void Swap(BasicFlameout* other);

  // implements Message ----------------------------------------------

  inline BasicFlameout* New() const { return New(NULL); }

  BasicFlameout* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicFlameout& from);
  void MergeFrom(const BasicFlameout& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicFlameout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool flameout_whether_check = 1;
  bool has_flameout_whether_check() const;
  void clear_flameout_whether_check();
  static const int kFlameoutWhetherCheckFieldNumber = 1;
  bool flameout_whether_check() const;
  void set_flameout_whether_check(bool value);

  // optional int32 flameout_deduction = 2;
  bool has_flameout_deduction() const;
  void clear_flameout_deduction();
  static const int kFlameoutDeductionFieldNumber = 2;
  ::google::protobuf::int32 flameout_deduction() const;
  void set_flameout_deduction(::google::protobuf::int32 value);

  // optional string flameout_voice = 3;
  bool has_flameout_voice() const;
  void clear_flameout_voice();
  static const int kFlameoutVoiceFieldNumber = 3;
  const ::std::string& flameout_voice() const;
  void set_flameout_voice(const ::std::string& value);
  void set_flameout_voice(const char* value);
  void set_flameout_voice(const char* value, size_t size);
  ::std::string* mutable_flameout_voice();
  ::std::string* release_flameout_voice();
  void set_allocated_flameout_voice(::std::string* flameout_voice);

  // optional int32 flameout_lasting_time = 4;
  bool has_flameout_lasting_time() const;
  void clear_flameout_lasting_time();
  static const int kFlameoutLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 flameout_lasting_time() const;
  void set_flameout_lasting_time(::google::protobuf::int32 value);

  // optional int32 flameout_deduction_number = 5;
  bool has_flameout_deduction_number() const;
  void clear_flameout_deduction_number();
  static const int kFlameoutDeductionNumberFieldNumber = 5;
  ::google::protobuf::int32 flameout_deduction_number() const;
  void set_flameout_deduction_number(::google::protobuf::int32 value);

  // optional int32 flameout_judge_number = 6;
  bool has_flameout_judge_number() const;
  void clear_flameout_judge_number();
  static const int kFlameoutJudgeNumberFieldNumber = 6;
  ::google::protobuf::int32 flameout_judge_number() const;
  void set_flameout_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicFlameout)
 private:
  inline void set_has_flameout_whether_check();
  inline void clear_has_flameout_whether_check();
  inline void set_has_flameout_deduction();
  inline void clear_has_flameout_deduction();
  inline void set_has_flameout_voice();
  inline void clear_has_flameout_voice();
  inline void set_has_flameout_lasting_time();
  inline void clear_has_flameout_lasting_time();
  inline void set_has_flameout_deduction_number();
  inline void clear_has_flameout_deduction_number();
  inline void set_has_flameout_judge_number();
  inline void clear_has_flameout_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool flameout_whether_check_;
  ::google::protobuf::int32 flameout_deduction_;
  ::google::protobuf::internal::ArenaStringPtr flameout_voice_;
  ::google::protobuf::int32 flameout_lasting_time_;
  ::google::protobuf::int32 flameout_deduction_number_;
  ::google::protobuf::int32 flameout_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicFlameout* default_instance_;
};
// -------------------------------------------------------------------

class BasicFullLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicFullLine) */ {
 public:
  BasicFullLine();
  virtual ~BasicFullLine();

  BasicFullLine(const BasicFullLine& from);

  inline BasicFullLine& operator=(const BasicFullLine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicFullLine& default_instance();

  void Swap(BasicFullLine* other);

  // implements Message ----------------------------------------------

  inline BasicFullLine* New() const { return New(NULL); }

  BasicFullLine* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicFullLine& from);
  void MergeFrom(const BasicFullLine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicFullLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool full_line_whether_check = 1;
  bool has_full_line_whether_check() const;
  void clear_full_line_whether_check();
  static const int kFullLineWhetherCheckFieldNumber = 1;
  bool full_line_whether_check() const;
  void set_full_line_whether_check(bool value);

  // optional int32 full_line_deduction = 2;
  bool has_full_line_deduction() const;
  void clear_full_line_deduction();
  static const int kFullLineDeductionFieldNumber = 2;
  ::google::protobuf::int32 full_line_deduction() const;
  void set_full_line_deduction(::google::protobuf::int32 value);

  // optional string full_line_voice = 3;
  bool has_full_line_voice() const;
  void clear_full_line_voice();
  static const int kFullLineVoiceFieldNumber = 3;
  const ::std::string& full_line_voice() const;
  void set_full_line_voice(const ::std::string& value);
  void set_full_line_voice(const char* value);
  void set_full_line_voice(const char* value, size_t size);
  ::std::string* mutable_full_line_voice();
  ::std::string* release_full_line_voice();
  void set_allocated_full_line_voice(::std::string* full_line_voice);

  // optional int32 full_line_lasting_time = 4;
  bool has_full_line_lasting_time() const;
  void clear_full_line_lasting_time();
  static const int kFullLineLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 full_line_lasting_time() const;
  void set_full_line_lasting_time(::google::protobuf::int32 value);

  // optional int32 full_line_deduction_number = 5;
  bool has_full_line_deduction_number() const;
  void clear_full_line_deduction_number();
  static const int kFullLineDeductionNumberFieldNumber = 5;
  ::google::protobuf::int32 full_line_deduction_number() const;
  void set_full_line_deduction_number(::google::protobuf::int32 value);

  // optional int32 full_line_judge_number = 6;
  bool has_full_line_judge_number() const;
  void clear_full_line_judge_number();
  static const int kFullLineJudgeNumberFieldNumber = 6;
  ::google::protobuf::int32 full_line_judge_number() const;
  void set_full_line_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicFullLine)
 private:
  inline void set_has_full_line_whether_check();
  inline void clear_has_full_line_whether_check();
  inline void set_has_full_line_deduction();
  inline void clear_has_full_line_deduction();
  inline void set_has_full_line_voice();
  inline void clear_has_full_line_voice();
  inline void set_has_full_line_lasting_time();
  inline void clear_has_full_line_lasting_time();
  inline void set_has_full_line_deduction_number();
  inline void clear_has_full_line_deduction_number();
  inline void set_has_full_line_judge_number();
  inline void clear_has_full_line_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool full_line_whether_check_;
  ::google::protobuf::int32 full_line_deduction_;
  ::google::protobuf::internal::ArenaStringPtr full_line_voice_;
  ::google::protobuf::int32 full_line_lasting_time_;
  ::google::protobuf::int32 full_line_deduction_number_;
  ::google::protobuf::int32 full_line_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicFullLine* default_instance_;
};
// -------------------------------------------------------------------

class BasicDottedLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicDottedLine) */ {
 public:
  BasicDottedLine();
  virtual ~BasicDottedLine();

  BasicDottedLine(const BasicDottedLine& from);

  inline BasicDottedLine& operator=(const BasicDottedLine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicDottedLine& default_instance();

  void Swap(BasicDottedLine* other);

  // implements Message ----------------------------------------------

  inline BasicDottedLine* New() const { return New(NULL); }

  BasicDottedLine* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicDottedLine& from);
  void MergeFrom(const BasicDottedLine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicDottedLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool dotted_line_whether_check = 1;
  bool has_dotted_line_whether_check() const;
  void clear_dotted_line_whether_check();
  static const int kDottedLineWhetherCheckFieldNumber = 1;
  bool dotted_line_whether_check() const;
  void set_dotted_line_whether_check(bool value);

  // optional int32 dotted_line_deduction = 2;
  bool has_dotted_line_deduction() const;
  void clear_dotted_line_deduction();
  static const int kDottedLineDeductionFieldNumber = 2;
  ::google::protobuf::int32 dotted_line_deduction() const;
  void set_dotted_line_deduction(::google::protobuf::int32 value);

  // optional string dotted_line_voice = 3;
  bool has_dotted_line_voice() const;
  void clear_dotted_line_voice();
  static const int kDottedLineVoiceFieldNumber = 3;
  const ::std::string& dotted_line_voice() const;
  void set_dotted_line_voice(const ::std::string& value);
  void set_dotted_line_voice(const char* value);
  void set_dotted_line_voice(const char* value, size_t size);
  ::std::string* mutable_dotted_line_voice();
  ::std::string* release_dotted_line_voice();
  void set_allocated_dotted_line_voice(::std::string* dotted_line_voice);

  // optional int32 dotted_line_lasting_time = 4;
  bool has_dotted_line_lasting_time() const;
  void clear_dotted_line_lasting_time();
  static const int kDottedLineLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 dotted_line_lasting_time() const;
  void set_dotted_line_lasting_time(::google::protobuf::int32 value);

  // optional int32 dotted_line_deduction_number = 5;
  bool has_dotted_line_deduction_number() const;
  void clear_dotted_line_deduction_number();
  static const int kDottedLineDeductionNumberFieldNumber = 5;
  ::google::protobuf::int32 dotted_line_deduction_number() const;
  void set_dotted_line_deduction_number(::google::protobuf::int32 value);

  // optional int32 dotted_line_judge_number = 6;
  bool has_dotted_line_judge_number() const;
  void clear_dotted_line_judge_number();
  static const int kDottedLineJudgeNumberFieldNumber = 6;
  ::google::protobuf::int32 dotted_line_judge_number() const;
  void set_dotted_line_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicDottedLine)
 private:
  inline void set_has_dotted_line_whether_check();
  inline void clear_has_dotted_line_whether_check();
  inline void set_has_dotted_line_deduction();
  inline void clear_has_dotted_line_deduction();
  inline void set_has_dotted_line_voice();
  inline void clear_has_dotted_line_voice();
  inline void set_has_dotted_line_lasting_time();
  inline void clear_has_dotted_line_lasting_time();
  inline void set_has_dotted_line_deduction_number();
  inline void clear_has_dotted_line_deduction_number();
  inline void set_has_dotted_line_judge_number();
  inline void clear_has_dotted_line_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool dotted_line_whether_check_;
  ::google::protobuf::int32 dotted_line_deduction_;
  ::google::protobuf::internal::ArenaStringPtr dotted_line_voice_;
  ::google::protobuf::int32 dotted_line_lasting_time_;
  ::google::protobuf::int32 dotted_line_deduction_number_;
  ::google::protobuf::int32 dotted_line_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicDottedLine* default_instance_;
};
// -------------------------------------------------------------------

class BasicLeftTurnLamp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicLeftTurnLamp) */ {
 public:
  BasicLeftTurnLamp();
  virtual ~BasicLeftTurnLamp();

  BasicLeftTurnLamp(const BasicLeftTurnLamp& from);

  inline BasicLeftTurnLamp& operator=(const BasicLeftTurnLamp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicLeftTurnLamp& default_instance();

  void Swap(BasicLeftTurnLamp* other);

  // implements Message ----------------------------------------------

  inline BasicLeftTurnLamp* New() const { return New(NULL); }

  BasicLeftTurnLamp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicLeftTurnLamp& from);
  void MergeFrom(const BasicLeftTurnLamp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicLeftTurnLamp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool leftTurnLamp_whether_check = 1;
  bool has_leftturnlamp_whether_check() const;
  void clear_leftturnlamp_whether_check();
  static const int kLeftTurnLampWhetherCheckFieldNumber = 1;
  bool leftturnlamp_whether_check() const;
  void set_leftturnlamp_whether_check(bool value);

  // optional int32 leftTurnLamp_deduction = 2;
  bool has_leftturnlamp_deduction() const;
  void clear_leftturnlamp_deduction();
  static const int kLeftTurnLampDeductionFieldNumber = 2;
  ::google::protobuf::int32 leftturnlamp_deduction() const;
  void set_leftturnlamp_deduction(::google::protobuf::int32 value);

  // optional string leftTurnLamp_voice = 3;
  bool has_leftturnlamp_voice() const;
  void clear_leftturnlamp_voice();
  static const int kLeftTurnLampVoiceFieldNumber = 3;
  const ::std::string& leftturnlamp_voice() const;
  void set_leftturnlamp_voice(const ::std::string& value);
  void set_leftturnlamp_voice(const char* value);
  void set_leftturnlamp_voice(const char* value, size_t size);
  ::std::string* mutable_leftturnlamp_voice();
  ::std::string* release_leftturnlamp_voice();
  void set_allocated_leftturnlamp_voice(::std::string* leftturnlamp_voice);

  // optional int32 leftTurnLamp_lasting_time = 4;
  bool has_leftturnlamp_lasting_time() const;
  void clear_leftturnlamp_lasting_time();
  static const int kLeftTurnLampLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 leftturnlamp_lasting_time() const;
  void set_leftturnlamp_lasting_time(::google::protobuf::int32 value);

  // optional int32 leftTurnLamp_deduction_number = 5;
  bool has_leftturnlamp_deduction_number() const;
  void clear_leftturnlamp_deduction_number();
  static const int kLeftTurnLampDeductionNumberFieldNumber = 5;
  ::google::protobuf::int32 leftturnlamp_deduction_number() const;
  void set_leftturnlamp_deduction_number(::google::protobuf::int32 value);

  // optional int32 leftTurnLamp_judge_number = 6;
  bool has_leftturnlamp_judge_number() const;
  void clear_leftturnlamp_judge_number();
  static const int kLeftTurnLampJudgeNumberFieldNumber = 6;
  ::google::protobuf::int32 leftturnlamp_judge_number() const;
  void set_leftturnlamp_judge_number(::google::protobuf::int32 value);

  // optional bool leftTurnLamp_lasting_whole_course = 7 [default = false];
  bool has_leftturnlamp_lasting_whole_course() const;
  void clear_leftturnlamp_lasting_whole_course();
  static const int kLeftTurnLampLastingWholeCourseFieldNumber = 7;
  bool leftturnlamp_lasting_whole_course() const;
  void set_leftturnlamp_lasting_whole_course(bool value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicLeftTurnLamp)
 private:
  inline void set_has_leftturnlamp_whether_check();
  inline void clear_has_leftturnlamp_whether_check();
  inline void set_has_leftturnlamp_deduction();
  inline void clear_has_leftturnlamp_deduction();
  inline void set_has_leftturnlamp_voice();
  inline void clear_has_leftturnlamp_voice();
  inline void set_has_leftturnlamp_lasting_time();
  inline void clear_has_leftturnlamp_lasting_time();
  inline void set_has_leftturnlamp_deduction_number();
  inline void clear_has_leftturnlamp_deduction_number();
  inline void set_has_leftturnlamp_judge_number();
  inline void clear_has_leftturnlamp_judge_number();
  inline void set_has_leftturnlamp_lasting_whole_course();
  inline void clear_has_leftturnlamp_lasting_whole_course();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr leftturnlamp_voice_;
  ::google::protobuf::int32 leftturnlamp_deduction_;
  ::google::protobuf::int32 leftturnlamp_lasting_time_;
  bool leftturnlamp_whether_check_;
  bool leftturnlamp_lasting_whole_course_;
  ::google::protobuf::int32 leftturnlamp_deduction_number_;
  ::google::protobuf::int32 leftturnlamp_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicLeftTurnLamp* default_instance_;
};
// -------------------------------------------------------------------

class BasicRightTurnLamp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicRightTurnLamp) */ {
 public:
  BasicRightTurnLamp();
  virtual ~BasicRightTurnLamp();

  BasicRightTurnLamp(const BasicRightTurnLamp& from);

  inline BasicRightTurnLamp& operator=(const BasicRightTurnLamp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicRightTurnLamp& default_instance();

  void Swap(BasicRightTurnLamp* other);

  // implements Message ----------------------------------------------

  inline BasicRightTurnLamp* New() const { return New(NULL); }

  BasicRightTurnLamp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicRightTurnLamp& from);
  void MergeFrom(const BasicRightTurnLamp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicRightTurnLamp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool rightTurnLamp_whether_check = 1;
  bool has_rightturnlamp_whether_check() const;
  void clear_rightturnlamp_whether_check();
  static const int kRightTurnLampWhetherCheckFieldNumber = 1;
  bool rightturnlamp_whether_check() const;
  void set_rightturnlamp_whether_check(bool value);

  // optional int32 rightTurnLamp_deduction = 2;
  bool has_rightturnlamp_deduction() const;
  void clear_rightturnlamp_deduction();
  static const int kRightTurnLampDeductionFieldNumber = 2;
  ::google::protobuf::int32 rightturnlamp_deduction() const;
  void set_rightturnlamp_deduction(::google::protobuf::int32 value);

  // optional string rightTurnLamp_voice = 3;
  bool has_rightturnlamp_voice() const;
  void clear_rightturnlamp_voice();
  static const int kRightTurnLampVoiceFieldNumber = 3;
  const ::std::string& rightturnlamp_voice() const;
  void set_rightturnlamp_voice(const ::std::string& value);
  void set_rightturnlamp_voice(const char* value);
  void set_rightturnlamp_voice(const char* value, size_t size);
  ::std::string* mutable_rightturnlamp_voice();
  ::std::string* release_rightturnlamp_voice();
  void set_allocated_rightturnlamp_voice(::std::string* rightturnlamp_voice);

  // optional int32 rightTurnLamp_lasting_time = 4;
  bool has_rightturnlamp_lasting_time() const;
  void clear_rightturnlamp_lasting_time();
  static const int kRightTurnLampLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 rightturnlamp_lasting_time() const;
  void set_rightturnlamp_lasting_time(::google::protobuf::int32 value);

  // optional int32 rightTurnLamp_deduction_number = 5;
  bool has_rightturnlamp_deduction_number() const;
  void clear_rightturnlamp_deduction_number();
  static const int kRightTurnLampDeductionNumberFieldNumber = 5;
  ::google::protobuf::int32 rightturnlamp_deduction_number() const;
  void set_rightturnlamp_deduction_number(::google::protobuf::int32 value);

  // optional int32 rightTurnLamp_judge_number = 6;
  bool has_rightturnlamp_judge_number() const;
  void clear_rightturnlamp_judge_number();
  static const int kRightTurnLampJudgeNumberFieldNumber = 6;
  ::google::protobuf::int32 rightturnlamp_judge_number() const;
  void set_rightturnlamp_judge_number(::google::protobuf::int32 value);

  // optional bool rightTurnLamp_lasting_whole_course = 7 [default = false];
  bool has_rightturnlamp_lasting_whole_course() const;
  void clear_rightturnlamp_lasting_whole_course();
  static const int kRightTurnLampLastingWholeCourseFieldNumber = 7;
  bool rightturnlamp_lasting_whole_course() const;
  void set_rightturnlamp_lasting_whole_course(bool value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicRightTurnLamp)
 private:
  inline void set_has_rightturnlamp_whether_check();
  inline void clear_has_rightturnlamp_whether_check();
  inline void set_has_rightturnlamp_deduction();
  inline void clear_has_rightturnlamp_deduction();
  inline void set_has_rightturnlamp_voice();
  inline void clear_has_rightturnlamp_voice();
  inline void set_has_rightturnlamp_lasting_time();
  inline void clear_has_rightturnlamp_lasting_time();
  inline void set_has_rightturnlamp_deduction_number();
  inline void clear_has_rightturnlamp_deduction_number();
  inline void set_has_rightturnlamp_judge_number();
  inline void clear_has_rightturnlamp_judge_number();
  inline void set_has_rightturnlamp_lasting_whole_course();
  inline void clear_has_rightturnlamp_lasting_whole_course();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr rightturnlamp_voice_;
  ::google::protobuf::int32 rightturnlamp_deduction_;
  ::google::protobuf::int32 rightturnlamp_lasting_time_;
  bool rightturnlamp_whether_check_;
  bool rightturnlamp_lasting_whole_course_;
  ::google::protobuf::int32 rightturnlamp_deduction_number_;
  ::google::protobuf::int32 rightturnlamp_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicRightTurnLamp* default_instance_;
};
// -------------------------------------------------------------------

class BasicCarStop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicCarStop) */ {
 public:
  BasicCarStop();
  virtual ~BasicCarStop();

  BasicCarStop(const BasicCarStop& from);

  inline BasicCarStop& operator=(const BasicCarStop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicCarStop& default_instance();

  void Swap(BasicCarStop* other);

  // implements Message ----------------------------------------------

  inline BasicCarStop* New() const { return New(NULL); }

  BasicCarStop* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicCarStop& from);
  void MergeFrom(const BasicCarStop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicCarStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool carStop_whether_check = 1;
  bool has_carstop_whether_check() const;
  void clear_carstop_whether_check();
  static const int kCarStopWhetherCheckFieldNumber = 1;
  bool carstop_whether_check() const;
  void set_carstop_whether_check(bool value);

  // optional int32 carStop_deduction = 2;
  bool has_carstop_deduction() const;
  void clear_carstop_deduction();
  static const int kCarStopDeductionFieldNumber = 2;
  ::google::protobuf::int32 carstop_deduction() const;
  void set_carstop_deduction(::google::protobuf::int32 value);

  // optional string carStop_voice = 3;
  bool has_carstop_voice() const;
  void clear_carstop_voice();
  static const int kCarStopVoiceFieldNumber = 3;
  const ::std::string& carstop_voice() const;
  void set_carstop_voice(const ::std::string& value);
  void set_carstop_voice(const char* value);
  void set_carstop_voice(const char* value, size_t size);
  ::std::string* mutable_carstop_voice();
  ::std::string* release_carstop_voice();
  void set_allocated_carstop_voice(::std::string* carstop_voice);

  // optional int32 carStop_lasting_time = 4;
  bool has_carstop_lasting_time() const;
  void clear_carstop_lasting_time();
  static const int kCarStopLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 carstop_lasting_time() const;
  void set_carstop_lasting_time(::google::protobuf::int32 value);

  // optional int32 carStop_deduction_number = 5;
  bool has_carstop_deduction_number() const;
  void clear_carstop_deduction_number();
  static const int kCarStopDeductionNumberFieldNumber = 5;
  ::google::protobuf::int32 carstop_deduction_number() const;
  void set_carstop_deduction_number(::google::protobuf::int32 value);

  // optional int32 carStop_judge_number = 6;
  bool has_carstop_judge_number() const;
  void clear_carstop_judge_number();
  static const int kCarStopJudgeNumberFieldNumber = 6;
  ::google::protobuf::int32 carstop_judge_number() const;
  void set_carstop_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicCarStop)
 private:
  inline void set_has_carstop_whether_check();
  inline void clear_has_carstop_whether_check();
  inline void set_has_carstop_deduction();
  inline void clear_has_carstop_deduction();
  inline void set_has_carstop_voice();
  inline void clear_has_carstop_voice();
  inline void set_has_carstop_lasting_time();
  inline void clear_has_carstop_lasting_time();
  inline void set_has_carstop_deduction_number();
  inline void clear_has_carstop_deduction_number();
  inline void set_has_carstop_judge_number();
  inline void clear_has_carstop_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool carstop_whether_check_;
  ::google::protobuf::int32 carstop_deduction_;
  ::google::protobuf::internal::ArenaStringPtr carstop_voice_;
  ::google::protobuf::int32 carstop_lasting_time_;
  ::google::protobuf::int32 carstop_deduction_number_;
  ::google::protobuf::int32 carstop_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicCarStop* default_instance_;
};
// -------------------------------------------------------------------

class BasicHandBrake : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicHandBrake) */ {
 public:
  BasicHandBrake();
  virtual ~BasicHandBrake();

  BasicHandBrake(const BasicHandBrake& from);

  inline BasicHandBrake& operator=(const BasicHandBrake& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicHandBrake& default_instance();

  void Swap(BasicHandBrake* other);

  // implements Message ----------------------------------------------

  inline BasicHandBrake* New() const { return New(NULL); }

  BasicHandBrake* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicHandBrake& from);
  void MergeFrom(const BasicHandBrake& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicHandBrake* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool handBrake_whether_check = 1;
  bool has_handbrake_whether_check() const;
  void clear_handbrake_whether_check();
  static const int kHandBrakeWhetherCheckFieldNumber = 1;
  bool handbrake_whether_check() const;
  void set_handbrake_whether_check(bool value);

  // optional int32 handBrake_deduction = 2;
  bool has_handbrake_deduction() const;
  void clear_handbrake_deduction();
  static const int kHandBrakeDeductionFieldNumber = 2;
  ::google::protobuf::int32 handbrake_deduction() const;
  void set_handbrake_deduction(::google::protobuf::int32 value);

  // optional string handBrake_voice = 3;
  bool has_handbrake_voice() const;
  void clear_handbrake_voice();
  static const int kHandBrakeVoiceFieldNumber = 3;
  const ::std::string& handbrake_voice() const;
  void set_handbrake_voice(const ::std::string& value);
  void set_handbrake_voice(const char* value);
  void set_handbrake_voice(const char* value, size_t size);
  ::std::string* mutable_handbrake_voice();
  ::std::string* release_handbrake_voice();
  void set_allocated_handbrake_voice(::std::string* handbrake_voice);

  // optional int32 handBrake_distance = 4;
  bool has_handbrake_distance() const;
  void clear_handbrake_distance();
  static const int kHandBrakeDistanceFieldNumber = 4;
  ::google::protobuf::int32 handbrake_distance() const;
  void set_handbrake_distance(::google::protobuf::int32 value);

  // optional int32 handBrake_lasting_time = 5;
  bool has_handbrake_lasting_time() const;
  void clear_handbrake_lasting_time();
  static const int kHandBrakeLastingTimeFieldNumber = 5;
  ::google::protobuf::int32 handbrake_lasting_time() const;
  void set_handbrake_lasting_time(::google::protobuf::int32 value);

  // optional int32 handBrake_deduction_number = 6;
  bool has_handbrake_deduction_number() const;
  void clear_handbrake_deduction_number();
  static const int kHandBrakeDeductionNumberFieldNumber = 6;
  ::google::protobuf::int32 handbrake_deduction_number() const;
  void set_handbrake_deduction_number(::google::protobuf::int32 value);

  // optional int32 handBrake_judge_number = 7;
  bool has_handbrake_judge_number() const;
  void clear_handbrake_judge_number();
  static const int kHandBrakeJudgeNumberFieldNumber = 7;
  ::google::protobuf::int32 handbrake_judge_number() const;
  void set_handbrake_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicHandBrake)
 private:
  inline void set_has_handbrake_whether_check();
  inline void clear_has_handbrake_whether_check();
  inline void set_has_handbrake_deduction();
  inline void clear_has_handbrake_deduction();
  inline void set_has_handbrake_voice();
  inline void clear_has_handbrake_voice();
  inline void set_has_handbrake_distance();
  inline void clear_has_handbrake_distance();
  inline void set_has_handbrake_lasting_time();
  inline void clear_has_handbrake_lasting_time();
  inline void set_has_handbrake_deduction_number();
  inline void clear_has_handbrake_deduction_number();
  inline void set_has_handbrake_judge_number();
  inline void clear_has_handbrake_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool handbrake_whether_check_;
  ::google::protobuf::int32 handbrake_deduction_;
  ::google::protobuf::internal::ArenaStringPtr handbrake_voice_;
  ::google::protobuf::int32 handbrake_distance_;
  ::google::protobuf::int32 handbrake_lasting_time_;
  ::google::protobuf::int32 handbrake_deduction_number_;
  ::google::protobuf::int32 handbrake_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicHandBrake* default_instance_;
};
// -------------------------------------------------------------------

class BasicTimeout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicTimeout) */ {
 public:
  BasicTimeout();
  virtual ~BasicTimeout();

  BasicTimeout(const BasicTimeout& from);

  inline BasicTimeout& operator=(const BasicTimeout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicTimeout& default_instance();

  void Swap(BasicTimeout* other);

  // implements Message ----------------------------------------------

  inline BasicTimeout* New() const { return New(NULL); }

  BasicTimeout* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicTimeout& from);
  void MergeFrom(const BasicTimeout& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicTimeout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool timeout_whether_check = 1;
  bool has_timeout_whether_check() const;
  void clear_timeout_whether_check();
  static const int kTimeoutWhetherCheckFieldNumber = 1;
  bool timeout_whether_check() const;
  void set_timeout_whether_check(bool value);

  // optional int32 timeout_milliseconds = 2;
  bool has_timeout_milliseconds() const;
  void clear_timeout_milliseconds();
  static const int kTimeoutMillisecondsFieldNumber = 2;
  ::google::protobuf::int32 timeout_milliseconds() const;
  void set_timeout_milliseconds(::google::protobuf::int32 value);

  // optional int32 timeout_deduction = 3;
  bool has_timeout_deduction() const;
  void clear_timeout_deduction();
  static const int kTimeoutDeductionFieldNumber = 3;
  ::google::protobuf::int32 timeout_deduction() const;
  void set_timeout_deduction(::google::protobuf::int32 value);

  // optional string timeout_voice = 4;
  bool has_timeout_voice() const;
  void clear_timeout_voice();
  static const int kTimeoutVoiceFieldNumber = 4;
  const ::std::string& timeout_voice() const;
  void set_timeout_voice(const ::std::string& value);
  void set_timeout_voice(const char* value);
  void set_timeout_voice(const char* value, size_t size);
  ::std::string* mutable_timeout_voice();
  ::std::string* release_timeout_voice();
  void set_allocated_timeout_voice(::std::string* timeout_voice);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicTimeout)
 private:
  inline void set_has_timeout_whether_check();
  inline void clear_has_timeout_whether_check();
  inline void set_has_timeout_milliseconds();
  inline void clear_has_timeout_milliseconds();
  inline void set_has_timeout_deduction();
  inline void clear_has_timeout_deduction();
  inline void set_has_timeout_voice();
  inline void clear_has_timeout_voice();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool timeout_whether_check_;
  ::google::protobuf::int32 timeout_milliseconds_;
  ::google::protobuf::internal::ArenaStringPtr timeout_voice_;
  ::google::protobuf::int32 timeout_deduction_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicTimeout* default_instance_;
};
// -------------------------------------------------------------------

class BasicClutch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicClutch) */ {
 public:
  BasicClutch();
  virtual ~BasicClutch();

  BasicClutch(const BasicClutch& from);

  inline BasicClutch& operator=(const BasicClutch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicClutch& default_instance();

  void Swap(BasicClutch* other);

  // implements Message ----------------------------------------------

  inline BasicClutch* New() const { return New(NULL); }

  BasicClutch* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicClutch& from);
  void MergeFrom(const BasicClutch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicClutch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool clutch_whether_check = 1;
  bool has_clutch_whether_check() const;
  void clear_clutch_whether_check();
  static const int kClutchWhetherCheckFieldNumber = 1;
  bool clutch_whether_check() const;
  void set_clutch_whether_check(bool value);

  // optional int32 clutch_deduction = 2;
  bool has_clutch_deduction() const;
  void clear_clutch_deduction();
  static const int kClutchDeductionFieldNumber = 2;
  ::google::protobuf::int32 clutch_deduction() const;
  void set_clutch_deduction(::google::protobuf::int32 value);

  // optional string clutch_voice = 3;
  bool has_clutch_voice() const;
  void clear_clutch_voice();
  static const int kClutchVoiceFieldNumber = 3;
  const ::std::string& clutch_voice() const;
  void set_clutch_voice(const ::std::string& value);
  void set_clutch_voice(const char* value);
  void set_clutch_voice(const char* value, size_t size);
  ::std::string* mutable_clutch_voice();
  ::std::string* release_clutch_voice();
  void set_allocated_clutch_voice(::std::string* clutch_voice);

  // optional int32 clutch_lasting_time = 4;
  bool has_clutch_lasting_time() const;
  void clear_clutch_lasting_time();
  static const int kClutchLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 clutch_lasting_time() const;
  void set_clutch_lasting_time(::google::protobuf::int32 value);

  // optional int32 clutch_deduction_number = 5;
  bool has_clutch_deduction_number() const;
  void clear_clutch_deduction_number();
  static const int kClutchDeductionNumberFieldNumber = 5;
  ::google::protobuf::int32 clutch_deduction_number() const;
  void set_clutch_deduction_number(::google::protobuf::int32 value);

  // optional int32 clutch_judge_number = 6;
  bool has_clutch_judge_number() const;
  void clear_clutch_judge_number();
  static const int kClutchJudgeNumberFieldNumber = 6;
  ::google::protobuf::int32 clutch_judge_number() const;
  void set_clutch_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicClutch)
 private:
  inline void set_has_clutch_whether_check();
  inline void clear_has_clutch_whether_check();
  inline void set_has_clutch_deduction();
  inline void clear_has_clutch_deduction();
  inline void set_has_clutch_voice();
  inline void clear_has_clutch_voice();
  inline void set_has_clutch_lasting_time();
  inline void clear_has_clutch_lasting_time();
  inline void set_has_clutch_deduction_number();
  inline void clear_has_clutch_deduction_number();
  inline void set_has_clutch_judge_number();
  inline void clear_has_clutch_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool clutch_whether_check_;
  ::google::protobuf::int32 clutch_deduction_;
  ::google::protobuf::internal::ArenaStringPtr clutch_voice_;
  ::google::protobuf::int32 clutch_lasting_time_;
  ::google::protobuf::int32 clutch_deduction_number_;
  ::google::protobuf::int32 clutch_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicClutch* default_instance_;
};
// -------------------------------------------------------------------

class BasicRoundCar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicRoundCar) */ {
 public:
  BasicRoundCar();
  virtual ~BasicRoundCar();

  BasicRoundCar(const BasicRoundCar& from);

  inline BasicRoundCar& operator=(const BasicRoundCar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicRoundCar& default_instance();

  void Swap(BasicRoundCar* other);

  // implements Message ----------------------------------------------

  inline BasicRoundCar* New() const { return New(NULL); }

  BasicRoundCar* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicRoundCar& from);
  void MergeFrom(const BasicRoundCar& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicRoundCar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool roundCar_whether_check = 1;
  bool has_roundcar_whether_check() const;
  void clear_roundcar_whether_check();
  static const int kRoundCarWhetherCheckFieldNumber = 1;
  bool roundcar_whether_check() const;
  void set_roundcar_whether_check(bool value);

  // optional int32 roundCar_deduction = 2;
  bool has_roundcar_deduction() const;
  void clear_roundcar_deduction();
  static const int kRoundCarDeductionFieldNumber = 2;
  ::google::protobuf::int32 roundcar_deduction() const;
  void set_roundcar_deduction(::google::protobuf::int32 value);

  // optional string roundCar_voice = 3;
  bool has_roundcar_voice() const;
  void clear_roundcar_voice();
  static const int kRoundCarVoiceFieldNumber = 3;
  const ::std::string& roundcar_voice() const;
  void set_roundcar_voice(const ::std::string& value);
  void set_roundcar_voice(const char* value);
  void set_roundcar_voice(const char* value, size_t size);
  ::std::string* mutable_roundcar_voice();
  ::std::string* release_roundcar_voice();
  void set_allocated_roundcar_voice(::std::string* roundcar_voice);

  // optional int32 roundCar_lasting_time = 4;
  bool has_roundcar_lasting_time() const;
  void clear_roundcar_lasting_time();
  static const int kRoundCarLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 roundcar_lasting_time() const;
  void set_roundcar_lasting_time(::google::protobuf::int32 value);

  // optional int32 roundCar_deduction_number = 5;
  bool has_roundcar_deduction_number() const;
  void clear_roundcar_deduction_number();
  static const int kRoundCarDeductionNumberFieldNumber = 5;
  ::google::protobuf::int32 roundcar_deduction_number() const;
  void set_roundcar_deduction_number(::google::protobuf::int32 value);

  // optional int32 roundCar_judge_number = 6;
  bool has_roundcar_judge_number() const;
  void clear_roundcar_judge_number();
  static const int kRoundCarJudgeNumberFieldNumber = 6;
  ::google::protobuf::int32 roundcar_judge_number() const;
  void set_roundcar_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicRoundCar)
 private:
  inline void set_has_roundcar_whether_check();
  inline void clear_has_roundcar_whether_check();
  inline void set_has_roundcar_deduction();
  inline void clear_has_roundcar_deduction();
  inline void set_has_roundcar_voice();
  inline void clear_has_roundcar_voice();
  inline void set_has_roundcar_lasting_time();
  inline void clear_has_roundcar_lasting_time();
  inline void set_has_roundcar_deduction_number();
  inline void clear_has_roundcar_deduction_number();
  inline void set_has_roundcar_judge_number();
  inline void clear_has_roundcar_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool roundcar_whether_check_;
  ::google::protobuf::int32 roundcar_deduction_;
  ::google::protobuf::internal::ArenaStringPtr roundcar_voice_;
  ::google::protobuf::int32 roundcar_lasting_time_;
  ::google::protobuf::int32 roundcar_deduction_number_;
  ::google::protobuf::int32 roundcar_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicRoundCar* default_instance_;
};
// -------------------------------------------------------------------

class BasicSlowDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicSlowDown) */ {
 public:
  BasicSlowDown();
  virtual ~BasicSlowDown();

  BasicSlowDown(const BasicSlowDown& from);

  inline BasicSlowDown& operator=(const BasicSlowDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicSlowDown& default_instance();

  void Swap(BasicSlowDown* other);

  // implements Message ----------------------------------------------

  inline BasicSlowDown* New() const { return New(NULL); }

  BasicSlowDown* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicSlowDown& from);
  void MergeFrom(const BasicSlowDown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicSlowDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool slowDown_whether_check = 1 [default = true];
  bool has_slowdown_whether_check() const;
  void clear_slowdown_whether_check();
  static const int kSlowDownWhetherCheckFieldNumber = 1;
  bool slowdown_whether_check() const;
  void set_slowdown_whether_check(bool value);

  // optional int32 slowDown_deduction = 2;
  bool has_slowdown_deduction() const;
  void clear_slowdown_deduction();
  static const int kSlowDownDeductionFieldNumber = 2;
  ::google::protobuf::int32 slowdown_deduction() const;
  void set_slowdown_deduction(::google::protobuf::int32 value);

  // optional string slowDown_voice = 3;
  bool has_slowdown_voice() const;
  void clear_slowdown_voice();
  static const int kSlowDownVoiceFieldNumber = 3;
  const ::std::string& slowdown_voice() const;
  void set_slowdown_voice(const ::std::string& value);
  void set_slowdown_voice(const char* value);
  void set_slowdown_voice(const char* value, size_t size);
  ::std::string* mutable_slowdown_voice();
  ::std::string* release_slowdown_voice();
  void set_allocated_slowdown_voice(::std::string* slowdown_voice);

  // optional int32 slowDown_lasting_time = 4;
  bool has_slowdown_lasting_time() const;
  void clear_slowdown_lasting_time();
  static const int kSlowDownLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 slowdown_lasting_time() const;
  void set_slowdown_lasting_time(::google::protobuf::int32 value);

  // optional int32 slowDown_deduction_number = 5;
  bool has_slowdown_deduction_number() const;
  void clear_slowdown_deduction_number();
  static const int kSlowDownDeductionNumberFieldNumber = 5;
  ::google::protobuf::int32 slowdown_deduction_number() const;
  void set_slowdown_deduction_number(::google::protobuf::int32 value);

  // optional int32 slowDown_judge_number = 6;
  bool has_slowdown_judge_number() const;
  void clear_slowdown_judge_number();
  static const int kSlowDownJudgeNumberFieldNumber = 6;
  ::google::protobuf::int32 slowdown_judge_number() const;
  void set_slowdown_judge_number(::google::protobuf::int32 value);

  // optional int32 limit_speed = 7;
  bool has_limit_speed() const;
  void clear_limit_speed();
  static const int kLimitSpeedFieldNumber = 7;
  ::google::protobuf::int32 limit_speed() const;
  void set_limit_speed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicSlowDown)
 private:
  inline void set_has_slowdown_whether_check();
  inline void clear_has_slowdown_whether_check();
  inline void set_has_slowdown_deduction();
  inline void clear_has_slowdown_deduction();
  inline void set_has_slowdown_voice();
  inline void clear_has_slowdown_voice();
  inline void set_has_slowdown_lasting_time();
  inline void clear_has_slowdown_lasting_time();
  inline void set_has_slowdown_deduction_number();
  inline void clear_has_slowdown_deduction_number();
  inline void set_has_slowdown_judge_number();
  inline void clear_has_slowdown_judge_number();
  inline void set_has_limit_speed();
  inline void clear_has_limit_speed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool slowdown_whether_check_;
  ::google::protobuf::int32 slowdown_deduction_;
  ::google::protobuf::internal::ArenaStringPtr slowdown_voice_;
  ::google::protobuf::int32 slowdown_lasting_time_;
  ::google::protobuf::int32 slowdown_deduction_number_;
  ::google::protobuf::int32 slowdown_judge_number_;
  ::google::protobuf::int32 limit_speed_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicSlowDown* default_instance_;
};
// -------------------------------------------------------------------

class BasicFireUp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicFireUp) */ {
 public:
  BasicFireUp();
  virtual ~BasicFireUp();

  BasicFireUp(const BasicFireUp& from);

  inline BasicFireUp& operator=(const BasicFireUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicFireUp& default_instance();

  void Swap(BasicFireUp* other);

  // implements Message ----------------------------------------------

  inline BasicFireUp* New() const { return New(NULL); }

  BasicFireUp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicFireUp& from);
  void MergeFrom(const BasicFireUp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicFireUp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool fireup_whether_check = 1;
  bool has_fireup_whether_check() const;
  void clear_fireup_whether_check();
  static const int kFireupWhetherCheckFieldNumber = 1;
  bool fireup_whether_check() const;
  void set_fireup_whether_check(bool value);

  // optional int32 fireup_deduction = 2;
  bool has_fireup_deduction() const;
  void clear_fireup_deduction();
  static const int kFireupDeductionFieldNumber = 2;
  ::google::protobuf::int32 fireup_deduction() const;
  void set_fireup_deduction(::google::protobuf::int32 value);

  // optional string fireup_voice = 3;
  bool has_fireup_voice() const;
  void clear_fireup_voice();
  static const int kFireupVoiceFieldNumber = 3;
  const ::std::string& fireup_voice() const;
  void set_fireup_voice(const ::std::string& value);
  void set_fireup_voice(const char* value);
  void set_fireup_voice(const char* value, size_t size);
  ::std::string* mutable_fireup_voice();
  ::std::string* release_fireup_voice();
  void set_allocated_fireup_voice(::std::string* fireup_voice);

  // optional int32 fireup_lasting_time = 4;
  bool has_fireup_lasting_time() const;
  void clear_fireup_lasting_time();
  static const int kFireupLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 fireup_lasting_time() const;
  void set_fireup_lasting_time(::google::protobuf::int32 value);

  // optional int32 slowDown_judge_number = 5;
  bool has_slowdown_judge_number() const;
  void clear_slowdown_judge_number();
  static const int kSlowDownJudgeNumberFieldNumber = 5;
  ::google::protobuf::int32 slowdown_judge_number() const;
  void set_slowdown_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicFireUp)
 private:
  inline void set_has_fireup_whether_check();
  inline void clear_has_fireup_whether_check();
  inline void set_has_fireup_deduction();
  inline void clear_has_fireup_deduction();
  inline void set_has_fireup_voice();
  inline void clear_has_fireup_voice();
  inline void set_has_fireup_lasting_time();
  inline void clear_has_fireup_lasting_time();
  inline void set_has_slowdown_judge_number();
  inline void clear_has_slowdown_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool fireup_whether_check_;
  ::google::protobuf::int32 fireup_deduction_;
  ::google::protobuf::internal::ArenaStringPtr fireup_voice_;
  ::google::protobuf::int32 fireup_lasting_time_;
  ::google::protobuf::int32 slowdown_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicFireUp* default_instance_;
};
// -------------------------------------------------------------------

class BasicSeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicSeat) */ {
 public:
  BasicSeat();
  virtual ~BasicSeat();

  BasicSeat(const BasicSeat& from);

  inline BasicSeat& operator=(const BasicSeat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicSeat& default_instance();

  void Swap(BasicSeat* other);

  // implements Message ----------------------------------------------

  inline BasicSeat* New() const { return New(NULL); }

  BasicSeat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicSeat& from);
  void MergeFrom(const BasicSeat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicSeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool seat_whether_check = 1;
  bool has_seat_whether_check() const;
  void clear_seat_whether_check();
  static const int kSeatWhetherCheckFieldNumber = 1;
  bool seat_whether_check() const;
  void set_seat_whether_check(bool value);

  // optional int32 seat_deduction = 2;
  bool has_seat_deduction() const;
  void clear_seat_deduction();
  static const int kSeatDeductionFieldNumber = 2;
  ::google::protobuf::int32 seat_deduction() const;
  void set_seat_deduction(::google::protobuf::int32 value);

  // optional string seat_voice = 3;
  bool has_seat_voice() const;
  void clear_seat_voice();
  static const int kSeatVoiceFieldNumber = 3;
  const ::std::string& seat_voice() const;
  void set_seat_voice(const ::std::string& value);
  void set_seat_voice(const char* value);
  void set_seat_voice(const char* value, size_t size);
  ::std::string* mutable_seat_voice();
  ::std::string* release_seat_voice();
  void set_allocated_seat_voice(::std::string* seat_voice);

  // optional int32 seat_lasting_time = 4;
  bool has_seat_lasting_time() const;
  void clear_seat_lasting_time();
  static const int kSeatLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 seat_lasting_time() const;
  void set_seat_lasting_time(::google::protobuf::int32 value);

  // optional int32 slowDown_judge_number = 5;
  bool has_slowdown_judge_number() const;
  void clear_slowdown_judge_number();
  static const int kSlowDownJudgeNumberFieldNumber = 5;
  ::google::protobuf::int32 slowdown_judge_number() const;
  void set_slowdown_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicSeat)
 private:
  inline void set_has_seat_whether_check();
  inline void clear_has_seat_whether_check();
  inline void set_has_seat_deduction();
  inline void clear_has_seat_deduction();
  inline void set_has_seat_voice();
  inline void clear_has_seat_voice();
  inline void set_has_seat_lasting_time();
  inline void clear_has_seat_lasting_time();
  inline void set_has_slowdown_judge_number();
  inline void clear_has_slowdown_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool seat_whether_check_;
  ::google::protobuf::int32 seat_deduction_;
  ::google::protobuf::internal::ArenaStringPtr seat_voice_;
  ::google::protobuf::int32 seat_lasting_time_;
  ::google::protobuf::int32 slowdown_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicSeat* default_instance_;
};
// -------------------------------------------------------------------

class BasicLeftMirror : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicLeftMirror) */ {
 public:
  BasicLeftMirror();
  virtual ~BasicLeftMirror();

  BasicLeftMirror(const BasicLeftMirror& from);

  inline BasicLeftMirror& operator=(const BasicLeftMirror& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicLeftMirror& default_instance();

  void Swap(BasicLeftMirror* other);

  // implements Message ----------------------------------------------

  inline BasicLeftMirror* New() const { return New(NULL); }

  BasicLeftMirror* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicLeftMirror& from);
  void MergeFrom(const BasicLeftMirror& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicLeftMirror* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool left_mirror_whether_check = 1;
  bool has_left_mirror_whether_check() const;
  void clear_left_mirror_whether_check();
  static const int kLeftMirrorWhetherCheckFieldNumber = 1;
  bool left_mirror_whether_check() const;
  void set_left_mirror_whether_check(bool value);

  // optional int32 left_mirror_deduction = 2;
  bool has_left_mirror_deduction() const;
  void clear_left_mirror_deduction();
  static const int kLeftMirrorDeductionFieldNumber = 2;
  ::google::protobuf::int32 left_mirror_deduction() const;
  void set_left_mirror_deduction(::google::protobuf::int32 value);

  // optional string left_mirror_voice = 3;
  bool has_left_mirror_voice() const;
  void clear_left_mirror_voice();
  static const int kLeftMirrorVoiceFieldNumber = 3;
  const ::std::string& left_mirror_voice() const;
  void set_left_mirror_voice(const ::std::string& value);
  void set_left_mirror_voice(const char* value);
  void set_left_mirror_voice(const char* value, size_t size);
  ::std::string* mutable_left_mirror_voice();
  ::std::string* release_left_mirror_voice();
  void set_allocated_left_mirror_voice(::std::string* left_mirror_voice);

  // optional int32 left_mirror_lasting_time = 4;
  bool has_left_mirror_lasting_time() const;
  void clear_left_mirror_lasting_time();
  static const int kLeftMirrorLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 left_mirror_lasting_time() const;
  void set_left_mirror_lasting_time(::google::protobuf::int32 value);

  // optional int32 left_judge_number = 5;
  bool has_left_judge_number() const;
  void clear_left_judge_number();
  static const int kLeftJudgeNumberFieldNumber = 5;
  ::google::protobuf::int32 left_judge_number() const;
  void set_left_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicLeftMirror)
 private:
  inline void set_has_left_mirror_whether_check();
  inline void clear_has_left_mirror_whether_check();
  inline void set_has_left_mirror_deduction();
  inline void clear_has_left_mirror_deduction();
  inline void set_has_left_mirror_voice();
  inline void clear_has_left_mirror_voice();
  inline void set_has_left_mirror_lasting_time();
  inline void clear_has_left_mirror_lasting_time();
  inline void set_has_left_judge_number();
  inline void clear_has_left_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool left_mirror_whether_check_;
  ::google::protobuf::int32 left_mirror_deduction_;
  ::google::protobuf::internal::ArenaStringPtr left_mirror_voice_;
  ::google::protobuf::int32 left_mirror_lasting_time_;
  ::google::protobuf::int32 left_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicLeftMirror* default_instance_;
};
// -------------------------------------------------------------------

class BasicMiddleMirror : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicMiddleMirror) */ {
 public:
  BasicMiddleMirror();
  virtual ~BasicMiddleMirror();

  BasicMiddleMirror(const BasicMiddleMirror& from);

  inline BasicMiddleMirror& operator=(const BasicMiddleMirror& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicMiddleMirror& default_instance();

  void Swap(BasicMiddleMirror* other);

  // implements Message ----------------------------------------------

  inline BasicMiddleMirror* New() const { return New(NULL); }

  BasicMiddleMirror* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicMiddleMirror& from);
  void MergeFrom(const BasicMiddleMirror& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicMiddleMirror* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool middle_mirror_whether_check = 1;
  bool has_middle_mirror_whether_check() const;
  void clear_middle_mirror_whether_check();
  static const int kMiddleMirrorWhetherCheckFieldNumber = 1;
  bool middle_mirror_whether_check() const;
  void set_middle_mirror_whether_check(bool value);

  // optional int32 middle_mirror_deduction = 2;
  bool has_middle_mirror_deduction() const;
  void clear_middle_mirror_deduction();
  static const int kMiddleMirrorDeductionFieldNumber = 2;
  ::google::protobuf::int32 middle_mirror_deduction() const;
  void set_middle_mirror_deduction(::google::protobuf::int32 value);

  // optional string middle_mirror_voice = 3;
  bool has_middle_mirror_voice() const;
  void clear_middle_mirror_voice();
  static const int kMiddleMirrorVoiceFieldNumber = 3;
  const ::std::string& middle_mirror_voice() const;
  void set_middle_mirror_voice(const ::std::string& value);
  void set_middle_mirror_voice(const char* value);
  void set_middle_mirror_voice(const char* value, size_t size);
  ::std::string* mutable_middle_mirror_voice();
  ::std::string* release_middle_mirror_voice();
  void set_allocated_middle_mirror_voice(::std::string* middle_mirror_voice);

  // optional int32 middle_mirror_lasting_time = 4;
  bool has_middle_mirror_lasting_time() const;
  void clear_middle_mirror_lasting_time();
  static const int kMiddleMirrorLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 middle_mirror_lasting_time() const;
  void set_middle_mirror_lasting_time(::google::protobuf::int32 value);

  // optional int32 middle_judge_number = 5;
  bool has_middle_judge_number() const;
  void clear_middle_judge_number();
  static const int kMiddleJudgeNumberFieldNumber = 5;
  ::google::protobuf::int32 middle_judge_number() const;
  void set_middle_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicMiddleMirror)
 private:
  inline void set_has_middle_mirror_whether_check();
  inline void clear_has_middle_mirror_whether_check();
  inline void set_has_middle_mirror_deduction();
  inline void clear_has_middle_mirror_deduction();
  inline void set_has_middle_mirror_voice();
  inline void clear_has_middle_mirror_voice();
  inline void set_has_middle_mirror_lasting_time();
  inline void clear_has_middle_mirror_lasting_time();
  inline void set_has_middle_judge_number();
  inline void clear_has_middle_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool middle_mirror_whether_check_;
  ::google::protobuf::int32 middle_mirror_deduction_;
  ::google::protobuf::internal::ArenaStringPtr middle_mirror_voice_;
  ::google::protobuf::int32 middle_mirror_lasting_time_;
  ::google::protobuf::int32 middle_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicMiddleMirror* default_instance_;
};
// -------------------------------------------------------------------

class BasicRightMirror : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicRightMirror) */ {
 public:
  BasicRightMirror();
  virtual ~BasicRightMirror();

  BasicRightMirror(const BasicRightMirror& from);

  inline BasicRightMirror& operator=(const BasicRightMirror& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicRightMirror& default_instance();

  void Swap(BasicRightMirror* other);

  // implements Message ----------------------------------------------

  inline BasicRightMirror* New() const { return New(NULL); }

  BasicRightMirror* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicRightMirror& from);
  void MergeFrom(const BasicRightMirror& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicRightMirror* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool right_mirror_whether_check = 1;
  bool has_right_mirror_whether_check() const;
  void clear_right_mirror_whether_check();
  static const int kRightMirrorWhetherCheckFieldNumber = 1;
  bool right_mirror_whether_check() const;
  void set_right_mirror_whether_check(bool value);

  // optional int32 right_mirror_deduction = 2;
  bool has_right_mirror_deduction() const;
  void clear_right_mirror_deduction();
  static const int kRightMirrorDeductionFieldNumber = 2;
  ::google::protobuf::int32 right_mirror_deduction() const;
  void set_right_mirror_deduction(::google::protobuf::int32 value);

  // optional string right_mirror_voice = 3;
  bool has_right_mirror_voice() const;
  void clear_right_mirror_voice();
  static const int kRightMirrorVoiceFieldNumber = 3;
  const ::std::string& right_mirror_voice() const;
  void set_right_mirror_voice(const ::std::string& value);
  void set_right_mirror_voice(const char* value);
  void set_right_mirror_voice(const char* value, size_t size);
  ::std::string* mutable_right_mirror_voice();
  ::std::string* release_right_mirror_voice();
  void set_allocated_right_mirror_voice(::std::string* right_mirror_voice);

  // optional int32 right_mirror_lasting_time = 4;
  bool has_right_mirror_lasting_time() const;
  void clear_right_mirror_lasting_time();
  static const int kRightMirrorLastingTimeFieldNumber = 4;
  ::google::protobuf::int32 right_mirror_lasting_time() const;
  void set_right_mirror_lasting_time(::google::protobuf::int32 value);

  // optional int32 right_judge_number = 5;
  bool has_right_judge_number() const;
  void clear_right_judge_number();
  static const int kRightJudgeNumberFieldNumber = 5;
  ::google::protobuf::int32 right_judge_number() const;
  void set_right_judge_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicRightMirror)
 private:
  inline void set_has_right_mirror_whether_check();
  inline void clear_has_right_mirror_whether_check();
  inline void set_has_right_mirror_deduction();
  inline void clear_has_right_mirror_deduction();
  inline void set_has_right_mirror_voice();
  inline void clear_has_right_mirror_voice();
  inline void set_has_right_mirror_lasting_time();
  inline void clear_has_right_mirror_lasting_time();
  inline void set_has_right_judge_number();
  inline void clear_has_right_judge_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool right_mirror_whether_check_;
  ::google::protobuf::int32 right_mirror_deduction_;
  ::google::protobuf::internal::ArenaStringPtr right_mirror_voice_;
  ::google::protobuf::int32 right_mirror_lasting_time_;
  ::google::protobuf::int32 right_judge_number_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicRightMirror* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeDistance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeDistance) */ {
 public:
  ItemJudgeDistance();
  virtual ~ItemJudgeDistance();

  ItemJudgeDistance(const ItemJudgeDistance& from);

  inline ItemJudgeDistance& operator=(const ItemJudgeDistance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeDistance& default_instance();

  void Swap(ItemJudgeDistance* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeDistance* New() const { return New(NULL); }

  ItemJudgeDistance* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeDistance& from);
  void MergeFrom(const ItemJudgeDistance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeDistance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool item_distance_check = 1;
  bool has_item_distance_check() const;
  void clear_item_distance_check();
  static const int kItemDistanceCheckFieldNumber = 1;
  bool item_distance_check() const;
  void set_item_distance_check(bool value);

  // optional int32 item_min_distance = 2;
  bool has_item_min_distance() const;
  void clear_item_min_distance();
  static const int kItemMinDistanceFieldNumber = 2;
  ::google::protobuf::int32 item_min_distance() const;
  void set_item_min_distance(::google::protobuf::int32 value);

  // optional int32 item_max_distance = 3;
  bool has_item_max_distance() const;
  void clear_item_max_distance();
  static const int kItemMaxDistanceFieldNumber = 3;
  ::google::protobuf::int32 item_max_distance() const;
  void set_item_max_distance(::google::protobuf::int32 value);

  // optional int32 item_deduction = 4;
  bool has_item_deduction() const;
  void clear_item_deduction();
  static const int kItemDeductionFieldNumber = 4;
  ::google::protobuf::int32 item_deduction() const;
  void set_item_deduction(::google::protobuf::int32 value);

  // optional string item_deduction_voice = 5;
  bool has_item_deduction_voice() const;
  void clear_item_deduction_voice();
  static const int kItemDeductionVoiceFieldNumber = 5;
  const ::std::string& item_deduction_voice() const;
  void set_item_deduction_voice(const ::std::string& value);
  void set_item_deduction_voice(const char* value);
  void set_item_deduction_voice(const char* value, size_t size);
  ::std::string* mutable_item_deduction_voice();
  ::std::string* release_item_deduction_voice();
  void set_allocated_item_deduction_voice(::std::string* item_deduction_voice);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeDistance)
 private:
  inline void set_has_item_distance_check();
  inline void clear_has_item_distance_check();
  inline void set_has_item_min_distance();
  inline void clear_has_item_min_distance();
  inline void set_has_item_max_distance();
  inline void clear_has_item_max_distance();
  inline void set_has_item_deduction();
  inline void clear_has_item_deduction();
  inline void set_has_item_deduction_voice();
  inline void clear_has_item_deduction_voice();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool item_distance_check_;
  ::google::protobuf::int32 item_min_distance_;
  ::google::protobuf::int32 item_max_distance_;
  ::google::protobuf::int32 item_deduction_;
  ::google::protobuf::internal::ArenaStringPtr item_deduction_voice_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeDistance* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeTime) */ {
 public:
  ItemJudgeTime();
  virtual ~ItemJudgeTime();

  ItemJudgeTime(const ItemJudgeTime& from);

  inline ItemJudgeTime& operator=(const ItemJudgeTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeTime& default_instance();

  void Swap(ItemJudgeTime* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeTime* New() const { return New(NULL); }

  ItemJudgeTime* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeTime& from);
  void MergeFrom(const ItemJudgeTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool item_time_check = 1;
  bool has_item_time_check() const;
  void clear_item_time_check();
  static const int kItemTimeCheckFieldNumber = 1;
  bool item_time_check() const;
  void set_item_time_check(bool value);

  // optional int32 item_min_time = 2;
  bool has_item_min_time() const;
  void clear_item_min_time();
  static const int kItemMinTimeFieldNumber = 2;
  ::google::protobuf::int32 item_min_time() const;
  void set_item_min_time(::google::protobuf::int32 value);

  // optional int32 item_max_time = 3;
  bool has_item_max_time() const;
  void clear_item_max_time();
  static const int kItemMaxTimeFieldNumber = 3;
  ::google::protobuf::int32 item_max_time() const;
  void set_item_max_time(::google::protobuf::int32 value);

  // optional int32 item_deduction = 4;
  bool has_item_deduction() const;
  void clear_item_deduction();
  static const int kItemDeductionFieldNumber = 4;
  ::google::protobuf::int32 item_deduction() const;
  void set_item_deduction(::google::protobuf::int32 value);

  // optional string item_deduction_voice = 5;
  bool has_item_deduction_voice() const;
  void clear_item_deduction_voice();
  static const int kItemDeductionVoiceFieldNumber = 5;
  const ::std::string& item_deduction_voice() const;
  void set_item_deduction_voice(const ::std::string& value);
  void set_item_deduction_voice(const char* value);
  void set_item_deduction_voice(const char* value, size_t size);
  ::std::string* mutable_item_deduction_voice();
  ::std::string* release_item_deduction_voice();
  void set_allocated_item_deduction_voice(::std::string* item_deduction_voice);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeTime)
 private:
  inline void set_has_item_time_check();
  inline void clear_has_item_time_check();
  inline void set_has_item_min_time();
  inline void clear_has_item_min_time();
  inline void set_has_item_max_time();
  inline void clear_has_item_max_time();
  inline void set_has_item_deduction();
  inline void clear_has_item_deduction();
  inline void set_has_item_deduction_voice();
  inline void clear_has_item_deduction_voice();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool item_time_check_;
  ::google::protobuf::int32 item_min_time_;
  ::google::protobuf::int32 item_max_time_;
  ::google::protobuf::int32 item_deduction_;
  ::google::protobuf::internal::ArenaStringPtr item_deduction_voice_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeTime* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeSpeed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeSpeed) */ {
 public:
  ItemJudgeSpeed();
  virtual ~ItemJudgeSpeed();

  ItemJudgeSpeed(const ItemJudgeSpeed& from);

  inline ItemJudgeSpeed& operator=(const ItemJudgeSpeed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeSpeed& default_instance();

  void Swap(ItemJudgeSpeed* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeSpeed* New() const { return New(NULL); }

  ItemJudgeSpeed* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeSpeed& from);
  void MergeFrom(const ItemJudgeSpeed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeSpeed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool item_speed_check = 1;
  bool has_item_speed_check() const;
  void clear_item_speed_check();
  static const int kItemSpeedCheckFieldNumber = 1;
  bool item_speed_check() const;
  void set_item_speed_check(bool value);

  // optional int32 item_min_speed = 2;
  bool has_item_min_speed() const;
  void clear_item_min_speed();
  static const int kItemMinSpeedFieldNumber = 2;
  ::google::protobuf::int32 item_min_speed() const;
  void set_item_min_speed(::google::protobuf::int32 value);

  // optional int32 item_max_speed = 3;
  bool has_item_max_speed() const;
  void clear_item_max_speed();
  static const int kItemMaxSpeedFieldNumber = 3;
  ::google::protobuf::int32 item_max_speed() const;
  void set_item_max_speed(::google::protobuf::int32 value);

  // optional int32 item_deduction = 4;
  bool has_item_deduction() const;
  void clear_item_deduction();
  static const int kItemDeductionFieldNumber = 4;
  ::google::protobuf::int32 item_deduction() const;
  void set_item_deduction(::google::protobuf::int32 value);

  // optional string item_deduction_voice = 5;
  bool has_item_deduction_voice() const;
  void clear_item_deduction_voice();
  static const int kItemDeductionVoiceFieldNumber = 5;
  const ::std::string& item_deduction_voice() const;
  void set_item_deduction_voice(const ::std::string& value);
  void set_item_deduction_voice(const char* value);
  void set_item_deduction_voice(const char* value, size_t size);
  ::std::string* mutable_item_deduction_voice();
  ::std::string* release_item_deduction_voice();
  void set_allocated_item_deduction_voice(::std::string* item_deduction_voice);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeSpeed)
 private:
  inline void set_has_item_speed_check();
  inline void clear_has_item_speed_check();
  inline void set_has_item_min_speed();
  inline void clear_has_item_min_speed();
  inline void set_has_item_max_speed();
  inline void clear_has_item_max_speed();
  inline void set_has_item_deduction();
  inline void clear_has_item_deduction();
  inline void set_has_item_deduction_voice();
  inline void clear_has_item_deduction_voice();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool item_speed_check_;
  ::google::protobuf::int32 item_min_speed_;
  ::google::protobuf::int32 item_max_speed_;
  ::google::protobuf::int32 item_deduction_;
  ::google::protobuf::internal::ArenaStringPtr item_deduction_voice_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeSpeed* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeBasic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeBasic) */ {
 public:
  ItemJudgeBasic();
  virtual ~ItemJudgeBasic();

  ItemJudgeBasic(const ItemJudgeBasic& from);

  inline ItemJudgeBasic& operator=(const ItemJudgeBasic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeBasic& default_instance();

  void Swap(ItemJudgeBasic* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeBasic* New() const { return New(NULL); }

  ItemJudgeBasic* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeBasic& from);
  void MergeFrom(const ItemJudgeBasic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeBasic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OPMessage.BasicSafety basic_safety = 1;
  bool has_basic_safety() const;
  void clear_basic_safety();
  static const int kBasicSafetyFieldNumber = 1;
  const ::OPMessage::BasicSafety& basic_safety() const;
  ::OPMessage::BasicSafety* mutable_basic_safety();
  ::OPMessage::BasicSafety* release_basic_safety();
  void set_allocated_basic_safety(::OPMessage::BasicSafety* basic_safety);

  // optional .OPMessage.BasicDoor basic_door = 2;
  bool has_basic_door() const;
  void clear_basic_door();
  static const int kBasicDoorFieldNumber = 2;
  const ::OPMessage::BasicDoor& basic_door() const;
  ::OPMessage::BasicDoor* mutable_basic_door();
  ::OPMessage::BasicDoor* release_basic_door();
  void set_allocated_basic_door(::OPMessage::BasicDoor* basic_door);

  // optional .OPMessage.BasicFlameout basic_flameout = 3;
  bool has_basic_flameout() const;
  void clear_basic_flameout();
  static const int kBasicFlameoutFieldNumber = 3;
  const ::OPMessage::BasicFlameout& basic_flameout() const;
  ::OPMessage::BasicFlameout* mutable_basic_flameout();
  ::OPMessage::BasicFlameout* release_basic_flameout();
  void set_allocated_basic_flameout(::OPMessage::BasicFlameout* basic_flameout);

  // optional .OPMessage.BasicLeftTurnLamp basic_leftTurnLamp = 4;
  bool has_basic_leftturnlamp() const;
  void clear_basic_leftturnlamp();
  static const int kBasicLeftTurnLampFieldNumber = 4;
  const ::OPMessage::BasicLeftTurnLamp& basic_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_basic_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_basic_leftturnlamp();
  void set_allocated_basic_leftturnlamp(::OPMessage::BasicLeftTurnLamp* basic_leftturnlamp);

  // optional .OPMessage.BasicRightTurnLamp basic_rightTurnLamp = 5;
  bool has_basic_rightturnlamp() const;
  void clear_basic_rightturnlamp();
  static const int kBasicRightTurnLampFieldNumber = 5;
  const ::OPMessage::BasicRightTurnLamp& basic_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_basic_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_basic_rightturnlamp();
  void set_allocated_basic_rightturnlamp(::OPMessage::BasicRightTurnLamp* basic_rightturnlamp);

  // optional .OPMessage.BasicCarStop basic_carStop = 6;
  bool has_basic_carstop() const;
  void clear_basic_carstop();
  static const int kBasicCarStopFieldNumber = 6;
  const ::OPMessage::BasicCarStop& basic_carstop() const;
  ::OPMessage::BasicCarStop* mutable_basic_carstop();
  ::OPMessage::BasicCarStop* release_basic_carstop();
  void set_allocated_basic_carstop(::OPMessage::BasicCarStop* basic_carstop);

  // optional .OPMessage.BasicHandBrake basic_handBrake = 7;
  bool has_basic_handbrake() const;
  void clear_basic_handbrake();
  static const int kBasicHandBrakeFieldNumber = 7;
  const ::OPMessage::BasicHandBrake& basic_handbrake() const;
  ::OPMessage::BasicHandBrake* mutable_basic_handbrake();
  ::OPMessage::BasicHandBrake* release_basic_handbrake();
  void set_allocated_basic_handbrake(::OPMessage::BasicHandBrake* basic_handbrake);

  // optional .OPMessage.BasicTimeout basic_timeout = 8;
  bool has_basic_timeout() const;
  void clear_basic_timeout();
  static const int kBasicTimeoutFieldNumber = 8;
  const ::OPMessage::BasicTimeout& basic_timeout() const;
  ::OPMessage::BasicTimeout* mutable_basic_timeout();
  ::OPMessage::BasicTimeout* release_basic_timeout();
  void set_allocated_basic_timeout(::OPMessage::BasicTimeout* basic_timeout);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeBasic)
 private:
  inline void set_has_basic_safety();
  inline void clear_has_basic_safety();
  inline void set_has_basic_door();
  inline void clear_has_basic_door();
  inline void set_has_basic_flameout();
  inline void clear_has_basic_flameout();
  inline void set_has_basic_leftturnlamp();
  inline void clear_has_basic_leftturnlamp();
  inline void set_has_basic_rightturnlamp();
  inline void clear_has_basic_rightturnlamp();
  inline void set_has_basic_carstop();
  inline void clear_has_basic_carstop();
  inline void set_has_basic_handbrake();
  inline void clear_has_basic_handbrake();
  inline void set_has_basic_timeout();
  inline void clear_has_basic_timeout();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OPMessage::BasicSafety* basic_safety_;
  ::OPMessage::BasicDoor* basic_door_;
  ::OPMessage::BasicFlameout* basic_flameout_;
  ::OPMessage::BasicLeftTurnLamp* basic_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* basic_rightturnlamp_;
  ::OPMessage::BasicCarStop* basic_carstop_;
  ::OPMessage::BasicHandBrake* basic_handbrake_;
  ::OPMessage::BasicTimeout* basic_timeout_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeBasic* default_instance_;
};
// -------------------------------------------------------------------

class GlobalJudgeRule : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.GlobalJudgeRule) */ {
 public:
  GlobalJudgeRule();
  virtual ~GlobalJudgeRule();

  GlobalJudgeRule(const GlobalJudgeRule& from);

  inline GlobalJudgeRule& operator=(const GlobalJudgeRule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalJudgeRule& default_instance();

  void Swap(GlobalJudgeRule* other);

  // implements Message ----------------------------------------------

  inline GlobalJudgeRule* New() const { return New(NULL); }

  GlobalJudgeRule* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalJudgeRule& from);
  void MergeFrom(const GlobalJudgeRule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GlobalJudgeRule* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool run_mode_mn_again_dk_end = 1;
  bool has_run_mode_mn_again_dk_end() const;
  void clear_run_mode_mn_again_dk_end();
  static const int kRunModeMnAgainDkEndFieldNumber = 1;
  bool run_mode_mn_again_dk_end() const;
  void set_run_mode_mn_again_dk_end(bool value);

  // optional bool run_mode_ks_whether_have_second_chance = 2;
  bool has_run_mode_ks_whether_have_second_chance() const;
  void clear_run_mode_ks_whether_have_second_chance();
  static const int kRunModeKsWhetherHaveSecondChanceFieldNumber = 2;
  bool run_mode_ks_whether_have_second_chance() const;
  void set_run_mode_ks_whether_have_second_chance(bool value);

  // optional string round_start_voice = 3;
  bool has_round_start_voice() const;
  void clear_round_start_voice();
  static const int kRoundStartVoiceFieldNumber = 3;
  const ::std::string& round_start_voice() const;
  void set_round_start_voice(const ::std::string& value);
  void set_round_start_voice(const char* value);
  void set_round_start_voice(const char* value, size_t size);
  ::std::string* mutable_round_start_voice();
  ::std::string* release_round_start_voice();
  void set_allocated_round_start_voice(::std::string* round_start_voice);

  // optional string item_finish_pass_voice = 4;
  bool has_item_finish_pass_voice() const;
  void clear_item_finish_pass_voice();
  static const int kItemFinishPassVoiceFieldNumber = 4;
  const ::std::string& item_finish_pass_voice() const;
  void set_item_finish_pass_voice(const ::std::string& value);
  void set_item_finish_pass_voice(const char* value);
  void set_item_finish_pass_voice(const char* value, size_t size);
  ::std::string* mutable_item_finish_pass_voice();
  ::std::string* release_item_finish_pass_voice();
  void set_allocated_item_finish_pass_voice(::std::string* item_finish_pass_voice);

  // optional string item_finish_unpass_voice = 5;
  bool has_item_finish_unpass_voice() const;
  void clear_item_finish_unpass_voice();
  static const int kItemFinishUnpassVoiceFieldNumber = 5;
  const ::std::string& item_finish_unpass_voice() const;
  void set_item_finish_unpass_voice(const ::std::string& value);
  void set_item_finish_unpass_voice(const char* value);
  void set_item_finish_unpass_voice(const char* value, size_t size);
  ::std::string* mutable_item_finish_unpass_voice();
  ::std::string* release_item_finish_unpass_voice();
  void set_allocated_item_finish_unpass_voice(::std::string* item_finish_unpass_voice);

  // optional string round_finish_pass_voice = 6;
  bool has_round_finish_pass_voice() const;
  void clear_round_finish_pass_voice();
  static const int kRoundFinishPassVoiceFieldNumber = 6;
  const ::std::string& round_finish_pass_voice() const;
  void set_round_finish_pass_voice(const ::std::string& value);
  void set_round_finish_pass_voice(const char* value);
  void set_round_finish_pass_voice(const char* value, size_t size);
  ::std::string* mutable_round_finish_pass_voice();
  ::std::string* release_round_finish_pass_voice();
  void set_allocated_round_finish_pass_voice(::std::string* round_finish_pass_voice);

  // optional string round_finish_unpass_voice = 7;
  bool has_round_finish_unpass_voice() const;
  void clear_round_finish_unpass_voice();
  static const int kRoundFinishUnpassVoiceFieldNumber = 7;
  const ::std::string& round_finish_unpass_voice() const;
  void set_round_finish_unpass_voice(const ::std::string& value);
  void set_round_finish_unpass_voice(const char* value);
  void set_round_finish_unpass_voice(const char* value, size_t size);
  ::std::string* mutable_round_finish_unpass_voice();
  ::std::string* release_round_finish_unpass_voice();
  void set_allocated_round_finish_unpass_voice(::std::string* round_finish_unpass_voice);

  // optional string retake_round_start_voice = 8;
  bool has_retake_round_start_voice() const;
  void clear_retake_round_start_voice();
  static const int kRetakeRoundStartVoiceFieldNumber = 8;
  const ::std::string& retake_round_start_voice() const;
  void set_retake_round_start_voice(const ::std::string& value);
  void set_retake_round_start_voice(const char* value);
  void set_retake_round_start_voice(const char* value, size_t size);
  ::std::string* mutable_retake_round_start_voice();
  ::std::string* release_retake_round_start_voice();
  void set_allocated_retake_round_start_voice(::std::string* retake_round_start_voice);

  // optional .OPMessage.enum_judge_retake retake_type = 9;
  bool has_retake_type() const;
  void clear_retake_type();
  static const int kRetakeTypeFieldNumber = 9;
  ::OPMessage::enum_judge_retake retake_type() const;
  void set_retake_type(::OPMessage::enum_judge_retake value);

  // optional string retake_dk_enter_voice = 10;
  bool has_retake_dk_enter_voice() const;
  void clear_retake_dk_enter_voice();
  static const int kRetakeDkEnterVoiceFieldNumber = 10;
  const ::std::string& retake_dk_enter_voice() const;
  void set_retake_dk_enter_voice(const ::std::string& value);
  void set_retake_dk_enter_voice(const char* value);
  void set_retake_dk_enter_voice(const char* value, size_t size);
  ::std::string* mutable_retake_dk_enter_voice();
  ::std::string* release_retake_dk_enter_voice();
  void set_allocated_retake_dk_enter_voice(::std::string* retake_dk_enter_voice);

  // optional .OPMessage.BasicSafety basic_safety = 11;
  bool has_basic_safety() const;
  void clear_basic_safety();
  static const int kBasicSafetyFieldNumber = 11;
  const ::OPMessage::BasicSafety& basic_safety() const;
  ::OPMessage::BasicSafety* mutable_basic_safety();
  ::OPMessage::BasicSafety* release_basic_safety();
  void set_allocated_basic_safety(::OPMessage::BasicSafety* basic_safety);

  // optional .OPMessage.BasicDoor basic_door = 12;
  bool has_basic_door() const;
  void clear_basic_door();
  static const int kBasicDoorFieldNumber = 12;
  const ::OPMessage::BasicDoor& basic_door() const;
  ::OPMessage::BasicDoor* mutable_basic_door();
  ::OPMessage::BasicDoor* release_basic_door();
  void set_allocated_basic_door(::OPMessage::BasicDoor* basic_door);

  // optional .OPMessage.BasicFlameout basic_flameout = 13;
  bool has_basic_flameout() const;
  void clear_basic_flameout();
  static const int kBasicFlameoutFieldNumber = 13;
  const ::OPMessage::BasicFlameout& basic_flameout() const;
  ::OPMessage::BasicFlameout* mutable_basic_flameout();
  ::OPMessage::BasicFlameout* release_basic_flameout();
  void set_allocated_basic_flameout(::OPMessage::BasicFlameout* basic_flameout);

  // optional double max_speed = 14 [default = 50];
  bool has_max_speed() const;
  void clear_max_speed();
  static const int kMaxSpeedFieldNumber = 14;
  double max_speed() const;
  void set_max_speed(double value);

  // optional .OPMessage.BasicFullLine basic_full_line = 15;
  bool has_basic_full_line() const;
  void clear_basic_full_line();
  static const int kBasicFullLineFieldNumber = 15;
  const ::OPMessage::BasicFullLine& basic_full_line() const;
  ::OPMessage::BasicFullLine* mutable_basic_full_line();
  ::OPMessage::BasicFullLine* release_basic_full_line();
  void set_allocated_basic_full_line(::OPMessage::BasicFullLine* basic_full_line);

  // optional .OPMessage.BasicDottedLine basic_dotted_line = 16;
  bool has_basic_dotted_line() const;
  void clear_basic_dotted_line();
  static const int kBasicDottedLineFieldNumber = 16;
  const ::OPMessage::BasicDottedLine& basic_dotted_line() const;
  ::OPMessage::BasicDottedLine* mutable_basic_dotted_line();
  ::OPMessage::BasicDottedLine* release_basic_dotted_line();
  void set_allocated_basic_dotted_line(::OPMessage::BasicDottedLine* basic_dotted_line);

  // optional .OPMessage.BasicLeftTurnLamp longtime_leftTurnLamp = 17;
  bool has_longtime_leftturnlamp() const;
  void clear_longtime_leftturnlamp();
  static const int kLongtimeLeftTurnLampFieldNumber = 17;
  const ::OPMessage::BasicLeftTurnLamp& longtime_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_longtime_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_longtime_leftturnlamp();
  void set_allocated_longtime_leftturnlamp(::OPMessage::BasicLeftTurnLamp* longtime_leftturnlamp);

  // optional .OPMessage.BasicRightTurnLamp longtime_rightTurnLamp = 18;
  bool has_longtime_rightturnlamp() const;
  void clear_longtime_rightturnlamp();
  static const int kLongtimeRightTurnLampFieldNumber = 18;
  const ::OPMessage::BasicRightTurnLamp& longtime_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_longtime_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_longtime_rightturnlamp();
  void set_allocated_longtime_rightturnlamp(::OPMessage::BasicRightTurnLamp* longtime_rightturnlamp);

  // optional .OPMessage.BasicClutch longtime_clutch = 19;
  bool has_longtime_clutch() const;
  void clear_longtime_clutch();
  static const int kLongtimeClutchFieldNumber = 19;
  const ::OPMessage::BasicClutch& longtime_clutch() const;
  ::OPMessage::BasicClutch* mutable_longtime_clutch();
  ::OPMessage::BasicClutch* release_longtime_clutch();
  void set_allocated_longtime_clutch(::OPMessage::BasicClutch* longtime_clutch);

  // optional double min_distance = 20 [default = 2.8];
  bool has_min_distance() const;
  void clear_min_distance();
  static const int kMinDistanceFieldNumber = 20;
  double min_distance() const;
  void set_min_distance(double value);

  // @@protoc_insertion_point(class_scope:OPMessage.GlobalJudgeRule)
 private:
  inline void set_has_run_mode_mn_again_dk_end();
  inline void clear_has_run_mode_mn_again_dk_end();
  inline void set_has_run_mode_ks_whether_have_second_chance();
  inline void clear_has_run_mode_ks_whether_have_second_chance();
  inline void set_has_round_start_voice();
  inline void clear_has_round_start_voice();
  inline void set_has_item_finish_pass_voice();
  inline void clear_has_item_finish_pass_voice();
  inline void set_has_item_finish_unpass_voice();
  inline void clear_has_item_finish_unpass_voice();
  inline void set_has_round_finish_pass_voice();
  inline void clear_has_round_finish_pass_voice();
  inline void set_has_round_finish_unpass_voice();
  inline void clear_has_round_finish_unpass_voice();
  inline void set_has_retake_round_start_voice();
  inline void clear_has_retake_round_start_voice();
  inline void set_has_retake_type();
  inline void clear_has_retake_type();
  inline void set_has_retake_dk_enter_voice();
  inline void clear_has_retake_dk_enter_voice();
  inline void set_has_basic_safety();
  inline void clear_has_basic_safety();
  inline void set_has_basic_door();
  inline void clear_has_basic_door();
  inline void set_has_basic_flameout();
  inline void clear_has_basic_flameout();
  inline void set_has_max_speed();
  inline void clear_has_max_speed();
  inline void set_has_basic_full_line();
  inline void clear_has_basic_full_line();
  inline void set_has_basic_dotted_line();
  inline void clear_has_basic_dotted_line();
  inline void set_has_longtime_leftturnlamp();
  inline void clear_has_longtime_leftturnlamp();
  inline void set_has_longtime_rightturnlamp();
  inline void clear_has_longtime_rightturnlamp();
  inline void set_has_longtime_clutch();
  inline void clear_has_longtime_clutch();
  inline void set_has_min_distance();
  inline void clear_has_min_distance();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr round_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_finish_pass_voice_;
  bool run_mode_mn_again_dk_end_;
  bool run_mode_ks_whether_have_second_chance_;
  int retake_type_;
  ::google::protobuf::internal::ArenaStringPtr item_finish_unpass_voice_;
  ::google::protobuf::internal::ArenaStringPtr round_finish_pass_voice_;
  ::google::protobuf::internal::ArenaStringPtr round_finish_unpass_voice_;
  ::google::protobuf::internal::ArenaStringPtr retake_round_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr retake_dk_enter_voice_;
  ::OPMessage::BasicSafety* basic_safety_;
  ::OPMessage::BasicDoor* basic_door_;
  ::OPMessage::BasicFlameout* basic_flameout_;
  double max_speed_;
  ::OPMessage::BasicFullLine* basic_full_line_;
  ::OPMessage::BasicDottedLine* basic_dotted_line_;
  ::OPMessage::BasicLeftTurnLamp* longtime_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* longtime_rightturnlamp_;
  ::OPMessage::BasicClutch* longtime_clutch_;
  double min_distance_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static GlobalJudgeRule* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleZero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleZero) */ {
 public:
  ItemJudgeRuleZero();
  virtual ~ItemJudgeRuleZero();

  ItemJudgeRuleZero(const ItemJudgeRuleZero& from);

  inline ItemJudgeRuleZero& operator=(const ItemJudgeRuleZero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleZero& default_instance();

  void Swap(ItemJudgeRuleZero* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleZero* New() const { return New(NULL); }

  ItemJudgeRuleZero* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleZero& from);
  void MergeFrom(const ItemJudgeRuleZero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleZero* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  bool has_basic_event_check() const;
  void clear_basic_event_check();
  static const int kBasicEventCheckFieldNumber = 1;
  const ::OPMessage::ItemJudgeBasic& basic_event_check() const;
  ::OPMessage::ItemJudgeBasic* mutable_basic_event_check();
  ::OPMessage::ItemJudgeBasic* release_basic_event_check();
  void set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check);

  // optional string item_enter_voice = 2;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 2;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 3;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 3;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 4;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 4;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 5;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 5;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  bool has_judge_points_type() const;
  void clear_judge_points_type();
  static const int kJudgePointsTypeFieldNumber = 6;
  ::OPMessage::enum_judge_points judge_points_type() const;
  void set_judge_points_type(::OPMessage::enum_judge_points value);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleZero)
 private:
  inline void set_has_basic_event_check();
  inline void clear_has_basic_event_check();
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_judge_points_type();
  inline void clear_has_judge_points_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OPMessage::ItemJudgeBasic* basic_event_check_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  int judge_points_type_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleZero* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleDk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleDk) */ {
 public:
  ItemJudgeRuleDk();
  virtual ~ItemJudgeRuleDk();

  ItemJudgeRuleDk(const ItemJudgeRuleDk& from);

  inline ItemJudgeRuleDk& operator=(const ItemJudgeRuleDk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleDk& default_instance();

  void Swap(ItemJudgeRuleDk* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleDk* New() const { return New(NULL); }

  ItemJudgeRuleDk* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleDk& from);
  void MergeFrom(const ItemJudgeRuleDk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleDk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  bool has_basic_event_check() const;
  void clear_basic_event_check();
  static const int kBasicEventCheckFieldNumber = 1;
  const ::OPMessage::ItemJudgeBasic& basic_event_check() const;
  ::OPMessage::ItemJudgeBasic* mutable_basic_event_check();
  ::OPMessage::ItemJudgeBasic* release_basic_event_check();
  void set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check);

  // optional string item_enter_voice = 2;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 2;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 3;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 3;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 4;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 4;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 5;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 5;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  bool has_judge_points_type() const;
  void clear_judge_points_type();
  static const int kJudgePointsTypeFieldNumber = 6;
  ::OPMessage::enum_judge_points judge_points_type() const;
  void set_judge_points_type(::OPMessage::enum_judge_points value);

  // optional .OPMessage.CheckStartTypeStart check_start_type = 7;
  bool has_check_start_type() const;
  void clear_check_start_type();
  static const int kCheckStartTypeFieldNumber = 7;
  ::OPMessage::CheckStartTypeStart check_start_type() const;
  void set_check_start_type(::OPMessage::CheckStartTypeStart value);

  // optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 8;
  bool has_event_check_leftturnlamp() const;
  void clear_event_check_leftturnlamp();
  static const int kEventCheckLeftTurnLampFieldNumber = 8;
  const ::OPMessage::BasicLeftTurnLamp& event_check_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_event_check_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_event_check_leftturnlamp();
  void set_allocated_event_check_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_leftturnlamp);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleDk)
 private:
  inline void set_has_basic_event_check();
  inline void clear_has_basic_event_check();
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_judge_points_type();
  inline void clear_has_judge_points_type();
  inline void set_has_check_start_type();
  inline void clear_has_check_start_type();
  inline void set_has_event_check_leftturnlamp();
  inline void clear_has_event_check_leftturnlamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OPMessage::ItemJudgeBasic* basic_event_check_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  int judge_points_type_;
  int check_start_type_;
  ::OPMessage::BasicLeftTurnLamp* event_check_leftturnlamp_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleDk* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleShangCheZhunBei : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleShangCheZhunBei) */ {
 public:
  ItemJudgeRuleShangCheZhunBei();
  virtual ~ItemJudgeRuleShangCheZhunBei();

  ItemJudgeRuleShangCheZhunBei(const ItemJudgeRuleShangCheZhunBei& from);

  inline ItemJudgeRuleShangCheZhunBei& operator=(const ItemJudgeRuleShangCheZhunBei& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleShangCheZhunBei& default_instance();

  void Swap(ItemJudgeRuleShangCheZhunBei* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleShangCheZhunBei* New() const { return New(NULL); }

  ItemJudgeRuleShangCheZhunBei* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleShangCheZhunBei& from);
  void MergeFrom(const ItemJudgeRuleShangCheZhunBei& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleShangCheZhunBei* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_start_voice = 1;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 1;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 2;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 2;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.BasicRoundCar basic_roundcar = 3;
  bool has_basic_roundcar() const;
  void clear_basic_roundcar();
  static const int kBasicRoundcarFieldNumber = 3;
  const ::OPMessage::BasicRoundCar& basic_roundcar() const;
  ::OPMessage::BasicRoundCar* mutable_basic_roundcar();
  ::OPMessage::BasicRoundCar* release_basic_roundcar();
  void set_allocated_basic_roundcar(::OPMessage::BasicRoundCar* basic_roundcar);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleShangCheZhunBei)
 private:
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_basic_roundcar();
  inline void clear_has_basic_roundcar();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::BasicRoundCar* basic_roundcar_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleShangCheZhunBei* default_instance_;
};
// -------------------------------------------------------------------

class BasicDengGuangMoNiItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.BasicDengGuangMoNiItem) */ {
 public:
  BasicDengGuangMoNiItem();
  virtual ~BasicDengGuangMoNiItem();

  BasicDengGuangMoNiItem(const BasicDengGuangMoNiItem& from);

  inline BasicDengGuangMoNiItem& operator=(const BasicDengGuangMoNiItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BasicDengGuangMoNiItem& default_instance();

  void Swap(BasicDengGuangMoNiItem* other);

  // implements Message ----------------------------------------------

  inline BasicDengGuangMoNiItem* New() const { return New(NULL); }

  BasicDengGuangMoNiItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BasicDengGuangMoNiItem& from);
  void MergeFrom(const BasicDengGuangMoNiItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BasicDengGuangMoNiItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OPMessage.enum_judge_dengguangmoni_type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::OPMessage::enum_judge_dengguangmoni_type type() const;
  void set_type(::OPMessage::enum_judge_dengguangmoni_type value);

  // optional bool is_participant_judge = 2 [default = true];
  bool has_is_participant_judge() const;
  void clear_is_participant_judge();
  static const int kIsParticipantJudgeFieldNumber = 2;
  bool is_participant_judge() const;
  void set_is_participant_judge(bool value);

  // optional bool is_must_type = 3 [default = true];
  bool has_is_must_type() const;
  void clear_is_must_type();
  static const int kIsMustTypeFieldNumber = 3;
  bool is_must_type() const;
  void set_is_must_type(bool value);

  // optional string tip_voice = 4;
  bool has_tip_voice() const;
  void clear_tip_voice();
  static const int kTipVoiceFieldNumber = 4;
  const ::std::string& tip_voice() const;
  void set_tip_voice(const ::std::string& value);
  void set_tip_voice(const char* value);
  void set_tip_voice(const char* value, size_t size);
  ::std::string* mutable_tip_voice();
  ::std::string* release_tip_voice();
  void set_allocated_tip_voice(::std::string* tip_voice);

  // optional string pass_voice = 5;
  bool has_pass_voice() const;
  void clear_pass_voice();
  static const int kPassVoiceFieldNumber = 5;
  const ::std::string& pass_voice() const;
  void set_pass_voice(const ::std::string& value);
  void set_pass_voice(const char* value);
  void set_pass_voice(const char* value, size_t size);
  ::std::string* mutable_pass_voice();
  ::std::string* release_pass_voice();
  void set_allocated_pass_voice(::std::string* pass_voice);

  // optional int32 deduction = 6;
  bool has_deduction() const;
  void clear_deduction();
  static const int kDeductionFieldNumber = 6;
  ::google::protobuf::int32 deduction() const;
  void set_deduction(::google::protobuf::int32 value);

  // optional int32 time_out = 7;
  bool has_time_out() const;
  void clear_time_out();
  static const int kTimeOutFieldNumber = 7;
  ::google::protobuf::int32 time_out() const;
  void set_time_out(::google::protobuf::int32 value);

  // optional string deduction_voice = 8;
  bool has_deduction_voice() const;
  void clear_deduction_voice();
  static const int kDeductionVoiceFieldNumber = 8;
  const ::std::string& deduction_voice() const;
  void set_deduction_voice(const ::std::string& value);
  void set_deduction_voice(const char* value);
  void set_deduction_voice(const char* value, size_t size);
  ::std::string* mutable_deduction_voice();
  ::std::string* release_deduction_voice();
  void set_allocated_deduction_voice(::std::string* deduction_voice);

  // @@protoc_insertion_point(class_scope:OPMessage.BasicDengGuangMoNiItem)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_is_participant_judge();
  inline void clear_has_is_participant_judge();
  inline void set_has_is_must_type();
  inline void clear_has_is_must_type();
  inline void set_has_tip_voice();
  inline void clear_has_tip_voice();
  inline void set_has_pass_voice();
  inline void clear_has_pass_voice();
  inline void set_has_deduction();
  inline void clear_has_deduction();
  inline void set_has_time_out();
  inline void clear_has_time_out();
  inline void set_has_deduction_voice();
  inline void clear_has_deduction_voice();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  bool is_participant_judge_;
  bool is_must_type_;
  ::google::protobuf::internal::ArenaStringPtr tip_voice_;
  ::google::protobuf::internal::ArenaStringPtr pass_voice_;
  ::google::protobuf::int32 deduction_;
  ::google::protobuf::int32 time_out_;
  ::google::protobuf::internal::ArenaStringPtr deduction_voice_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static BasicDengGuangMoNiItem* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleDengGuangMoNi : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleDengGuangMoNi) */ {
 public:
  ItemJudgeRuleDengGuangMoNi();
  virtual ~ItemJudgeRuleDengGuangMoNi();

  ItemJudgeRuleDengGuangMoNi(const ItemJudgeRuleDengGuangMoNi& from);

  inline ItemJudgeRuleDengGuangMoNi& operator=(const ItemJudgeRuleDengGuangMoNi& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleDengGuangMoNi& default_instance();

  void Swap(ItemJudgeRuleDengGuangMoNi* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleDengGuangMoNi* New() const { return New(NULL); }

  ItemJudgeRuleDengGuangMoNi* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleDengGuangMoNi& from);
  void MergeFrom(const ItemJudgeRuleDengGuangMoNi& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleDengGuangMoNi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_start_voice = 1;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 1;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 2;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 2;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional int32 must_item_count = 3;
  bool has_must_item_count() const;
  void clear_must_item_count();
  static const int kMustItemCountFieldNumber = 3;
  ::google::protobuf::int32 must_item_count() const;
  void set_must_item_count(::google::protobuf::int32 value);

  // optional int32 not_must_item_count = 4;
  bool has_not_must_item_count() const;
  void clear_not_must_item_count();
  static const int kNotMustItemCountFieldNumber = 4;
  ::google::protobuf::int32 not_must_item_count() const;
  void set_not_must_item_count(::google::protobuf::int32 value);

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting = 5;
  bool has_basic_night_no_lamp_poor_lighting() const;
  void clear_basic_night_no_lamp_poor_lighting();
  static const int kBasicNightNoLampPoorLightingFieldNumber = 5;
  const ::OPMessage::BasicDengGuangMoNiItem& basic_night_no_lamp_poor_lighting() const;
  ::OPMessage::BasicDengGuangMoNiItem* mutable_basic_night_no_lamp_poor_lighting();
  ::OPMessage::BasicDengGuangMoNiItem* release_basic_night_no_lamp_poor_lighting();
  void set_allocated_basic_night_no_lamp_poor_lighting(::OPMessage::BasicDengGuangMoNiItem* basic_night_no_lamp_poor_lighting);

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_city = 6;
  bool has_basic_night_no_lamp_poor_lighting_in_city() const;
  void clear_basic_night_no_lamp_poor_lighting_in_city();
  static const int kBasicNightNoLampPoorLightingInCityFieldNumber = 6;
  const ::OPMessage::BasicDengGuangMoNiItem& basic_night_no_lamp_poor_lighting_in_city() const;
  ::OPMessage::BasicDengGuangMoNiItem* mutable_basic_night_no_lamp_poor_lighting_in_city();
  ::OPMessage::BasicDengGuangMoNiItem* release_basic_night_no_lamp_poor_lighting_in_city();
  void set_allocated_basic_night_no_lamp_poor_lighting_in_city(::OPMessage::BasicDengGuangMoNiItem* basic_night_no_lamp_poor_lighting_in_city);

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_close_with_car_same_direction = 7;
  bool has_basic_night_close_with_car_same_direction() const;
  void clear_basic_night_close_with_car_same_direction();
  static const int kBasicNightCloseWithCarSameDirectionFieldNumber = 7;
  const ::OPMessage::BasicDengGuangMoNiItem& basic_night_close_with_car_same_direction() const;
  ::OPMessage::BasicDengGuangMoNiItem* mutable_basic_night_close_with_car_same_direction();
  ::OPMessage::BasicDengGuangMoNiItem* release_basic_night_close_with_car_same_direction();
  void set_allocated_basic_night_close_with_car_same_direction(::OPMessage::BasicDengGuangMoNiItem* basic_night_close_with_car_same_direction);

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_suburban = 8;
  bool has_basic_night_no_lamp_poor_lighting_in_suburban() const;
  void clear_basic_night_no_lamp_poor_lighting_in_suburban();
  static const int kBasicNightNoLampPoorLightingInSuburbanFieldNumber = 8;
  const ::OPMessage::BasicDengGuangMoNiItem& basic_night_no_lamp_poor_lighting_in_suburban() const;
  ::OPMessage::BasicDengGuangMoNiItem* mutable_basic_night_no_lamp_poor_lighting_in_suburban();
  ::OPMessage::BasicDengGuangMoNiItem* release_basic_night_no_lamp_poor_lighting_in_suburban();
  void set_allocated_basic_night_no_lamp_poor_lighting_in_suburban(::OPMessage::BasicDengGuangMoNiItem* basic_night_no_lamp_poor_lighting_in_suburban);

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_curve_ramp_bridge = 9;
  bool has_basic_night_through_curve_ramp_bridge() const;
  void clear_basic_night_through_curve_ramp_bridge();
  static const int kBasicNightThroughCurveRampBridgeFieldNumber = 9;
  const ::OPMessage::BasicDengGuangMoNiItem& basic_night_through_curve_ramp_bridge() const;
  ::OPMessage::BasicDengGuangMoNiItem* mutable_basic_night_through_curve_ramp_bridge();
  ::OPMessage::BasicDengGuangMoNiItem* release_basic_night_through_curve_ramp_bridge();
  void set_allocated_basic_night_through_curve_ramp_bridge(::OPMessage::BasicDengGuangMoNiItem* basic_night_through_curve_ramp_bridge);

  // optional .OPMessage.BasicDengGuangMoNiItem basic_fog_driving = 10;
  bool has_basic_fog_driving() const;
  void clear_basic_fog_driving();
  static const int kBasicFogDrivingFieldNumber = 10;
  const ::OPMessage::BasicDengGuangMoNiItem& basic_fog_driving() const;
  ::OPMessage::BasicDengGuangMoNiItem* mutable_basic_fog_driving();
  ::OPMessage::BasicDengGuangMoNiItem* release_basic_fog_driving();
  void set_allocated_basic_fog_driving(::OPMessage::BasicDengGuangMoNiItem* basic_fog_driving);

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_in_narrow_road = 11;
  bool has_basic_night_passing_in_narrow_road() const;
  void clear_basic_night_passing_in_narrow_road();
  static const int kBasicNightPassingInNarrowRoadFieldNumber = 11;
  const ::OPMessage::BasicDengGuangMoNiItem& basic_night_passing_in_narrow_road() const;
  ::OPMessage::BasicDengGuangMoNiItem* mutable_basic_night_passing_in_narrow_road();
  ::OPMessage::BasicDengGuangMoNiItem* release_basic_night_passing_in_narrow_road();
  void set_allocated_basic_night_passing_in_narrow_road(::OPMessage::BasicDengGuangMoNiItem* basic_night_passing_in_narrow_road);

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_nearly_150_other_car = 12;
  bool has_basic_night_passing_nearly_150_other_car() const;
  void clear_basic_night_passing_nearly_150_other_car();
  static const int kBasicNightPassingNearly150OtherCarFieldNumber = 12;
  const ::OPMessage::BasicDengGuangMoNiItem& basic_night_passing_nearly_150_other_car() const;
  ::OPMessage::BasicDengGuangMoNiItem* mutable_basic_night_passing_nearly_150_other_car();
  ::OPMessage::BasicDengGuangMoNiItem* release_basic_night_passing_nearly_150_other_car();
  void set_allocated_basic_night_passing_nearly_150_other_car(::OPMessage::BasicDengGuangMoNiItem* basic_night_passing_nearly_150_other_car);

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_car_road_down = 13;
  bool has_basic_night_car_road_down() const;
  void clear_basic_night_car_road_down();
  static const int kBasicNightCarRoadDownFieldNumber = 13;
  const ::OPMessage::BasicDengGuangMoNiItem& basic_night_car_road_down() const;
  ::OPMessage::BasicDengGuangMoNiItem* mutable_basic_night_car_road_down();
  ::OPMessage::BasicDengGuangMoNiItem* release_basic_night_car_road_down();
  void set_allocated_basic_night_car_road_down(::OPMessage::BasicDengGuangMoNiItem* basic_night_car_road_down);

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_no_traffic_signal_road = 14;
  bool has_basic_night_through_no_traffic_signal_road() const;
  void clear_basic_night_through_no_traffic_signal_road();
  static const int kBasicNightThroughNoTrafficSignalRoadFieldNumber = 14;
  const ::OPMessage::BasicDengGuangMoNiItem& basic_night_through_no_traffic_signal_road() const;
  ::OPMessage::BasicDengGuangMoNiItem* mutable_basic_night_through_no_traffic_signal_road();
  ::OPMessage::BasicDengGuangMoNiItem* release_basic_night_through_no_traffic_signal_road();
  void set_allocated_basic_night_through_no_traffic_signal_road(::OPMessage::BasicDengGuangMoNiItem* basic_night_through_no_traffic_signal_road);

  // optional .OPMessage.BasicDengGuangMoNiItem basic_simulation_test_done_close_all_light = 15;
  bool has_basic_simulation_test_done_close_all_light() const;
  void clear_basic_simulation_test_done_close_all_light();
  static const int kBasicSimulationTestDoneCloseAllLightFieldNumber = 15;
  const ::OPMessage::BasicDengGuangMoNiItem& basic_simulation_test_done_close_all_light() const;
  ::OPMessage::BasicDengGuangMoNiItem* mutable_basic_simulation_test_done_close_all_light();
  ::OPMessage::BasicDengGuangMoNiItem* release_basic_simulation_test_done_close_all_light();
  void set_allocated_basic_simulation_test_done_close_all_light(::OPMessage::BasicDengGuangMoNiItem* basic_simulation_test_done_close_all_light);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleDengGuangMoNi)
 private:
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_must_item_count();
  inline void clear_has_must_item_count();
  inline void set_has_not_must_item_count();
  inline void clear_has_not_must_item_count();
  inline void set_has_basic_night_no_lamp_poor_lighting();
  inline void clear_has_basic_night_no_lamp_poor_lighting();
  inline void set_has_basic_night_no_lamp_poor_lighting_in_city();
  inline void clear_has_basic_night_no_lamp_poor_lighting_in_city();
  inline void set_has_basic_night_close_with_car_same_direction();
  inline void clear_has_basic_night_close_with_car_same_direction();
  inline void set_has_basic_night_no_lamp_poor_lighting_in_suburban();
  inline void clear_has_basic_night_no_lamp_poor_lighting_in_suburban();
  inline void set_has_basic_night_through_curve_ramp_bridge();
  inline void clear_has_basic_night_through_curve_ramp_bridge();
  inline void set_has_basic_fog_driving();
  inline void clear_has_basic_fog_driving();
  inline void set_has_basic_night_passing_in_narrow_road();
  inline void clear_has_basic_night_passing_in_narrow_road();
  inline void set_has_basic_night_passing_nearly_150_other_car();
  inline void clear_has_basic_night_passing_nearly_150_other_car();
  inline void set_has_basic_night_car_road_down();
  inline void clear_has_basic_night_car_road_down();
  inline void set_has_basic_night_through_no_traffic_signal_road();
  inline void clear_has_basic_night_through_no_traffic_signal_road();
  inline void set_has_basic_simulation_test_done_close_all_light();
  inline void clear_has_basic_simulation_test_done_close_all_light();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::google::protobuf::int32 must_item_count_;
  ::google::protobuf::int32 not_must_item_count_;
  ::OPMessage::BasicDengGuangMoNiItem* basic_night_no_lamp_poor_lighting_;
  ::OPMessage::BasicDengGuangMoNiItem* basic_night_no_lamp_poor_lighting_in_city_;
  ::OPMessage::BasicDengGuangMoNiItem* basic_night_close_with_car_same_direction_;
  ::OPMessage::BasicDengGuangMoNiItem* basic_night_no_lamp_poor_lighting_in_suburban_;
  ::OPMessage::BasicDengGuangMoNiItem* basic_night_through_curve_ramp_bridge_;
  ::OPMessage::BasicDengGuangMoNiItem* basic_fog_driving_;
  ::OPMessage::BasicDengGuangMoNiItem* basic_night_passing_in_narrow_road_;
  ::OPMessage::BasicDengGuangMoNiItem* basic_night_passing_nearly_150_other_car_;
  ::OPMessage::BasicDengGuangMoNiItem* basic_night_car_road_down_;
  ::OPMessage::BasicDengGuangMoNiItem* basic_night_through_no_traffic_signal_road_;
  ::OPMessage::BasicDengGuangMoNiItem* basic_simulation_test_done_close_all_light_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleDengGuangMoNi* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleQiBu : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleQiBu) */ {
 public:
  ItemJudgeRuleQiBu();
  virtual ~ItemJudgeRuleQiBu();

  ItemJudgeRuleQiBu(const ItemJudgeRuleQiBu& from);

  inline ItemJudgeRuleQiBu& operator=(const ItemJudgeRuleQiBu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleQiBu& default_instance();

  void Swap(ItemJudgeRuleQiBu* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleQiBu* New() const { return New(NULL); }

  ItemJudgeRuleQiBu* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleQiBu& from);
  void MergeFrom(const ItemJudgeRuleQiBu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleQiBu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_start_voice = 1;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 1;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 2;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 2;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.BasicLeftTurnLamp basic_leftturnlamp = 3;
  bool has_basic_leftturnlamp() const;
  void clear_basic_leftturnlamp();
  static const int kBasicLeftturnlampFieldNumber = 3;
  const ::OPMessage::BasicLeftTurnLamp& basic_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_basic_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_basic_leftturnlamp();
  void set_allocated_basic_leftturnlamp(::OPMessage::BasicLeftTurnLamp* basic_leftturnlamp);

  // optional .OPMessage.BasicDoor basic_door = 4;
  bool has_basic_door() const;
  void clear_basic_door();
  static const int kBasicDoorFieldNumber = 4;
  const ::OPMessage::BasicDoor& basic_door() const;
  ::OPMessage::BasicDoor* mutable_basic_door();
  ::OPMessage::BasicDoor* release_basic_door();
  void set_allocated_basic_door(::OPMessage::BasicDoor* basic_door);

  // optional .OPMessage.BasicHorn basic_horn = 5;
  bool has_basic_horn() const;
  void clear_basic_horn();
  static const int kBasicHornFieldNumber = 5;
  const ::OPMessage::BasicHorn& basic_horn() const;
  ::OPMessage::BasicHorn* mutable_basic_horn();
  ::OPMessage::BasicHorn* release_basic_horn();
  void set_allocated_basic_horn(::OPMessage::BasicHorn* basic_horn);

  // optional .OPMessage.BasicFireUp basic_fireup = 6;
  bool has_basic_fireup() const;
  void clear_basic_fireup();
  static const int kBasicFireupFieldNumber = 6;
  const ::OPMessage::BasicFireUp& basic_fireup() const;
  ::OPMessage::BasicFireUp* mutable_basic_fireup();
  ::OPMessage::BasicFireUp* release_basic_fireup();
  void set_allocated_basic_fireup(::OPMessage::BasicFireUp* basic_fireup);

  // optional .OPMessage.BasicSeat basic_seat = 7;
  bool has_basic_seat() const;
  void clear_basic_seat();
  static const int kBasicSeatFieldNumber = 7;
  const ::OPMessage::BasicSeat& basic_seat() const;
  ::OPMessage::BasicSeat* mutable_basic_seat();
  ::OPMessage::BasicSeat* release_basic_seat();
  void set_allocated_basic_seat(::OPMessage::BasicSeat* basic_seat);

  // optional .OPMessage.BasicLeftMirror basic_left_mirror = 8;
  bool has_basic_left_mirror() const;
  void clear_basic_left_mirror();
  static const int kBasicLeftMirrorFieldNumber = 8;
  const ::OPMessage::BasicLeftMirror& basic_left_mirror() const;
  ::OPMessage::BasicLeftMirror* mutable_basic_left_mirror();
  ::OPMessage::BasicLeftMirror* release_basic_left_mirror();
  void set_allocated_basic_left_mirror(::OPMessage::BasicLeftMirror* basic_left_mirror);

  // optional .OPMessage.BasicMiddleMirror basic_middle_mirror = 9;
  bool has_basic_middle_mirror() const;
  void clear_basic_middle_mirror();
  static const int kBasicMiddleMirrorFieldNumber = 9;
  const ::OPMessage::BasicMiddleMirror& basic_middle_mirror() const;
  ::OPMessage::BasicMiddleMirror* mutable_basic_middle_mirror();
  ::OPMessage::BasicMiddleMirror* release_basic_middle_mirror();
  void set_allocated_basic_middle_mirror(::OPMessage::BasicMiddleMirror* basic_middle_mirror);

  // optional .OPMessage.BasicRightMirror basic_right_mirror = 10;
  bool has_basic_right_mirror() const;
  void clear_basic_right_mirror();
  static const int kBasicRightMirrorFieldNumber = 10;
  const ::OPMessage::BasicRightMirror& basic_right_mirror() const;
  ::OPMessage::BasicRightMirror* mutable_basic_right_mirror();
  ::OPMessage::BasicRightMirror* release_basic_right_mirror();
  void set_allocated_basic_right_mirror(::OPMessage::BasicRightMirror* basic_right_mirror);

  // optional bool car_hl_whether_check = 11 [default = true];
  bool has_car_hl_whether_check() const;
  void clear_car_hl_whether_check();
  static const int kCarHlWhetherCheckFieldNumber = 11;
  bool car_hl_whether_check() const;
  void set_car_hl_whether_check(bool value);

  // optional string car_hl_distance_more_30cm_voice = 12;
  bool has_car_hl_distance_more_30cm_voice() const;
  void clear_car_hl_distance_more_30cm_voice();
  static const int kCarHlDistanceMore30CmVoiceFieldNumber = 12;
  const ::std::string& car_hl_distance_more_30cm_voice() const;
  void set_car_hl_distance_more_30cm_voice(const ::std::string& value);
  void set_car_hl_distance_more_30cm_voice(const char* value);
  void set_car_hl_distance_more_30cm_voice(const char* value, size_t size);
  ::std::string* mutable_car_hl_distance_more_30cm_voice();
  ::std::string* release_car_hl_distance_more_30cm_voice();
  void set_allocated_car_hl_distance_more_30cm_voice(::std::string* car_hl_distance_more_30cm_voice);

  // optional int32 car_hl_distance_more_30cm_deduction = 13;
  bool has_car_hl_distance_more_30cm_deduction() const;
  void clear_car_hl_distance_more_30cm_deduction();
  static const int kCarHlDistanceMore30CmDeductionFieldNumber = 13;
  ::google::protobuf::int32 car_hl_distance_more_30cm_deduction() const;
  void set_car_hl_distance_more_30cm_deduction(::google::protobuf::int32 value);

  // optional string car_hl_distance_less_30cm_voice = 14;
  bool has_car_hl_distance_less_30cm_voice() const;
  void clear_car_hl_distance_less_30cm_voice();
  static const int kCarHlDistanceLess30CmVoiceFieldNumber = 14;
  const ::std::string& car_hl_distance_less_30cm_voice() const;
  void set_car_hl_distance_less_30cm_voice(const ::std::string& value);
  void set_car_hl_distance_less_30cm_voice(const char* value);
  void set_car_hl_distance_less_30cm_voice(const char* value, size_t size);
  ::std::string* mutable_car_hl_distance_less_30cm_voice();
  ::std::string* release_car_hl_distance_less_30cm_voice();
  void set_allocated_car_hl_distance_less_30cm_voice(::std::string* car_hl_distance_less_30cm_voice);

  // optional int32 car_hl_distance_less_30cm_deduction = 15;
  bool has_car_hl_distance_less_30cm_deduction() const;
  void clear_car_hl_distance_less_30cm_deduction();
  static const int kCarHlDistanceLess30CmDeductionFieldNumber = 15;
  ::google::protobuf::int32 car_hl_distance_less_30cm_deduction() const;
  void set_car_hl_distance_less_30cm_deduction(::google::protobuf::int32 value);

  // optional bool car_handbrake_whether_check = 16 [default = true];
  bool has_car_handbrake_whether_check() const;
  void clear_car_handbrake_whether_check();
  static const int kCarHandbrakeWhetherCheckFieldNumber = 16;
  bool car_handbrake_whether_check() const;
  void set_car_handbrake_whether_check(bool value);

  // optional int32 car_handbrake_more_distance = 17;
  bool has_car_handbrake_more_distance() const;
  void clear_car_handbrake_more_distance();
  static const int kCarHandbrakeMoreDistanceFieldNumber = 17;
  ::google::protobuf::int32 car_handbrake_more_distance() const;
  void set_car_handbrake_more_distance(::google::protobuf::int32 value);

  // optional string car_handbrake_more_voice = 18;
  bool has_car_handbrake_more_voice() const;
  void clear_car_handbrake_more_voice();
  static const int kCarHandbrakeMoreVoiceFieldNumber = 18;
  const ::std::string& car_handbrake_more_voice() const;
  void set_car_handbrake_more_voice(const ::std::string& value);
  void set_car_handbrake_more_voice(const char* value);
  void set_car_handbrake_more_voice(const char* value, size_t size);
  ::std::string* mutable_car_handbrake_more_voice();
  ::std::string* release_car_handbrake_more_voice();
  void set_allocated_car_handbrake_more_voice(::std::string* car_handbrake_more_voice);

  // optional int32 car_handbrake_more_deduction = 19;
  bool has_car_handbrake_more_deduction() const;
  void clear_car_handbrake_more_deduction();
  static const int kCarHandbrakeMoreDeductionFieldNumber = 19;
  ::google::protobuf::int32 car_handbrake_more_deduction() const;
  void set_car_handbrake_more_deduction(::google::protobuf::int32 value);

  // optional int32 car_handbrake_less_distance = 20;
  bool has_car_handbrake_less_distance() const;
  void clear_car_handbrake_less_distance();
  static const int kCarHandbrakeLessDistanceFieldNumber = 20;
  ::google::protobuf::int32 car_handbrake_less_distance() const;
  void set_car_handbrake_less_distance(::google::protobuf::int32 value);

  // optional string car_handbrake_less_voice = 21;
  bool has_car_handbrake_less_voice() const;
  void clear_car_handbrake_less_voice();
  static const int kCarHandbrakeLessVoiceFieldNumber = 21;
  const ::std::string& car_handbrake_less_voice() const;
  void set_car_handbrake_less_voice(const ::std::string& value);
  void set_car_handbrake_less_voice(const char* value);
  void set_car_handbrake_less_voice(const char* value, size_t size);
  ::std::string* mutable_car_handbrake_less_voice();
  ::std::string* release_car_handbrake_less_voice();
  void set_allocated_car_handbrake_less_voice(::std::string* car_handbrake_less_voice);

  // optional int32 car_handbrake_less_deduction = 22;
  bool has_car_handbrake_less_deduction() const;
  void clear_car_handbrake_less_deduction();
  static const int kCarHandbrakeLessDeductionFieldNumber = 22;
  ::google::protobuf::int32 car_handbrake_less_deduction() const;
  void set_car_handbrake_less_deduction(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleQiBu)
 private:
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_basic_leftturnlamp();
  inline void clear_has_basic_leftturnlamp();
  inline void set_has_basic_door();
  inline void clear_has_basic_door();
  inline void set_has_basic_horn();
  inline void clear_has_basic_horn();
  inline void set_has_basic_fireup();
  inline void clear_has_basic_fireup();
  inline void set_has_basic_seat();
  inline void clear_has_basic_seat();
  inline void set_has_basic_left_mirror();
  inline void clear_has_basic_left_mirror();
  inline void set_has_basic_middle_mirror();
  inline void clear_has_basic_middle_mirror();
  inline void set_has_basic_right_mirror();
  inline void clear_has_basic_right_mirror();
  inline void set_has_car_hl_whether_check();
  inline void clear_has_car_hl_whether_check();
  inline void set_has_car_hl_distance_more_30cm_voice();
  inline void clear_has_car_hl_distance_more_30cm_voice();
  inline void set_has_car_hl_distance_more_30cm_deduction();
  inline void clear_has_car_hl_distance_more_30cm_deduction();
  inline void set_has_car_hl_distance_less_30cm_voice();
  inline void clear_has_car_hl_distance_less_30cm_voice();
  inline void set_has_car_hl_distance_less_30cm_deduction();
  inline void clear_has_car_hl_distance_less_30cm_deduction();
  inline void set_has_car_handbrake_whether_check();
  inline void clear_has_car_handbrake_whether_check();
  inline void set_has_car_handbrake_more_distance();
  inline void clear_has_car_handbrake_more_distance();
  inline void set_has_car_handbrake_more_voice();
  inline void clear_has_car_handbrake_more_voice();
  inline void set_has_car_handbrake_more_deduction();
  inline void clear_has_car_handbrake_more_deduction();
  inline void set_has_car_handbrake_less_distance();
  inline void clear_has_car_handbrake_less_distance();
  inline void set_has_car_handbrake_less_voice();
  inline void clear_has_car_handbrake_less_voice();
  inline void set_has_car_handbrake_less_deduction();
  inline void clear_has_car_handbrake_less_deduction();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::BasicLeftTurnLamp* basic_leftturnlamp_;
  ::OPMessage::BasicDoor* basic_door_;
  ::OPMessage::BasicHorn* basic_horn_;
  ::OPMessage::BasicFireUp* basic_fireup_;
  ::OPMessage::BasicSeat* basic_seat_;
  ::OPMessage::BasicLeftMirror* basic_left_mirror_;
  ::OPMessage::BasicMiddleMirror* basic_middle_mirror_;
  ::OPMessage::BasicRightMirror* basic_right_mirror_;
  ::google::protobuf::internal::ArenaStringPtr car_hl_distance_more_30cm_voice_;
  ::google::protobuf::int32 car_hl_distance_more_30cm_deduction_;
  bool car_hl_whether_check_;
  bool car_handbrake_whether_check_;
  ::google::protobuf::internal::ArenaStringPtr car_hl_distance_less_30cm_voice_;
  ::google::protobuf::int32 car_hl_distance_less_30cm_deduction_;
  ::google::protobuf::int32 car_handbrake_more_distance_;
  ::google::protobuf::internal::ArenaStringPtr car_handbrake_more_voice_;
  ::google::protobuf::int32 car_handbrake_more_deduction_;
  ::google::protobuf::int32 car_handbrake_less_distance_;
  ::google::protobuf::internal::ArenaStringPtr car_handbrake_less_voice_;
  ::google::protobuf::int32 car_handbrake_less_deduction_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleQiBu* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleKaoBianTingChe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleKaoBianTingChe) */ {
 public:
  ItemJudgeRuleKaoBianTingChe();
  virtual ~ItemJudgeRuleKaoBianTingChe();

  ItemJudgeRuleKaoBianTingChe(const ItemJudgeRuleKaoBianTingChe& from);

  inline ItemJudgeRuleKaoBianTingChe& operator=(const ItemJudgeRuleKaoBianTingChe& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleKaoBianTingChe& default_instance();

  void Swap(ItemJudgeRuleKaoBianTingChe* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleKaoBianTingChe* New() const { return New(NULL); }

  ItemJudgeRuleKaoBianTingChe* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleKaoBianTingChe& from);
  void MergeFrom(const ItemJudgeRuleKaoBianTingChe& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleKaoBianTingChe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_start_voice = 1;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 1;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 2;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 2;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.BasicRightTurnLamp basic_rightturnlamp = 3;
  bool has_basic_rightturnlamp() const;
  void clear_basic_rightturnlamp();
  static const int kBasicRightturnlampFieldNumber = 3;
  const ::OPMessage::BasicRightTurnLamp& basic_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_basic_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_basic_rightturnlamp();
  void set_allocated_basic_rightturnlamp(::OPMessage::BasicRightTurnLamp* basic_rightturnlamp);

  // optional .OPMessage.BasicFlameout basic_flameout = 4;
  bool has_basic_flameout() const;
  void clear_basic_flameout();
  static const int kBasicFlameoutFieldNumber = 4;
  const ::OPMessage::BasicFlameout& basic_flameout() const;
  ::OPMessage::BasicFlameout* mutable_basic_flameout();
  ::OPMessage::BasicFlameout* release_basic_flameout();
  void set_allocated_basic_flameout(::OPMessage::BasicFlameout* basic_flameout);

  // optional .OPMessage.BasicDoor basic_door = 5;
  bool has_basic_door() const;
  void clear_basic_door();
  static const int kBasicDoorFieldNumber = 5;
  const ::OPMessage::BasicDoor& basic_door() const;
  ::OPMessage::BasicDoor* mutable_basic_door();
  ::OPMessage::BasicDoor* release_basic_door();
  void set_allocated_basic_door(::OPMessage::BasicDoor* basic_door);

  // optional bool limit_complete_distance_whether_check = 6 [default = true];
  bool has_limit_complete_distance_whether_check() const;
  void clear_limit_complete_distance_whether_check();
  static const int kLimitCompleteDistanceWhetherCheckFieldNumber = 6;
  bool limit_complete_distance_whether_check() const;
  void set_limit_complete_distance_whether_check(bool value);

  // optional int32 limit_complete_distance = 7;
  bool has_limit_complete_distance() const;
  void clear_limit_complete_distance();
  static const int kLimitCompleteDistanceFieldNumber = 7;
  ::google::protobuf::int32 limit_complete_distance() const;
  void set_limit_complete_distance(::google::protobuf::int32 value);

  // optional string limit_complete_distance_voice = 8;
  bool has_limit_complete_distance_voice() const;
  void clear_limit_complete_distance_voice();
  static const int kLimitCompleteDistanceVoiceFieldNumber = 8;
  const ::std::string& limit_complete_distance_voice() const;
  void set_limit_complete_distance_voice(const ::std::string& value);
  void set_limit_complete_distance_voice(const char* value);
  void set_limit_complete_distance_voice(const char* value, size_t size);
  ::std::string* mutable_limit_complete_distance_voice();
  ::std::string* release_limit_complete_distance_voice();
  void set_allocated_limit_complete_distance_voice(::std::string* limit_complete_distance_voice);

  // optional int32 limit_complete_distance_deduction = 9;
  bool has_limit_complete_distance_deduction() const;
  void clear_limit_complete_distance_deduction();
  static const int kLimitCompleteDistanceDeductionFieldNumber = 9;
  ::google::protobuf::int32 limit_complete_distance_deduction() const;
  void set_limit_complete_distance_deduction(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleKaoBianTingChe)
 private:
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_basic_rightturnlamp();
  inline void clear_has_basic_rightturnlamp();
  inline void set_has_basic_flameout();
  inline void clear_has_basic_flameout();
  inline void set_has_basic_door();
  inline void clear_has_basic_door();
  inline void set_has_limit_complete_distance_whether_check();
  inline void clear_has_limit_complete_distance_whether_check();
  inline void set_has_limit_complete_distance();
  inline void clear_has_limit_complete_distance();
  inline void set_has_limit_complete_distance_voice();
  inline void clear_has_limit_complete_distance_voice();
  inline void set_has_limit_complete_distance_deduction();
  inline void clear_has_limit_complete_distance_deduction();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::BasicRightTurnLamp* basic_rightturnlamp_;
  ::OPMessage::BasicFlameout* basic_flameout_;
  ::OPMessage::BasicDoor* basic_door_;
  bool limit_complete_distance_whether_check_;
  ::google::protobuf::int32 limit_complete_distance_;
  ::google::protobuf::internal::ArenaStringPtr limit_complete_distance_voice_;
  ::google::protobuf::int32 limit_complete_distance_deduction_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleKaoBianTingChe* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleXueXiaoQuYu : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleXueXiaoQuYu) */ {
 public:
  ItemJudgeRuleXueXiaoQuYu();
  virtual ~ItemJudgeRuleXueXiaoQuYu();

  ItemJudgeRuleXueXiaoQuYu(const ItemJudgeRuleXueXiaoQuYu& from);

  inline ItemJudgeRuleXueXiaoQuYu& operator=(const ItemJudgeRuleXueXiaoQuYu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleXueXiaoQuYu& default_instance();

  void Swap(ItemJudgeRuleXueXiaoQuYu* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleXueXiaoQuYu* New() const { return New(NULL); }

  ItemJudgeRuleXueXiaoQuYu* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleXueXiaoQuYu& from);
  void MergeFrom(const ItemJudgeRuleXueXiaoQuYu& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleXueXiaoQuYu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_enter_voice = 1;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 1;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 2;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 2;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 3;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 3;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 4;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 4;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.CheckFinishCarPositionXueXiaoQuYu check_finish_type = 5;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 5;
  ::OPMessage::CheckFinishCarPositionXueXiaoQuYu check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionXueXiaoQuYu value);

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  bool has_basic_slowdown() const;
  void clear_basic_slowdown();
  static const int kBasicSlowdownFieldNumber = 6;
  const ::OPMessage::BasicSlowDown& basic_slowdown() const;
  ::OPMessage::BasicSlowDown* mutable_basic_slowdown();
  ::OPMessage::BasicSlowDown* release_basic_slowdown();
  void set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleXueXiaoQuYu)
 private:
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_basic_slowdown();
  inline void clear_has_basic_slowdown();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::BasicSlowDown* basic_slowdown_;
  int check_finish_type_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleXueXiaoQuYu* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleLuKouZuoZhuan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleLuKouZuoZhuan) */ {
 public:
  ItemJudgeRuleLuKouZuoZhuan();
  virtual ~ItemJudgeRuleLuKouZuoZhuan();

  ItemJudgeRuleLuKouZuoZhuan(const ItemJudgeRuleLuKouZuoZhuan& from);

  inline ItemJudgeRuleLuKouZuoZhuan& operator=(const ItemJudgeRuleLuKouZuoZhuan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleLuKouZuoZhuan& default_instance();

  void Swap(ItemJudgeRuleLuKouZuoZhuan* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleLuKouZuoZhuan* New() const { return New(NULL); }

  ItemJudgeRuleLuKouZuoZhuan* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleLuKouZuoZhuan& from);
  void MergeFrom(const ItemJudgeRuleLuKouZuoZhuan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleLuKouZuoZhuan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_enter_voice = 1;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 1;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 2;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 2;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 3;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 3;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 4;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 4;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.CheckFinishCarPositionLuKouZuoZhuan check_finish_type = 5;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 5;
  ::OPMessage::CheckFinishCarPositionLuKouZuoZhuan check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionLuKouZuoZhuan value);

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  bool has_basic_slowdown() const;
  void clear_basic_slowdown();
  static const int kBasicSlowdownFieldNumber = 6;
  const ::OPMessage::BasicSlowDown& basic_slowdown() const;
  ::OPMessage::BasicSlowDown* mutable_basic_slowdown();
  ::OPMessage::BasicSlowDown* release_basic_slowdown();
  void set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown);

  // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 7;
  bool has_item_leftturnlamp() const;
  void clear_item_leftturnlamp();
  static const int kItemLeftturnlampFieldNumber = 7;
  const ::OPMessage::BasicLeftTurnLamp& item_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_item_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_item_leftturnlamp();
  void set_allocated_item_leftturnlamp(::OPMessage::BasicLeftTurnLamp* item_leftturnlamp);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
 private:
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_basic_slowdown();
  inline void clear_has_basic_slowdown();
  inline void set_has_item_leftturnlamp();
  inline void clear_has_item_leftturnlamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::BasicSlowDown* basic_slowdown_;
  ::OPMessage::BasicLeftTurnLamp* item_leftturnlamp_;
  int check_finish_type_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleLuKouZuoZhuan* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleLuKouYouZhuan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleLuKouYouZhuan) */ {
 public:
  ItemJudgeRuleLuKouYouZhuan();
  virtual ~ItemJudgeRuleLuKouYouZhuan();

  ItemJudgeRuleLuKouYouZhuan(const ItemJudgeRuleLuKouYouZhuan& from);

  inline ItemJudgeRuleLuKouYouZhuan& operator=(const ItemJudgeRuleLuKouYouZhuan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleLuKouYouZhuan& default_instance();

  void Swap(ItemJudgeRuleLuKouYouZhuan* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleLuKouYouZhuan* New() const { return New(NULL); }

  ItemJudgeRuleLuKouYouZhuan* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleLuKouYouZhuan& from);
  void MergeFrom(const ItemJudgeRuleLuKouYouZhuan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleLuKouYouZhuan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_enter_voice = 1;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 1;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 2;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 2;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 3;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 3;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 4;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 4;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.CheckFinishCarPositionLuKouYouZhuan check_finish_type = 5;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 5;
  ::OPMessage::CheckFinishCarPositionLuKouYouZhuan check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionLuKouYouZhuan value);

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  bool has_basic_slowdown() const;
  void clear_basic_slowdown();
  static const int kBasicSlowdownFieldNumber = 6;
  const ::OPMessage::BasicSlowDown& basic_slowdown() const;
  ::OPMessage::BasicSlowDown* mutable_basic_slowdown();
  ::OPMessage::BasicSlowDown* release_basic_slowdown();
  void set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown);

  // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 7;
  bool has_item_rightturnlamp() const;
  void clear_item_rightturnlamp();
  static const int kItemRightturnlampFieldNumber = 7;
  const ::OPMessage::BasicRightTurnLamp& item_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_item_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_item_rightturnlamp();
  void set_allocated_item_rightturnlamp(::OPMessage::BasicRightTurnLamp* item_rightturnlamp);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleLuKouYouZhuan)
 private:
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_basic_slowdown();
  inline void clear_has_basic_slowdown();
  inline void set_has_item_rightturnlamp();
  inline void clear_has_item_rightturnlamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::BasicSlowDown* basic_slowdown_;
  ::OPMessage::BasicRightTurnLamp* item_rightturnlamp_;
  int check_finish_type_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleLuKouYouZhuan* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleZhiXianTongGuoLuKou : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou) */ {
 public:
  ItemJudgeRuleZhiXianTongGuoLuKou();
  virtual ~ItemJudgeRuleZhiXianTongGuoLuKou();

  ItemJudgeRuleZhiXianTongGuoLuKou(const ItemJudgeRuleZhiXianTongGuoLuKou& from);

  inline ItemJudgeRuleZhiXianTongGuoLuKou& operator=(const ItemJudgeRuleZhiXianTongGuoLuKou& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleZhiXianTongGuoLuKou& default_instance();

  void Swap(ItemJudgeRuleZhiXianTongGuoLuKou* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleZhiXianTongGuoLuKou* New() const { return New(NULL); }

  ItemJudgeRuleZhiXianTongGuoLuKou* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleZhiXianTongGuoLuKou& from);
  void MergeFrom(const ItemJudgeRuleZhiXianTongGuoLuKou& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleZhiXianTongGuoLuKou* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_enter_voice = 1;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 1;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 2;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 2;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 3;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 3;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 4;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 4;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.CheckFinishCarPositionZhiXianTongGuoLuKou check_finish_type = 5;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 5;
  ::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou value);

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  bool has_basic_slowdown() const;
  void clear_basic_slowdown();
  static const int kBasicSlowdownFieldNumber = 6;
  const ::OPMessage::BasicSlowDown& basic_slowdown() const;
  ::OPMessage::BasicSlowDown* mutable_basic_slowdown();
  ::OPMessage::BasicSlowDown* release_basic_slowdown();
  void set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
 private:
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_basic_slowdown();
  inline void clear_has_basic_slowdown();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::BasicSlowDown* basic_slowdown_;
  int check_finish_type_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleZhiXianTongGuoLuKou* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleGongGongQiCheZhan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleGongGongQiCheZhan) */ {
 public:
  ItemJudgeRuleGongGongQiCheZhan();
  virtual ~ItemJudgeRuleGongGongQiCheZhan();

  ItemJudgeRuleGongGongQiCheZhan(const ItemJudgeRuleGongGongQiCheZhan& from);

  inline ItemJudgeRuleGongGongQiCheZhan& operator=(const ItemJudgeRuleGongGongQiCheZhan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleGongGongQiCheZhan& default_instance();

  void Swap(ItemJudgeRuleGongGongQiCheZhan* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleGongGongQiCheZhan* New() const { return New(NULL); }

  ItemJudgeRuleGongGongQiCheZhan* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleGongGongQiCheZhan& from);
  void MergeFrom(const ItemJudgeRuleGongGongQiCheZhan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleGongGongQiCheZhan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_enter_voice = 1;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 1;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 2;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 2;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 3;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 3;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 4;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 4;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.CheckFinishCarPositionGongGongQiCheZhan check_finish_type = 5;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 5;
  ::OPMessage::CheckFinishCarPositionGongGongQiCheZhan check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionGongGongQiCheZhan value);

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  bool has_basic_slowdown() const;
  void clear_basic_slowdown();
  static const int kBasicSlowdownFieldNumber = 6;
  const ::OPMessage::BasicSlowDown& basic_slowdown() const;
  ::OPMessage::BasicSlowDown* mutable_basic_slowdown();
  ::OPMessage::BasicSlowDown* release_basic_slowdown();
  void set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
 private:
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_basic_slowdown();
  inline void clear_has_basic_slowdown();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::BasicSlowDown* basic_slowdown_;
  int check_finish_type_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleGongGongQiCheZhan* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleRenXingHengDao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleRenXingHengDao) */ {
 public:
  ItemJudgeRuleRenXingHengDao();
  virtual ~ItemJudgeRuleRenXingHengDao();

  ItemJudgeRuleRenXingHengDao(const ItemJudgeRuleRenXingHengDao& from);

  inline ItemJudgeRuleRenXingHengDao& operator=(const ItemJudgeRuleRenXingHengDao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleRenXingHengDao& default_instance();

  void Swap(ItemJudgeRuleRenXingHengDao* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleRenXingHengDao* New() const { return New(NULL); }

  ItemJudgeRuleRenXingHengDao* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleRenXingHengDao& from);
  void MergeFrom(const ItemJudgeRuleRenXingHengDao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleRenXingHengDao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_enter_voice = 1;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 1;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 2;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 2;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 3;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 3;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 4;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 4;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.CheckFinishCarPositionRenXingHengDao check_finish_type = 5;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 5;
  ::OPMessage::CheckFinishCarPositionRenXingHengDao check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionRenXingHengDao value);

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  bool has_basic_slowdown() const;
  void clear_basic_slowdown();
  static const int kBasicSlowdownFieldNumber = 6;
  const ::OPMessage::BasicSlowDown& basic_slowdown() const;
  ::OPMessage::BasicSlowDown* mutable_basic_slowdown();
  ::OPMessage::BasicSlowDown* release_basic_slowdown();
  void set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleRenXingHengDao)
 private:
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_basic_slowdown();
  inline void clear_has_basic_slowdown();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::BasicSlowDown* basic_slowdown_;
  int check_finish_type_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleRenXingHengDao* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleZhiXianXingShi : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleZhiXianXingShi) */ {
 public:
  ItemJudgeRuleZhiXianXingShi();
  virtual ~ItemJudgeRuleZhiXianXingShi();

  ItemJudgeRuleZhiXianXingShi(const ItemJudgeRuleZhiXianXingShi& from);

  inline ItemJudgeRuleZhiXianXingShi& operator=(const ItemJudgeRuleZhiXianXingShi& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleZhiXianXingShi& default_instance();

  void Swap(ItemJudgeRuleZhiXianXingShi* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleZhiXianXingShi* New() const { return New(NULL); }

  ItemJudgeRuleZhiXianXingShi* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleZhiXianXingShi& from);
  void MergeFrom(const ItemJudgeRuleZhiXianXingShi& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleZhiXianXingShi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_enter_voice = 1;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 1;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 2;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 2;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 3;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 3;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 4;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 4;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional bool item_direction_check = 5;
  bool has_item_direction_check() const;
  void clear_item_direction_check();
  static const int kItemDirectionCheckFieldNumber = 5;
  bool item_direction_check() const;
  void set_item_direction_check(bool value);

  // optional int32 item_direction_deduction = 6;
  bool has_item_direction_deduction() const;
  void clear_item_direction_deduction();
  static const int kItemDirectionDeductionFieldNumber = 6;
  ::google::protobuf::int32 item_direction_deduction() const;
  void set_item_direction_deduction(::google::protobuf::int32 value);

  // optional int32 item_direction_angle_limit = 7;
  bool has_item_direction_angle_limit() const;
  void clear_item_direction_angle_limit();
  static const int kItemDirectionAngleLimitFieldNumber = 7;
  ::google::protobuf::int32 item_direction_angle_limit() const;
  void set_item_direction_angle_limit(::google::protobuf::int32 value);

  // optional int32 item_direction_lasting_time = 8;
  bool has_item_direction_lasting_time() const;
  void clear_item_direction_lasting_time();
  static const int kItemDirectionLastingTimeFieldNumber = 8;
  ::google::protobuf::int32 item_direction_lasting_time() const;
  void set_item_direction_lasting_time(::google::protobuf::int32 value);

  // optional string item_direction_voice = 9;
  bool has_item_direction_voice() const;
  void clear_item_direction_voice();
  static const int kItemDirectionVoiceFieldNumber = 9;
  const ::std::string& item_direction_voice() const;
  void set_item_direction_voice(const ::std::string& value);
  void set_item_direction_voice(const char* value);
  void set_item_direction_voice(const char* value, size_t size);
  ::std::string* mutable_item_direction_voice();
  ::std::string* release_item_direction_voice();
  void set_allocated_item_direction_voice(::std::string* item_direction_voice);

  // optional .OPMessage.ItemJudgeDistance item_distance = 10;
  bool has_item_distance() const;
  void clear_item_distance();
  static const int kItemDistanceFieldNumber = 10;
  const ::OPMessage::ItemJudgeDistance& item_distance() const;
  ::OPMessage::ItemJudgeDistance* mutable_item_distance();
  ::OPMessage::ItemJudgeDistance* release_item_distance();
  void set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance);

  // optional .OPMessage.ItemJudgeTime item_time = 11;
  bool has_item_time() const;
  void clear_item_time();
  static const int kItemTimeFieldNumber = 11;
  const ::OPMessage::ItemJudgeTime& item_time() const;
  ::OPMessage::ItemJudgeTime* mutable_item_time();
  ::OPMessage::ItemJudgeTime* release_item_time();
  void set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time);

  // optional .OPMessage.ItemJudgeSpeed item_speed = 12;
  bool has_item_speed() const;
  void clear_item_speed();
  static const int kItemSpeedFieldNumber = 12;
  const ::OPMessage::ItemJudgeSpeed& item_speed() const;
  ::OPMessage::ItemJudgeSpeed* mutable_item_speed();
  ::OPMessage::ItemJudgeSpeed* release_item_speed();
  void set_allocated_item_speed(::OPMessage::ItemJudgeSpeed* item_speed);

  // optional .OPMessage.CheckFinishCarPositionZhiXianXingShi check_finish_type = 13;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 13;
  ::OPMessage::CheckFinishCarPositionZhiXianXingShi check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionZhiXianXingShi value);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleZhiXianXingShi)
 private:
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_item_direction_check();
  inline void clear_has_item_direction_check();
  inline void set_has_item_direction_deduction();
  inline void clear_has_item_direction_deduction();
  inline void set_has_item_direction_angle_limit();
  inline void clear_has_item_direction_angle_limit();
  inline void set_has_item_direction_lasting_time();
  inline void clear_has_item_direction_lasting_time();
  inline void set_has_item_direction_voice();
  inline void clear_has_item_direction_voice();
  inline void set_has_item_distance();
  inline void clear_has_item_distance();
  inline void set_has_item_time();
  inline void clear_has_item_time();
  inline void set_has_item_speed();
  inline void clear_has_item_speed();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  bool item_direction_check_;
  ::google::protobuf::int32 item_direction_deduction_;
  ::google::protobuf::int32 item_direction_angle_limit_;
  ::google::protobuf::int32 item_direction_lasting_time_;
  ::google::protobuf::internal::ArenaStringPtr item_direction_voice_;
  ::OPMessage::ItemJudgeDistance* item_distance_;
  ::OPMessage::ItemJudgeTime* item_time_;
  ::OPMessage::ItemJudgeSpeed* item_speed_;
  int check_finish_type_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleZhiXianXingShi* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleJiaJianDang : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleJiaJianDang) */ {
 public:
  ItemJudgeRuleJiaJianDang();
  virtual ~ItemJudgeRuleJiaJianDang();

  ItemJudgeRuleJiaJianDang(const ItemJudgeRuleJiaJianDang& from);

  inline ItemJudgeRuleJiaJianDang& operator=(const ItemJudgeRuleJiaJianDang& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleJiaJianDang& default_instance();

  void Swap(ItemJudgeRuleJiaJianDang* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleJiaJianDang* New() const { return New(NULL); }

  ItemJudgeRuleJiaJianDang* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleJiaJianDang& from);
  void MergeFrom(const ItemJudgeRuleJiaJianDang& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleJiaJianDang* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_enter_voice = 1;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 1;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 2;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 2;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 3;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 3;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 4;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 4;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.ItemJudgeDistance item_distance = 5;
  bool has_item_distance() const;
  void clear_item_distance();
  static const int kItemDistanceFieldNumber = 5;
  const ::OPMessage::ItemJudgeDistance& item_distance() const;
  ::OPMessage::ItemJudgeDistance* mutable_item_distance();
  ::OPMessage::ItemJudgeDistance* release_item_distance();
  void set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance);

  // optional .OPMessage.ItemJudgeTime item_time = 6;
  bool has_item_time() const;
  void clear_item_time();
  static const int kItemTimeFieldNumber = 6;
  const ::OPMessage::ItemJudgeTime& item_time() const;
  ::OPMessage::ItemJudgeTime* mutable_item_time();
  ::OPMessage::ItemJudgeTime* release_item_time();
  void set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time);

  // optional bool item_jiajiandang_whether_check = 7 [default = true];
  bool has_item_jiajiandang_whether_check() const;
  void clear_item_jiajiandang_whether_check();
  static const int kItemJiajiandangWhetherCheckFieldNumber = 7;
  bool item_jiajiandang_whether_check() const;
  void set_item_jiajiandang_whether_check(bool value);

  // optional .OPMessage.AddToLimitedGear item_jiajiandang_add_gear = 8;
  bool has_item_jiajiandang_add_gear() const;
  void clear_item_jiajiandang_add_gear();
  static const int kItemJiajiandangAddGearFieldNumber = 8;
  ::OPMessage::AddToLimitedGear item_jiajiandang_add_gear() const;
  void set_item_jiajiandang_add_gear(::OPMessage::AddToLimitedGear value);

  // optional .OPMessage.ReduceToLimitedGear item_jiajiandang_reduce_gear = 9;
  bool has_item_jiajiandang_reduce_gear() const;
  void clear_item_jiajiandang_reduce_gear();
  static const int kItemJiajiandangReduceGearFieldNumber = 9;
  ::OPMessage::ReduceToLimitedGear item_jiajiandang_reduce_gear() const;
  void set_item_jiajiandang_reduce_gear(::OPMessage::ReduceToLimitedGear value);

  // optional int32 item_jiajiandang_deduction = 10;
  bool has_item_jiajiandang_deduction() const;
  void clear_item_jiajiandang_deduction();
  static const int kItemJiajiandangDeductionFieldNumber = 10;
  ::google::protobuf::int32 item_jiajiandang_deduction() const;
  void set_item_jiajiandang_deduction(::google::protobuf::int32 value);

  // optional string item_jiajiandang_voice = 11;
  bool has_item_jiajiandang_voice() const;
  void clear_item_jiajiandang_voice();
  static const int kItemJiajiandangVoiceFieldNumber = 11;
  const ::std::string& item_jiajiandang_voice() const;
  void set_item_jiajiandang_voice(const ::std::string& value);
  void set_item_jiajiandang_voice(const char* value);
  void set_item_jiajiandang_voice(const char* value, size_t size);
  ::std::string* mutable_item_jiajiandang_voice();
  ::std::string* release_item_jiajiandang_voice();
  void set_allocated_item_jiajiandang_voice(::std::string* item_jiajiandang_voice);

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_one_gear_speed = 12;
  bool has_item_jiajiandang_one_gear_speed() const;
  void clear_item_jiajiandang_one_gear_speed();
  static const int kItemJiajiandangOneGearSpeedFieldNumber = 12;
  const ::OPMessage::ItemJudgeSpeed& item_jiajiandang_one_gear_speed() const;
  ::OPMessage::ItemJudgeSpeed* mutable_item_jiajiandang_one_gear_speed();
  ::OPMessage::ItemJudgeSpeed* release_item_jiajiandang_one_gear_speed();
  void set_allocated_item_jiajiandang_one_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_one_gear_speed);

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_two_gear_speed = 13;
  bool has_item_jiajiandang_two_gear_speed() const;
  void clear_item_jiajiandang_two_gear_speed();
  static const int kItemJiajiandangTwoGearSpeedFieldNumber = 13;
  const ::OPMessage::ItemJudgeSpeed& item_jiajiandang_two_gear_speed() const;
  ::OPMessage::ItemJudgeSpeed* mutable_item_jiajiandang_two_gear_speed();
  ::OPMessage::ItemJudgeSpeed* release_item_jiajiandang_two_gear_speed();
  void set_allocated_item_jiajiandang_two_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_two_gear_speed);

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_three_gear_speed = 14;
  bool has_item_jiajiandang_three_gear_speed() const;
  void clear_item_jiajiandang_three_gear_speed();
  static const int kItemJiajiandangThreeGearSpeedFieldNumber = 14;
  const ::OPMessage::ItemJudgeSpeed& item_jiajiandang_three_gear_speed() const;
  ::OPMessage::ItemJudgeSpeed* mutable_item_jiajiandang_three_gear_speed();
  ::OPMessage::ItemJudgeSpeed* release_item_jiajiandang_three_gear_speed();
  void set_allocated_item_jiajiandang_three_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_three_gear_speed);

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_four_gear_speed = 15;
  bool has_item_jiajiandang_four_gear_speed() const;
  void clear_item_jiajiandang_four_gear_speed();
  static const int kItemJiajiandangFourGearSpeedFieldNumber = 15;
  const ::OPMessage::ItemJudgeSpeed& item_jiajiandang_four_gear_speed() const;
  ::OPMessage::ItemJudgeSpeed* mutable_item_jiajiandang_four_gear_speed();
  ::OPMessage::ItemJudgeSpeed* release_item_jiajiandang_four_gear_speed();
  void set_allocated_item_jiajiandang_four_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_four_gear_speed);

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_five_gear_speed = 16;
  bool has_item_jiajiandang_five_gear_speed() const;
  void clear_item_jiajiandang_five_gear_speed();
  static const int kItemJiajiandangFiveGearSpeedFieldNumber = 16;
  const ::OPMessage::ItemJudgeSpeed& item_jiajiandang_five_gear_speed() const;
  ::OPMessage::ItemJudgeSpeed* mutable_item_jiajiandang_five_gear_speed();
  ::OPMessage::ItemJudgeSpeed* release_item_jiajiandang_five_gear_speed();
  void set_allocated_item_jiajiandang_five_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_five_gear_speed);

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_six_gear_speed = 17;
  bool has_item_jiajiandang_six_gear_speed() const;
  void clear_item_jiajiandang_six_gear_speed();
  static const int kItemJiajiandangSixGearSpeedFieldNumber = 17;
  const ::OPMessage::ItemJudgeSpeed& item_jiajiandang_six_gear_speed() const;
  ::OPMessage::ItemJudgeSpeed* mutable_item_jiajiandang_six_gear_speed();
  ::OPMessage::ItemJudgeSpeed* release_item_jiajiandang_six_gear_speed();
  void set_allocated_item_jiajiandang_six_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_six_gear_speed);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleJiaJianDang)
 private:
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_item_distance();
  inline void clear_has_item_distance();
  inline void set_has_item_time();
  inline void clear_has_item_time();
  inline void set_has_item_jiajiandang_whether_check();
  inline void clear_has_item_jiajiandang_whether_check();
  inline void set_has_item_jiajiandang_add_gear();
  inline void clear_has_item_jiajiandang_add_gear();
  inline void set_has_item_jiajiandang_reduce_gear();
  inline void clear_has_item_jiajiandang_reduce_gear();
  inline void set_has_item_jiajiandang_deduction();
  inline void clear_has_item_jiajiandang_deduction();
  inline void set_has_item_jiajiandang_voice();
  inline void clear_has_item_jiajiandang_voice();
  inline void set_has_item_jiajiandang_one_gear_speed();
  inline void clear_has_item_jiajiandang_one_gear_speed();
  inline void set_has_item_jiajiandang_two_gear_speed();
  inline void clear_has_item_jiajiandang_two_gear_speed();
  inline void set_has_item_jiajiandang_three_gear_speed();
  inline void clear_has_item_jiajiandang_three_gear_speed();
  inline void set_has_item_jiajiandang_four_gear_speed();
  inline void clear_has_item_jiajiandang_four_gear_speed();
  inline void set_has_item_jiajiandang_five_gear_speed();
  inline void clear_has_item_jiajiandang_five_gear_speed();
  inline void set_has_item_jiajiandang_six_gear_speed();
  inline void clear_has_item_jiajiandang_six_gear_speed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::ItemJudgeDistance* item_distance_;
  ::OPMessage::ItemJudgeTime* item_time_;
  bool item_jiajiandang_whether_check_;
  int item_jiajiandang_add_gear_;
  int item_jiajiandang_reduce_gear_;
  ::google::protobuf::int32 item_jiajiandang_deduction_;
  ::google::protobuf::internal::ArenaStringPtr item_jiajiandang_voice_;
  ::OPMessage::ItemJudgeSpeed* item_jiajiandang_one_gear_speed_;
  ::OPMessage::ItemJudgeSpeed* item_jiajiandang_two_gear_speed_;
  ::OPMessage::ItemJudgeSpeed* item_jiajiandang_three_gear_speed_;
  ::OPMessage::ItemJudgeSpeed* item_jiajiandang_four_gear_speed_;
  ::OPMessage::ItemJudgeSpeed* item_jiajiandang_five_gear_speed_;
  ::OPMessage::ItemJudgeSpeed* item_jiajiandang_six_gear_speed_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleJiaJianDang* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleDiaoTou : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleDiaoTou) */ {
 public:
  ItemJudgeRuleDiaoTou();
  virtual ~ItemJudgeRuleDiaoTou();

  ItemJudgeRuleDiaoTou(const ItemJudgeRuleDiaoTou& from);

  inline ItemJudgeRuleDiaoTou& operator=(const ItemJudgeRuleDiaoTou& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleDiaoTou& default_instance();

  void Swap(ItemJudgeRuleDiaoTou* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleDiaoTou* New() const { return New(NULL); }

  ItemJudgeRuleDiaoTou* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleDiaoTou& from);
  void MergeFrom(const ItemJudgeRuleDiaoTou& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleDiaoTou* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_enter_voice = 1;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 1;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 2;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 2;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 3;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 3;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 4;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 4;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 5;
  bool has_item_leftturnlamp() const;
  void clear_item_leftturnlamp();
  static const int kItemLeftturnlampFieldNumber = 5;
  const ::OPMessage::BasicLeftTurnLamp& item_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_item_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_item_leftturnlamp();
  void set_allocated_item_leftturnlamp(::OPMessage::BasicLeftTurnLamp* item_leftturnlamp);

  // optional .OPMessage.CheckFinishCarPositionDiaoTou check_finish_type = 6;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 6;
  ::OPMessage::CheckFinishCarPositionDiaoTou check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionDiaoTou value);

  // optional .OPMessage.BasicSlowDown basic_slowdown = 7;
  bool has_basic_slowdown() const;
  void clear_basic_slowdown();
  static const int kBasicSlowdownFieldNumber = 7;
  const ::OPMessage::BasicSlowDown& basic_slowdown() const;
  ::OPMessage::BasicSlowDown* mutable_basic_slowdown();
  ::OPMessage::BasicSlowDown* release_basic_slowdown();
  void set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleDiaoTou)
 private:
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_item_leftturnlamp();
  inline void clear_has_item_leftturnlamp();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_basic_slowdown();
  inline void clear_has_basic_slowdown();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::BasicLeftTurnLamp* item_leftturnlamp_;
  ::OPMessage::BasicSlowDown* basic_slowdown_;
  int check_finish_type_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleDiaoTou* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleBianGengCheDao : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleBianGengCheDao) */ {
 public:
  ItemJudgeRuleBianGengCheDao();
  virtual ~ItemJudgeRuleBianGengCheDao();

  ItemJudgeRuleBianGengCheDao(const ItemJudgeRuleBianGengCheDao& from);

  inline ItemJudgeRuleBianGengCheDao& operator=(const ItemJudgeRuleBianGengCheDao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleBianGengCheDao& default_instance();

  void Swap(ItemJudgeRuleBianGengCheDao* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleBianGengCheDao* New() const { return New(NULL); }

  ItemJudgeRuleBianGengCheDao* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleBianGengCheDao& from);
  void MergeFrom(const ItemJudgeRuleBianGengCheDao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleBianGengCheDao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_enter_voice = 1;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 1;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 2;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 2;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 3;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 3;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 4;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 4;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.ItemJudgeDistance item_distance = 5;
  bool has_item_distance() const;
  void clear_item_distance();
  static const int kItemDistanceFieldNumber = 5;
  const ::OPMessage::ItemJudgeDistance& item_distance() const;
  ::OPMessage::ItemJudgeDistance* mutable_item_distance();
  ::OPMessage::ItemJudgeDistance* release_item_distance();
  void set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance);

  // optional .OPMessage.ItemJudgeTime item_time = 6;
  bool has_item_time() const;
  void clear_item_time();
  static const int kItemTimeFieldNumber = 6;
  const ::OPMessage::ItemJudgeTime& item_time() const;
  ::OPMessage::ItemJudgeTime* mutable_item_time();
  ::OPMessage::ItemJudgeTime* release_item_time();
  void set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time);

  // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
  bool has_item_speed() const;
  void clear_item_speed();
  static const int kItemSpeedFieldNumber = 7;
  const ::OPMessage::ItemJudgeSpeed& item_speed() const;
  ::OPMessage::ItemJudgeSpeed* mutable_item_speed();
  ::OPMessage::ItemJudgeSpeed* release_item_speed();
  void set_allocated_item_speed(::OPMessage::ItemJudgeSpeed* item_speed);

  // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
  bool has_item_leftturnlamp() const;
  void clear_item_leftturnlamp();
  static const int kItemLeftturnlampFieldNumber = 8;
  const ::OPMessage::BasicLeftTurnLamp& item_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_item_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_item_leftturnlamp();
  void set_allocated_item_leftturnlamp(::OPMessage::BasicLeftTurnLamp* item_leftturnlamp);

  // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
  bool has_item_rightturnlamp() const;
  void clear_item_rightturnlamp();
  static const int kItemRightturnlampFieldNumber = 9;
  const ::OPMessage::BasicRightTurnLamp& item_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_item_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_item_rightturnlamp();
  void set_allocated_item_rightturnlamp(::OPMessage::BasicRightTurnLamp* item_rightturnlamp);

  // optional .OPMessage.CheckFinishCarPositionBianGengCheDao check_finish_type = 10;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 10;
  ::OPMessage::CheckFinishCarPositionBianGengCheDao check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionBianGengCheDao value);

  // optional bool item_whether_biangengchedao_one = 11;
  bool has_item_whether_biangengchedao_one() const;
  void clear_item_whether_biangengchedao_one();
  static const int kItemWhetherBiangengchedaoOneFieldNumber = 11;
  bool item_whether_biangengchedao_one() const;
  void set_item_whether_biangengchedao_one(bool value);

  // optional bool item_whether_biangengchedao_two = 12;
  bool has_item_whether_biangengchedao_two() const;
  void clear_item_whether_biangengchedao_two();
  static const int kItemWhetherBiangengchedaoTwoFieldNumber = 12;
  bool item_whether_biangengchedao_two() const;
  void set_item_whether_biangengchedao_two(bool value);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleBianGengCheDao)
 private:
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_item_distance();
  inline void clear_has_item_distance();
  inline void set_has_item_time();
  inline void clear_has_item_time();
  inline void set_has_item_speed();
  inline void clear_has_item_speed();
  inline void set_has_item_leftturnlamp();
  inline void clear_has_item_leftturnlamp();
  inline void set_has_item_rightturnlamp();
  inline void clear_has_item_rightturnlamp();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_item_whether_biangengchedao_one();
  inline void clear_has_item_whether_biangengchedao_one();
  inline void set_has_item_whether_biangengchedao_two();
  inline void clear_has_item_whether_biangengchedao_two();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::ItemJudgeDistance* item_distance_;
  ::OPMessage::ItemJudgeTime* item_time_;
  ::OPMessage::ItemJudgeSpeed* item_speed_;
  ::OPMessage::BasicLeftTurnLamp* item_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* item_rightturnlamp_;
  int check_finish_type_;
  bool item_whether_biangengchedao_one_;
  bool item_whether_biangengchedao_two_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleBianGengCheDao* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleChaoChe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleChaoChe) */ {
 public:
  ItemJudgeRuleChaoChe();
  virtual ~ItemJudgeRuleChaoChe();

  ItemJudgeRuleChaoChe(const ItemJudgeRuleChaoChe& from);

  inline ItemJudgeRuleChaoChe& operator=(const ItemJudgeRuleChaoChe& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleChaoChe& default_instance();

  void Swap(ItemJudgeRuleChaoChe* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleChaoChe* New() const { return New(NULL); }

  ItemJudgeRuleChaoChe* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleChaoChe& from);
  void MergeFrom(const ItemJudgeRuleChaoChe& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleChaoChe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_enter_voice = 1;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 1;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 2;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 2;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 3;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 3;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 4;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 4;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.ItemJudgeDistance item_distance = 5;
  bool has_item_distance() const;
  void clear_item_distance();
  static const int kItemDistanceFieldNumber = 5;
  const ::OPMessage::ItemJudgeDistance& item_distance() const;
  ::OPMessage::ItemJudgeDistance* mutable_item_distance();
  ::OPMessage::ItemJudgeDistance* release_item_distance();
  void set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance);

  // optional .OPMessage.ItemJudgeTime item_time = 6;
  bool has_item_time() const;
  void clear_item_time();
  static const int kItemTimeFieldNumber = 6;
  const ::OPMessage::ItemJudgeTime& item_time() const;
  ::OPMessage::ItemJudgeTime* mutable_item_time();
  ::OPMessage::ItemJudgeTime* release_item_time();
  void set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time);

  // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
  bool has_item_speed() const;
  void clear_item_speed();
  static const int kItemSpeedFieldNumber = 7;
  const ::OPMessage::ItemJudgeSpeed& item_speed() const;
  ::OPMessage::ItemJudgeSpeed* mutable_item_speed();
  ::OPMessage::ItemJudgeSpeed* release_item_speed();
  void set_allocated_item_speed(::OPMessage::ItemJudgeSpeed* item_speed);

  // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
  bool has_item_leftturnlamp() const;
  void clear_item_leftturnlamp();
  static const int kItemLeftturnlampFieldNumber = 8;
  const ::OPMessage::BasicLeftTurnLamp& item_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_item_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_item_leftturnlamp();
  void set_allocated_item_leftturnlamp(::OPMessage::BasicLeftTurnLamp* item_leftturnlamp);

  // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
  bool has_item_rightturnlamp() const;
  void clear_item_rightturnlamp();
  static const int kItemRightturnlampFieldNumber = 9;
  const ::OPMessage::BasicRightTurnLamp& item_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_item_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_item_rightturnlamp();
  void set_allocated_item_rightturnlamp(::OPMessage::BasicRightTurnLamp* item_rightturnlamp);

  // optional .OPMessage.CheckFinishCarPositionChaoChe check_finish_type = 10;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 10;
  ::OPMessage::CheckFinishCarPositionChaoChe check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionChaoChe value);

  // optional bool item_whether_chaoche_one = 11;
  bool has_item_whether_chaoche_one() const;
  void clear_item_whether_chaoche_one();
  static const int kItemWhetherChaocheOneFieldNumber = 11;
  bool item_whether_chaoche_one() const;
  void set_item_whether_chaoche_one(bool value);

  // optional bool item_whether_chaoche_two = 12;
  bool has_item_whether_chaoche_two() const;
  void clear_item_whether_chaoche_two();
  static const int kItemWhetherChaocheTwoFieldNumber = 12;
  bool item_whether_chaoche_two() const;
  void set_item_whether_chaoche_two(bool value);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleChaoChe)
 private:
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_item_distance();
  inline void clear_has_item_distance();
  inline void set_has_item_time();
  inline void clear_has_item_time();
  inline void set_has_item_speed();
  inline void clear_has_item_speed();
  inline void set_has_item_leftturnlamp();
  inline void clear_has_item_leftturnlamp();
  inline void set_has_item_rightturnlamp();
  inline void clear_has_item_rightturnlamp();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_item_whether_chaoche_one();
  inline void clear_has_item_whether_chaoche_one();
  inline void set_has_item_whether_chaoche_two();
  inline void clear_has_item_whether_chaoche_two();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::ItemJudgeDistance* item_distance_;
  ::OPMessage::ItemJudgeTime* item_time_;
  ::OPMessage::ItemJudgeSpeed* item_speed_;
  ::OPMessage::BasicLeftTurnLamp* item_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* item_rightturnlamp_;
  int check_finish_type_;
  bool item_whether_chaoche_one_;
  bool item_whether_chaoche_two_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleChaoChe* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleHuiChe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleHuiChe) */ {
 public:
  ItemJudgeRuleHuiChe();
  virtual ~ItemJudgeRuleHuiChe();

  ItemJudgeRuleHuiChe(const ItemJudgeRuleHuiChe& from);

  inline ItemJudgeRuleHuiChe& operator=(const ItemJudgeRuleHuiChe& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleHuiChe& default_instance();

  void Swap(ItemJudgeRuleHuiChe* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleHuiChe* New() const { return New(NULL); }

  ItemJudgeRuleHuiChe* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleHuiChe& from);
  void MergeFrom(const ItemJudgeRuleHuiChe& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleHuiChe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_enter_voice = 1;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 1;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 2;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 2;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 3;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 3;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 4;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 4;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.ItemJudgeDistance item_distance = 5;
  bool has_item_distance() const;
  void clear_item_distance();
  static const int kItemDistanceFieldNumber = 5;
  const ::OPMessage::ItemJudgeDistance& item_distance() const;
  ::OPMessage::ItemJudgeDistance* mutable_item_distance();
  ::OPMessage::ItemJudgeDistance* release_item_distance();
  void set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance);

  // optional .OPMessage.ItemJudgeTime item_time = 6;
  bool has_item_time() const;
  void clear_item_time();
  static const int kItemTimeFieldNumber = 6;
  const ::OPMessage::ItemJudgeTime& item_time() const;
  ::OPMessage::ItemJudgeTime* mutable_item_time();
  ::OPMessage::ItemJudgeTime* release_item_time();
  void set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time);

  // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
  bool has_item_speed() const;
  void clear_item_speed();
  static const int kItemSpeedFieldNumber = 7;
  const ::OPMessage::ItemJudgeSpeed& item_speed() const;
  ::OPMessage::ItemJudgeSpeed* mutable_item_speed();
  ::OPMessage::ItemJudgeSpeed* release_item_speed();
  void set_allocated_item_speed(::OPMessage::ItemJudgeSpeed* item_speed);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleHuiChe)
 private:
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_item_distance();
  inline void clear_has_item_distance();
  inline void set_has_item_time();
  inline void clear_has_item_time();
  inline void set_has_item_speed();
  inline void clear_has_item_speed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  ::OPMessage::ItemJudgeDistance* item_distance_;
  ::OPMessage::ItemJudgeTime* item_time_;
  ::OPMessage::ItemJudgeSpeed* item_speed_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleHuiChe* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleZjzw : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleZjzw) */ {
 public:
  ItemJudgeRuleZjzw();
  virtual ~ItemJudgeRuleZjzw();

  ItemJudgeRuleZjzw(const ItemJudgeRuleZjzw& from);

  inline ItemJudgeRuleZjzw& operator=(const ItemJudgeRuleZjzw& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleZjzw& default_instance();

  void Swap(ItemJudgeRuleZjzw* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleZjzw* New() const { return New(NULL); }

  ItemJudgeRuleZjzw* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleZjzw& from);
  void MergeFrom(const ItemJudgeRuleZjzw& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleZjzw* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  bool has_basic_event_check() const;
  void clear_basic_event_check();
  static const int kBasicEventCheckFieldNumber = 1;
  const ::OPMessage::ItemJudgeBasic& basic_event_check() const;
  ::OPMessage::ItemJudgeBasic* mutable_basic_event_check();
  ::OPMessage::ItemJudgeBasic* release_basic_event_check();
  void set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check);

  // optional string item_enter_voice = 2;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 2;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 3;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 3;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 4;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 4;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 5;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 5;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  bool has_judge_points_type() const;
  void clear_judge_points_type();
  static const int kJudgePointsTypeFieldNumber = 6;
  ::OPMessage::enum_judge_points judge_points_type() const;
  void set_judge_points_type(::OPMessage::enum_judge_points value);

  // optional .OPMessage.CheckStartCarPositionZjzw check_start_type = 7;
  bool has_check_start_type() const;
  void clear_check_start_type();
  static const int kCheckStartTypeFieldNumber = 7;
  ::OPMessage::CheckStartCarPositionZjzw check_start_type() const;
  void set_check_start_type(::OPMessage::CheckStartCarPositionZjzw value);

  // optional .OPMessage.CheckFinishCarPositionZjzw check_finish_type = 8;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 8;
  ::OPMessage::CheckFinishCarPositionZjzw check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionZjzw value);

  // optional bool car_PressLine_whether_check = 9 [default = true];
  bool has_car_pressline_whether_check() const;
  void clear_car_pressline_whether_check();
  static const int kCarPressLineWhetherCheckFieldNumber = 9;
  bool car_pressline_whether_check() const;
  void set_car_pressline_whether_check(bool value);

  // optional int32 car_PressLine_deduction = 10 [default = 100];
  bool has_car_pressline_deduction() const;
  void clear_car_pressline_deduction();
  static const int kCarPressLineDeductionFieldNumber = 10;
  ::google::protobuf::int32 car_pressline_deduction() const;
  void set_car_pressline_deduction(::google::protobuf::int32 value);

  // optional string car_PressLine_voice = 11;
  bool has_car_pressline_voice() const;
  void clear_car_pressline_voice();
  static const int kCarPressLineVoiceFieldNumber = 11;
  const ::std::string& car_pressline_voice() const;
  void set_car_pressline_voice(const ::std::string& value);
  void set_car_pressline_voice(const char* value);
  void set_car_pressline_voice(const char* value, size_t size);
  ::std::string* mutable_car_pressline_voice();
  ::std::string* release_car_pressline_voice();
  void set_allocated_car_pressline_voice(::std::string* car_pressline_voice);

  // optional bool in_area_again = 12 [default = false];
  bool has_in_area_again() const;
  void clear_in_area_again();
  static const int kInAreaAgainFieldNumber = 12;
  bool in_area_again() const;
  void set_in_area_again(bool value);

  // optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 13;
  bool has_event_check_leftturnlamp() const;
  void clear_event_check_leftturnlamp();
  static const int kEventCheckLeftTurnLampFieldNumber = 13;
  const ::OPMessage::BasicLeftTurnLamp& event_check_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_event_check_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_event_check_leftturnlamp();
  void set_allocated_event_check_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_leftturnlamp);

  // optional .OPMessage.BasicRightTurnLamp event_check_rightTurnLamp = 14;
  bool has_event_check_rightturnlamp() const;
  void clear_event_check_rightturnlamp();
  static const int kEventCheckRightTurnLampFieldNumber = 14;
  const ::OPMessage::BasicRightTurnLamp& event_check_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_rightturnlamp();
  void set_allocated_event_check_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rightturnlamp);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleZjzw)
 private:
  inline void set_has_basic_event_check();
  inline void clear_has_basic_event_check();
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_judge_points_type();
  inline void clear_has_judge_points_type();
  inline void set_has_check_start_type();
  inline void clear_has_check_start_type();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_car_pressline_whether_check();
  inline void clear_has_car_pressline_whether_check();
  inline void set_has_car_pressline_deduction();
  inline void clear_has_car_pressline_deduction();
  inline void set_has_car_pressline_voice();
  inline void clear_has_car_pressline_voice();
  inline void set_has_in_area_again();
  inline void clear_has_in_area_again();
  inline void set_has_event_check_leftturnlamp();
  inline void clear_has_event_check_leftturnlamp();
  inline void set_has_event_check_rightturnlamp();
  inline void clear_has_event_check_rightturnlamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OPMessage::ItemJudgeBasic* basic_event_check_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  int judge_points_type_;
  int check_start_type_;
  int check_finish_type_;
  ::google::protobuf::int32 car_pressline_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_pressline_voice_;
  ::OPMessage::BasicLeftTurnLamp* event_check_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* event_check_rightturnlamp_;
  bool car_pressline_whether_check_;
  bool in_area_again_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleZjzw* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleQxxs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleQxxs) */ {
 public:
  ItemJudgeRuleQxxs();
  virtual ~ItemJudgeRuleQxxs();

  ItemJudgeRuleQxxs(const ItemJudgeRuleQxxs& from);

  inline ItemJudgeRuleQxxs& operator=(const ItemJudgeRuleQxxs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleQxxs& default_instance();

  void Swap(ItemJudgeRuleQxxs* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleQxxs* New() const { return New(NULL); }

  ItemJudgeRuleQxxs* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleQxxs& from);
  void MergeFrom(const ItemJudgeRuleQxxs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleQxxs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  bool has_basic_event_check() const;
  void clear_basic_event_check();
  static const int kBasicEventCheckFieldNumber = 1;
  const ::OPMessage::ItemJudgeBasic& basic_event_check() const;
  ::OPMessage::ItemJudgeBasic* mutable_basic_event_check();
  ::OPMessage::ItemJudgeBasic* release_basic_event_check();
  void set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check);

  // optional string item_enter_voice = 2;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 2;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 3;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 3;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 4;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 4;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 5;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 5;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  bool has_judge_points_type() const;
  void clear_judge_points_type();
  static const int kJudgePointsTypeFieldNumber = 6;
  ::OPMessage::enum_judge_points judge_points_type() const;
  void set_judge_points_type(::OPMessage::enum_judge_points value);

  // optional .OPMessage.CheckStartCarPositionQxxs check_start_type = 7;
  bool has_check_start_type() const;
  void clear_check_start_type();
  static const int kCheckStartTypeFieldNumber = 7;
  ::OPMessage::CheckStartCarPositionQxxs check_start_type() const;
  void set_check_start_type(::OPMessage::CheckStartCarPositionQxxs value);

  // optional .OPMessage.CheckFinishCarPositionQxxs check_finish_type = 8;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 8;
  ::OPMessage::CheckFinishCarPositionQxxs check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionQxxs value);

  // optional bool car_PressLine_whether_check = 9 [default = true];
  bool has_car_pressline_whether_check() const;
  void clear_car_pressline_whether_check();
  static const int kCarPressLineWhetherCheckFieldNumber = 9;
  bool car_pressline_whether_check() const;
  void set_car_pressline_whether_check(bool value);

  // optional int32 car_PressLine_deduction = 10 [default = 100];
  bool has_car_pressline_deduction() const;
  void clear_car_pressline_deduction();
  static const int kCarPressLineDeductionFieldNumber = 10;
  ::google::protobuf::int32 car_pressline_deduction() const;
  void set_car_pressline_deduction(::google::protobuf::int32 value);

  // optional string car_PressLine_voice = 11;
  bool has_car_pressline_voice() const;
  void clear_car_pressline_voice();
  static const int kCarPressLineVoiceFieldNumber = 11;
  const ::std::string& car_pressline_voice() const;
  void set_car_pressline_voice(const ::std::string& value);
  void set_car_pressline_voice(const char* value);
  void set_car_pressline_voice(const char* value, size_t size);
  ::std::string* mutable_car_pressline_voice();
  ::std::string* release_car_pressline_voice();
  void set_allocated_car_pressline_voice(::std::string* car_pressline_voice);

  // optional bool in_area_again = 12 [default = false];
  bool has_in_area_again() const;
  void clear_in_area_again();
  static const int kInAreaAgainFieldNumber = 12;
  bool in_area_again() const;
  void set_in_area_again(bool value);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleQxxs)
 private:
  inline void set_has_basic_event_check();
  inline void clear_has_basic_event_check();
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_judge_points_type();
  inline void clear_has_judge_points_type();
  inline void set_has_check_start_type();
  inline void clear_has_check_start_type();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_car_pressline_whether_check();
  inline void clear_has_car_pressline_whether_check();
  inline void set_has_car_pressline_deduction();
  inline void clear_has_car_pressline_deduction();
  inline void set_has_car_pressline_voice();
  inline void clear_has_car_pressline_voice();
  inline void set_has_in_area_again();
  inline void clear_has_in_area_again();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OPMessage::ItemJudgeBasic* basic_event_check_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  int judge_points_type_;
  int check_start_type_;
  int check_finish_type_;
  ::google::protobuf::int32 car_pressline_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_pressline_voice_;
  bool car_pressline_whether_check_;
  bool in_area_again_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleQxxs* default_instance_;
};
// -------------------------------------------------------------------

class CftcPressLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.CftcPressLine) */ {
 public:
  CftcPressLine();
  virtual ~CftcPressLine();

  CftcPressLine(const CftcPressLine& from);

  inline CftcPressLine& operator=(const CftcPressLine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CftcPressLine& default_instance();

  void Swap(CftcPressLine* other);

  // implements Message ----------------------------------------------

  inline CftcPressLine* New() const { return New(NULL); }

  CftcPressLine* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CftcPressLine& from);
  void MergeFrom(const CftcPressLine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CftcPressLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string car_run_pressline_3_voice = 1;
  bool has_car_run_pressline_3_voice() const;
  void clear_car_run_pressline_3_voice();
  static const int kCarRunPressline3VoiceFieldNumber = 1;
  const ::std::string& car_run_pressline_3_voice() const;
  void set_car_run_pressline_3_voice(const ::std::string& value);
  void set_car_run_pressline_3_voice(const char* value);
  void set_car_run_pressline_3_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_pressline_3_voice();
  ::std::string* release_car_run_pressline_3_voice();
  void set_allocated_car_run_pressline_3_voice(::std::string* car_run_pressline_3_voice);

  // optional int32 car_run_pressline_3_deduction = 2;
  bool has_car_run_pressline_3_deduction() const;
  void clear_car_run_pressline_3_deduction();
  static const int kCarRunPressline3DeductionFieldNumber = 2;
  ::google::protobuf::int32 car_run_pressline_3_deduction() const;
  void set_car_run_pressline_3_deduction(::google::protobuf::int32 value);

  // optional string car_run_pressline_4_voice = 3;
  bool has_car_run_pressline_4_voice() const;
  void clear_car_run_pressline_4_voice();
  static const int kCarRunPressline4VoiceFieldNumber = 3;
  const ::std::string& car_run_pressline_4_voice() const;
  void set_car_run_pressline_4_voice(const ::std::string& value);
  void set_car_run_pressline_4_voice(const char* value);
  void set_car_run_pressline_4_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_pressline_4_voice();
  ::std::string* release_car_run_pressline_4_voice();
  void set_allocated_car_run_pressline_4_voice(::std::string* car_run_pressline_4_voice);

  // optional int32 car_run_pressline_4_deduction = 4;
  bool has_car_run_pressline_4_deduction() const;
  void clear_car_run_pressline_4_deduction();
  static const int kCarRunPressline4DeductionFieldNumber = 4;
  ::google::protobuf::int32 car_run_pressline_4_deduction() const;
  void set_car_run_pressline_4_deduction(::google::protobuf::int32 value);

  // optional string car_run_pressline_7_voice = 5;
  bool has_car_run_pressline_7_voice() const;
  void clear_car_run_pressline_7_voice();
  static const int kCarRunPressline7VoiceFieldNumber = 5;
  const ::std::string& car_run_pressline_7_voice() const;
  void set_car_run_pressline_7_voice(const ::std::string& value);
  void set_car_run_pressline_7_voice(const char* value);
  void set_car_run_pressline_7_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_pressline_7_voice();
  ::std::string* release_car_run_pressline_7_voice();
  void set_allocated_car_run_pressline_7_voice(::std::string* car_run_pressline_7_voice);

  // optional int32 car_run_pressline_7_deduction = 6;
  bool has_car_run_pressline_7_deduction() const;
  void clear_car_run_pressline_7_deduction();
  static const int kCarRunPressline7DeductionFieldNumber = 6;
  ::google::protobuf::int32 car_run_pressline_7_deduction() const;
  void set_car_run_pressline_7_deduction(::google::protobuf::int32 value);

  // optional string car_run_pressline_5_voice = 7;
  bool has_car_run_pressline_5_voice() const;
  void clear_car_run_pressline_5_voice();
  static const int kCarRunPressline5VoiceFieldNumber = 7;
  const ::std::string& car_run_pressline_5_voice() const;
  void set_car_run_pressline_5_voice(const ::std::string& value);
  void set_car_run_pressline_5_voice(const char* value);
  void set_car_run_pressline_5_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_pressline_5_voice();
  ::std::string* release_car_run_pressline_5_voice();
  void set_allocated_car_run_pressline_5_voice(::std::string* car_run_pressline_5_voice);

  // optional int32 car_run_pressline_5_deduction = 8;
  bool has_car_run_pressline_5_deduction() const;
  void clear_car_run_pressline_5_deduction();
  static const int kCarRunPressline5DeductionFieldNumber = 8;
  ::google::protobuf::int32 car_run_pressline_5_deduction() const;
  void set_car_run_pressline_5_deduction(::google::protobuf::int32 value);

  // optional string car_run_pressline_9_voice = 9;
  bool has_car_run_pressline_9_voice() const;
  void clear_car_run_pressline_9_voice();
  static const int kCarRunPressline9VoiceFieldNumber = 9;
  const ::std::string& car_run_pressline_9_voice() const;
  void set_car_run_pressline_9_voice(const ::std::string& value);
  void set_car_run_pressline_9_voice(const char* value);
  void set_car_run_pressline_9_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_pressline_9_voice();
  ::std::string* release_car_run_pressline_9_voice();
  void set_allocated_car_run_pressline_9_voice(::std::string* car_run_pressline_9_voice);

  // optional int32 car_run_pressline_9_deduction = 10;
  bool has_car_run_pressline_9_deduction() const;
  void clear_car_run_pressline_9_deduction();
  static const int kCarRunPressline9DeductionFieldNumber = 10;
  ::google::protobuf::int32 car_run_pressline_9_deduction() const;
  void set_car_run_pressline_9_deduction(::google::protobuf::int32 value);

  // repeated int32 car_pressline_nums_mutex = 11;
  int car_pressline_nums_mutex_size() const;
  void clear_car_pressline_nums_mutex();
  static const int kCarPresslineNumsMutexFieldNumber = 11;
  ::google::protobuf::int32 car_pressline_nums_mutex(int index) const;
  void set_car_pressline_nums_mutex(int index, ::google::protobuf::int32 value);
  void add_car_pressline_nums_mutex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      car_pressline_nums_mutex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_car_pressline_nums_mutex();

  // optional string car_run_pressline_2_voice = 12;
  bool has_car_run_pressline_2_voice() const;
  void clear_car_run_pressline_2_voice();
  static const int kCarRunPressline2VoiceFieldNumber = 12;
  const ::std::string& car_run_pressline_2_voice() const;
  void set_car_run_pressline_2_voice(const ::std::string& value);
  void set_car_run_pressline_2_voice(const char* value);
  void set_car_run_pressline_2_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_pressline_2_voice();
  ::std::string* release_car_run_pressline_2_voice();
  void set_allocated_car_run_pressline_2_voice(::std::string* car_run_pressline_2_voice);

  // optional int32 car_run_pressline_2_deduction = 13;
  bool has_car_run_pressline_2_deduction() const;
  void clear_car_run_pressline_2_deduction();
  static const int kCarRunPressline2DeductionFieldNumber = 13;
  ::google::protobuf::int32 car_run_pressline_2_deduction() const;
  void set_car_run_pressline_2_deduction(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OPMessage.CftcPressLine)
 private:
  inline void set_has_car_run_pressline_3_voice();
  inline void clear_has_car_run_pressline_3_voice();
  inline void set_has_car_run_pressline_3_deduction();
  inline void clear_has_car_run_pressline_3_deduction();
  inline void set_has_car_run_pressline_4_voice();
  inline void clear_has_car_run_pressline_4_voice();
  inline void set_has_car_run_pressline_4_deduction();
  inline void clear_has_car_run_pressline_4_deduction();
  inline void set_has_car_run_pressline_7_voice();
  inline void clear_has_car_run_pressline_7_voice();
  inline void set_has_car_run_pressline_7_deduction();
  inline void clear_has_car_run_pressline_7_deduction();
  inline void set_has_car_run_pressline_5_voice();
  inline void clear_has_car_run_pressline_5_voice();
  inline void set_has_car_run_pressline_5_deduction();
  inline void clear_has_car_run_pressline_5_deduction();
  inline void set_has_car_run_pressline_9_voice();
  inline void clear_has_car_run_pressline_9_voice();
  inline void set_has_car_run_pressline_9_deduction();
  inline void clear_has_car_run_pressline_9_deduction();
  inline void set_has_car_run_pressline_2_voice();
  inline void clear_has_car_run_pressline_2_voice();
  inline void set_has_car_run_pressline_2_deduction();
  inline void clear_has_car_run_pressline_2_deduction();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr car_run_pressline_3_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_run_pressline_4_voice_;
  ::google::protobuf::int32 car_run_pressline_3_deduction_;
  ::google::protobuf::int32 car_run_pressline_4_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_run_pressline_7_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_run_pressline_5_voice_;
  ::google::protobuf::int32 car_run_pressline_7_deduction_;
  ::google::protobuf::int32 car_run_pressline_5_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_run_pressline_9_voice_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > car_pressline_nums_mutex_;
  ::google::protobuf::int32 car_run_pressline_9_deduction_;
  ::google::protobuf::int32 car_run_pressline_2_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_run_pressline_2_voice_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static CftcPressLine* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleCftc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleCftc) */ {
 public:
  ItemJudgeRuleCftc();
  virtual ~ItemJudgeRuleCftc();

  ItemJudgeRuleCftc(const ItemJudgeRuleCftc& from);

  inline ItemJudgeRuleCftc& operator=(const ItemJudgeRuleCftc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleCftc& default_instance();

  void Swap(ItemJudgeRuleCftc* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleCftc* New() const { return New(NULL); }

  ItemJudgeRuleCftc* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleCftc& from);
  void MergeFrom(const ItemJudgeRuleCftc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleCftc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  bool has_basic_event_check() const;
  void clear_basic_event_check();
  static const int kBasicEventCheckFieldNumber = 1;
  const ::OPMessage::ItemJudgeBasic& basic_event_check() const;
  ::OPMessage::ItemJudgeBasic* mutable_basic_event_check();
  ::OPMessage::ItemJudgeBasic* release_basic_event_check();
  void set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check);

  // optional string item_enter_voice = 2;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 2;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 3;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 3;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 4;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 4;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 5;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 5;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  bool has_judge_points_type() const;
  void clear_judge_points_type();
  static const int kJudgePointsTypeFieldNumber = 6;
  ::OPMessage::enum_judge_points judge_points_type() const;
  void set_judge_points_type(::OPMessage::enum_judge_points value);

  // optional .OPMessage.CheckStartCarPositionCftc check_start_type = 7;
  bool has_check_start_type() const;
  void clear_check_start_type();
  static const int kCheckStartTypeFieldNumber = 7;
  ::OPMessage::CheckStartCarPositionCftc check_start_type() const;
  void set_check_start_type(::OPMessage::CheckStartCarPositionCftc value);

  // optional .OPMessage.CheckFinishCarPositionCftc check_finish_type = 8;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 8;
  ::OPMessage::CheckFinishCarPositionCftc check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionCftc value);

  // optional bool car_run_error_whether_check = 9 [default = true];
  bool has_car_run_error_whether_check() const;
  void clear_car_run_error_whether_check();
  static const int kCarRunErrorWhetherCheckFieldNumber = 9;
  bool car_run_error_whether_check() const;
  void set_car_run_error_whether_check(bool value);

  // optional string car_run_error_voice = 10;
  bool has_car_run_error_voice() const;
  void clear_car_run_error_voice();
  static const int kCarRunErrorVoiceFieldNumber = 10;
  const ::std::string& car_run_error_voice() const;
  void set_car_run_error_voice(const ::std::string& value);
  void set_car_run_error_voice(const char* value);
  void set_car_run_error_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_error_voice();
  ::std::string* release_car_run_error_voice();
  void set_allocated_car_run_error_voice(::std::string* car_run_error_voice);

  // optional int32 car_run_error_deduction = 11;
  bool has_car_run_error_deduction() const;
  void clear_car_run_error_deduction();
  static const int kCarRunErrorDeductionFieldNumber = 11;
  ::google::protobuf::int32 car_run_error_deduction() const;
  void set_car_run_error_deduction(::google::protobuf::int32 value);

  // optional string car_rk_check_right_voice = 12;
  bool has_car_rk_check_right_voice() const;
  void clear_car_rk_check_right_voice();
  static const int kCarRkCheckRightVoiceFieldNumber = 12;
  const ::std::string& car_rk_check_right_voice() const;
  void set_car_rk_check_right_voice(const ::std::string& value);
  void set_car_rk_check_right_voice(const char* value);
  void set_car_rk_check_right_voice(const char* value, size_t size);
  ::std::string* mutable_car_rk_check_right_voice();
  ::std::string* release_car_rk_check_right_voice();
  void set_allocated_car_rk_check_right_voice(::std::string* car_rk_check_right_voice);

  // optional string car_rk_check_fail_voice = 13;
  bool has_car_rk_check_fail_voice() const;
  void clear_car_rk_check_fail_voice();
  static const int kCarRkCheckFailVoiceFieldNumber = 13;
  const ::std::string& car_rk_check_fail_voice() const;
  void set_car_rk_check_fail_voice(const ::std::string& value);
  void set_car_rk_check_fail_voice(const char* value);
  void set_car_rk_check_fail_voice(const char* value, size_t size);
  ::std::string* mutable_car_rk_check_fail_voice();
  ::std::string* release_car_rk_check_fail_voice();
  void set_allocated_car_rk_check_fail_voice(::std::string* car_rk_check_fail_voice);

  // optional int32 car_rk_check_fail_deduction = 14;
  bool has_car_rk_check_fail_deduction() const;
  void clear_car_rk_check_fail_deduction();
  static const int kCarRkCheckFailDeductionFieldNumber = 14;
  ::google::protobuf::int32 car_rk_check_fail_deduction() const;
  void set_car_rk_check_fail_deduction(::google::protobuf::int32 value);

  // optional .OPMessage.CftcPressLine forwarding_pressline = 15;
  bool has_forwarding_pressline() const;
  void clear_forwarding_pressline();
  static const int kForwardingPresslineFieldNumber = 15;
  const ::OPMessage::CftcPressLine& forwarding_pressline() const;
  ::OPMessage::CftcPressLine* mutable_forwarding_pressline();
  ::OPMessage::CftcPressLine* release_forwarding_pressline();
  void set_allocated_forwarding_pressline(::OPMessage::CftcPressLine* forwarding_pressline);

  // optional .OPMessage.BasicRightTurnLamp event_check_rking_rightTurnLamp = 16;
  bool has_event_check_rking_rightturnlamp() const;
  void clear_event_check_rking_rightturnlamp();
  static const int kEventCheckRkingRightTurnLampFieldNumber = 16;
  const ::OPMessage::BasicRightTurnLamp& event_check_rking_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_rking_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_rking_rightturnlamp();
  void set_allocated_event_check_rking_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rking_rightturnlamp);

  // optional .OPMessage.CftcPressLine rking_pressline = 17;
  bool has_rking_pressline() const;
  void clear_rking_pressline();
  static const int kRkingPresslineFieldNumber = 17;
  const ::OPMessage::CftcPressLine& rking_pressline() const;
  ::OPMessage::CftcPressLine* mutable_rking_pressline();
  ::OPMessage::CftcPressLine* release_rking_pressline();
  void set_allocated_rking_pressline(::OPMessage::CftcPressLine* rking_pressline);

  // optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 18;
  bool has_event_check_cking_leftturnlamp() const;
  void clear_event_check_cking_leftturnlamp();
  static const int kEventCheckCkingLeftTurnLampFieldNumber = 18;
  const ::OPMessage::BasicLeftTurnLamp& event_check_cking_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_event_check_cking_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_event_check_cking_leftturnlamp();
  void set_allocated_event_check_cking_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_cking_leftturnlamp);

  // optional .OPMessage.CftcPressLine cking_pressline = 19;
  bool has_cking_pressline() const;
  void clear_cking_pressline();
  static const int kCkingPresslineFieldNumber = 19;
  const ::OPMessage::CftcPressLine& cking_pressline() const;
  ::OPMessage::CftcPressLine* mutable_cking_pressline();
  ::OPMessage::CftcPressLine* release_cking_pressline();
  void set_allocated_cking_pressline(::OPMessage::CftcPressLine* cking_pressline);

  // optional string car_run_not_staff_command_voice = 20;
  bool has_car_run_not_staff_command_voice() const;
  void clear_car_run_not_staff_command_voice();
  static const int kCarRunNotStaffCommandVoiceFieldNumber = 20;
  const ::std::string& car_run_not_staff_command_voice() const;
  void set_car_run_not_staff_command_voice(const ::std::string& value);
  void set_car_run_not_staff_command_voice(const char* value);
  void set_car_run_not_staff_command_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_not_staff_command_voice();
  ::std::string* release_car_run_not_staff_command_voice();
  void set_allocated_car_run_not_staff_command_voice(::std::string* car_run_not_staff_command_voice);

  // optional int32 car_run_not_staff_command_deduction = 21;
  bool has_car_run_not_staff_command_deduction() const;
  void clear_car_run_not_staff_command_deduction();
  static const int kCarRunNotStaffCommandDeductionFieldNumber = 21;
  ::google::protobuf::int32 car_run_not_staff_command_deduction() const;
  void set_car_run_not_staff_command_deduction(::google::protobuf::int32 value);

  // optional bool in_area_again = 22 [default = false];
  bool has_in_area_again() const;
  void clear_in_area_again();
  static const int kInAreaAgainFieldNumber = 22;
  bool in_area_again() const;
  void set_in_area_again(bool value);

  // optional int32 car_rk_check_delay_time = 23 [default = 0];
  bool has_car_rk_check_delay_time() const;
  void clear_car_rk_check_delay_time();
  static const int kCarRkCheckDelayTimeFieldNumber = 23;
  ::google::protobuf::int32 car_rk_check_delay_time() const;
  void set_car_rk_check_delay_time(::google::protobuf::int32 value);

  // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 24;
  bool has_event_check_forwarding_rightturnlamp() const;
  void clear_event_check_forwarding_rightturnlamp();
  static const int kEventCheckForwardingRightTurnLampFieldNumber = 24;
  const ::OPMessage::BasicRightTurnLamp& event_check_forwarding_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_forwarding_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_forwarding_rightturnlamp();
  void set_allocated_event_check_forwarding_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_forwarding_rightturnlamp);

  // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_leftTurnLamp = 25;
  bool has_event_check_waitrk_leftturnlamp() const;
  void clear_event_check_waitrk_leftturnlamp();
  static const int kEventCheckWaitrkLeftTurnLampFieldNumber = 25;
  const ::OPMessage::BasicLeftTurnLamp& event_check_waitrk_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_event_check_waitrk_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_event_check_waitrk_leftturnlamp();
  void set_allocated_event_check_waitrk_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_waitrk_leftturnlamp);

  // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_rightTurnLamp = 26;
  bool has_event_check_waitrk_rightturnlamp() const;
  void clear_event_check_waitrk_rightturnlamp();
  static const int kEventCheckWaitrkRightTurnLampFieldNumber = 26;
  const ::OPMessage::BasicRightTurnLamp& event_check_waitrk_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_waitrk_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_waitrk_rightturnlamp();
  void set_allocated_event_check_waitrk_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_waitrk_rightturnlamp);

  // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_leftTurnLamp = 27;
  bool has_event_check_rkend_leftturnlamp() const;
  void clear_event_check_rkend_leftturnlamp();
  static const int kEventCheckRkendLeftTurnLampFieldNumber = 27;
  const ::OPMessage::BasicLeftTurnLamp& event_check_rkend_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_event_check_rkend_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_event_check_rkend_leftturnlamp();
  void set_allocated_event_check_rkend_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_rkend_leftturnlamp);

  // optional .OPMessage.BasicRightTurnLamp event_check_rkend_rightTurnLamp = 28;
  bool has_event_check_rkend_rightturnlamp() const;
  void clear_event_check_rkend_rightturnlamp();
  static const int kEventCheckRkendRightTurnLampFieldNumber = 28;
  const ::OPMessage::BasicRightTurnLamp& event_check_rkend_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_rkend_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_rkend_rightturnlamp();
  void set_allocated_event_check_rkend_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rkend_rightturnlamp);

  // optional .OPMessage.CftcPressLine carwheel_forwarding_pressline = 29;
  bool has_carwheel_forwarding_pressline() const;
  void clear_carwheel_forwarding_pressline();
  static const int kCarwheelForwardingPresslineFieldNumber = 29;
  const ::OPMessage::CftcPressLine& carwheel_forwarding_pressline() const;
  ::OPMessage::CftcPressLine* mutable_carwheel_forwarding_pressline();
  ::OPMessage::CftcPressLine* release_carwheel_forwarding_pressline();
  void set_allocated_carwheel_forwarding_pressline(::OPMessage::CftcPressLine* carwheel_forwarding_pressline);

  // optional .OPMessage.CftcPressLine carwheel_rking_pressline = 30;
  bool has_carwheel_rking_pressline() const;
  void clear_carwheel_rking_pressline();
  static const int kCarwheelRkingPresslineFieldNumber = 30;
  const ::OPMessage::CftcPressLine& carwheel_rking_pressline() const;
  ::OPMessage::CftcPressLine* mutable_carwheel_rking_pressline();
  ::OPMessage::CftcPressLine* release_carwheel_rking_pressline();
  void set_allocated_carwheel_rking_pressline(::OPMessage::CftcPressLine* carwheel_rking_pressline);

  // optional .OPMessage.CftcPressLine carwheel_cking_pressline = 31;
  bool has_carwheel_cking_pressline() const;
  void clear_carwheel_cking_pressline();
  static const int kCarwheelCkingPresslineFieldNumber = 31;
  const ::OPMessage::CftcPressLine& carwheel_cking_pressline() const;
  ::OPMessage::CftcPressLine* mutable_carwheel_cking_pressline();
  ::OPMessage::CftcPressLine* release_carwheel_cking_pressline();
  void set_allocated_carwheel_cking_pressline(::OPMessage::CftcPressLine* carwheel_cking_pressline);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleCftc)
 private:
  inline void set_has_basic_event_check();
  inline void clear_has_basic_event_check();
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_judge_points_type();
  inline void clear_has_judge_points_type();
  inline void set_has_check_start_type();
  inline void clear_has_check_start_type();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_car_run_error_whether_check();
  inline void clear_has_car_run_error_whether_check();
  inline void set_has_car_run_error_voice();
  inline void clear_has_car_run_error_voice();
  inline void set_has_car_run_error_deduction();
  inline void clear_has_car_run_error_deduction();
  inline void set_has_car_rk_check_right_voice();
  inline void clear_has_car_rk_check_right_voice();
  inline void set_has_car_rk_check_fail_voice();
  inline void clear_has_car_rk_check_fail_voice();
  inline void set_has_car_rk_check_fail_deduction();
  inline void clear_has_car_rk_check_fail_deduction();
  inline void set_has_forwarding_pressline();
  inline void clear_has_forwarding_pressline();
  inline void set_has_event_check_rking_rightturnlamp();
  inline void clear_has_event_check_rking_rightturnlamp();
  inline void set_has_rking_pressline();
  inline void clear_has_rking_pressline();
  inline void set_has_event_check_cking_leftturnlamp();
  inline void clear_has_event_check_cking_leftturnlamp();
  inline void set_has_cking_pressline();
  inline void clear_has_cking_pressline();
  inline void set_has_car_run_not_staff_command_voice();
  inline void clear_has_car_run_not_staff_command_voice();
  inline void set_has_car_run_not_staff_command_deduction();
  inline void clear_has_car_run_not_staff_command_deduction();
  inline void set_has_in_area_again();
  inline void clear_has_in_area_again();
  inline void set_has_car_rk_check_delay_time();
  inline void clear_has_car_rk_check_delay_time();
  inline void set_has_event_check_forwarding_rightturnlamp();
  inline void clear_has_event_check_forwarding_rightturnlamp();
  inline void set_has_event_check_waitrk_leftturnlamp();
  inline void clear_has_event_check_waitrk_leftturnlamp();
  inline void set_has_event_check_waitrk_rightturnlamp();
  inline void clear_has_event_check_waitrk_rightturnlamp();
  inline void set_has_event_check_rkend_leftturnlamp();
  inline void clear_has_event_check_rkend_leftturnlamp();
  inline void set_has_event_check_rkend_rightturnlamp();
  inline void clear_has_event_check_rkend_rightturnlamp();
  inline void set_has_carwheel_forwarding_pressline();
  inline void clear_has_carwheel_forwarding_pressline();
  inline void set_has_carwheel_rking_pressline();
  inline void clear_has_carwheel_rking_pressline();
  inline void set_has_carwheel_cking_pressline();
  inline void clear_has_carwheel_cking_pressline();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OPMessage::ItemJudgeBasic* basic_event_check_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  int judge_points_type_;
  int check_start_type_;
  int check_finish_type_;
  ::google::protobuf::int32 car_run_error_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_run_error_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_rk_check_right_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_rk_check_fail_voice_;
  ::OPMessage::CftcPressLine* forwarding_pressline_;
  ::google::protobuf::int32 car_rk_check_fail_deduction_;
  bool car_run_error_whether_check_;
  bool in_area_again_;
  ::OPMessage::BasicRightTurnLamp* event_check_rking_rightturnlamp_;
  ::OPMessage::CftcPressLine* rking_pressline_;
  ::OPMessage::BasicLeftTurnLamp* event_check_cking_leftturnlamp_;
  ::OPMessage::CftcPressLine* cking_pressline_;
  ::google::protobuf::internal::ArenaStringPtr car_run_not_staff_command_voice_;
  ::google::protobuf::int32 car_run_not_staff_command_deduction_;
  ::google::protobuf::int32 car_rk_check_delay_time_;
  ::OPMessage::BasicRightTurnLamp* event_check_forwarding_rightturnlamp_;
  ::OPMessage::BasicLeftTurnLamp* event_check_waitrk_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* event_check_waitrk_rightturnlamp_;
  ::OPMessage::BasicLeftTurnLamp* event_check_rkend_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* event_check_rkend_rightturnlamp_;
  ::OPMessage::CftcPressLine* carwheel_forwarding_pressline_;
  ::OPMessage::CftcPressLine* carwheel_rking_pressline_;
  ::OPMessage::CftcPressLine* carwheel_cking_pressline_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleCftc* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleSpqb : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleSpqb) */ {
 public:
  ItemJudgeRuleSpqb();
  virtual ~ItemJudgeRuleSpqb();

  ItemJudgeRuleSpqb(const ItemJudgeRuleSpqb& from);

  inline ItemJudgeRuleSpqb& operator=(const ItemJudgeRuleSpqb& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleSpqb& default_instance();

  void Swap(ItemJudgeRuleSpqb* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleSpqb* New() const { return New(NULL); }

  ItemJudgeRuleSpqb* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleSpqb& from);
  void MergeFrom(const ItemJudgeRuleSpqb& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleSpqb* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  bool has_basic_event_check() const;
  void clear_basic_event_check();
  static const int kBasicEventCheckFieldNumber = 1;
  const ::OPMessage::ItemJudgeBasic& basic_event_check() const;
  ::OPMessage::ItemJudgeBasic* mutable_basic_event_check();
  ::OPMessage::ItemJudgeBasic* release_basic_event_check();
  void set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check);

  // optional string item_enter_voice = 2;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 2;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 3;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 3;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 4;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 4;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 5;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 5;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  bool has_judge_points_type() const;
  void clear_judge_points_type();
  static const int kJudgePointsTypeFieldNumber = 6;
  ::OPMessage::enum_judge_points judge_points_type() const;
  void set_judge_points_type(::OPMessage::enum_judge_points value);

  // optional .OPMessage.CheckStartCarPositionSpqb check_start_type = 7;
  bool has_check_start_type() const;
  void clear_check_start_type();
  static const int kCheckStartTypeFieldNumber = 7;
  ::OPMessage::CheckStartCarPositionSpqb check_start_type() const;
  void set_check_start_type(::OPMessage::CheckStartCarPositionSpqb value);

  // optional .OPMessage.CheckFinishCarPositionSpqb check_finish_type = 8;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 8;
  ::OPMessage::CheckFinishCarPositionSpqb check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionSpqb value);

  // optional bool car_run_error_whether_check = 9 [default = true];
  bool has_car_run_error_whether_check() const;
  void clear_car_run_error_whether_check();
  static const int kCarRunErrorWhetherCheckFieldNumber = 9;
  bool car_run_error_whether_check() const;
  void set_car_run_error_whether_check(bool value);

  // optional string car_run_error_voice = 10;
  bool has_car_run_error_voice() const;
  void clear_car_run_error_voice();
  static const int kCarRunErrorVoiceFieldNumber = 10;
  const ::std::string& car_run_error_voice() const;
  void set_car_run_error_voice(const ::std::string& value);
  void set_car_run_error_voice(const char* value);
  void set_car_run_error_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_error_voice();
  ::std::string* release_car_run_error_voice();
  void set_allocated_car_run_error_voice(::std::string* car_run_error_voice);

  // optional int32 car_run_error_deduction = 11;
  bool has_car_run_error_deduction() const;
  void clear_car_run_error_deduction();
  static const int kCarRunErrorDeductionFieldNumber = 11;
  ::google::protobuf::int32 car_run_error_deduction() const;
  void set_car_run_error_deduction(::google::protobuf::int32 value);

  // optional string car_dd_head_right_voice = 12;
  bool has_car_dd_head_right_voice() const;
  void clear_car_dd_head_right_voice();
  static const int kCarDdHeadRightVoiceFieldNumber = 12;
  const ::std::string& car_dd_head_right_voice() const;
  void set_car_dd_head_right_voice(const ::std::string& value);
  void set_car_dd_head_right_voice(const char* value);
  void set_car_dd_head_right_voice(const char* value, size_t size);
  ::std::string* mutable_car_dd_head_right_voice();
  ::std::string* release_car_dd_head_right_voice();
  void set_allocated_car_dd_head_right_voice(::std::string* car_dd_head_right_voice);

  // optional string car_dd_head_more_50cm_voice = 13;
  bool has_car_dd_head_more_50cm_voice() const;
  void clear_car_dd_head_more_50cm_voice();
  static const int kCarDdHeadMore50CmVoiceFieldNumber = 13;
  const ::std::string& car_dd_head_more_50cm_voice() const;
  void set_car_dd_head_more_50cm_voice(const ::std::string& value);
  void set_car_dd_head_more_50cm_voice(const char* value);
  void set_car_dd_head_more_50cm_voice(const char* value, size_t size);
  ::std::string* mutable_car_dd_head_more_50cm_voice();
  ::std::string* release_car_dd_head_more_50cm_voice();
  void set_allocated_car_dd_head_more_50cm_voice(::std::string* car_dd_head_more_50cm_voice);

  // optional int32 car_dd_head_more_50cm_deduction = 14;
  bool has_car_dd_head_more_50cm_deduction() const;
  void clear_car_dd_head_more_50cm_deduction();
  static const int kCarDdHeadMore50CmDeductionFieldNumber = 14;
  ::google::protobuf::int32 car_dd_head_more_50cm_deduction() const;
  void set_car_dd_head_more_50cm_deduction(::google::protobuf::int32 value);

  // optional string car_dd_head_not_more_50cm_voice = 15;
  bool has_car_dd_head_not_more_50cm_voice() const;
  void clear_car_dd_head_not_more_50cm_voice();
  static const int kCarDdHeadNotMore50CmVoiceFieldNumber = 15;
  const ::std::string& car_dd_head_not_more_50cm_voice() const;
  void set_car_dd_head_not_more_50cm_voice(const ::std::string& value);
  void set_car_dd_head_not_more_50cm_voice(const char* value);
  void set_car_dd_head_not_more_50cm_voice(const char* value, size_t size);
  ::std::string* mutable_car_dd_head_not_more_50cm_voice();
  ::std::string* release_car_dd_head_not_more_50cm_voice();
  void set_allocated_car_dd_head_not_more_50cm_voice(::std::string* car_dd_head_not_more_50cm_voice);

  // optional int32 car_dd_head_not_more_50cm_deduction = 16;
  bool has_car_dd_head_not_more_50cm_deduction() const;
  void clear_car_dd_head_not_more_50cm_deduction();
  static const int kCarDdHeadNotMore50CmDeductionFieldNumber = 16;
  ::google::protobuf::int32 car_dd_head_not_more_50cm_deduction() const;
  void set_car_dd_head_not_more_50cm_deduction(::google::protobuf::int32 value);

  // optional int32 car_dd_carWheel_PressLine_deduction = 17 [default = 100];
  bool has_car_dd_carwheel_pressline_deduction() const;
  void clear_car_dd_carwheel_pressline_deduction();
  static const int kCarDdCarWheelPressLineDeductionFieldNumber = 17;
  ::google::protobuf::int32 car_dd_carwheel_pressline_deduction() const;
  void set_car_dd_carwheel_pressline_deduction(::google::protobuf::int32 value);

  // optional string car_dd_carWheel_PressLine_voice = 18;
  bool has_car_dd_carwheel_pressline_voice() const;
  void clear_car_dd_carwheel_pressline_voice();
  static const int kCarDdCarWheelPressLineVoiceFieldNumber = 18;
  const ::std::string& car_dd_carwheel_pressline_voice() const;
  void set_car_dd_carwheel_pressline_voice(const ::std::string& value);
  void set_car_dd_carwheel_pressline_voice(const char* value);
  void set_car_dd_carwheel_pressline_voice(const char* value, size_t size);
  ::std::string* mutable_car_dd_carwheel_pressline_voice();
  ::std::string* release_car_dd_carwheel_pressline_voice();
  void set_allocated_car_dd_carwheel_pressline_voice(::std::string* car_dd_carwheel_pressline_voice);

  // optional string car_dd_right_line_more_30cm_less_50cm_voice = 19;
  bool has_car_dd_right_line_more_30cm_less_50cm_voice() const;
  void clear_car_dd_right_line_more_30cm_less_50cm_voice();
  static const int kCarDdRightLineMore30CmLess50CmVoiceFieldNumber = 19;
  const ::std::string& car_dd_right_line_more_30cm_less_50cm_voice() const;
  void set_car_dd_right_line_more_30cm_less_50cm_voice(const ::std::string& value);
  void set_car_dd_right_line_more_30cm_less_50cm_voice(const char* value);
  void set_car_dd_right_line_more_30cm_less_50cm_voice(const char* value, size_t size);
  ::std::string* mutable_car_dd_right_line_more_30cm_less_50cm_voice();
  ::std::string* release_car_dd_right_line_more_30cm_less_50cm_voice();
  void set_allocated_car_dd_right_line_more_30cm_less_50cm_voice(::std::string* car_dd_right_line_more_30cm_less_50cm_voice);

  // optional int32 car_dd_right_line_more_30cm_less_50cm_deduction = 20;
  bool has_car_dd_right_line_more_30cm_less_50cm_deduction() const;
  void clear_car_dd_right_line_more_30cm_less_50cm_deduction();
  static const int kCarDdRightLineMore30CmLess50CmDeductionFieldNumber = 20;
  ::google::protobuf::int32 car_dd_right_line_more_30cm_less_50cm_deduction() const;
  void set_car_dd_right_line_more_30cm_less_50cm_deduction(::google::protobuf::int32 value);

  // optional string car_dd_right_line_more_50cm_voice = 21;
  bool has_car_dd_right_line_more_50cm_voice() const;
  void clear_car_dd_right_line_more_50cm_voice();
  static const int kCarDdRightLineMore50CmVoiceFieldNumber = 21;
  const ::std::string& car_dd_right_line_more_50cm_voice() const;
  void set_car_dd_right_line_more_50cm_voice(const ::std::string& value);
  void set_car_dd_right_line_more_50cm_voice(const char* value);
  void set_car_dd_right_line_more_50cm_voice(const char* value, size_t size);
  ::std::string* mutable_car_dd_right_line_more_50cm_voice();
  ::std::string* release_car_dd_right_line_more_50cm_voice();
  void set_allocated_car_dd_right_line_more_50cm_voice(::std::string* car_dd_right_line_more_50cm_voice);

  // optional int32 car_dd_right_line_more_50cm_deduction = 22;
  bool has_car_dd_right_line_more_50cm_deduction() const;
  void clear_car_dd_right_line_more_50cm_deduction();
  static const int kCarDdRightLineMore50CmDeductionFieldNumber = 22;
  ::google::protobuf::int32 car_dd_right_line_more_50cm_deduction() const;
  void set_car_dd_right_line_more_50cm_deduction(::google::protobuf::int32 value);

  // optional string car_hl_distance_more_30cm_voice = 23;
  bool has_car_hl_distance_more_30cm_voice() const;
  void clear_car_hl_distance_more_30cm_voice();
  static const int kCarHlDistanceMore30CmVoiceFieldNumber = 23;
  const ::std::string& car_hl_distance_more_30cm_voice() const;
  void set_car_hl_distance_more_30cm_voice(const ::std::string& value);
  void set_car_hl_distance_more_30cm_voice(const char* value);
  void set_car_hl_distance_more_30cm_voice(const char* value, size_t size);
  ::std::string* mutable_car_hl_distance_more_30cm_voice();
  ::std::string* release_car_hl_distance_more_30cm_voice();
  void set_allocated_car_hl_distance_more_30cm_voice(::std::string* car_hl_distance_more_30cm_voice);

  // optional int32 car_hl_distance_more_30cm_deduction = 24;
  bool has_car_hl_distance_more_30cm_deduction() const;
  void clear_car_hl_distance_more_30cm_deduction();
  static const int kCarHlDistanceMore30CmDeductionFieldNumber = 24;
  ::google::protobuf::int32 car_hl_distance_more_30cm_deduction() const;
  void set_car_hl_distance_more_30cm_deduction(::google::protobuf::int32 value);

  // optional string car_hl_distance_less_30cm_voice = 25;
  bool has_car_hl_distance_less_30cm_voice() const;
  void clear_car_hl_distance_less_30cm_voice();
  static const int kCarHlDistanceLess30CmVoiceFieldNumber = 25;
  const ::std::string& car_hl_distance_less_30cm_voice() const;
  void set_car_hl_distance_less_30cm_voice(const ::std::string& value);
  void set_car_hl_distance_less_30cm_voice(const char* value);
  void set_car_hl_distance_less_30cm_voice(const char* value, size_t size);
  ::std::string* mutable_car_hl_distance_less_30cm_voice();
  ::std::string* release_car_hl_distance_less_30cm_voice();
  void set_allocated_car_hl_distance_less_30cm_voice(::std::string* car_hl_distance_less_30cm_voice);

  // optional int32 car_hl_distance_less_30cm_deduction = 26;
  bool has_car_hl_distance_less_30cm_deduction() const;
  void clear_car_hl_distance_less_30cm_deduction();
  static const int kCarHlDistanceLess30CmDeductionFieldNumber = 26;
  ::google::protobuf::int32 car_hl_distance_less_30cm_deduction() const;
  void set_car_hl_distance_less_30cm_deduction(::google::protobuf::int32 value);

  // optional int32 car_qb_timeout_num = 27;
  bool has_car_qb_timeout_num() const;
  void clear_car_qb_timeout_num();
  static const int kCarQbTimeoutNumFieldNumber = 27;
  ::google::protobuf::int32 car_qb_timeout_num() const;
  void set_car_qb_timeout_num(::google::protobuf::int32 value);

  // optional string car_qb_timeout_voice = 28;
  bool has_car_qb_timeout_voice() const;
  void clear_car_qb_timeout_voice();
  static const int kCarQbTimeoutVoiceFieldNumber = 28;
  const ::std::string& car_qb_timeout_voice() const;
  void set_car_qb_timeout_voice(const ::std::string& value);
  void set_car_qb_timeout_voice(const char* value);
  void set_car_qb_timeout_voice(const char* value, size_t size);
  ::std::string* mutable_car_qb_timeout_voice();
  ::std::string* release_car_qb_timeout_voice();
  void set_allocated_car_qb_timeout_voice(::std::string* car_qb_timeout_voice);

  // optional int32 car_qb_timeout_deduction = 29;
  bool has_car_qb_timeout_deduction() const;
  void clear_car_qb_timeout_deduction();
  static const int kCarQbTimeoutDeductionFieldNumber = 29;
  ::google::protobuf::int32 car_qb_timeout_deduction() const;
  void set_car_qb_timeout_deduction(::google::protobuf::int32 value);

  // optional bool car_PressLine_whether_check = 30 [default = true];
  bool has_car_pressline_whether_check() const;
  void clear_car_pressline_whether_check();
  static const int kCarPressLineWhetherCheckFieldNumber = 30;
  bool car_pressline_whether_check() const;
  void set_car_pressline_whether_check(bool value);

  // optional int32 car_PressLine_deduction = 31 [default = 100];
  bool has_car_pressline_deduction() const;
  void clear_car_pressline_deduction();
  static const int kCarPressLineDeductionFieldNumber = 31;
  ::google::protobuf::int32 car_pressline_deduction() const;
  void set_car_pressline_deduction(::google::protobuf::int32 value);

  // optional string car_PressLine_voice = 32;
  bool has_car_pressline_voice() const;
  void clear_car_pressline_voice();
  static const int kCarPressLineVoiceFieldNumber = 32;
  const ::std::string& car_pressline_voice() const;
  void set_car_pressline_voice(const ::std::string& value);
  void set_car_pressline_voice(const char* value);
  void set_car_pressline_voice(const char* value, size_t size);
  ::std::string* mutable_car_pressline_voice();
  ::std::string* release_car_pressline_voice();
  void set_allocated_car_pressline_voice(::std::string* car_pressline_voice);

  // optional string car_run_not_staff_command_voice = 33;
  bool has_car_run_not_staff_command_voice() const;
  void clear_car_run_not_staff_command_voice();
  static const int kCarRunNotStaffCommandVoiceFieldNumber = 33;
  const ::std::string& car_run_not_staff_command_voice() const;
  void set_car_run_not_staff_command_voice(const ::std::string& value);
  void set_car_run_not_staff_command_voice(const char* value);
  void set_car_run_not_staff_command_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_not_staff_command_voice();
  ::std::string* release_car_run_not_staff_command_voice();
  void set_allocated_car_run_not_staff_command_voice(::std::string* car_run_not_staff_command_voice);

  // optional int32 car_run_not_staff_command_deduction = 34;
  bool has_car_run_not_staff_command_deduction() const;
  void clear_car_run_not_staff_command_deduction();
  static const int kCarRunNotStaffCommandDeductionFieldNumber = 34;
  ::google::protobuf::int32 car_run_not_staff_command_deduction() const;
  void set_car_run_not_staff_command_deduction(::google::protobuf::int32 value);

  // optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 35;
  bool has_event_check_cking_leftturnlamp() const;
  void clear_event_check_cking_leftturnlamp();
  static const int kEventCheckCkingLeftTurnLampFieldNumber = 35;
  const ::OPMessage::BasicLeftTurnLamp& event_check_cking_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_event_check_cking_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_event_check_cking_leftturnlamp();
  void set_allocated_event_check_cking_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_cking_leftturnlamp);

  // optional bool in_area_again = 36 [default = false];
  bool has_in_area_again() const;
  void clear_in_area_again();
  static const int kInAreaAgainFieldNumber = 36;
  bool in_area_again() const;
  void set_in_area_again(bool value);

  // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 37;
  bool has_event_check_forwarding_rightturnlamp() const;
  void clear_event_check_forwarding_rightturnlamp();
  static const int kEventCheckForwardingRightTurnLampFieldNumber = 37;
  const ::OPMessage::BasicRightTurnLamp& event_check_forwarding_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_forwarding_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_forwarding_rightturnlamp();
  void set_allocated_event_check_forwarding_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_forwarding_rightturnlamp);

  // optional .OPMessage.BasicLeftTurnLamp event_check_waitqb_leftTurnLamp = 38;
  bool has_event_check_waitqb_leftturnlamp() const;
  void clear_event_check_waitqb_leftturnlamp();
  static const int kEventCheckWaitqbLeftTurnLampFieldNumber = 38;
  const ::OPMessage::BasicLeftTurnLamp& event_check_waitqb_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_event_check_waitqb_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_event_check_waitqb_leftturnlamp();
  void set_allocated_event_check_waitqb_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_waitqb_leftturnlamp);

  // optional .OPMessage.BasicRightTurnLamp event_check_waitqb_rightTurnLamp = 39;
  bool has_event_check_waitqb_rightturnlamp() const;
  void clear_event_check_waitqb_rightturnlamp();
  static const int kEventCheckWaitqbRightTurnLampFieldNumber = 39;
  const ::OPMessage::BasicRightTurnLamp& event_check_waitqb_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_waitqb_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_waitqb_rightturnlamp();
  void set_allocated_event_check_waitqb_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_waitqb_rightturnlamp);

  // optional .OPMessage.BasicHandBrake event_check_waitqb_handBrake = 40;
  bool has_event_check_waitqb_handbrake() const;
  void clear_event_check_waitqb_handbrake();
  static const int kEventCheckWaitqbHandBrakeFieldNumber = 40;
  const ::OPMessage::BasicHandBrake& event_check_waitqb_handbrake() const;
  ::OPMessage::BasicHandBrake* mutable_event_check_waitqb_handbrake();
  ::OPMessage::BasicHandBrake* release_event_check_waitqb_handbrake();
  void set_allocated_event_check_waitqb_handbrake(::OPMessage::BasicHandBrake* event_check_waitqb_handbrake);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleSpqb)
 private:
  inline void set_has_basic_event_check();
  inline void clear_has_basic_event_check();
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_judge_points_type();
  inline void clear_has_judge_points_type();
  inline void set_has_check_start_type();
  inline void clear_has_check_start_type();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_car_run_error_whether_check();
  inline void clear_has_car_run_error_whether_check();
  inline void set_has_car_run_error_voice();
  inline void clear_has_car_run_error_voice();
  inline void set_has_car_run_error_deduction();
  inline void clear_has_car_run_error_deduction();
  inline void set_has_car_dd_head_right_voice();
  inline void clear_has_car_dd_head_right_voice();
  inline void set_has_car_dd_head_more_50cm_voice();
  inline void clear_has_car_dd_head_more_50cm_voice();
  inline void set_has_car_dd_head_more_50cm_deduction();
  inline void clear_has_car_dd_head_more_50cm_deduction();
  inline void set_has_car_dd_head_not_more_50cm_voice();
  inline void clear_has_car_dd_head_not_more_50cm_voice();
  inline void set_has_car_dd_head_not_more_50cm_deduction();
  inline void clear_has_car_dd_head_not_more_50cm_deduction();
  inline void set_has_car_dd_carwheel_pressline_deduction();
  inline void clear_has_car_dd_carwheel_pressline_deduction();
  inline void set_has_car_dd_carwheel_pressline_voice();
  inline void clear_has_car_dd_carwheel_pressline_voice();
  inline void set_has_car_dd_right_line_more_30cm_less_50cm_voice();
  inline void clear_has_car_dd_right_line_more_30cm_less_50cm_voice();
  inline void set_has_car_dd_right_line_more_30cm_less_50cm_deduction();
  inline void clear_has_car_dd_right_line_more_30cm_less_50cm_deduction();
  inline void set_has_car_dd_right_line_more_50cm_voice();
  inline void clear_has_car_dd_right_line_more_50cm_voice();
  inline void set_has_car_dd_right_line_more_50cm_deduction();
  inline void clear_has_car_dd_right_line_more_50cm_deduction();
  inline void set_has_car_hl_distance_more_30cm_voice();
  inline void clear_has_car_hl_distance_more_30cm_voice();
  inline void set_has_car_hl_distance_more_30cm_deduction();
  inline void clear_has_car_hl_distance_more_30cm_deduction();
  inline void set_has_car_hl_distance_less_30cm_voice();
  inline void clear_has_car_hl_distance_less_30cm_voice();
  inline void set_has_car_hl_distance_less_30cm_deduction();
  inline void clear_has_car_hl_distance_less_30cm_deduction();
  inline void set_has_car_qb_timeout_num();
  inline void clear_has_car_qb_timeout_num();
  inline void set_has_car_qb_timeout_voice();
  inline void clear_has_car_qb_timeout_voice();
  inline void set_has_car_qb_timeout_deduction();
  inline void clear_has_car_qb_timeout_deduction();
  inline void set_has_car_pressline_whether_check();
  inline void clear_has_car_pressline_whether_check();
  inline void set_has_car_pressline_deduction();
  inline void clear_has_car_pressline_deduction();
  inline void set_has_car_pressline_voice();
  inline void clear_has_car_pressline_voice();
  inline void set_has_car_run_not_staff_command_voice();
  inline void clear_has_car_run_not_staff_command_voice();
  inline void set_has_car_run_not_staff_command_deduction();
  inline void clear_has_car_run_not_staff_command_deduction();
  inline void set_has_event_check_cking_leftturnlamp();
  inline void clear_has_event_check_cking_leftturnlamp();
  inline void set_has_in_area_again();
  inline void clear_has_in_area_again();
  inline void set_has_event_check_forwarding_rightturnlamp();
  inline void clear_has_event_check_forwarding_rightturnlamp();
  inline void set_has_event_check_waitqb_leftturnlamp();
  inline void clear_has_event_check_waitqb_leftturnlamp();
  inline void set_has_event_check_waitqb_rightturnlamp();
  inline void clear_has_event_check_waitqb_rightturnlamp();
  inline void set_has_event_check_waitqb_handbrake();
  inline void clear_has_event_check_waitqb_handbrake();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::OPMessage::ItemJudgeBasic* basic_event_check_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  int judge_points_type_;
  int check_start_type_;
  int check_finish_type_;
  ::google::protobuf::int32 car_run_error_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_run_error_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_dd_head_right_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_dd_head_more_50cm_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_dd_head_not_more_50cm_voice_;
  ::google::protobuf::int32 car_dd_head_more_50cm_deduction_;
  ::google::protobuf::int32 car_dd_head_not_more_50cm_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_dd_carwheel_pressline_voice_;
  ::google::protobuf::int32 car_dd_carwheel_pressline_deduction_;
  ::google::protobuf::int32 car_dd_right_line_more_30cm_less_50cm_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_dd_right_line_more_30cm_less_50cm_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_dd_right_line_more_50cm_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_hl_distance_more_30cm_voice_;
  ::google::protobuf::int32 car_dd_right_line_more_50cm_deduction_;
  ::google::protobuf::int32 car_hl_distance_more_30cm_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_hl_distance_less_30cm_voice_;
  bool car_run_error_whether_check_;
  bool car_pressline_whether_check_;
  bool in_area_again_;
  ::google::protobuf::int32 car_hl_distance_less_30cm_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_qb_timeout_voice_;
  ::google::protobuf::int32 car_qb_timeout_num_;
  ::google::protobuf::int32 car_qb_timeout_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_pressline_voice_;
  ::google::protobuf::int32 car_pressline_deduction_;
  ::google::protobuf::int32 car_run_not_staff_command_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_run_not_staff_command_voice_;
  ::OPMessage::BasicLeftTurnLamp* event_check_cking_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* event_check_forwarding_rightturnlamp_;
  ::OPMessage::BasicLeftTurnLamp* event_check_waitqb_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* event_check_waitqb_rightturnlamp_;
  ::OPMessage::BasicHandBrake* event_check_waitqb_handbrake_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleSpqb* default_instance_;
};
// -------------------------------------------------------------------

class DcrkPressLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.DcrkPressLine) */ {
 public:
  DcrkPressLine();
  virtual ~DcrkPressLine();

  DcrkPressLine(const DcrkPressLine& from);

  inline DcrkPressLine& operator=(const DcrkPressLine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DcrkPressLine& default_instance();

  void Swap(DcrkPressLine* other);

  // implements Message ----------------------------------------------

  inline DcrkPressLine* New() const { return New(NULL); }

  DcrkPressLine* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DcrkPressLine& from);
  void MergeFrom(const DcrkPressLine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DcrkPressLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string car_run_pressline_3_voice = 1;
  bool has_car_run_pressline_3_voice() const;
  void clear_car_run_pressline_3_voice();
  static const int kCarRunPressline3VoiceFieldNumber = 1;
  const ::std::string& car_run_pressline_3_voice() const;
  void set_car_run_pressline_3_voice(const ::std::string& value);
  void set_car_run_pressline_3_voice(const char* value);
  void set_car_run_pressline_3_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_pressline_3_voice();
  ::std::string* release_car_run_pressline_3_voice();
  void set_allocated_car_run_pressline_3_voice(::std::string* car_run_pressline_3_voice);

  // optional int32 car_run_pressline_3_deduction = 2;
  bool has_car_run_pressline_3_deduction() const;
  void clear_car_run_pressline_3_deduction();
  static const int kCarRunPressline3DeductionFieldNumber = 2;
  ::google::protobuf::int32 car_run_pressline_3_deduction() const;
  void set_car_run_pressline_3_deduction(::google::protobuf::int32 value);

  // optional string car_run_pressline_4_voice = 3;
  bool has_car_run_pressline_4_voice() const;
  void clear_car_run_pressline_4_voice();
  static const int kCarRunPressline4VoiceFieldNumber = 3;
  const ::std::string& car_run_pressline_4_voice() const;
  void set_car_run_pressline_4_voice(const ::std::string& value);
  void set_car_run_pressline_4_voice(const char* value);
  void set_car_run_pressline_4_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_pressline_4_voice();
  ::std::string* release_car_run_pressline_4_voice();
  void set_allocated_car_run_pressline_4_voice(::std::string* car_run_pressline_4_voice);

  // optional int32 car_run_pressline_4_deduction = 4;
  bool has_car_run_pressline_4_deduction() const;
  void clear_car_run_pressline_4_deduction();
  static const int kCarRunPressline4DeductionFieldNumber = 4;
  ::google::protobuf::int32 car_run_pressline_4_deduction() const;
  void set_car_run_pressline_4_deduction(::google::protobuf::int32 value);

  // optional string car_run_pressline_8_voice = 5;
  bool has_car_run_pressline_8_voice() const;
  void clear_car_run_pressline_8_voice();
  static const int kCarRunPressline8VoiceFieldNumber = 5;
  const ::std::string& car_run_pressline_8_voice() const;
  void set_car_run_pressline_8_voice(const ::std::string& value);
  void set_car_run_pressline_8_voice(const char* value);
  void set_car_run_pressline_8_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_pressline_8_voice();
  ::std::string* release_car_run_pressline_8_voice();
  void set_allocated_car_run_pressline_8_voice(::std::string* car_run_pressline_8_voice);

  // optional int32 car_run_pressline_8_deduction = 6;
  bool has_car_run_pressline_8_deduction() const;
  void clear_car_run_pressline_8_deduction();
  static const int kCarRunPressline8DeductionFieldNumber = 6;
  ::google::protobuf::int32 car_run_pressline_8_deduction() const;
  void set_car_run_pressline_8_deduction(::google::protobuf::int32 value);

  // optional string car_run_pressline_7_voice = 7;
  bool has_car_run_pressline_7_voice() const;
  void clear_car_run_pressline_7_voice();
  static const int kCarRunPressline7VoiceFieldNumber = 7;
  const ::std::string& car_run_pressline_7_voice() const;
  void set_car_run_pressline_7_voice(const ::std::string& value);
  void set_car_run_pressline_7_voice(const char* value);
  void set_car_run_pressline_7_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_pressline_7_voice();
  ::std::string* release_car_run_pressline_7_voice();
  void set_allocated_car_run_pressline_7_voice(::std::string* car_run_pressline_7_voice);

  // optional int32 car_run_pressline_7_deduction = 8;
  bool has_car_run_pressline_7_deduction() const;
  void clear_car_run_pressline_7_deduction();
  static const int kCarRunPressline7DeductionFieldNumber = 8;
  ::google::protobuf::int32 car_run_pressline_7_deduction() const;
  void set_car_run_pressline_7_deduction(::google::protobuf::int32 value);

  // optional string car_run_pressline_5_voice = 9;
  bool has_car_run_pressline_5_voice() const;
  void clear_car_run_pressline_5_voice();
  static const int kCarRunPressline5VoiceFieldNumber = 9;
  const ::std::string& car_run_pressline_5_voice() const;
  void set_car_run_pressline_5_voice(const ::std::string& value);
  void set_car_run_pressline_5_voice(const char* value);
  void set_car_run_pressline_5_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_pressline_5_voice();
  ::std::string* release_car_run_pressline_5_voice();
  void set_allocated_car_run_pressline_5_voice(::std::string* car_run_pressline_5_voice);

  // optional int32 car_run_pressline_5_deduction = 10;
  bool has_car_run_pressline_5_deduction() const;
  void clear_car_run_pressline_5_deduction();
  static const int kCarRunPressline5DeductionFieldNumber = 10;
  ::google::protobuf::int32 car_run_pressline_5_deduction() const;
  void set_car_run_pressline_5_deduction(::google::protobuf::int32 value);

  // optional string car_run_pressline_6_voice = 11;
  bool has_car_run_pressline_6_voice() const;
  void clear_car_run_pressline_6_voice();
  static const int kCarRunPressline6VoiceFieldNumber = 11;
  const ::std::string& car_run_pressline_6_voice() const;
  void set_car_run_pressline_6_voice(const ::std::string& value);
  void set_car_run_pressline_6_voice(const char* value);
  void set_car_run_pressline_6_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_pressline_6_voice();
  ::std::string* release_car_run_pressline_6_voice();
  void set_allocated_car_run_pressline_6_voice(::std::string* car_run_pressline_6_voice);

  // optional int32 car_run_pressline_6_deduction = 12;
  bool has_car_run_pressline_6_deduction() const;
  void clear_car_run_pressline_6_deduction();
  static const int kCarRunPressline6DeductionFieldNumber = 12;
  ::google::protobuf::int32 car_run_pressline_6_deduction() const;
  void set_car_run_pressline_6_deduction(::google::protobuf::int32 value);

  // repeated int32 car_pressline_nums_mutex = 13;
  int car_pressline_nums_mutex_size() const;
  void clear_car_pressline_nums_mutex();
  static const int kCarPresslineNumsMutexFieldNumber = 13;
  ::google::protobuf::int32 car_pressline_nums_mutex(int index) const;
  void set_car_pressline_nums_mutex(int index, ::google::protobuf::int32 value);
  void add_car_pressline_nums_mutex(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      car_pressline_nums_mutex() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_car_pressline_nums_mutex();

  // @@protoc_insertion_point(class_scope:OPMessage.DcrkPressLine)
 private:
  inline void set_has_car_run_pressline_3_voice();
  inline void clear_has_car_run_pressline_3_voice();
  inline void set_has_car_run_pressline_3_deduction();
  inline void clear_has_car_run_pressline_3_deduction();
  inline void set_has_car_run_pressline_4_voice();
  inline void clear_has_car_run_pressline_4_voice();
  inline void set_has_car_run_pressline_4_deduction();
  inline void clear_has_car_run_pressline_4_deduction();
  inline void set_has_car_run_pressline_8_voice();
  inline void clear_has_car_run_pressline_8_voice();
  inline void set_has_car_run_pressline_8_deduction();
  inline void clear_has_car_run_pressline_8_deduction();
  inline void set_has_car_run_pressline_7_voice();
  inline void clear_has_car_run_pressline_7_voice();
  inline void set_has_car_run_pressline_7_deduction();
  inline void clear_has_car_run_pressline_7_deduction();
  inline void set_has_car_run_pressline_5_voice();
  inline void clear_has_car_run_pressline_5_voice();
  inline void set_has_car_run_pressline_5_deduction();
  inline void clear_has_car_run_pressline_5_deduction();
  inline void set_has_car_run_pressline_6_voice();
  inline void clear_has_car_run_pressline_6_voice();
  inline void set_has_car_run_pressline_6_deduction();
  inline void clear_has_car_run_pressline_6_deduction();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr car_run_pressline_3_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_run_pressline_4_voice_;
  ::google::protobuf::int32 car_run_pressline_3_deduction_;
  ::google::protobuf::int32 car_run_pressline_4_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_run_pressline_8_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_run_pressline_7_voice_;
  ::google::protobuf::int32 car_run_pressline_8_deduction_;
  ::google::protobuf::int32 car_run_pressline_7_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_run_pressline_5_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_run_pressline_6_voice_;
  ::google::protobuf::int32 car_run_pressline_5_deduction_;
  ::google::protobuf::int32 car_run_pressline_6_deduction_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > car_pressline_nums_mutex_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static DcrkPressLine* default_instance_;
};
// -------------------------------------------------------------------

class ItemJudgeRuleDcrk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemJudgeRuleDcrk) */ {
 public:
  ItemJudgeRuleDcrk();
  virtual ~ItemJudgeRuleDcrk();

  ItemJudgeRuleDcrk(const ItemJudgeRuleDcrk& from);

  inline ItemJudgeRuleDcrk& operator=(const ItemJudgeRuleDcrk& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemJudgeRuleDcrk& default_instance();

  void Swap(ItemJudgeRuleDcrk* other);

  // implements Message ----------------------------------------------

  inline ItemJudgeRuleDcrk* New() const { return New(NULL); }

  ItemJudgeRuleDcrk* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemJudgeRuleDcrk& from);
  void MergeFrom(const ItemJudgeRuleDcrk& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemJudgeRuleDcrk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  bool has_basic_event_check() const;
  void clear_basic_event_check();
  static const int kBasicEventCheckFieldNumber = 1;
  const ::OPMessage::ItemJudgeBasic& basic_event_check() const;
  ::OPMessage::ItemJudgeBasic* mutable_basic_event_check();
  ::OPMessage::ItemJudgeBasic* release_basic_event_check();
  void set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check);

  // optional string item_enter_voice = 2;
  bool has_item_enter_voice() const;
  void clear_item_enter_voice();
  static const int kItemEnterVoiceFieldNumber = 2;
  const ::std::string& item_enter_voice() const;
  void set_item_enter_voice(const ::std::string& value);
  void set_item_enter_voice(const char* value);
  void set_item_enter_voice(const char* value, size_t size);
  ::std::string* mutable_item_enter_voice();
  ::std::string* release_item_enter_voice();
  void set_allocated_item_enter_voice(::std::string* item_enter_voice);

  // optional string item_leave_voice = 3;
  bool has_item_leave_voice() const;
  void clear_item_leave_voice();
  static const int kItemLeaveVoiceFieldNumber = 3;
  const ::std::string& item_leave_voice() const;
  void set_item_leave_voice(const ::std::string& value);
  void set_item_leave_voice(const char* value);
  void set_item_leave_voice(const char* value, size_t size);
  ::std::string* mutable_item_leave_voice();
  ::std::string* release_item_leave_voice();
  void set_allocated_item_leave_voice(::std::string* item_leave_voice);

  // optional string item_start_voice = 4;
  bool has_item_start_voice() const;
  void clear_item_start_voice();
  static const int kItemStartVoiceFieldNumber = 4;
  const ::std::string& item_start_voice() const;
  void set_item_start_voice(const ::std::string& value);
  void set_item_start_voice(const char* value);
  void set_item_start_voice(const char* value, size_t size);
  ::std::string* mutable_item_start_voice();
  ::std::string* release_item_start_voice();
  void set_allocated_item_start_voice(::std::string* item_start_voice);

  // optional string item_end_voice = 5;
  bool has_item_end_voice() const;
  void clear_item_end_voice();
  static const int kItemEndVoiceFieldNumber = 5;
  const ::std::string& item_end_voice() const;
  void set_item_end_voice(const ::std::string& value);
  void set_item_end_voice(const char* value);
  void set_item_end_voice(const char* value, size_t size);
  ::std::string* mutable_item_end_voice();
  ::std::string* release_item_end_voice();
  void set_allocated_item_end_voice(::std::string* item_end_voice);

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  bool has_judge_points_type() const;
  void clear_judge_points_type();
  static const int kJudgePointsTypeFieldNumber = 6;
  ::OPMessage::enum_judge_points judge_points_type() const;
  void set_judge_points_type(::OPMessage::enum_judge_points value);

  // optional .OPMessage.CheckStartCarPositionDcrk check_start_type = 7;
  bool has_check_start_type() const;
  void clear_check_start_type();
  static const int kCheckStartTypeFieldNumber = 7;
  ::OPMessage::CheckStartCarPositionDcrk check_start_type() const;
  void set_check_start_type(::OPMessage::CheckStartCarPositionDcrk value);

  // optional .OPMessage.CheckFinishCarPositionDcrk check_finish_type = 8;
  bool has_check_finish_type() const;
  void clear_check_finish_type();
  static const int kCheckFinishTypeFieldNumber = 8;
  ::OPMessage::CheckFinishCarPositionDcrk check_finish_type() const;
  void set_check_finish_type(::OPMessage::CheckFinishCarPositionDcrk value);

  // optional bool car_run_error_whether_check = 9 [default = true];
  bool has_car_run_error_whether_check() const;
  void clear_car_run_error_whether_check();
  static const int kCarRunErrorWhetherCheckFieldNumber = 9;
  bool car_run_error_whether_check() const;
  void set_car_run_error_whether_check(bool value);

  // optional string car_run_error_voice = 10;
  bool has_car_run_error_voice() const;
  void clear_car_run_error_voice();
  static const int kCarRunErrorVoiceFieldNumber = 10;
  const ::std::string& car_run_error_voice() const;
  void set_car_run_error_voice(const ::std::string& value);
  void set_car_run_error_voice(const char* value);
  void set_car_run_error_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_error_voice();
  ::std::string* release_car_run_error_voice();
  void set_allocated_car_run_error_voice(::std::string* car_run_error_voice);

  // optional int32 car_run_error_deduction = 11;
  bool has_car_run_error_deduction() const;
  void clear_car_run_error_deduction();
  static const int kCarRunErrorDeductionFieldNumber = 11;
  ::google::protobuf::int32 car_run_error_deduction() const;
  void set_car_run_error_deduction(::google::protobuf::int32 value);

  // optional string car_rk_check_right_voice = 12;
  bool has_car_rk_check_right_voice() const;
  void clear_car_rk_check_right_voice();
  static const int kCarRkCheckRightVoiceFieldNumber = 12;
  const ::std::string& car_rk_check_right_voice() const;
  void set_car_rk_check_right_voice(const ::std::string& value);
  void set_car_rk_check_right_voice(const char* value);
  void set_car_rk_check_right_voice(const char* value, size_t size);
  ::std::string* mutable_car_rk_check_right_voice();
  ::std::string* release_car_rk_check_right_voice();
  void set_allocated_car_rk_check_right_voice(::std::string* car_rk_check_right_voice);

  // optional string car_rk_check_fail_voice = 13;
  bool has_car_rk_check_fail_voice() const;
  void clear_car_rk_check_fail_voice();
  static const int kCarRkCheckFailVoiceFieldNumber = 13;
  const ::std::string& car_rk_check_fail_voice() const;
  void set_car_rk_check_fail_voice(const ::std::string& value);
  void set_car_rk_check_fail_voice(const char* value);
  void set_car_rk_check_fail_voice(const char* value, size_t size);
  ::std::string* mutable_car_rk_check_fail_voice();
  ::std::string* release_car_rk_check_fail_voice();
  void set_allocated_car_rk_check_fail_voice(::std::string* car_rk_check_fail_voice);

  // optional int32 car_rk_check_fail_deduction = 14;
  bool has_car_rk_check_fail_deduction() const;
  void clear_car_rk_check_fail_deduction();
  static const int kCarRkCheckFailDeductionFieldNumber = 14;
  ::google::protobuf::int32 car_rk_check_fail_deduction() const;
  void set_car_rk_check_fail_deduction(::google::protobuf::int32 value);

  // optional .OPMessage.DcrkPressLine forwarding_pressline = 15;
  bool has_forwarding_pressline() const;
  void clear_forwarding_pressline();
  static const int kForwardingPresslineFieldNumber = 15;
  const ::OPMessage::DcrkPressLine& forwarding_pressline() const;
  ::OPMessage::DcrkPressLine* mutable_forwarding_pressline();
  ::OPMessage::DcrkPressLine* release_forwarding_pressline();
  void set_allocated_forwarding_pressline(::OPMessage::DcrkPressLine* forwarding_pressline);

  // optional .OPMessage.DcrkPressLine rking_1_pressline = 16;
  bool has_rking_1_pressline() const;
  void clear_rking_1_pressline();
  static const int kRking1PresslineFieldNumber = 16;
  const ::OPMessage::DcrkPressLine& rking_1_pressline() const;
  ::OPMessage::DcrkPressLine* mutable_rking_1_pressline();
  ::OPMessage::DcrkPressLine* release_rking_1_pressline();
  void set_allocated_rking_1_pressline(::OPMessage::DcrkPressLine* rking_1_pressline);

  // optional .OPMessage.DcrkPressLine cking_1_pressline = 17;
  bool has_cking_1_pressline() const;
  void clear_cking_1_pressline();
  static const int kCking1PresslineFieldNumber = 17;
  const ::OPMessage::DcrkPressLine& cking_1_pressline() const;
  ::OPMessage::DcrkPressLine* mutable_cking_1_pressline();
  ::OPMessage::DcrkPressLine* release_cking_1_pressline();
  void set_allocated_cking_1_pressline(::OPMessage::DcrkPressLine* cking_1_pressline);

  // optional .OPMessage.DcrkPressLine rking_2_pressline = 18;
  bool has_rking_2_pressline() const;
  void clear_rking_2_pressline();
  static const int kRking2PresslineFieldNumber = 18;
  const ::OPMessage::DcrkPressLine& rking_2_pressline() const;
  ::OPMessage::DcrkPressLine* mutable_rking_2_pressline();
  ::OPMessage::DcrkPressLine* release_rking_2_pressline();
  void set_allocated_rking_2_pressline(::OPMessage::DcrkPressLine* rking_2_pressline);

  // optional .OPMessage.DcrkPressLine cking_2_pressline = 19;
  bool has_cking_2_pressline() const;
  void clear_cking_2_pressline();
  static const int kCking2PresslineFieldNumber = 19;
  const ::OPMessage::DcrkPressLine& cking_2_pressline() const;
  ::OPMessage::DcrkPressLine* mutable_cking_2_pressline();
  ::OPMessage::DcrkPressLine* release_cking_2_pressline();
  void set_allocated_cking_2_pressline(::OPMessage::DcrkPressLine* cking_2_pressline);

  // optional string car_run_not_staff_command_voice = 20;
  bool has_car_run_not_staff_command_voice() const;
  void clear_car_run_not_staff_command_voice();
  static const int kCarRunNotStaffCommandVoiceFieldNumber = 20;
  const ::std::string& car_run_not_staff_command_voice() const;
  void set_car_run_not_staff_command_voice(const ::std::string& value);
  void set_car_run_not_staff_command_voice(const char* value);
  void set_car_run_not_staff_command_voice(const char* value, size_t size);
  ::std::string* mutable_car_run_not_staff_command_voice();
  ::std::string* release_car_run_not_staff_command_voice();
  void set_allocated_car_run_not_staff_command_voice(::std::string* car_run_not_staff_command_voice);

  // optional int32 car_run_not_staff_command_deduction = 21;
  bool has_car_run_not_staff_command_deduction() const;
  void clear_car_run_not_staff_command_deduction();
  static const int kCarRunNotStaffCommandDeductionFieldNumber = 21;
  ::google::protobuf::int32 car_run_not_staff_command_deduction() const;
  void set_car_run_not_staff_command_deduction(::google::protobuf::int32 value);

  // optional .OPMessage.BasicLeftTurnLamp event_check_cking_1_leftTurnLamp = 22;
  bool has_event_check_cking_1_leftturnlamp() const;
  void clear_event_check_cking_1_leftturnlamp();
  static const int kEventCheckCking1LeftTurnLampFieldNumber = 22;
  const ::OPMessage::BasicLeftTurnLamp& event_check_cking_1_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_event_check_cking_1_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_event_check_cking_1_leftturnlamp();
  void set_allocated_event_check_cking_1_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_cking_1_leftturnlamp);

  // optional .OPMessage.BasicRightTurnLamp event_check_cking_2_rightTurnLamp = 23;
  bool has_event_check_cking_2_rightturnlamp() const;
  void clear_event_check_cking_2_rightturnlamp();
  static const int kEventCheckCking2RightTurnLampFieldNumber = 23;
  const ::OPMessage::BasicRightTurnLamp& event_check_cking_2_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_cking_2_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_cking_2_rightturnlamp();
  void set_allocated_event_check_cking_2_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_cking_2_rightturnlamp);

  // optional bool in_area_again = 24 [default = false];
  bool has_in_area_again() const;
  void clear_in_area_again();
  static const int kInAreaAgainFieldNumber = 24;
  bool in_area_again() const;
  void set_in_area_again(bool value);

  // optional int32 car_rk_check_delay_time = 25 [default = 0];
  bool has_car_rk_check_delay_time() const;
  void clear_car_rk_check_delay_time();
  static const int kCarRkCheckDelayTimeFieldNumber = 25;
  ::google::protobuf::int32 car_rk_check_delay_time() const;
  void set_car_rk_check_delay_time(::google::protobuf::int32 value);

  // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 26;
  bool has_event_check_forwarding_rightturnlamp() const;
  void clear_event_check_forwarding_rightturnlamp();
  static const int kEventCheckForwardingRightTurnLampFieldNumber = 26;
  const ::OPMessage::BasicRightTurnLamp& event_check_forwarding_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_forwarding_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_forwarding_rightturnlamp();
  void set_allocated_event_check_forwarding_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_forwarding_rightturnlamp);

  // optional .OPMessage.BasicRightTurnLamp event_check_cking_1_rightTurnLamp = 27;
  bool has_event_check_cking_1_rightturnlamp() const;
  void clear_event_check_cking_1_rightturnlamp();
  static const int kEventCheckCking1RightTurnLampFieldNumber = 27;
  const ::OPMessage::BasicRightTurnLamp& event_check_cking_1_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_cking_1_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_cking_1_rightturnlamp();
  void set_allocated_event_check_cking_1_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_cking_1_rightturnlamp);

  // optional .OPMessage.BasicLeftTurnLamp event_check_cking_2_leftTurnLamp = 28;
  bool has_event_check_cking_2_leftturnlamp() const;
  void clear_event_check_cking_2_leftturnlamp();
  static const int kEventCheckCking2LeftTurnLampFieldNumber = 28;
  const ::OPMessage::BasicLeftTurnLamp& event_check_cking_2_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_event_check_cking_2_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_event_check_cking_2_leftturnlamp();
  void set_allocated_event_check_cking_2_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_cking_2_leftturnlamp);

  // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_1_leftTurnLamp = 29;
  bool has_event_check_waitrk_1_leftturnlamp() const;
  void clear_event_check_waitrk_1_leftturnlamp();
  static const int kEventCheckWaitrk1LeftTurnLampFieldNumber = 29;
  const ::OPMessage::BasicLeftTurnLamp& event_check_waitrk_1_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_event_check_waitrk_1_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_event_check_waitrk_1_leftturnlamp();
  void set_allocated_event_check_waitrk_1_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_waitrk_1_leftturnlamp);

  // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_1_rightTurnLamp = 30;
  bool has_event_check_waitrk_1_rightturnlamp() const;
  void clear_event_check_waitrk_1_rightturnlamp();
  static const int kEventCheckWaitrk1RightTurnLampFieldNumber = 30;
  const ::OPMessage::BasicRightTurnLamp& event_check_waitrk_1_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_waitrk_1_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_waitrk_1_rightturnlamp();
  void set_allocated_event_check_waitrk_1_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_waitrk_1_rightturnlamp);

  // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_1_leftTurnLamp = 31;
  bool has_event_check_rkend_1_leftturnlamp() const;
  void clear_event_check_rkend_1_leftturnlamp();
  static const int kEventCheckRkend1LeftTurnLampFieldNumber = 31;
  const ::OPMessage::BasicLeftTurnLamp& event_check_rkend_1_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_event_check_rkend_1_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_event_check_rkend_1_leftturnlamp();
  void set_allocated_event_check_rkend_1_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_rkend_1_leftturnlamp);

  // optional .OPMessage.BasicRightTurnLamp event_check_rkend_1_rightTurnLamp = 32;
  bool has_event_check_rkend_1_rightturnlamp() const;
  void clear_event_check_rkend_1_rightturnlamp();
  static const int kEventCheckRkend1RightTurnLampFieldNumber = 32;
  const ::OPMessage::BasicRightTurnLamp& event_check_rkend_1_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_rkend_1_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_rkend_1_rightturnlamp();
  void set_allocated_event_check_rkend_1_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rkend_1_rightturnlamp);

  // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_2_leftTurnLamp = 33;
  bool has_event_check_waitrk_2_leftturnlamp() const;
  void clear_event_check_waitrk_2_leftturnlamp();
  static const int kEventCheckWaitrk2LeftTurnLampFieldNumber = 33;
  const ::OPMessage::BasicLeftTurnLamp& event_check_waitrk_2_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_event_check_waitrk_2_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_event_check_waitrk_2_leftturnlamp();
  void set_allocated_event_check_waitrk_2_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_waitrk_2_leftturnlamp);

  // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_2_rightTurnLamp = 34;
  bool has_event_check_waitrk_2_rightturnlamp() const;
  void clear_event_check_waitrk_2_rightturnlamp();
  static const int kEventCheckWaitrk2RightTurnLampFieldNumber = 34;
  const ::OPMessage::BasicRightTurnLamp& event_check_waitrk_2_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_waitrk_2_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_waitrk_2_rightturnlamp();
  void set_allocated_event_check_waitrk_2_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_waitrk_2_rightturnlamp);

  // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_2_leftTurnLamp = 35;
  bool has_event_check_rkend_2_leftturnlamp() const;
  void clear_event_check_rkend_2_leftturnlamp();
  static const int kEventCheckRkend2LeftTurnLampFieldNumber = 35;
  const ::OPMessage::BasicLeftTurnLamp& event_check_rkend_2_leftturnlamp() const;
  ::OPMessage::BasicLeftTurnLamp* mutable_event_check_rkend_2_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* release_event_check_rkend_2_leftturnlamp();
  void set_allocated_event_check_rkend_2_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_rkend_2_leftturnlamp);

  // optional .OPMessage.BasicRightTurnLamp event_check_rkend_2_rightTurnLamp = 36;
  bool has_event_check_rkend_2_rightturnlamp() const;
  void clear_event_check_rkend_2_rightturnlamp();
  static const int kEventCheckRkend2RightTurnLampFieldNumber = 36;
  const ::OPMessage::BasicRightTurnLamp& event_check_rkend_2_rightturnlamp() const;
  ::OPMessage::BasicRightTurnLamp* mutable_event_check_rkend_2_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* release_event_check_rkend_2_rightturnlamp();
  void set_allocated_event_check_rkend_2_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rkend_2_rightturnlamp);

  // optional bool car_rking_1_frontwheel_over_controlline_check = 37 [default = true];
  bool has_car_rking_1_frontwheel_over_controlline_check() const;
  void clear_car_rking_1_frontwheel_over_controlline_check();
  static const int kCarRking1FrontwheelOverControllineCheckFieldNumber = 37;
  bool car_rking_1_frontwheel_over_controlline_check() const;
  void set_car_rking_1_frontwheel_over_controlline_check(bool value);

  // optional int32 car_rking_1_frontwheel_over_controlline_deduction = 38 [default = 100];
  bool has_car_rking_1_frontwheel_over_controlline_deduction() const;
  void clear_car_rking_1_frontwheel_over_controlline_deduction();
  static const int kCarRking1FrontwheelOverControllineDeductionFieldNumber = 38;
  ::google::protobuf::int32 car_rking_1_frontwheel_over_controlline_deduction() const;
  void set_car_rking_1_frontwheel_over_controlline_deduction(::google::protobuf::int32 value);

  // optional string car_rking_1_frontwheel_over_controlline_voice = 39;
  bool has_car_rking_1_frontwheel_over_controlline_voice() const;
  void clear_car_rking_1_frontwheel_over_controlline_voice();
  static const int kCarRking1FrontwheelOverControllineVoiceFieldNumber = 39;
  const ::std::string& car_rking_1_frontwheel_over_controlline_voice() const;
  void set_car_rking_1_frontwheel_over_controlline_voice(const ::std::string& value);
  void set_car_rking_1_frontwheel_over_controlline_voice(const char* value);
  void set_car_rking_1_frontwheel_over_controlline_voice(const char* value, size_t size);
  ::std::string* mutable_car_rking_1_frontwheel_over_controlline_voice();
  ::std::string* release_car_rking_1_frontwheel_over_controlline_voice();
  void set_allocated_car_rking_1_frontwheel_over_controlline_voice(::std::string* car_rking_1_frontwheel_over_controlline_voice);

  // optional bool car_rking_2_frontwheel_over_controlline_check = 40 [default = true];
  bool has_car_rking_2_frontwheel_over_controlline_check() const;
  void clear_car_rking_2_frontwheel_over_controlline_check();
  static const int kCarRking2FrontwheelOverControllineCheckFieldNumber = 40;
  bool car_rking_2_frontwheel_over_controlline_check() const;
  void set_car_rking_2_frontwheel_over_controlline_check(bool value);

  // optional int32 car_rking_2_frontwheel_over_controlline_deduction = 41 [default = 100];
  bool has_car_rking_2_frontwheel_over_controlline_deduction() const;
  void clear_car_rking_2_frontwheel_over_controlline_deduction();
  static const int kCarRking2FrontwheelOverControllineDeductionFieldNumber = 41;
  ::google::protobuf::int32 car_rking_2_frontwheel_over_controlline_deduction() const;
  void set_car_rking_2_frontwheel_over_controlline_deduction(::google::protobuf::int32 value);

  // optional string car_rking_2_frontwheel_over_controlline_voice = 42;
  bool has_car_rking_2_frontwheel_over_controlline_voice() const;
  void clear_car_rking_2_frontwheel_over_controlline_voice();
  static const int kCarRking2FrontwheelOverControllineVoiceFieldNumber = 42;
  const ::std::string& car_rking_2_frontwheel_over_controlline_voice() const;
  void set_car_rking_2_frontwheel_over_controlline_voice(const ::std::string& value);
  void set_car_rking_2_frontwheel_over_controlline_voice(const char* value);
  void set_car_rking_2_frontwheel_over_controlline_voice(const char* value, size_t size);
  ::std::string* mutable_car_rking_2_frontwheel_over_controlline_voice();
  ::std::string* release_car_rking_2_frontwheel_over_controlline_voice();
  void set_allocated_car_rking_2_frontwheel_over_controlline_voice(::std::string* car_rking_2_frontwheel_over_controlline_voice);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemJudgeRuleDcrk)
 private:
  inline void set_has_basic_event_check();
  inline void clear_has_basic_event_check();
  inline void set_has_item_enter_voice();
  inline void clear_has_item_enter_voice();
  inline void set_has_item_leave_voice();
  inline void clear_has_item_leave_voice();
  inline void set_has_item_start_voice();
  inline void clear_has_item_start_voice();
  inline void set_has_item_end_voice();
  inline void clear_has_item_end_voice();
  inline void set_has_judge_points_type();
  inline void clear_has_judge_points_type();
  inline void set_has_check_start_type();
  inline void clear_has_check_start_type();
  inline void set_has_check_finish_type();
  inline void clear_has_check_finish_type();
  inline void set_has_car_run_error_whether_check();
  inline void clear_has_car_run_error_whether_check();
  inline void set_has_car_run_error_voice();
  inline void clear_has_car_run_error_voice();
  inline void set_has_car_run_error_deduction();
  inline void clear_has_car_run_error_deduction();
  inline void set_has_car_rk_check_right_voice();
  inline void clear_has_car_rk_check_right_voice();
  inline void set_has_car_rk_check_fail_voice();
  inline void clear_has_car_rk_check_fail_voice();
  inline void set_has_car_rk_check_fail_deduction();
  inline void clear_has_car_rk_check_fail_deduction();
  inline void set_has_forwarding_pressline();
  inline void clear_has_forwarding_pressline();
  inline void set_has_rking_1_pressline();
  inline void clear_has_rking_1_pressline();
  inline void set_has_cking_1_pressline();
  inline void clear_has_cking_1_pressline();
  inline void set_has_rking_2_pressline();
  inline void clear_has_rking_2_pressline();
  inline void set_has_cking_2_pressline();
  inline void clear_has_cking_2_pressline();
  inline void set_has_car_run_not_staff_command_voice();
  inline void clear_has_car_run_not_staff_command_voice();
  inline void set_has_car_run_not_staff_command_deduction();
  inline void clear_has_car_run_not_staff_command_deduction();
  inline void set_has_event_check_cking_1_leftturnlamp();
  inline void clear_has_event_check_cking_1_leftturnlamp();
  inline void set_has_event_check_cking_2_rightturnlamp();
  inline void clear_has_event_check_cking_2_rightturnlamp();
  inline void set_has_in_area_again();
  inline void clear_has_in_area_again();
  inline void set_has_car_rk_check_delay_time();
  inline void clear_has_car_rk_check_delay_time();
  inline void set_has_event_check_forwarding_rightturnlamp();
  inline void clear_has_event_check_forwarding_rightturnlamp();
  inline void set_has_event_check_cking_1_rightturnlamp();
  inline void clear_has_event_check_cking_1_rightturnlamp();
  inline void set_has_event_check_cking_2_leftturnlamp();
  inline void clear_has_event_check_cking_2_leftturnlamp();
  inline void set_has_event_check_waitrk_1_leftturnlamp();
  inline void clear_has_event_check_waitrk_1_leftturnlamp();
  inline void set_has_event_check_waitrk_1_rightturnlamp();
  inline void clear_has_event_check_waitrk_1_rightturnlamp();
  inline void set_has_event_check_rkend_1_leftturnlamp();
  inline void clear_has_event_check_rkend_1_leftturnlamp();
  inline void set_has_event_check_rkend_1_rightturnlamp();
  inline void clear_has_event_check_rkend_1_rightturnlamp();
  inline void set_has_event_check_waitrk_2_leftturnlamp();
  inline void clear_has_event_check_waitrk_2_leftturnlamp();
  inline void set_has_event_check_waitrk_2_rightturnlamp();
  inline void clear_has_event_check_waitrk_2_rightturnlamp();
  inline void set_has_event_check_rkend_2_leftturnlamp();
  inline void clear_has_event_check_rkend_2_leftturnlamp();
  inline void set_has_event_check_rkend_2_rightturnlamp();
  inline void clear_has_event_check_rkend_2_rightturnlamp();
  inline void set_has_car_rking_1_frontwheel_over_controlline_check();
  inline void clear_has_car_rking_1_frontwheel_over_controlline_check();
  inline void set_has_car_rking_1_frontwheel_over_controlline_deduction();
  inline void clear_has_car_rking_1_frontwheel_over_controlline_deduction();
  inline void set_has_car_rking_1_frontwheel_over_controlline_voice();
  inline void clear_has_car_rking_1_frontwheel_over_controlline_voice();
  inline void set_has_car_rking_2_frontwheel_over_controlline_check();
  inline void clear_has_car_rking_2_frontwheel_over_controlline_check();
  inline void set_has_car_rking_2_frontwheel_over_controlline_deduction();
  inline void clear_has_car_rking_2_frontwheel_over_controlline_deduction();
  inline void set_has_car_rking_2_frontwheel_over_controlline_voice();
  inline void clear_has_car_rking_2_frontwheel_over_controlline_voice();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::OPMessage::ItemJudgeBasic* basic_event_check_;
  ::google::protobuf::internal::ArenaStringPtr item_enter_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_leave_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_start_voice_;
  ::google::protobuf::internal::ArenaStringPtr item_end_voice_;
  int judge_points_type_;
  int check_start_type_;
  int check_finish_type_;
  ::google::protobuf::int32 car_run_error_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_run_error_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_rk_check_right_voice_;
  ::google::protobuf::internal::ArenaStringPtr car_rk_check_fail_voice_;
  ::OPMessage::DcrkPressLine* forwarding_pressline_;
  ::OPMessage::DcrkPressLine* rking_1_pressline_;
  ::OPMessage::DcrkPressLine* cking_1_pressline_;
  ::google::protobuf::int32 car_rk_check_fail_deduction_;
  ::google::protobuf::int32 car_run_not_staff_command_deduction_;
  ::OPMessage::DcrkPressLine* rking_2_pressline_;
  ::OPMessage::DcrkPressLine* cking_2_pressline_;
  ::google::protobuf::internal::ArenaStringPtr car_run_not_staff_command_voice_;
  ::OPMessage::BasicLeftTurnLamp* event_check_cking_1_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* event_check_cking_2_rightturnlamp_;
  ::OPMessage::BasicRightTurnLamp* event_check_forwarding_rightturnlamp_;
  ::OPMessage::BasicRightTurnLamp* event_check_cking_1_rightturnlamp_;
  ::google::protobuf::int32 car_rk_check_delay_time_;
  bool car_run_error_whether_check_;
  bool in_area_again_;
  bool car_rking_1_frontwheel_over_controlline_check_;
  bool car_rking_2_frontwheel_over_controlline_check_;
  ::OPMessage::BasicLeftTurnLamp* event_check_cking_2_leftturnlamp_;
  ::OPMessage::BasicLeftTurnLamp* event_check_waitrk_1_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* event_check_waitrk_1_rightturnlamp_;
  ::OPMessage::BasicLeftTurnLamp* event_check_rkend_1_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* event_check_rkend_1_rightturnlamp_;
  ::OPMessage::BasicLeftTurnLamp* event_check_waitrk_2_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* event_check_waitrk_2_rightturnlamp_;
  ::OPMessage::BasicLeftTurnLamp* event_check_rkend_2_leftturnlamp_;
  ::OPMessage::BasicRightTurnLamp* event_check_rkend_2_rightturnlamp_;
  ::google::protobuf::internal::ArenaStringPtr car_rking_1_frontwheel_over_controlline_voice_;
  ::google::protobuf::int32 car_rking_1_frontwheel_over_controlline_deduction_;
  ::google::protobuf::int32 car_rking_2_frontwheel_over_controlline_deduction_;
  ::google::protobuf::internal::ArenaStringPtr car_rking_2_frontwheel_over_controlline_voice_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemJudgeRuleDcrk* default_instance_;
};
// -------------------------------------------------------------------

class ItemsJudgeRules : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.ItemsJudgeRules) */ {
 public:
  ItemsJudgeRules();
  virtual ~ItemsJudgeRules();

  ItemsJudgeRules(const ItemsJudgeRules& from);

  inline ItemsJudgeRules& operator=(const ItemsJudgeRules& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemsJudgeRules& default_instance();

  void Swap(ItemsJudgeRules* other);

  // implements Message ----------------------------------------------

  inline ItemsJudgeRules* New() const { return New(NULL); }

  ItemsJudgeRules* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemsJudgeRules& from);
  void MergeFrom(const ItemsJudgeRules& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemsJudgeRules* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OPMessage.GlobalJudgeRule item_global = 1;
  bool has_item_global() const;
  void clear_item_global();
  static const int kItemGlobalFieldNumber = 1;
  const ::OPMessage::GlobalJudgeRule& item_global() const;
  ::OPMessage::GlobalJudgeRule* mutable_item_global();
  ::OPMessage::GlobalJudgeRule* release_item_global();
  void set_allocated_item_global(::OPMessage::GlobalJudgeRule* item_global);

  // optional .OPMessage.ItemJudgeRuleZero item_zero = 2;
  bool has_item_zero() const;
  void clear_item_zero();
  static const int kItemZeroFieldNumber = 2;
  const ::OPMessage::ItemJudgeRuleZero& item_zero() const;
  ::OPMessage::ItemJudgeRuleZero* mutable_item_zero();
  ::OPMessage::ItemJudgeRuleZero* release_item_zero();
  void set_allocated_item_zero(::OPMessage::ItemJudgeRuleZero* item_zero);

  // optional .OPMessage.ItemJudgeRuleDk item_dk = 3;
  bool has_item_dk() const;
  void clear_item_dk();
  static const int kItemDkFieldNumber = 3;
  const ::OPMessage::ItemJudgeRuleDk& item_dk() const;
  ::OPMessage::ItemJudgeRuleDk* mutable_item_dk();
  ::OPMessage::ItemJudgeRuleDk* release_item_dk();
  void set_allocated_item_dk(::OPMessage::ItemJudgeRuleDk* item_dk);

  // optional .OPMessage.ItemJudgeRuleZjzw item_zjzw = 4;
  bool has_item_zjzw() const;
  void clear_item_zjzw();
  static const int kItemZjzwFieldNumber = 4;
  const ::OPMessage::ItemJudgeRuleZjzw& item_zjzw() const;
  ::OPMessage::ItemJudgeRuleZjzw* mutable_item_zjzw();
  ::OPMessage::ItemJudgeRuleZjzw* release_item_zjzw();
  void set_allocated_item_zjzw(::OPMessage::ItemJudgeRuleZjzw* item_zjzw);

  // optional .OPMessage.ItemJudgeRuleQxxs item_qxxs = 5;
  bool has_item_qxxs() const;
  void clear_item_qxxs();
  static const int kItemQxxsFieldNumber = 5;
  const ::OPMessage::ItemJudgeRuleQxxs& item_qxxs() const;
  ::OPMessage::ItemJudgeRuleQxxs* mutable_item_qxxs();
  ::OPMessage::ItemJudgeRuleQxxs* release_item_qxxs();
  void set_allocated_item_qxxs(::OPMessage::ItemJudgeRuleQxxs* item_qxxs);

  // optional .OPMessage.ItemJudgeRuleCftc item_cftc = 6;
  bool has_item_cftc() const;
  void clear_item_cftc();
  static const int kItemCftcFieldNumber = 6;
  const ::OPMessage::ItemJudgeRuleCftc& item_cftc() const;
  ::OPMessage::ItemJudgeRuleCftc* mutable_item_cftc();
  ::OPMessage::ItemJudgeRuleCftc* release_item_cftc();
  void set_allocated_item_cftc(::OPMessage::ItemJudgeRuleCftc* item_cftc);

  // optional .OPMessage.ItemJudgeRuleSpqb item_spqb = 7;
  bool has_item_spqb() const;
  void clear_item_spqb();
  static const int kItemSpqbFieldNumber = 7;
  const ::OPMessage::ItemJudgeRuleSpqb& item_spqb() const;
  ::OPMessage::ItemJudgeRuleSpqb* mutable_item_spqb();
  ::OPMessage::ItemJudgeRuleSpqb* release_item_spqb();
  void set_allocated_item_spqb(::OPMessage::ItemJudgeRuleSpqb* item_spqb);

  // optional .OPMessage.ItemJudgeRuleDcrk item_dcrk = 8;
  bool has_item_dcrk() const;
  void clear_item_dcrk();
  static const int kItemDcrkFieldNumber = 8;
  const ::OPMessage::ItemJudgeRuleDcrk& item_dcrk() const;
  ::OPMessage::ItemJudgeRuleDcrk* mutable_item_dcrk();
  ::OPMessage::ItemJudgeRuleDcrk* release_item_dcrk();
  void set_allocated_item_dcrk(::OPMessage::ItemJudgeRuleDcrk* item_dcrk);

  // optional .OPMessage.ItemJudgeRuleShangCheZhunBei item_shangchezhunbei = 9;
  bool has_item_shangchezhunbei() const;
  void clear_item_shangchezhunbei();
  static const int kItemShangchezhunbeiFieldNumber = 9;
  const ::OPMessage::ItemJudgeRuleShangCheZhunBei& item_shangchezhunbei() const;
  ::OPMessage::ItemJudgeRuleShangCheZhunBei* mutable_item_shangchezhunbei();
  ::OPMessage::ItemJudgeRuleShangCheZhunBei* release_item_shangchezhunbei();
  void set_allocated_item_shangchezhunbei(::OPMessage::ItemJudgeRuleShangCheZhunBei* item_shangchezhunbei);

  // optional .OPMessage.ItemJudgeRuleDengGuangMoNi item_dengguangmoni = 10;
  bool has_item_dengguangmoni() const;
  void clear_item_dengguangmoni();
  static const int kItemDengguangmoniFieldNumber = 10;
  const ::OPMessage::ItemJudgeRuleDengGuangMoNi& item_dengguangmoni() const;
  ::OPMessage::ItemJudgeRuleDengGuangMoNi* mutable_item_dengguangmoni();
  ::OPMessage::ItemJudgeRuleDengGuangMoNi* release_item_dengguangmoni();
  void set_allocated_item_dengguangmoni(::OPMessage::ItemJudgeRuleDengGuangMoNi* item_dengguangmoni);

  // optional .OPMessage.ItemJudgeRuleQiBu item_qibu = 11;
  bool has_item_qibu() const;
  void clear_item_qibu();
  static const int kItemQibuFieldNumber = 11;
  const ::OPMessage::ItemJudgeRuleQiBu& item_qibu() const;
  ::OPMessage::ItemJudgeRuleQiBu* mutable_item_qibu();
  ::OPMessage::ItemJudgeRuleQiBu* release_item_qibu();
  void set_allocated_item_qibu(::OPMessage::ItemJudgeRuleQiBu* item_qibu);

  // optional .OPMessage.ItemJudgeRuleXueXiaoQuYu item_xuexiaoquyu = 12;
  bool has_item_xuexiaoquyu() const;
  void clear_item_xuexiaoquyu();
  static const int kItemXuexiaoquyuFieldNumber = 12;
  const ::OPMessage::ItemJudgeRuleXueXiaoQuYu& item_xuexiaoquyu() const;
  ::OPMessage::ItemJudgeRuleXueXiaoQuYu* mutable_item_xuexiaoquyu();
  ::OPMessage::ItemJudgeRuleXueXiaoQuYu* release_item_xuexiaoquyu();
  void set_allocated_item_xuexiaoquyu(::OPMessage::ItemJudgeRuleXueXiaoQuYu* item_xuexiaoquyu);

  // optional .OPMessage.ItemJudgeRuleLuKouZuoZhuan item_lukouzuozhuan = 13;
  bool has_item_lukouzuozhuan() const;
  void clear_item_lukouzuozhuan();
  static const int kItemLukouzuozhuanFieldNumber = 13;
  const ::OPMessage::ItemJudgeRuleLuKouZuoZhuan& item_lukouzuozhuan() const;
  ::OPMessage::ItemJudgeRuleLuKouZuoZhuan* mutable_item_lukouzuozhuan();
  ::OPMessage::ItemJudgeRuleLuKouZuoZhuan* release_item_lukouzuozhuan();
  void set_allocated_item_lukouzuozhuan(::OPMessage::ItemJudgeRuleLuKouZuoZhuan* item_lukouzuozhuan);

  // optional .OPMessage.ItemJudgeRuleLuKouYouZhuan item_lukouyouzhuan = 14;
  bool has_item_lukouyouzhuan() const;
  void clear_item_lukouyouzhuan();
  static const int kItemLukouyouzhuanFieldNumber = 14;
  const ::OPMessage::ItemJudgeRuleLuKouYouZhuan& item_lukouyouzhuan() const;
  ::OPMessage::ItemJudgeRuleLuKouYouZhuan* mutable_item_lukouyouzhuan();
  ::OPMessage::ItemJudgeRuleLuKouYouZhuan* release_item_lukouyouzhuan();
  void set_allocated_item_lukouyouzhuan(::OPMessage::ItemJudgeRuleLuKouYouZhuan* item_lukouyouzhuan);

  // optional .OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou item_zhixiantongguolukou = 15;
  bool has_item_zhixiantongguolukou() const;
  void clear_item_zhixiantongguolukou();
  static const int kItemZhixiantongguolukouFieldNumber = 15;
  const ::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou& item_zhixiantongguolukou() const;
  ::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou* mutable_item_zhixiantongguolukou();
  ::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou* release_item_zhixiantongguolukou();
  void set_allocated_item_zhixiantongguolukou(::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou* item_zhixiantongguolukou);

  // optional .OPMessage.ItemJudgeRuleGongGongQiCheZhan item_gonggongqichezhan = 16;
  bool has_item_gonggongqichezhan() const;
  void clear_item_gonggongqichezhan();
  static const int kItemGonggongqichezhanFieldNumber = 16;
  const ::OPMessage::ItemJudgeRuleGongGongQiCheZhan& item_gonggongqichezhan() const;
  ::OPMessage::ItemJudgeRuleGongGongQiCheZhan* mutable_item_gonggongqichezhan();
  ::OPMessage::ItemJudgeRuleGongGongQiCheZhan* release_item_gonggongqichezhan();
  void set_allocated_item_gonggongqichezhan(::OPMessage::ItemJudgeRuleGongGongQiCheZhan* item_gonggongqichezhan);

  // optional .OPMessage.ItemJudgeRuleRenXingHengDao item_renxinghengdao = 17;
  bool has_item_renxinghengdao() const;
  void clear_item_renxinghengdao();
  static const int kItemRenxinghengdaoFieldNumber = 17;
  const ::OPMessage::ItemJudgeRuleRenXingHengDao& item_renxinghengdao() const;
  ::OPMessage::ItemJudgeRuleRenXingHengDao* mutable_item_renxinghengdao();
  ::OPMessage::ItemJudgeRuleRenXingHengDao* release_item_renxinghengdao();
  void set_allocated_item_renxinghengdao(::OPMessage::ItemJudgeRuleRenXingHengDao* item_renxinghengdao);

  // optional .OPMessage.ItemJudgeRuleZhiXianXingShi item_zhixianxingshi = 18;
  bool has_item_zhixianxingshi() const;
  void clear_item_zhixianxingshi();
  static const int kItemZhixianxingshiFieldNumber = 18;
  const ::OPMessage::ItemJudgeRuleZhiXianXingShi& item_zhixianxingshi() const;
  ::OPMessage::ItemJudgeRuleZhiXianXingShi* mutable_item_zhixianxingshi();
  ::OPMessage::ItemJudgeRuleZhiXianXingShi* release_item_zhixianxingshi();
  void set_allocated_item_zhixianxingshi(::OPMessage::ItemJudgeRuleZhiXianXingShi* item_zhixianxingshi);

  // optional .OPMessage.ItemJudgeRuleJiaJianDang item_jiajiandang = 19;
  bool has_item_jiajiandang() const;
  void clear_item_jiajiandang();
  static const int kItemJiajiandangFieldNumber = 19;
  const ::OPMessage::ItemJudgeRuleJiaJianDang& item_jiajiandang() const;
  ::OPMessage::ItemJudgeRuleJiaJianDang* mutable_item_jiajiandang();
  ::OPMessage::ItemJudgeRuleJiaJianDang* release_item_jiajiandang();
  void set_allocated_item_jiajiandang(::OPMessage::ItemJudgeRuleJiaJianDang* item_jiajiandang);

  // optional .OPMessage.ItemJudgeRuleDiaoTou item_diaotou = 20;
  bool has_item_diaotou() const;
  void clear_item_diaotou();
  static const int kItemDiaotouFieldNumber = 20;
  const ::OPMessage::ItemJudgeRuleDiaoTou& item_diaotou() const;
  ::OPMessage::ItemJudgeRuleDiaoTou* mutable_item_diaotou();
  ::OPMessage::ItemJudgeRuleDiaoTou* release_item_diaotou();
  void set_allocated_item_diaotou(::OPMessage::ItemJudgeRuleDiaoTou* item_diaotou);

  // optional .OPMessage.ItemJudgeRuleBianGengCheDao item_biangengchedao = 21;
  bool has_item_biangengchedao() const;
  void clear_item_biangengchedao();
  static const int kItemBiangengchedaoFieldNumber = 21;
  const ::OPMessage::ItemJudgeRuleBianGengCheDao& item_biangengchedao() const;
  ::OPMessage::ItemJudgeRuleBianGengCheDao* mutable_item_biangengchedao();
  ::OPMessage::ItemJudgeRuleBianGengCheDao* release_item_biangengchedao();
  void set_allocated_item_biangengchedao(::OPMessage::ItemJudgeRuleBianGengCheDao* item_biangengchedao);

  // optional .OPMessage.ItemJudgeRuleChaoChe item_chaoche = 22;
  bool has_item_chaoche() const;
  void clear_item_chaoche();
  static const int kItemChaocheFieldNumber = 22;
  const ::OPMessage::ItemJudgeRuleChaoChe& item_chaoche() const;
  ::OPMessage::ItemJudgeRuleChaoChe* mutable_item_chaoche();
  ::OPMessage::ItemJudgeRuleChaoChe* release_item_chaoche();
  void set_allocated_item_chaoche(::OPMessage::ItemJudgeRuleChaoChe* item_chaoche);

  // optional .OPMessage.ItemJudgeRuleHuiChe item_huiche = 23;
  bool has_item_huiche() const;
  void clear_item_huiche();
  static const int kItemHuicheFieldNumber = 23;
  const ::OPMessage::ItemJudgeRuleHuiChe& item_huiche() const;
  ::OPMessage::ItemJudgeRuleHuiChe* mutable_item_huiche();
  ::OPMessage::ItemJudgeRuleHuiChe* release_item_huiche();
  void set_allocated_item_huiche(::OPMessage::ItemJudgeRuleHuiChe* item_huiche);

  // optional .OPMessage.ItemJudgeRuleKaoBianTingChe item_kaobiantingche = 24;
  bool has_item_kaobiantingche() const;
  void clear_item_kaobiantingche();
  static const int kItemKaobiantingcheFieldNumber = 24;
  const ::OPMessage::ItemJudgeRuleKaoBianTingChe& item_kaobiantingche() const;
  ::OPMessage::ItemJudgeRuleKaoBianTingChe* mutable_item_kaobiantingche();
  ::OPMessage::ItemJudgeRuleKaoBianTingChe* release_item_kaobiantingche();
  void set_allocated_item_kaobiantingche(::OPMessage::ItemJudgeRuleKaoBianTingChe* item_kaobiantingche);

  // @@protoc_insertion_point(class_scope:OPMessage.ItemsJudgeRules)
 private:
  inline void set_has_item_global();
  inline void clear_has_item_global();
  inline void set_has_item_zero();
  inline void clear_has_item_zero();
  inline void set_has_item_dk();
  inline void clear_has_item_dk();
  inline void set_has_item_zjzw();
  inline void clear_has_item_zjzw();
  inline void set_has_item_qxxs();
  inline void clear_has_item_qxxs();
  inline void set_has_item_cftc();
  inline void clear_has_item_cftc();
  inline void set_has_item_spqb();
  inline void clear_has_item_spqb();
  inline void set_has_item_dcrk();
  inline void clear_has_item_dcrk();
  inline void set_has_item_shangchezhunbei();
  inline void clear_has_item_shangchezhunbei();
  inline void set_has_item_dengguangmoni();
  inline void clear_has_item_dengguangmoni();
  inline void set_has_item_qibu();
  inline void clear_has_item_qibu();
  inline void set_has_item_xuexiaoquyu();
  inline void clear_has_item_xuexiaoquyu();
  inline void set_has_item_lukouzuozhuan();
  inline void clear_has_item_lukouzuozhuan();
  inline void set_has_item_lukouyouzhuan();
  inline void clear_has_item_lukouyouzhuan();
  inline void set_has_item_zhixiantongguolukou();
  inline void clear_has_item_zhixiantongguolukou();
  inline void set_has_item_gonggongqichezhan();
  inline void clear_has_item_gonggongqichezhan();
  inline void set_has_item_renxinghengdao();
  inline void clear_has_item_renxinghengdao();
  inline void set_has_item_zhixianxingshi();
  inline void clear_has_item_zhixianxingshi();
  inline void set_has_item_jiajiandang();
  inline void clear_has_item_jiajiandang();
  inline void set_has_item_diaotou();
  inline void clear_has_item_diaotou();
  inline void set_has_item_biangengchedao();
  inline void clear_has_item_biangengchedao();
  inline void set_has_item_chaoche();
  inline void clear_has_item_chaoche();
  inline void set_has_item_huiche();
  inline void clear_has_item_huiche();
  inline void set_has_item_kaobiantingche();
  inline void clear_has_item_kaobiantingche();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OPMessage::GlobalJudgeRule* item_global_;
  ::OPMessage::ItemJudgeRuleZero* item_zero_;
  ::OPMessage::ItemJudgeRuleDk* item_dk_;
  ::OPMessage::ItemJudgeRuleZjzw* item_zjzw_;
  ::OPMessage::ItemJudgeRuleQxxs* item_qxxs_;
  ::OPMessage::ItemJudgeRuleCftc* item_cftc_;
  ::OPMessage::ItemJudgeRuleSpqb* item_spqb_;
  ::OPMessage::ItemJudgeRuleDcrk* item_dcrk_;
  ::OPMessage::ItemJudgeRuleShangCheZhunBei* item_shangchezhunbei_;
  ::OPMessage::ItemJudgeRuleDengGuangMoNi* item_dengguangmoni_;
  ::OPMessage::ItemJudgeRuleQiBu* item_qibu_;
  ::OPMessage::ItemJudgeRuleXueXiaoQuYu* item_xuexiaoquyu_;
  ::OPMessage::ItemJudgeRuleLuKouZuoZhuan* item_lukouzuozhuan_;
  ::OPMessage::ItemJudgeRuleLuKouYouZhuan* item_lukouyouzhuan_;
  ::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou* item_zhixiantongguolukou_;
  ::OPMessage::ItemJudgeRuleGongGongQiCheZhan* item_gonggongqichezhan_;
  ::OPMessage::ItemJudgeRuleRenXingHengDao* item_renxinghengdao_;
  ::OPMessage::ItemJudgeRuleZhiXianXingShi* item_zhixianxingshi_;
  ::OPMessage::ItemJudgeRuleJiaJianDang* item_jiajiandang_;
  ::OPMessage::ItemJudgeRuleDiaoTou* item_diaotou_;
  ::OPMessage::ItemJudgeRuleBianGengCheDao* item_biangengchedao_;
  ::OPMessage::ItemJudgeRuleChaoChe* item_chaoche_;
  ::OPMessage::ItemJudgeRuleHuiChe* item_huiche_;
  ::OPMessage::ItemJudgeRuleKaoBianTingChe* item_kaobiantingche_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemsJudgeRules* default_instance_;
};
// -------------------------------------------------------------------

class CoreInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPMessage.CoreInfo) */ {
 public:
  CoreInfo();
  virtual ~CoreInfo();

  CoreInfo(const CoreInfo& from);

  inline CoreInfo& operator=(const CoreInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CoreInfo& default_instance();

  void Swap(CoreInfo* other);

  // implements Message ----------------------------------------------

  inline CoreInfo* New() const { return New(NULL); }

  CoreInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CoreInfo& from);
  void MergeFrom(const CoreInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CoreInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .OPMessage.SoftwareStartInfo software_start_info = 1;
  bool has_software_start_info() const;
  void clear_software_start_info();
  static const int kSoftwareStartInfoFieldNumber = 1;
  const ::OPMessage::SoftwareStartInfo& software_start_info() const;
  ::OPMessage::SoftwareStartInfo* mutable_software_start_info();
  ::OPMessage::SoftwareStartInfo* release_software_start_info();
  void set_allocated_software_start_info(::OPMessage::SoftwareStartInfo* software_start_info);

  // optional .OPMessage.ConfigInfoBasic config_info_basic = 2;
  bool has_config_info_basic() const;
  void clear_config_info_basic();
  static const int kConfigInfoBasicFieldNumber = 2;
  const ::OPMessage::ConfigInfoBasic& config_info_basic() const;
  ::OPMessage::ConfigInfoBasic* mutable_config_info_basic();
  ::OPMessage::ConfigInfoBasic* release_config_info_basic();
  void set_allocated_config_info_basic(::OPMessage::ConfigInfoBasic* config_info_basic);

  // optional .OPMessage.ItemsJudgeRules items_judge_rules = 3;
  bool has_items_judge_rules() const;
  void clear_items_judge_rules();
  static const int kItemsJudgeRulesFieldNumber = 3;
  const ::OPMessage::ItemsJudgeRules& items_judge_rules() const;
  ::OPMessage::ItemsJudgeRules* mutable_items_judge_rules();
  ::OPMessage::ItemsJudgeRules* release_items_judge_rules();
  void set_allocated_items_judge_rules(::OPMessage::ItemsJudgeRules* items_judge_rules);

  // optional .OPMessage.OtherConfigInfo other_config_info = 4;
  bool has_other_config_info() const;
  void clear_other_config_info();
  static const int kOtherConfigInfoFieldNumber = 4;
  const ::OPMessage::OtherConfigInfo& other_config_info() const;
  ::OPMessage::OtherConfigInfo* mutable_other_config_info();
  ::OPMessage::OtherConfigInfo* release_other_config_info();
  void set_allocated_other_config_info(::OPMessage::OtherConfigInfo* other_config_info);

  // @@protoc_insertion_point(class_scope:OPMessage.CoreInfo)
 private:
  inline void set_has_software_start_info();
  inline void clear_has_software_start_info();
  inline void set_has_config_info_basic();
  inline void clear_has_config_info_basic();
  inline void set_has_items_judge_rules();
  inline void clear_has_items_judge_rules();
  inline void set_has_other_config_info();
  inline void clear_has_other_config_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::OPMessage::SoftwareStartInfo* software_start_info_;
  ::OPMessage::ConfigInfoBasic* config_info_basic_;
  ::OPMessage::ItemsJudgeRules* items_judge_rules_;
  ::OPMessage::OtherConfigInfo* other_config_info_;
  friend void  protobuf_AddDesc_MessageJkConfig_2eproto();
  friend void protobuf_AssignDesc_MessageJkConfig_2eproto();
  friend void protobuf_ShutdownFile_MessageJkConfig_2eproto();

  void InitAsDefaultInstance();
  static CoreInfo* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SoftwareStartInfo

// optional string app_start_sound = 1;
inline bool SoftwareStartInfo::has_app_start_sound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SoftwareStartInfo::set_has_app_start_sound() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SoftwareStartInfo::clear_has_app_start_sound() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SoftwareStartInfo::clear_app_start_sound() {
  app_start_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_start_sound();
}
inline const ::std::string& SoftwareStartInfo::app_start_sound() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_start_sound)
  return app_start_sound_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_app_start_sound(const ::std::string& value) {
  set_has_app_start_sound();
  app_start_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_start_sound)
}
inline void SoftwareStartInfo::set_app_start_sound(const char* value) {
  set_has_app_start_sound();
  app_start_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.app_start_sound)
}
inline void SoftwareStartInfo::set_app_start_sound(const char* value, size_t size) {
  set_has_app_start_sound();
  app_start_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.app_start_sound)
}
inline ::std::string* SoftwareStartInfo::mutable_app_start_sound() {
  set_has_app_start_sound();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.app_start_sound)
  return app_start_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwareStartInfo::release_app_start_sound() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.app_start_sound)
  clear_has_app_start_sound();
  return app_start_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_allocated_app_start_sound(::std::string* app_start_sound) {
  if (app_start_sound != NULL) {
    set_has_app_start_sound();
  } else {
    clear_has_app_start_sound();
  }
  app_start_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_start_sound);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.app_start_sound)
}

// optional bool app_run_mode_xl = 2;
inline bool SoftwareStartInfo::has_app_run_mode_xl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SoftwareStartInfo::set_has_app_run_mode_xl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SoftwareStartInfo::clear_has_app_run_mode_xl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SoftwareStartInfo::clear_app_run_mode_xl() {
  app_run_mode_xl_ = false;
  clear_has_app_run_mode_xl();
}
inline bool SoftwareStartInfo::app_run_mode_xl() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_run_mode_xl)
  return app_run_mode_xl_;
}
inline void SoftwareStartInfo::set_app_run_mode_xl(bool value) {
  set_has_app_run_mode_xl();
  app_run_mode_xl_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_run_mode_xl)
}

// optional bool app_run_mode_mn = 3;
inline bool SoftwareStartInfo::has_app_run_mode_mn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SoftwareStartInfo::set_has_app_run_mode_mn() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SoftwareStartInfo::clear_has_app_run_mode_mn() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SoftwareStartInfo::clear_app_run_mode_mn() {
  app_run_mode_mn_ = false;
  clear_has_app_run_mode_mn();
}
inline bool SoftwareStartInfo::app_run_mode_mn() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_run_mode_mn)
  return app_run_mode_mn_;
}
inline void SoftwareStartInfo::set_app_run_mode_mn(bool value) {
  set_has_app_run_mode_mn();
  app_run_mode_mn_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_run_mode_mn)
}

// optional bool app_run_mode_ks = 4;
inline bool SoftwareStartInfo::has_app_run_mode_ks() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SoftwareStartInfo::set_has_app_run_mode_ks() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SoftwareStartInfo::clear_has_app_run_mode_ks() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SoftwareStartInfo::clear_app_run_mode_ks() {
  app_run_mode_ks_ = false;
  clear_has_app_run_mode_ks();
}
inline bool SoftwareStartInfo::app_run_mode_ks() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_run_mode_ks)
  return app_run_mode_ks_;
}
inline void SoftwareStartInfo::set_app_run_mode_ks(bool value) {
  set_has_app_run_mode_ks();
  app_run_mode_ks_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_run_mode_ks)
}

// optional bool app_run_server_monitor = 5;
inline bool SoftwareStartInfo::has_app_run_server_monitor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SoftwareStartInfo::set_has_app_run_server_monitor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SoftwareStartInfo::clear_has_app_run_server_monitor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SoftwareStartInfo::clear_app_run_server_monitor() {
  app_run_server_monitor_ = false;
  clear_has_app_run_server_monitor();
}
inline bool SoftwareStartInfo::app_run_server_monitor() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_run_server_monitor)
  return app_run_server_monitor_;
}
inline void SoftwareStartInfo::set_app_run_server_monitor(bool value) {
  set_has_app_run_server_monitor();
  app_run_server_monitor_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_run_server_monitor)
}

// optional string app_run_server_monitor_ip = 6;
inline bool SoftwareStartInfo::has_app_run_server_monitor_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SoftwareStartInfo::set_has_app_run_server_monitor_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SoftwareStartInfo::clear_has_app_run_server_monitor_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SoftwareStartInfo::clear_app_run_server_monitor_ip() {
  app_run_server_monitor_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_run_server_monitor_ip();
}
inline const ::std::string& SoftwareStartInfo::app_run_server_monitor_ip() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
  return app_run_server_monitor_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_app_run_server_monitor_ip(const ::std::string& value) {
  set_has_app_run_server_monitor_ip();
  app_run_server_monitor_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
}
inline void SoftwareStartInfo::set_app_run_server_monitor_ip(const char* value) {
  set_has_app_run_server_monitor_ip();
  app_run_server_monitor_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
}
inline void SoftwareStartInfo::set_app_run_server_monitor_ip(const char* value, size_t size) {
  set_has_app_run_server_monitor_ip();
  app_run_server_monitor_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
}
inline ::std::string* SoftwareStartInfo::mutable_app_run_server_monitor_ip() {
  set_has_app_run_server_monitor_ip();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
  return app_run_server_monitor_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwareStartInfo::release_app_run_server_monitor_ip() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
  clear_has_app_run_server_monitor_ip();
  return app_run_server_monitor_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_allocated_app_run_server_monitor_ip(::std::string* app_run_server_monitor_ip) {
  if (app_run_server_monitor_ip != NULL) {
    set_has_app_run_server_monitor_ip();
  } else {
    clear_has_app_run_server_monitor_ip();
  }
  app_run_server_monitor_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_run_server_monitor_ip);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
}

// optional int32 app_run_server_monitor_port = 7;
inline bool SoftwareStartInfo::has_app_run_server_monitor_port() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SoftwareStartInfo::set_has_app_run_server_monitor_port() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SoftwareStartInfo::clear_has_app_run_server_monitor_port() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SoftwareStartInfo::clear_app_run_server_monitor_port() {
  app_run_server_monitor_port_ = 0;
  clear_has_app_run_server_monitor_port();
}
inline ::google::protobuf::int32 SoftwareStartInfo::app_run_server_monitor_port() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_run_server_monitor_port)
  return app_run_server_monitor_port_;
}
inline void SoftwareStartInfo::set_app_run_server_monitor_port(::google::protobuf::int32 value) {
  set_has_app_run_server_monitor_port();
  app_run_server_monitor_port_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_run_server_monitor_port)
}

// optional bool whether_use_iccard = 8;
inline bool SoftwareStartInfo::has_whether_use_iccard() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SoftwareStartInfo::set_has_whether_use_iccard() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SoftwareStartInfo::clear_has_whether_use_iccard() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SoftwareStartInfo::clear_whether_use_iccard() {
  whether_use_iccard_ = false;
  clear_has_whether_use_iccard();
}
inline bool SoftwareStartInfo::whether_use_iccard() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.whether_use_iccard)
  return whether_use_iccard_;
}
inline void SoftwareStartInfo::set_whether_use_iccard(bool value) {
  set_has_whether_use_iccard();
  whether_use_iccard_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.whether_use_iccard)
}

// optional int32 app_sound_rate = 9;
inline bool SoftwareStartInfo::has_app_sound_rate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SoftwareStartInfo::set_has_app_sound_rate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SoftwareStartInfo::clear_has_app_sound_rate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SoftwareStartInfo::clear_app_sound_rate() {
  app_sound_rate_ = 0;
  clear_has_app_sound_rate();
}
inline ::google::protobuf::int32 SoftwareStartInfo::app_sound_rate() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_sound_rate)
  return app_sound_rate_;
}
inline void SoftwareStartInfo::set_app_sound_rate(::google::protobuf::int32 value) {
  set_has_app_sound_rate();
  app_sound_rate_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_sound_rate)
}

// optional bool whether_use_second_idcard = 10;
inline bool SoftwareStartInfo::has_whether_use_second_idcard() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SoftwareStartInfo::set_has_whether_use_second_idcard() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SoftwareStartInfo::clear_has_whether_use_second_idcard() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SoftwareStartInfo::clear_whether_use_second_idcard() {
  whether_use_second_idcard_ = false;
  clear_has_whether_use_second_idcard();
}
inline bool SoftwareStartInfo::whether_use_second_idcard() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.whether_use_second_idcard)
  return whether_use_second_idcard_;
}
inline void SoftwareStartInfo::set_whether_use_second_idcard(bool value) {
  set_has_whether_use_second_idcard();
  whether_use_second_idcard_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.whether_use_second_idcard)
}

// optional string secondid_verification_net_fail_voice = 11;
inline bool SoftwareStartInfo::has_secondid_verification_net_fail_voice() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SoftwareStartInfo::set_has_secondid_verification_net_fail_voice() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SoftwareStartInfo::clear_has_secondid_verification_net_fail_voice() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SoftwareStartInfo::clear_secondid_verification_net_fail_voice() {
  secondid_verification_net_fail_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secondid_verification_net_fail_voice();
}
inline const ::std::string& SoftwareStartInfo::secondid_verification_net_fail_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
  return secondid_verification_net_fail_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_secondid_verification_net_fail_voice(const ::std::string& value) {
  set_has_secondid_verification_net_fail_voice();
  secondid_verification_net_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
}
inline void SoftwareStartInfo::set_secondid_verification_net_fail_voice(const char* value) {
  set_has_secondid_verification_net_fail_voice();
  secondid_verification_net_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
}
inline void SoftwareStartInfo::set_secondid_verification_net_fail_voice(const char* value, size_t size) {
  set_has_secondid_verification_net_fail_voice();
  secondid_verification_net_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
}
inline ::std::string* SoftwareStartInfo::mutable_secondid_verification_net_fail_voice() {
  set_has_secondid_verification_net_fail_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
  return secondid_verification_net_fail_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwareStartInfo::release_secondid_verification_net_fail_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
  clear_has_secondid_verification_net_fail_voice();
  return secondid_verification_net_fail_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_allocated_secondid_verification_net_fail_voice(::std::string* secondid_verification_net_fail_voice) {
  if (secondid_verification_net_fail_voice != NULL) {
    set_has_secondid_verification_net_fail_voice();
  } else {
    clear_has_secondid_verification_net_fail_voice();
  }
  secondid_verification_net_fail_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondid_verification_net_fail_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
}

// optional string secondid_verification_waiting_voice = 12;
inline bool SoftwareStartInfo::has_secondid_verification_waiting_voice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SoftwareStartInfo::set_has_secondid_verification_waiting_voice() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SoftwareStartInfo::clear_has_secondid_verification_waiting_voice() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SoftwareStartInfo::clear_secondid_verification_waiting_voice() {
  secondid_verification_waiting_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secondid_verification_waiting_voice();
}
inline const ::std::string& SoftwareStartInfo::secondid_verification_waiting_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
  return secondid_verification_waiting_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_secondid_verification_waiting_voice(const ::std::string& value) {
  set_has_secondid_verification_waiting_voice();
  secondid_verification_waiting_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
}
inline void SoftwareStartInfo::set_secondid_verification_waiting_voice(const char* value) {
  set_has_secondid_verification_waiting_voice();
  secondid_verification_waiting_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
}
inline void SoftwareStartInfo::set_secondid_verification_waiting_voice(const char* value, size_t size) {
  set_has_secondid_verification_waiting_voice();
  secondid_verification_waiting_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
}
inline ::std::string* SoftwareStartInfo::mutable_secondid_verification_waiting_voice() {
  set_has_secondid_verification_waiting_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
  return secondid_verification_waiting_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwareStartInfo::release_secondid_verification_waiting_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
  clear_has_secondid_verification_waiting_voice();
  return secondid_verification_waiting_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_allocated_secondid_verification_waiting_voice(::std::string* secondid_verification_waiting_voice) {
  if (secondid_verification_waiting_voice != NULL) {
    set_has_secondid_verification_waiting_voice();
  } else {
    clear_has_secondid_verification_waiting_voice();
  }
  secondid_verification_waiting_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondid_verification_waiting_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
}

// optional string secondid_verification_round_started_voice = 13;
inline bool SoftwareStartInfo::has_secondid_verification_round_started_voice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void SoftwareStartInfo::set_has_secondid_verification_round_started_voice() {
  _has_bits_[0] |= 0x00001000u;
}
inline void SoftwareStartInfo::clear_has_secondid_verification_round_started_voice() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void SoftwareStartInfo::clear_secondid_verification_round_started_voice() {
  secondid_verification_round_started_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secondid_verification_round_started_voice();
}
inline const ::std::string& SoftwareStartInfo::secondid_verification_round_started_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
  return secondid_verification_round_started_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_secondid_verification_round_started_voice(const ::std::string& value) {
  set_has_secondid_verification_round_started_voice();
  secondid_verification_round_started_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
}
inline void SoftwareStartInfo::set_secondid_verification_round_started_voice(const char* value) {
  set_has_secondid_verification_round_started_voice();
  secondid_verification_round_started_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
}
inline void SoftwareStartInfo::set_secondid_verification_round_started_voice(const char* value, size_t size) {
  set_has_secondid_verification_round_started_voice();
  secondid_verification_round_started_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
}
inline ::std::string* SoftwareStartInfo::mutable_secondid_verification_round_started_voice() {
  set_has_secondid_verification_round_started_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
  return secondid_verification_round_started_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwareStartInfo::release_secondid_verification_round_started_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
  clear_has_secondid_verification_round_started_voice();
  return secondid_verification_round_started_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_allocated_secondid_verification_round_started_voice(::std::string* secondid_verification_round_started_voice) {
  if (secondid_verification_round_started_voice != NULL) {
    set_has_secondid_verification_round_started_voice();
  } else {
    clear_has_secondid_verification_round_started_voice();
  }
  secondid_verification_round_started_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondid_verification_round_started_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
}

// optional string secondid_verification_registration_unvalid_voice = 14;
inline bool SoftwareStartInfo::has_secondid_verification_registration_unvalid_voice() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void SoftwareStartInfo::set_has_secondid_verification_registration_unvalid_voice() {
  _has_bits_[0] |= 0x00002000u;
}
inline void SoftwareStartInfo::clear_has_secondid_verification_registration_unvalid_voice() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void SoftwareStartInfo::clear_secondid_verification_registration_unvalid_voice() {
  secondid_verification_registration_unvalid_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secondid_verification_registration_unvalid_voice();
}
inline const ::std::string& SoftwareStartInfo::secondid_verification_registration_unvalid_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
  return secondid_verification_registration_unvalid_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_secondid_verification_registration_unvalid_voice(const ::std::string& value) {
  set_has_secondid_verification_registration_unvalid_voice();
  secondid_verification_registration_unvalid_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
}
inline void SoftwareStartInfo::set_secondid_verification_registration_unvalid_voice(const char* value) {
  set_has_secondid_verification_registration_unvalid_voice();
  secondid_verification_registration_unvalid_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
}
inline void SoftwareStartInfo::set_secondid_verification_registration_unvalid_voice(const char* value, size_t size) {
  set_has_secondid_verification_registration_unvalid_voice();
  secondid_verification_registration_unvalid_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
}
inline ::std::string* SoftwareStartInfo::mutable_secondid_verification_registration_unvalid_voice() {
  set_has_secondid_verification_registration_unvalid_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
  return secondid_verification_registration_unvalid_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwareStartInfo::release_secondid_verification_registration_unvalid_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
  clear_has_secondid_verification_registration_unvalid_voice();
  return secondid_verification_registration_unvalid_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_allocated_secondid_verification_registration_unvalid_voice(::std::string* secondid_verification_registration_unvalid_voice) {
  if (secondid_verification_registration_unvalid_voice != NULL) {
    set_has_secondid_verification_registration_unvalid_voice();
  } else {
    clear_has_secondid_verification_registration_unvalid_voice();
  }
  secondid_verification_registration_unvalid_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondid_verification_registration_unvalid_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
}

// optional string secondid_verification_registration_valid_voice = 15;
inline bool SoftwareStartInfo::has_secondid_verification_registration_valid_voice() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void SoftwareStartInfo::set_has_secondid_verification_registration_valid_voice() {
  _has_bits_[0] |= 0x00004000u;
}
inline void SoftwareStartInfo::clear_has_secondid_verification_registration_valid_voice() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void SoftwareStartInfo::clear_secondid_verification_registration_valid_voice() {
  secondid_verification_registration_valid_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secondid_verification_registration_valid_voice();
}
inline const ::std::string& SoftwareStartInfo::secondid_verification_registration_valid_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
  return secondid_verification_registration_valid_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_secondid_verification_registration_valid_voice(const ::std::string& value) {
  set_has_secondid_verification_registration_valid_voice();
  secondid_verification_registration_valid_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
}
inline void SoftwareStartInfo::set_secondid_verification_registration_valid_voice(const char* value) {
  set_has_secondid_verification_registration_valid_voice();
  secondid_verification_registration_valid_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
}
inline void SoftwareStartInfo::set_secondid_verification_registration_valid_voice(const char* value, size_t size) {
  set_has_secondid_verification_registration_valid_voice();
  secondid_verification_registration_valid_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
}
inline ::std::string* SoftwareStartInfo::mutable_secondid_verification_registration_valid_voice() {
  set_has_secondid_verification_registration_valid_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
  return secondid_verification_registration_valid_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwareStartInfo::release_secondid_verification_registration_valid_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
  clear_has_secondid_verification_registration_valid_voice();
  return secondid_verification_registration_valid_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_allocated_secondid_verification_registration_valid_voice(::std::string* secondid_verification_registration_valid_voice) {
  if (secondid_verification_registration_valid_voice != NULL) {
    set_has_secondid_verification_registration_valid_voice();
  } else {
    clear_has_secondid_verification_registration_valid_voice();
  }
  secondid_verification_registration_valid_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondid_verification_registration_valid_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
}

// optional string secondid_verification_timeout_voice = 16;
inline bool SoftwareStartInfo::has_secondid_verification_timeout_voice() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void SoftwareStartInfo::set_has_secondid_verification_timeout_voice() {
  _has_bits_[0] |= 0x00008000u;
}
inline void SoftwareStartInfo::clear_has_secondid_verification_timeout_voice() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void SoftwareStartInfo::clear_secondid_verification_timeout_voice() {
  secondid_verification_timeout_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secondid_verification_timeout_voice();
}
inline const ::std::string& SoftwareStartInfo::secondid_verification_timeout_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
  return secondid_verification_timeout_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_secondid_verification_timeout_voice(const ::std::string& value) {
  set_has_secondid_verification_timeout_voice();
  secondid_verification_timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
}
inline void SoftwareStartInfo::set_secondid_verification_timeout_voice(const char* value) {
  set_has_secondid_verification_timeout_voice();
  secondid_verification_timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
}
inline void SoftwareStartInfo::set_secondid_verification_timeout_voice(const char* value, size_t size) {
  set_has_secondid_verification_timeout_voice();
  secondid_verification_timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
}
inline ::std::string* SoftwareStartInfo::mutable_secondid_verification_timeout_voice() {
  set_has_secondid_verification_timeout_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
  return secondid_verification_timeout_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SoftwareStartInfo::release_secondid_verification_timeout_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
  clear_has_secondid_verification_timeout_voice();
  return secondid_verification_timeout_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SoftwareStartInfo::set_allocated_secondid_verification_timeout_voice(::std::string* secondid_verification_timeout_voice) {
  if (secondid_verification_timeout_voice != NULL) {
    set_has_secondid_verification_timeout_voice();
  } else {
    clear_has_secondid_verification_timeout_voice();
  }
  secondid_verification_timeout_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondid_verification_timeout_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
}

// -------------------------------------------------------------------

// OtherConfigInfo

// optional bool whether_use_gps_modify_local_time = 1;
inline bool OtherConfigInfo::has_whether_use_gps_modify_local_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OtherConfigInfo::set_has_whether_use_gps_modify_local_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OtherConfigInfo::clear_has_whether_use_gps_modify_local_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OtherConfigInfo::clear_whether_use_gps_modify_local_time() {
  whether_use_gps_modify_local_time_ = false;
  clear_has_whether_use_gps_modify_local_time();
}
inline bool OtherConfigInfo::whether_use_gps_modify_local_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.OtherConfigInfo.whether_use_gps_modify_local_time)
  return whether_use_gps_modify_local_time_;
}
inline void OtherConfigInfo::set_whether_use_gps_modify_local_time(bool value) {
  set_has_whether_use_gps_modify_local_time();
  whether_use_gps_modify_local_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.OtherConfigInfo.whether_use_gps_modify_local_time)
}

// optional string gps_valid_sound = 2;
inline bool OtherConfigInfo::has_gps_valid_sound() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OtherConfigInfo::set_has_gps_valid_sound() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OtherConfigInfo::clear_has_gps_valid_sound() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OtherConfigInfo::clear_gps_valid_sound() {
  gps_valid_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gps_valid_sound();
}
inline const ::std::string& OtherConfigInfo::gps_valid_sound() const {
  // @@protoc_insertion_point(field_get:OPMessage.OtherConfigInfo.gps_valid_sound)
  return gps_valid_sound_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OtherConfigInfo::set_gps_valid_sound(const ::std::string& value) {
  set_has_gps_valid_sound();
  gps_valid_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.OtherConfigInfo.gps_valid_sound)
}
inline void OtherConfigInfo::set_gps_valid_sound(const char* value) {
  set_has_gps_valid_sound();
  gps_valid_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.OtherConfigInfo.gps_valid_sound)
}
inline void OtherConfigInfo::set_gps_valid_sound(const char* value, size_t size) {
  set_has_gps_valid_sound();
  gps_valid_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.OtherConfigInfo.gps_valid_sound)
}
inline ::std::string* OtherConfigInfo::mutable_gps_valid_sound() {
  set_has_gps_valid_sound();
  // @@protoc_insertion_point(field_mutable:OPMessage.OtherConfigInfo.gps_valid_sound)
  return gps_valid_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OtherConfigInfo::release_gps_valid_sound() {
  // @@protoc_insertion_point(field_release:OPMessage.OtherConfigInfo.gps_valid_sound)
  clear_has_gps_valid_sound();
  return gps_valid_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OtherConfigInfo::set_allocated_gps_valid_sound(::std::string* gps_valid_sound) {
  if (gps_valid_sound != NULL) {
    set_has_gps_valid_sound();
  } else {
    clear_has_gps_valid_sound();
  }
  gps_valid_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gps_valid_sound);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.OtherConfigInfo.gps_valid_sound)
}

// optional string gps_invalid_sound = 3;
inline bool OtherConfigInfo::has_gps_invalid_sound() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OtherConfigInfo::set_has_gps_invalid_sound() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OtherConfigInfo::clear_has_gps_invalid_sound() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OtherConfigInfo::clear_gps_invalid_sound() {
  gps_invalid_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gps_invalid_sound();
}
inline const ::std::string& OtherConfigInfo::gps_invalid_sound() const {
  // @@protoc_insertion_point(field_get:OPMessage.OtherConfigInfo.gps_invalid_sound)
  return gps_invalid_sound_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OtherConfigInfo::set_gps_invalid_sound(const ::std::string& value) {
  set_has_gps_invalid_sound();
  gps_invalid_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.OtherConfigInfo.gps_invalid_sound)
}
inline void OtherConfigInfo::set_gps_invalid_sound(const char* value) {
  set_has_gps_invalid_sound();
  gps_invalid_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.OtherConfigInfo.gps_invalid_sound)
}
inline void OtherConfigInfo::set_gps_invalid_sound(const char* value, size_t size) {
  set_has_gps_invalid_sound();
  gps_invalid_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.OtherConfigInfo.gps_invalid_sound)
}
inline ::std::string* OtherConfigInfo::mutable_gps_invalid_sound() {
  set_has_gps_invalid_sound();
  // @@protoc_insertion_point(field_mutable:OPMessage.OtherConfigInfo.gps_invalid_sound)
  return gps_invalid_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OtherConfigInfo::release_gps_invalid_sound() {
  // @@protoc_insertion_point(field_release:OPMessage.OtherConfigInfo.gps_invalid_sound)
  clear_has_gps_invalid_sound();
  return gps_invalid_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OtherConfigInfo::set_allocated_gps_invalid_sound(::std::string* gps_invalid_sound) {
  if (gps_invalid_sound != NULL) {
    set_has_gps_invalid_sound();
  } else {
    clear_has_gps_invalid_sound();
  }
  gps_invalid_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gps_invalid_sound);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.OtherConfigInfo.gps_invalid_sound)
}

// optional bool whether_ks_mode_alarm_ring = 4;
inline bool OtherConfigInfo::has_whether_ks_mode_alarm_ring() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OtherConfigInfo::set_has_whether_ks_mode_alarm_ring() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OtherConfigInfo::clear_has_whether_ks_mode_alarm_ring() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OtherConfigInfo::clear_whether_ks_mode_alarm_ring() {
  whether_ks_mode_alarm_ring_ = false;
  clear_has_whether_ks_mode_alarm_ring();
}
inline bool OtherConfigInfo::whether_ks_mode_alarm_ring() const {
  // @@protoc_insertion_point(field_get:OPMessage.OtherConfigInfo.whether_ks_mode_alarm_ring)
  return whether_ks_mode_alarm_ring_;
}
inline void OtherConfigInfo::set_whether_ks_mode_alarm_ring(bool value) {
  set_has_whether_ks_mode_alarm_ring();
  whether_ks_mode_alarm_ring_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.OtherConfigInfo.whether_ks_mode_alarm_ring)
}

// -------------------------------------------------------------------

// ConfigPhysicSensor

// optional .OPMessage.enum_physic_sensor sensor_type = 1;
inline bool ConfigPhysicSensor::has_sensor_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigPhysicSensor::set_has_sensor_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigPhysicSensor::clear_has_sensor_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigPhysicSensor::clear_sensor_type() {
  sensor_type_ = 0;
  clear_has_sensor_type();
}
inline ::OPMessage::enum_physic_sensor ConfigPhysicSensor::sensor_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigPhysicSensor.sensor_type)
  return static_cast< ::OPMessage::enum_physic_sensor >(sensor_type_);
}
inline void ConfigPhysicSensor::set_sensor_type(::OPMessage::enum_physic_sensor value) {
  assert(::OPMessage::enum_physic_sensor_IsValid(value));
  set_has_sensor_type();
  sensor_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigPhysicSensor.sensor_type)
}

// optional int32 physic_bit = 2;
inline bool ConfigPhysicSensor::has_physic_bit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigPhysicSensor::set_has_physic_bit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigPhysicSensor::clear_has_physic_bit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigPhysicSensor::clear_physic_bit() {
  physic_bit_ = 0;
  clear_has_physic_bit();
}
inline ::google::protobuf::int32 ConfigPhysicSensor::physic_bit() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigPhysicSensor.physic_bit)
  return physic_bit_;
}
inline void ConfigPhysicSensor::set_physic_bit(::google::protobuf::int32 value) {
  set_has_physic_bit();
  physic_bit_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigPhysicSensor.physic_bit)
}

// optional int32 physic_power = 3;
inline bool ConfigPhysicSensor::has_physic_power() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigPhysicSensor::set_has_physic_power() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigPhysicSensor::clear_has_physic_power() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigPhysicSensor::clear_physic_power() {
  physic_power_ = 0;
  clear_has_physic_power();
}
inline ::google::protobuf::int32 ConfigPhysicSensor::physic_power() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigPhysicSensor.physic_power)
  return physic_power_;
}
inline void ConfigPhysicSensor::set_physic_power(::google::protobuf::int32 value) {
  set_has_physic_power();
  physic_power_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigPhysicSensor.physic_power)
}

// optional bool whether_use = 4;
inline bool ConfigPhysicSensor::has_whether_use() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigPhysicSensor::set_has_whether_use() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigPhysicSensor::clear_has_whether_use() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigPhysicSensor::clear_whether_use() {
  whether_use_ = false;
  clear_has_whether_use();
}
inline bool ConfigPhysicSensor::whether_use() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigPhysicSensor.whether_use)
  return whether_use_;
}
inline void ConfigPhysicSensor::set_whether_use(bool value) {
  set_has_whether_use();
  whether_use_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigPhysicSensor.whether_use)
}

// optional string physic_sensor_name = 5;
inline bool ConfigPhysicSensor::has_physic_sensor_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigPhysicSensor::set_has_physic_sensor_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigPhysicSensor::clear_has_physic_sensor_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigPhysicSensor::clear_physic_sensor_name() {
  physic_sensor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_physic_sensor_name();
}
inline const ::std::string& ConfigPhysicSensor::physic_sensor_name() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigPhysicSensor.physic_sensor_name)
  return physic_sensor_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigPhysicSensor::set_physic_sensor_name(const ::std::string& value) {
  set_has_physic_sensor_name();
  physic_sensor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigPhysicSensor.physic_sensor_name)
}
inline void ConfigPhysicSensor::set_physic_sensor_name(const char* value) {
  set_has_physic_sensor_name();
  physic_sensor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigPhysicSensor.physic_sensor_name)
}
inline void ConfigPhysicSensor::set_physic_sensor_name(const char* value, size_t size) {
  set_has_physic_sensor_name();
  physic_sensor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigPhysicSensor.physic_sensor_name)
}
inline ::std::string* ConfigPhysicSensor::mutable_physic_sensor_name() {
  set_has_physic_sensor_name();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigPhysicSensor.physic_sensor_name)
  return physic_sensor_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigPhysicSensor::release_physic_sensor_name() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigPhysicSensor.physic_sensor_name)
  clear_has_physic_sensor_name();
  return physic_sensor_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigPhysicSensor::set_allocated_physic_sensor_name(::std::string* physic_sensor_name) {
  if (physic_sensor_name != NULL) {
    set_has_physic_sensor_name();
  } else {
    clear_has_physic_sensor_name();
  }
  physic_sensor_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), physic_sensor_name);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigPhysicSensor.physic_sensor_name)
}

// optional string physic_sensor_description = 6;
inline bool ConfigPhysicSensor::has_physic_sensor_description() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigPhysicSensor::set_has_physic_sensor_description() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigPhysicSensor::clear_has_physic_sensor_description() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigPhysicSensor::clear_physic_sensor_description() {
  physic_sensor_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_physic_sensor_description();
}
inline const ::std::string& ConfigPhysicSensor::physic_sensor_description() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigPhysicSensor.physic_sensor_description)
  return physic_sensor_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigPhysicSensor::set_physic_sensor_description(const ::std::string& value) {
  set_has_physic_sensor_description();
  physic_sensor_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigPhysicSensor.physic_sensor_description)
}
inline void ConfigPhysicSensor::set_physic_sensor_description(const char* value) {
  set_has_physic_sensor_description();
  physic_sensor_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigPhysicSensor.physic_sensor_description)
}
inline void ConfigPhysicSensor::set_physic_sensor_description(const char* value, size_t size) {
  set_has_physic_sensor_description();
  physic_sensor_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigPhysicSensor.physic_sensor_description)
}
inline ::std::string* ConfigPhysicSensor::mutable_physic_sensor_description() {
  set_has_physic_sensor_description();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigPhysicSensor.physic_sensor_description)
  return physic_sensor_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigPhysicSensor::release_physic_sensor_description() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigPhysicSensor.physic_sensor_description)
  clear_has_physic_sensor_description();
  return physic_sensor_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigPhysicSensor::set_allocated_physic_sensor_description(::std::string* physic_sensor_description) {
  if (physic_sensor_description != NULL) {
    set_has_physic_sensor_description();
  } else {
    clear_has_physic_sensor_description();
  }
  physic_sensor_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), physic_sensor_description);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigPhysicSensor.physic_sensor_description)
}

// -------------------------------------------------------------------

// JudgeItemInfo

// optional int32 item_id = 1;
inline bool JudgeItemInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JudgeItemInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JudgeItemInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JudgeItemInfo::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 JudgeItemInfo::item_id() const {
  // @@protoc_insertion_point(field_get:OPMessage.JudgeItemInfo.item_id)
  return item_id_;
}
inline void JudgeItemInfo::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.JudgeItemInfo.item_id)
}

// optional int32 item_index = 2 [default = -1];
inline bool JudgeItemInfo::has_item_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JudgeItemInfo::set_has_item_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JudgeItemInfo::clear_has_item_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JudgeItemInfo::clear_item_index() {
  item_index_ = -1;
  clear_has_item_index();
}
inline ::google::protobuf::int32 JudgeItemInfo::item_index() const {
  // @@protoc_insertion_point(field_get:OPMessage.JudgeItemInfo.item_index)
  return item_index_;
}
inline void JudgeItemInfo::set_item_index(::google::protobuf::int32 value) {
  set_has_item_index();
  item_index_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.JudgeItemInfo.item_index)
}

// optional string item_name = 3;
inline bool JudgeItemInfo::has_item_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JudgeItemInfo::set_has_item_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JudgeItemInfo::clear_has_item_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JudgeItemInfo::clear_item_name() {
  item_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_name();
}
inline const ::std::string& JudgeItemInfo::item_name() const {
  // @@protoc_insertion_point(field_get:OPMessage.JudgeItemInfo.item_name)
  return item_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JudgeItemInfo::set_item_name(const ::std::string& value) {
  set_has_item_name();
  item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.JudgeItemInfo.item_name)
}
inline void JudgeItemInfo::set_item_name(const char* value) {
  set_has_item_name();
  item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.JudgeItemInfo.item_name)
}
inline void JudgeItemInfo::set_item_name(const char* value, size_t size) {
  set_has_item_name();
  item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.JudgeItemInfo.item_name)
}
inline ::std::string* JudgeItemInfo::mutable_item_name() {
  set_has_item_name();
  // @@protoc_insertion_point(field_mutable:OPMessage.JudgeItemInfo.item_name)
  return item_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JudgeItemInfo::release_item_name() {
  // @@protoc_insertion_point(field_release:OPMessage.JudgeItemInfo.item_name)
  clear_has_item_name();
  return item_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JudgeItemInfo::set_allocated_item_name(::std::string* item_name) {
  if (item_name != NULL) {
    set_has_item_name();
  } else {
    clear_has_item_name();
  }
  item_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_name);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.JudgeItemInfo.item_name)
}

// -------------------------------------------------------------------

// ConfigInfoBasic

// optional string com_gps = 1 [default = "COM1"];
inline bool ConfigInfoBasic::has_com_gps() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigInfoBasic::set_has_com_gps() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigInfoBasic::clear_has_com_gps() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigInfoBasic::clear_com_gps() {
  com_gps_.ClearToDefaultNoArena(_default_com_gps_);
  clear_has_com_gps();
}
inline const ::std::string& ConfigInfoBasic::com_gps() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.com_gps)
  return com_gps_.GetNoArena(_default_com_gps_);
}
inline void ConfigInfoBasic::set_com_gps(const ::std::string& value) {
  set_has_com_gps();
  com_gps_.SetNoArena(_default_com_gps_, value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.com_gps)
}
inline void ConfigInfoBasic::set_com_gps(const char* value) {
  set_has_com_gps();
  com_gps_.SetNoArena(_default_com_gps_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigInfoBasic.com_gps)
}
inline void ConfigInfoBasic::set_com_gps(const char* value, size_t size) {
  set_has_com_gps();
  com_gps_.SetNoArena(_default_com_gps_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigInfoBasic.com_gps)
}
inline ::std::string* ConfigInfoBasic::mutable_com_gps() {
  set_has_com_gps();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.com_gps)
  return com_gps_.MutableNoArena(_default_com_gps_);
}
inline ::std::string* ConfigInfoBasic::release_com_gps() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigInfoBasic.com_gps)
  clear_has_com_gps();
  return com_gps_.ReleaseNoArena(_default_com_gps_);
}
inline void ConfigInfoBasic::set_allocated_com_gps(::std::string* com_gps) {
  if (com_gps != NULL) {
    set_has_com_gps();
  } else {
    clear_has_com_gps();
  }
  com_gps_.SetAllocatedNoArena(_default_com_gps_, com_gps);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigInfoBasic.com_gps)
}

// optional string com_sensor = 2 [default = "COM2"];
inline bool ConfigInfoBasic::has_com_sensor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfigInfoBasic::set_has_com_sensor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfigInfoBasic::clear_has_com_sensor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfigInfoBasic::clear_com_sensor() {
  com_sensor_.ClearToDefaultNoArena(_default_com_sensor_);
  clear_has_com_sensor();
}
inline const ::std::string& ConfigInfoBasic::com_sensor() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.com_sensor)
  return com_sensor_.GetNoArena(_default_com_sensor_);
}
inline void ConfigInfoBasic::set_com_sensor(const ::std::string& value) {
  set_has_com_sensor();
  com_sensor_.SetNoArena(_default_com_sensor_, value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.com_sensor)
}
inline void ConfigInfoBasic::set_com_sensor(const char* value) {
  set_has_com_sensor();
  com_sensor_.SetNoArena(_default_com_sensor_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigInfoBasic.com_sensor)
}
inline void ConfigInfoBasic::set_com_sensor(const char* value, size_t size) {
  set_has_com_sensor();
  com_sensor_.SetNoArena(_default_com_sensor_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigInfoBasic.com_sensor)
}
inline ::std::string* ConfigInfoBasic::mutable_com_sensor() {
  set_has_com_sensor();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.com_sensor)
  return com_sensor_.MutableNoArena(_default_com_sensor_);
}
inline ::std::string* ConfigInfoBasic::release_com_sensor() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigInfoBasic.com_sensor)
  clear_has_com_sensor();
  return com_sensor_.ReleaseNoArena(_default_com_sensor_);
}
inline void ConfigInfoBasic::set_allocated_com_sensor(::std::string* com_sensor) {
  if (com_sensor != NULL) {
    set_has_com_sensor();
  } else {
    clear_has_com_sensor();
  }
  com_sensor_.SetAllocatedNoArena(_default_com_sensor_, com_sensor);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigInfoBasic.com_sensor)
}

// optional string com_printer = 3 [default = "COM3"];
inline bool ConfigInfoBasic::has_com_printer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfigInfoBasic::set_has_com_printer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfigInfoBasic::clear_has_com_printer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfigInfoBasic::clear_com_printer() {
  com_printer_.ClearToDefaultNoArena(_default_com_printer_);
  clear_has_com_printer();
}
inline const ::std::string& ConfigInfoBasic::com_printer() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.com_printer)
  return com_printer_.GetNoArena(_default_com_printer_);
}
inline void ConfigInfoBasic::set_com_printer(const ::std::string& value) {
  set_has_com_printer();
  com_printer_.SetNoArena(_default_com_printer_, value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.com_printer)
}
inline void ConfigInfoBasic::set_com_printer(const char* value) {
  set_has_com_printer();
  com_printer_.SetNoArena(_default_com_printer_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigInfoBasic.com_printer)
}
inline void ConfigInfoBasic::set_com_printer(const char* value, size_t size) {
  set_has_com_printer();
  com_printer_.SetNoArena(_default_com_printer_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigInfoBasic.com_printer)
}
inline ::std::string* ConfigInfoBasic::mutable_com_printer() {
  set_has_com_printer();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.com_printer)
  return com_printer_.MutableNoArena(_default_com_printer_);
}
inline ::std::string* ConfigInfoBasic::release_com_printer() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigInfoBasic.com_printer)
  clear_has_com_printer();
  return com_printer_.ReleaseNoArena(_default_com_printer_);
}
inline void ConfigInfoBasic::set_allocated_com_printer(::std::string* com_printer) {
  if (com_printer != NULL) {
    set_has_com_printer();
  } else {
    clear_has_com_printer();
  }
  com_printer_.SetAllocatedNoArena(_default_com_printer_, com_printer);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigInfoBasic.com_printer)
}

// optional bool com_printer_whether_use = 4 [default = true];
inline bool ConfigInfoBasic::has_com_printer_whether_use() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfigInfoBasic::set_has_com_printer_whether_use() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfigInfoBasic::clear_has_com_printer_whether_use() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfigInfoBasic::clear_com_printer_whether_use() {
  com_printer_whether_use_ = true;
  clear_has_com_printer_whether_use();
}
inline bool ConfigInfoBasic::com_printer_whether_use() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.com_printer_whether_use)
  return com_printer_whether_use_;
}
inline void ConfigInfoBasic::set_com_printer_whether_use(bool value) {
  set_has_com_printer_whether_use();
  com_printer_whether_use_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.com_printer_whether_use)
}

// optional string com_printer_header = 5;
inline bool ConfigInfoBasic::has_com_printer_header() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ConfigInfoBasic::set_has_com_printer_header() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ConfigInfoBasic::clear_has_com_printer_header() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ConfigInfoBasic::clear_com_printer_header() {
  com_printer_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_com_printer_header();
}
inline const ::std::string& ConfigInfoBasic::com_printer_header() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.com_printer_header)
  return com_printer_header_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoBasic::set_com_printer_header(const ::std::string& value) {
  set_has_com_printer_header();
  com_printer_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.com_printer_header)
}
inline void ConfigInfoBasic::set_com_printer_header(const char* value) {
  set_has_com_printer_header();
  com_printer_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigInfoBasic.com_printer_header)
}
inline void ConfigInfoBasic::set_com_printer_header(const char* value, size_t size) {
  set_has_com_printer_header();
  com_printer_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigInfoBasic.com_printer_header)
}
inline ::std::string* ConfigInfoBasic::mutable_com_printer_header() {
  set_has_com_printer_header();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.com_printer_header)
  return com_printer_header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigInfoBasic::release_com_printer_header() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigInfoBasic.com_printer_header)
  clear_has_com_printer_header();
  return com_printer_header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoBasic::set_allocated_com_printer_header(::std::string* com_printer_header) {
  if (com_printer_header != NULL) {
    set_has_com_printer_header();
  } else {
    clear_has_com_printer_header();
  }
  com_printer_header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), com_printer_header);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigInfoBasic.com_printer_header)
}

// optional string com_printer_footer = 6;
inline bool ConfigInfoBasic::has_com_printer_footer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ConfigInfoBasic::set_has_com_printer_footer() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ConfigInfoBasic::clear_has_com_printer_footer() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ConfigInfoBasic::clear_com_printer_footer() {
  com_printer_footer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_com_printer_footer();
}
inline const ::std::string& ConfigInfoBasic::com_printer_footer() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.com_printer_footer)
  return com_printer_footer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoBasic::set_com_printer_footer(const ::std::string& value) {
  set_has_com_printer_footer();
  com_printer_footer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.com_printer_footer)
}
inline void ConfigInfoBasic::set_com_printer_footer(const char* value) {
  set_has_com_printer_footer();
  com_printer_footer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigInfoBasic.com_printer_footer)
}
inline void ConfigInfoBasic::set_com_printer_footer(const char* value, size_t size) {
  set_has_com_printer_footer();
  com_printer_footer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigInfoBasic.com_printer_footer)
}
inline ::std::string* ConfigInfoBasic::mutable_com_printer_footer() {
  set_has_com_printer_footer();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.com_printer_footer)
  return com_printer_footer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigInfoBasic::release_com_printer_footer() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigInfoBasic.com_printer_footer)
  clear_has_com_printer_footer();
  return com_printer_footer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigInfoBasic::set_allocated_com_printer_footer(::std::string* com_printer_footer) {
  if (com_printer_footer != NULL) {
    set_has_com_printer_footer();
  } else {
    clear_has_com_printer_footer();
  }
  com_printer_footer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), com_printer_footer);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigInfoBasic.com_printer_footer)
}

// optional double station_latitude = 7;
inline bool ConfigInfoBasic::has_station_latitude() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ConfigInfoBasic::set_has_station_latitude() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ConfigInfoBasic::clear_has_station_latitude() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ConfigInfoBasic::clear_station_latitude() {
  station_latitude_ = 0;
  clear_has_station_latitude();
}
inline double ConfigInfoBasic::station_latitude() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.station_latitude)
  return station_latitude_;
}
inline void ConfigInfoBasic::set_station_latitude(double value) {
  set_has_station_latitude();
  station_latitude_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.station_latitude)
}

// optional double station_longitude = 8;
inline bool ConfigInfoBasic::has_station_longitude() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ConfigInfoBasic::set_has_station_longitude() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ConfigInfoBasic::clear_has_station_longitude() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ConfigInfoBasic::clear_station_longitude() {
  station_longitude_ = 0;
  clear_has_station_longitude();
}
inline double ConfigInfoBasic::station_longitude() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.station_longitude)
  return station_longitude_;
}
inline void ConfigInfoBasic::set_station_longitude(double value) {
  set_has_station_longitude();
  station_longitude_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.station_longitude)
}

// optional double station_altitude = 9;
inline bool ConfigInfoBasic::has_station_altitude() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ConfigInfoBasic::set_has_station_altitude() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ConfigInfoBasic::clear_has_station_altitude() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ConfigInfoBasic::clear_station_altitude() {
  station_altitude_ = 0;
  clear_has_station_altitude();
}
inline double ConfigInfoBasic::station_altitude() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.station_altitude)
  return station_altitude_;
}
inline void ConfigInfoBasic::set_station_altitude(double value) {
  set_has_station_altitude();
  station_altitude_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.station_altitude)
}

// optional double station_centerLontitude = 10;
inline bool ConfigInfoBasic::has_station_centerlontitude() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ConfigInfoBasic::set_has_station_centerlontitude() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ConfigInfoBasic::clear_has_station_centerlontitude() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ConfigInfoBasic::clear_station_centerlontitude() {
  station_centerlontitude_ = 0;
  clear_has_station_centerlontitude();
}
inline double ConfigInfoBasic::station_centerlontitude() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.station_centerLontitude)
  return station_centerlontitude_;
}
inline void ConfigInfoBasic::set_station_centerlontitude(double value) {
  set_has_station_centerlontitude();
  station_centerlontitude_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.station_centerLontitude)
}

// optional double align_frontAntennaHigh = 11;
inline bool ConfigInfoBasic::has_align_frontantennahigh() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ConfigInfoBasic::set_has_align_frontantennahigh() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ConfigInfoBasic::clear_has_align_frontantennahigh() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ConfigInfoBasic::clear_align_frontantennahigh() {
  align_frontantennahigh_ = 0;
  clear_has_align_frontantennahigh();
}
inline double ConfigInfoBasic::align_frontantennahigh() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_frontAntennaHigh)
  return align_frontantennahigh_;
}
inline void ConfigInfoBasic::set_align_frontantennahigh(double value) {
  set_has_align_frontantennahigh();
  align_frontantennahigh_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_frontAntennaHigh)
}

// optional double align_backAntennaHigh = 12;
inline bool ConfigInfoBasic::has_align_backantennahigh() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ConfigInfoBasic::set_has_align_backantennahigh() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ConfigInfoBasic::clear_has_align_backantennahigh() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ConfigInfoBasic::clear_align_backantennahigh() {
  align_backantennahigh_ = 0;
  clear_has_align_backantennahigh();
}
inline double ConfigInfoBasic::align_backantennahigh() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_backAntennaHigh)
  return align_backantennahigh_;
}
inline void ConfigInfoBasic::set_align_backantennahigh(double value) {
  set_has_align_backantennahigh();
  align_backantennahigh_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_backAntennaHigh)
}

// optional double align_underpanHigh = 13;
inline bool ConfigInfoBasic::has_align_underpanhigh() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ConfigInfoBasic::set_has_align_underpanhigh() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ConfigInfoBasic::clear_has_align_underpanhigh() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ConfigInfoBasic::clear_align_underpanhigh() {
  align_underpanhigh_ = 0;
  clear_has_align_underpanhigh();
}
inline double ConfigInfoBasic::align_underpanhigh() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_underpanHigh)
  return align_underpanhigh_;
}
inline void ConfigInfoBasic::set_align_underpanhigh(double value) {
  set_has_align_underpanhigh();
  align_underpanhigh_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_underpanHigh)
}

// optional double align_baseLine = 14;
inline bool ConfigInfoBasic::has_align_baseline() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ConfigInfoBasic::set_has_align_baseline() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ConfigInfoBasic::clear_has_align_baseline() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ConfigInfoBasic::clear_align_baseline() {
  align_baseline_ = 0;
  clear_has_align_baseline();
}
inline double ConfigInfoBasic::align_baseline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_baseLine)
  return align_baseline_;
}
inline void ConfigInfoBasic::set_align_baseline(double value) {
  set_has_align_baseline();
  align_baseline_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_baseLine)
}

// optional double align_pitch = 15;
inline bool ConfigInfoBasic::has_align_pitch() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ConfigInfoBasic::set_has_align_pitch() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ConfigInfoBasic::clear_has_align_pitch() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ConfigInfoBasic::clear_align_pitch() {
  align_pitch_ = 0;
  clear_has_align_pitch();
}
inline double ConfigInfoBasic::align_pitch() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_pitch)
  return align_pitch_;
}
inline void ConfigInfoBasic::set_align_pitch(double value) {
  set_has_align_pitch();
  align_pitch_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_pitch)
}

// optional double align_track = 16;
inline bool ConfigInfoBasic::has_align_track() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ConfigInfoBasic::set_has_align_track() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ConfigInfoBasic::clear_has_align_track() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ConfigInfoBasic::clear_align_track() {
  align_track_ = 0;
  clear_has_align_track();
}
inline double ConfigInfoBasic::align_track() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_track)
  return align_track_;
}
inline void ConfigInfoBasic::set_align_track(double value) {
  set_has_align_track();
  align_track_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_track)
}

// optional int32 align_terminalDataHz = 17;
inline bool ConfigInfoBasic::has_align_terminaldatahz() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ConfigInfoBasic::set_has_align_terminaldatahz() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ConfigInfoBasic::clear_has_align_terminaldatahz() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ConfigInfoBasic::clear_align_terminaldatahz() {
  align_terminaldatahz_ = 0;
  clear_has_align_terminaldatahz();
}
inline ::google::protobuf::int32 ConfigInfoBasic::align_terminaldatahz() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_terminalDataHz)
  return align_terminaldatahz_;
}
inline void ConfigInfoBasic::set_align_terminaldatahz(::google::protobuf::int32 value) {
  set_has_align_terminaldatahz();
  align_terminaldatahz_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_terminalDataHz)
}

// optional double align_minspeed = 18;
inline bool ConfigInfoBasic::has_align_minspeed() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ConfigInfoBasic::set_has_align_minspeed() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ConfigInfoBasic::clear_has_align_minspeed() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ConfigInfoBasic::clear_align_minspeed() {
  align_minspeed_ = 0;
  clear_has_align_minspeed();
}
inline double ConfigInfoBasic::align_minspeed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_minspeed)
  return align_minspeed_;
}
inline void ConfigInfoBasic::set_align_minspeed(double value) {
  set_has_align_minspeed();
  align_minspeed_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_minspeed)
}

// repeated .OPMessage.JudgeItemInfo judge_test_items_array = 19;
inline int ConfigInfoBasic::judge_test_items_array_size() const {
  return judge_test_items_array_.size();
}
inline void ConfigInfoBasic::clear_judge_test_items_array() {
  judge_test_items_array_.Clear();
}
inline const ::OPMessage::JudgeItemInfo& ConfigInfoBasic::judge_test_items_array(int index) const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.judge_test_items_array)
  return judge_test_items_array_.Get(index);
}
inline ::OPMessage::JudgeItemInfo* ConfigInfoBasic::mutable_judge_test_items_array(int index) {
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.judge_test_items_array)
  return judge_test_items_array_.Mutable(index);
}
inline ::OPMessage::JudgeItemInfo* ConfigInfoBasic::add_judge_test_items_array() {
  // @@protoc_insertion_point(field_add:OPMessage.ConfigInfoBasic.judge_test_items_array)
  return judge_test_items_array_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >*
ConfigInfoBasic::mutable_judge_test_items_array() {
  // @@protoc_insertion_point(field_mutable_list:OPMessage.ConfigInfoBasic.judge_test_items_array)
  return &judge_test_items_array_;
}
inline const ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >&
ConfigInfoBasic::judge_test_items_array() const {
  // @@protoc_insertion_point(field_list:OPMessage.ConfigInfoBasic.judge_test_items_array)
  return judge_test_items_array_;
}

// repeated .OPMessage.JudgeItemInfo judge_test_items_array3 = 20;
inline int ConfigInfoBasic::judge_test_items_array3_size() const {
  return judge_test_items_array3_.size();
}
inline void ConfigInfoBasic::clear_judge_test_items_array3() {
  judge_test_items_array3_.Clear();
}
inline const ::OPMessage::JudgeItemInfo& ConfigInfoBasic::judge_test_items_array3(int index) const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.judge_test_items_array3)
  return judge_test_items_array3_.Get(index);
}
inline ::OPMessage::JudgeItemInfo* ConfigInfoBasic::mutable_judge_test_items_array3(int index) {
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.judge_test_items_array3)
  return judge_test_items_array3_.Mutable(index);
}
inline ::OPMessage::JudgeItemInfo* ConfigInfoBasic::add_judge_test_items_array3() {
  // @@protoc_insertion_point(field_add:OPMessage.ConfigInfoBasic.judge_test_items_array3)
  return judge_test_items_array3_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >*
ConfigInfoBasic::mutable_judge_test_items_array3() {
  // @@protoc_insertion_point(field_mutable_list:OPMessage.ConfigInfoBasic.judge_test_items_array3)
  return &judge_test_items_array3_;
}
inline const ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >&
ConfigInfoBasic::judge_test_items_array3() const {
  // @@protoc_insertion_point(field_list:OPMessage.ConfigInfoBasic.judge_test_items_array3)
  return judge_test_items_array3_;
}

// repeated .OPMessage.JudgeItemInfo judge_manual_test_items_array = 21;
inline int ConfigInfoBasic::judge_manual_test_items_array_size() const {
  return judge_manual_test_items_array_.size();
}
inline void ConfigInfoBasic::clear_judge_manual_test_items_array() {
  judge_manual_test_items_array_.Clear();
}
inline const ::OPMessage::JudgeItemInfo& ConfigInfoBasic::judge_manual_test_items_array(int index) const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.judge_manual_test_items_array)
  return judge_manual_test_items_array_.Get(index);
}
inline ::OPMessage::JudgeItemInfo* ConfigInfoBasic::mutable_judge_manual_test_items_array(int index) {
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.judge_manual_test_items_array)
  return judge_manual_test_items_array_.Mutable(index);
}
inline ::OPMessage::JudgeItemInfo* ConfigInfoBasic::add_judge_manual_test_items_array() {
  // @@protoc_insertion_point(field_add:OPMessage.ConfigInfoBasic.judge_manual_test_items_array)
  return judge_manual_test_items_array_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >*
ConfigInfoBasic::mutable_judge_manual_test_items_array() {
  // @@protoc_insertion_point(field_mutable_list:OPMessage.ConfigInfoBasic.judge_manual_test_items_array)
  return &judge_manual_test_items_array_;
}
inline const ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >&
ConfigInfoBasic::judge_manual_test_items_array() const {
  // @@protoc_insertion_point(field_list:OPMessage.ConfigInfoBasic.judge_manual_test_items_array)
  return judge_manual_test_items_array_;
}

// optional bool judge_item_whether_sequence = 22;
inline bool ConfigInfoBasic::has_judge_item_whether_sequence() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ConfigInfoBasic::set_has_judge_item_whether_sequence() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ConfigInfoBasic::clear_has_judge_item_whether_sequence() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ConfigInfoBasic::clear_judge_item_whether_sequence() {
  judge_item_whether_sequence_ = false;
  clear_has_judge_item_whether_sequence();
}
inline bool ConfigInfoBasic::judge_item_whether_sequence() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.judge_item_whether_sequence)
  return judge_item_whether_sequence_;
}
inline void ConfigInfoBasic::set_judge_item_whether_sequence(bool value) {
  set_has_judge_item_whether_sequence();
  judge_item_whether_sequence_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.judge_item_whether_sequence)
}

// repeated .OPMessage.ConfigPhysicSensor phpsic_sensor_array = 23;
inline int ConfigInfoBasic::phpsic_sensor_array_size() const {
  return phpsic_sensor_array_.size();
}
inline void ConfigInfoBasic::clear_phpsic_sensor_array() {
  phpsic_sensor_array_.Clear();
}
inline const ::OPMessage::ConfigPhysicSensor& ConfigInfoBasic::phpsic_sensor_array(int index) const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.phpsic_sensor_array)
  return phpsic_sensor_array_.Get(index);
}
inline ::OPMessage::ConfigPhysicSensor* ConfigInfoBasic::mutable_phpsic_sensor_array(int index) {
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.phpsic_sensor_array)
  return phpsic_sensor_array_.Mutable(index);
}
inline ::OPMessage::ConfigPhysicSensor* ConfigInfoBasic::add_phpsic_sensor_array() {
  // @@protoc_insertion_point(field_add:OPMessage.ConfigInfoBasic.phpsic_sensor_array)
  return phpsic_sensor_array_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::OPMessage::ConfigPhysicSensor >*
ConfigInfoBasic::mutable_phpsic_sensor_array() {
  // @@protoc_insertion_point(field_mutable_list:OPMessage.ConfigInfoBasic.phpsic_sensor_array)
  return &phpsic_sensor_array_;
}
inline const ::google::protobuf::RepeatedPtrField< ::OPMessage::ConfigPhysicSensor >&
ConfigInfoBasic::phpsic_sensor_array() const {
  // @@protoc_insertion_point(field_list:OPMessage.ConfigInfoBasic.phpsic_sensor_array)
  return phpsic_sensor_array_;
}

// -------------------------------------------------------------------

// BasicSafety

// optional bool safety_whether_check = 1;
inline bool BasicSafety::has_safety_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicSafety::set_has_safety_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicSafety::clear_has_safety_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicSafety::clear_safety_whether_check() {
  safety_whether_check_ = false;
  clear_has_safety_whether_check();
}
inline bool BasicSafety::safety_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSafety.safety_whether_check)
  return safety_whether_check_;
}
inline void BasicSafety::set_safety_whether_check(bool value) {
  set_has_safety_whether_check();
  safety_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSafety.safety_whether_check)
}

// optional int32 safety_deduction = 2;
inline bool BasicSafety::has_safety_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicSafety::set_has_safety_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicSafety::clear_has_safety_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicSafety::clear_safety_deduction() {
  safety_deduction_ = 0;
  clear_has_safety_deduction();
}
inline ::google::protobuf::int32 BasicSafety::safety_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSafety.safety_deduction)
  return safety_deduction_;
}
inline void BasicSafety::set_safety_deduction(::google::protobuf::int32 value) {
  set_has_safety_deduction();
  safety_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSafety.safety_deduction)
}

// optional string safety_voice = 3;
inline bool BasicSafety::has_safety_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicSafety::set_has_safety_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicSafety::clear_has_safety_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicSafety::clear_safety_voice() {
  safety_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_safety_voice();
}
inline const ::std::string& BasicSafety::safety_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSafety.safety_voice)
  return safety_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicSafety::set_safety_voice(const ::std::string& value) {
  set_has_safety_voice();
  safety_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicSafety.safety_voice)
}
inline void BasicSafety::set_safety_voice(const char* value) {
  set_has_safety_voice();
  safety_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicSafety.safety_voice)
}
inline void BasicSafety::set_safety_voice(const char* value, size_t size) {
  set_has_safety_voice();
  safety_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicSafety.safety_voice)
}
inline ::std::string* BasicSafety::mutable_safety_voice() {
  set_has_safety_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicSafety.safety_voice)
  return safety_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicSafety::release_safety_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicSafety.safety_voice)
  clear_has_safety_voice();
  return safety_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicSafety::set_allocated_safety_voice(::std::string* safety_voice) {
  if (safety_voice != NULL) {
    set_has_safety_voice();
  } else {
    clear_has_safety_voice();
  }
  safety_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), safety_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicSafety.safety_voice)
}

// optional int32 safety_lasting_time = 4;
inline bool BasicSafety::has_safety_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicSafety::set_has_safety_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicSafety::clear_has_safety_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicSafety::clear_safety_lasting_time() {
  safety_lasting_time_ = 0;
  clear_has_safety_lasting_time();
}
inline ::google::protobuf::int32 BasicSafety::safety_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSafety.safety_lasting_time)
  return safety_lasting_time_;
}
inline void BasicSafety::set_safety_lasting_time(::google::protobuf::int32 value) {
  set_has_safety_lasting_time();
  safety_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSafety.safety_lasting_time)
}

// optional int32 safety_deduction_number = 5;
inline bool BasicSafety::has_safety_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicSafety::set_has_safety_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicSafety::clear_has_safety_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicSafety::clear_safety_deduction_number() {
  safety_deduction_number_ = 0;
  clear_has_safety_deduction_number();
}
inline ::google::protobuf::int32 BasicSafety::safety_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSafety.safety_deduction_number)
  return safety_deduction_number_;
}
inline void BasicSafety::set_safety_deduction_number(::google::protobuf::int32 value) {
  set_has_safety_deduction_number();
  safety_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSafety.safety_deduction_number)
}

// optional int32 safety_judge_number = 6;
inline bool BasicSafety::has_safety_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicSafety::set_has_safety_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicSafety::clear_has_safety_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicSafety::clear_safety_judge_number() {
  safety_judge_number_ = 0;
  clear_has_safety_judge_number();
}
inline ::google::protobuf::int32 BasicSafety::safety_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSafety.safety_judge_number)
  return safety_judge_number_;
}
inline void BasicSafety::set_safety_judge_number(::google::protobuf::int32 value) {
  set_has_safety_judge_number();
  safety_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSafety.safety_judge_number)
}

// -------------------------------------------------------------------

// BasicDoor

// optional bool door_whether_check = 1;
inline bool BasicDoor::has_door_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicDoor::set_has_door_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicDoor::clear_has_door_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicDoor::clear_door_whether_check() {
  door_whether_check_ = false;
  clear_has_door_whether_check();
}
inline bool BasicDoor::door_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDoor.door_whether_check)
  return door_whether_check_;
}
inline void BasicDoor::set_door_whether_check(bool value) {
  set_has_door_whether_check();
  door_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDoor.door_whether_check)
}

// optional int32 door_deduction = 2;
inline bool BasicDoor::has_door_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicDoor::set_has_door_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicDoor::clear_has_door_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicDoor::clear_door_deduction() {
  door_deduction_ = 0;
  clear_has_door_deduction();
}
inline ::google::protobuf::int32 BasicDoor::door_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDoor.door_deduction)
  return door_deduction_;
}
inline void BasicDoor::set_door_deduction(::google::protobuf::int32 value) {
  set_has_door_deduction();
  door_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDoor.door_deduction)
}

// optional string door_voice = 3;
inline bool BasicDoor::has_door_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicDoor::set_has_door_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicDoor::clear_has_door_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicDoor::clear_door_voice() {
  door_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_door_voice();
}
inline const ::std::string& BasicDoor::door_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDoor.door_voice)
  return door_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicDoor::set_door_voice(const ::std::string& value) {
  set_has_door_voice();
  door_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicDoor.door_voice)
}
inline void BasicDoor::set_door_voice(const char* value) {
  set_has_door_voice();
  door_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicDoor.door_voice)
}
inline void BasicDoor::set_door_voice(const char* value, size_t size) {
  set_has_door_voice();
  door_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicDoor.door_voice)
}
inline ::std::string* BasicDoor::mutable_door_voice() {
  set_has_door_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicDoor.door_voice)
  return door_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicDoor::release_door_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicDoor.door_voice)
  clear_has_door_voice();
  return door_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicDoor::set_allocated_door_voice(::std::string* door_voice) {
  if (door_voice != NULL) {
    set_has_door_voice();
  } else {
    clear_has_door_voice();
  }
  door_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), door_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicDoor.door_voice)
}

// optional int32 door_lasting_time = 4;
inline bool BasicDoor::has_door_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicDoor::set_has_door_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicDoor::clear_has_door_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicDoor::clear_door_lasting_time() {
  door_lasting_time_ = 0;
  clear_has_door_lasting_time();
}
inline ::google::protobuf::int32 BasicDoor::door_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDoor.door_lasting_time)
  return door_lasting_time_;
}
inline void BasicDoor::set_door_lasting_time(::google::protobuf::int32 value) {
  set_has_door_lasting_time();
  door_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDoor.door_lasting_time)
}

// optional int32 door_deduction_number = 5;
inline bool BasicDoor::has_door_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicDoor::set_has_door_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicDoor::clear_has_door_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicDoor::clear_door_deduction_number() {
  door_deduction_number_ = 0;
  clear_has_door_deduction_number();
}
inline ::google::protobuf::int32 BasicDoor::door_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDoor.door_deduction_number)
  return door_deduction_number_;
}
inline void BasicDoor::set_door_deduction_number(::google::protobuf::int32 value) {
  set_has_door_deduction_number();
  door_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDoor.door_deduction_number)
}

// optional int32 door_judge_number = 6;
inline bool BasicDoor::has_door_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicDoor::set_has_door_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicDoor::clear_has_door_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicDoor::clear_door_judge_number() {
  door_judge_number_ = 0;
  clear_has_door_judge_number();
}
inline ::google::protobuf::int32 BasicDoor::door_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDoor.door_judge_number)
  return door_judge_number_;
}
inline void BasicDoor::set_door_judge_number(::google::protobuf::int32 value) {
  set_has_door_judge_number();
  door_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDoor.door_judge_number)
}

// -------------------------------------------------------------------

// BasicHorn

// optional bool horn_whether_check = 1;
inline bool BasicHorn::has_horn_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicHorn::set_has_horn_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicHorn::clear_has_horn_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicHorn::clear_horn_whether_check() {
  horn_whether_check_ = false;
  clear_has_horn_whether_check();
}
inline bool BasicHorn::horn_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHorn.horn_whether_check)
  return horn_whether_check_;
}
inline void BasicHorn::set_horn_whether_check(bool value) {
  set_has_horn_whether_check();
  horn_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHorn.horn_whether_check)
}

// optional int32 horn_deduction = 2;
inline bool BasicHorn::has_horn_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicHorn::set_has_horn_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicHorn::clear_has_horn_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicHorn::clear_horn_deduction() {
  horn_deduction_ = 0;
  clear_has_horn_deduction();
}
inline ::google::protobuf::int32 BasicHorn::horn_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHorn.horn_deduction)
  return horn_deduction_;
}
inline void BasicHorn::set_horn_deduction(::google::protobuf::int32 value) {
  set_has_horn_deduction();
  horn_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHorn.horn_deduction)
}

// optional string horn_voice = 3;
inline bool BasicHorn::has_horn_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicHorn::set_has_horn_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicHorn::clear_has_horn_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicHorn::clear_horn_voice() {
  horn_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_horn_voice();
}
inline const ::std::string& BasicHorn::horn_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHorn.horn_voice)
  return horn_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicHorn::set_horn_voice(const ::std::string& value) {
  set_has_horn_voice();
  horn_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicHorn.horn_voice)
}
inline void BasicHorn::set_horn_voice(const char* value) {
  set_has_horn_voice();
  horn_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicHorn.horn_voice)
}
inline void BasicHorn::set_horn_voice(const char* value, size_t size) {
  set_has_horn_voice();
  horn_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicHorn.horn_voice)
}
inline ::std::string* BasicHorn::mutable_horn_voice() {
  set_has_horn_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicHorn.horn_voice)
  return horn_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicHorn::release_horn_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicHorn.horn_voice)
  clear_has_horn_voice();
  return horn_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicHorn::set_allocated_horn_voice(::std::string* horn_voice) {
  if (horn_voice != NULL) {
    set_has_horn_voice();
  } else {
    clear_has_horn_voice();
  }
  horn_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), horn_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicHorn.horn_voice)
}

// optional int32 horn_lasting_time = 4;
inline bool BasicHorn::has_horn_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicHorn::set_has_horn_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicHorn::clear_has_horn_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicHorn::clear_horn_lasting_time() {
  horn_lasting_time_ = 0;
  clear_has_horn_lasting_time();
}
inline ::google::protobuf::int32 BasicHorn::horn_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHorn.horn_lasting_time)
  return horn_lasting_time_;
}
inline void BasicHorn::set_horn_lasting_time(::google::protobuf::int32 value) {
  set_has_horn_lasting_time();
  horn_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHorn.horn_lasting_time)
}

// optional int32 horn_deduction_number = 5;
inline bool BasicHorn::has_horn_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicHorn::set_has_horn_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicHorn::clear_has_horn_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicHorn::clear_horn_deduction_number() {
  horn_deduction_number_ = 0;
  clear_has_horn_deduction_number();
}
inline ::google::protobuf::int32 BasicHorn::horn_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHorn.horn_deduction_number)
  return horn_deduction_number_;
}
inline void BasicHorn::set_horn_deduction_number(::google::protobuf::int32 value) {
  set_has_horn_deduction_number();
  horn_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHorn.horn_deduction_number)
}

// optional int32 horn_judge_number = 6;
inline bool BasicHorn::has_horn_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicHorn::set_has_horn_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicHorn::clear_has_horn_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicHorn::clear_horn_judge_number() {
  horn_judge_number_ = 0;
  clear_has_horn_judge_number();
}
inline ::google::protobuf::int32 BasicHorn::horn_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHorn.horn_judge_number)
  return horn_judge_number_;
}
inline void BasicHorn::set_horn_judge_number(::google::protobuf::int32 value) {
  set_has_horn_judge_number();
  horn_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHorn.horn_judge_number)
}

// -------------------------------------------------------------------

// BasicFlameout

// optional bool flameout_whether_check = 1;
inline bool BasicFlameout::has_flameout_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicFlameout::set_has_flameout_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicFlameout::clear_has_flameout_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicFlameout::clear_flameout_whether_check() {
  flameout_whether_check_ = false;
  clear_has_flameout_whether_check();
}
inline bool BasicFlameout::flameout_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFlameout.flameout_whether_check)
  return flameout_whether_check_;
}
inline void BasicFlameout::set_flameout_whether_check(bool value) {
  set_has_flameout_whether_check();
  flameout_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFlameout.flameout_whether_check)
}

// optional int32 flameout_deduction = 2;
inline bool BasicFlameout::has_flameout_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicFlameout::set_has_flameout_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicFlameout::clear_has_flameout_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicFlameout::clear_flameout_deduction() {
  flameout_deduction_ = 0;
  clear_has_flameout_deduction();
}
inline ::google::protobuf::int32 BasicFlameout::flameout_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFlameout.flameout_deduction)
  return flameout_deduction_;
}
inline void BasicFlameout::set_flameout_deduction(::google::protobuf::int32 value) {
  set_has_flameout_deduction();
  flameout_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFlameout.flameout_deduction)
}

// optional string flameout_voice = 3;
inline bool BasicFlameout::has_flameout_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicFlameout::set_has_flameout_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicFlameout::clear_has_flameout_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicFlameout::clear_flameout_voice() {
  flameout_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_flameout_voice();
}
inline const ::std::string& BasicFlameout::flameout_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFlameout.flameout_voice)
  return flameout_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicFlameout::set_flameout_voice(const ::std::string& value) {
  set_has_flameout_voice();
  flameout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicFlameout.flameout_voice)
}
inline void BasicFlameout::set_flameout_voice(const char* value) {
  set_has_flameout_voice();
  flameout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicFlameout.flameout_voice)
}
inline void BasicFlameout::set_flameout_voice(const char* value, size_t size) {
  set_has_flameout_voice();
  flameout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicFlameout.flameout_voice)
}
inline ::std::string* BasicFlameout::mutable_flameout_voice() {
  set_has_flameout_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicFlameout.flameout_voice)
  return flameout_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicFlameout::release_flameout_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicFlameout.flameout_voice)
  clear_has_flameout_voice();
  return flameout_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicFlameout::set_allocated_flameout_voice(::std::string* flameout_voice) {
  if (flameout_voice != NULL) {
    set_has_flameout_voice();
  } else {
    clear_has_flameout_voice();
  }
  flameout_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), flameout_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicFlameout.flameout_voice)
}

// optional int32 flameout_lasting_time = 4;
inline bool BasicFlameout::has_flameout_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicFlameout::set_has_flameout_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicFlameout::clear_has_flameout_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicFlameout::clear_flameout_lasting_time() {
  flameout_lasting_time_ = 0;
  clear_has_flameout_lasting_time();
}
inline ::google::protobuf::int32 BasicFlameout::flameout_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFlameout.flameout_lasting_time)
  return flameout_lasting_time_;
}
inline void BasicFlameout::set_flameout_lasting_time(::google::protobuf::int32 value) {
  set_has_flameout_lasting_time();
  flameout_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFlameout.flameout_lasting_time)
}

// optional int32 flameout_deduction_number = 5;
inline bool BasicFlameout::has_flameout_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicFlameout::set_has_flameout_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicFlameout::clear_has_flameout_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicFlameout::clear_flameout_deduction_number() {
  flameout_deduction_number_ = 0;
  clear_has_flameout_deduction_number();
}
inline ::google::protobuf::int32 BasicFlameout::flameout_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFlameout.flameout_deduction_number)
  return flameout_deduction_number_;
}
inline void BasicFlameout::set_flameout_deduction_number(::google::protobuf::int32 value) {
  set_has_flameout_deduction_number();
  flameout_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFlameout.flameout_deduction_number)
}

// optional int32 flameout_judge_number = 6;
inline bool BasicFlameout::has_flameout_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicFlameout::set_has_flameout_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicFlameout::clear_has_flameout_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicFlameout::clear_flameout_judge_number() {
  flameout_judge_number_ = 0;
  clear_has_flameout_judge_number();
}
inline ::google::protobuf::int32 BasicFlameout::flameout_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFlameout.flameout_judge_number)
  return flameout_judge_number_;
}
inline void BasicFlameout::set_flameout_judge_number(::google::protobuf::int32 value) {
  set_has_flameout_judge_number();
  flameout_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFlameout.flameout_judge_number)
}

// -------------------------------------------------------------------

// BasicFullLine

// optional bool full_line_whether_check = 1;
inline bool BasicFullLine::has_full_line_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicFullLine::set_has_full_line_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicFullLine::clear_has_full_line_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicFullLine::clear_full_line_whether_check() {
  full_line_whether_check_ = false;
  clear_has_full_line_whether_check();
}
inline bool BasicFullLine::full_line_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFullLine.full_line_whether_check)
  return full_line_whether_check_;
}
inline void BasicFullLine::set_full_line_whether_check(bool value) {
  set_has_full_line_whether_check();
  full_line_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFullLine.full_line_whether_check)
}

// optional int32 full_line_deduction = 2;
inline bool BasicFullLine::has_full_line_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicFullLine::set_has_full_line_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicFullLine::clear_has_full_line_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicFullLine::clear_full_line_deduction() {
  full_line_deduction_ = 0;
  clear_has_full_line_deduction();
}
inline ::google::protobuf::int32 BasicFullLine::full_line_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFullLine.full_line_deduction)
  return full_line_deduction_;
}
inline void BasicFullLine::set_full_line_deduction(::google::protobuf::int32 value) {
  set_has_full_line_deduction();
  full_line_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFullLine.full_line_deduction)
}

// optional string full_line_voice = 3;
inline bool BasicFullLine::has_full_line_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicFullLine::set_has_full_line_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicFullLine::clear_has_full_line_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicFullLine::clear_full_line_voice() {
  full_line_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_full_line_voice();
}
inline const ::std::string& BasicFullLine::full_line_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFullLine.full_line_voice)
  return full_line_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicFullLine::set_full_line_voice(const ::std::string& value) {
  set_has_full_line_voice();
  full_line_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicFullLine.full_line_voice)
}
inline void BasicFullLine::set_full_line_voice(const char* value) {
  set_has_full_line_voice();
  full_line_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicFullLine.full_line_voice)
}
inline void BasicFullLine::set_full_line_voice(const char* value, size_t size) {
  set_has_full_line_voice();
  full_line_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicFullLine.full_line_voice)
}
inline ::std::string* BasicFullLine::mutable_full_line_voice() {
  set_has_full_line_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicFullLine.full_line_voice)
  return full_line_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicFullLine::release_full_line_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicFullLine.full_line_voice)
  clear_has_full_line_voice();
  return full_line_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicFullLine::set_allocated_full_line_voice(::std::string* full_line_voice) {
  if (full_line_voice != NULL) {
    set_has_full_line_voice();
  } else {
    clear_has_full_line_voice();
  }
  full_line_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_line_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicFullLine.full_line_voice)
}

// optional int32 full_line_lasting_time = 4;
inline bool BasicFullLine::has_full_line_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicFullLine::set_has_full_line_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicFullLine::clear_has_full_line_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicFullLine::clear_full_line_lasting_time() {
  full_line_lasting_time_ = 0;
  clear_has_full_line_lasting_time();
}
inline ::google::protobuf::int32 BasicFullLine::full_line_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFullLine.full_line_lasting_time)
  return full_line_lasting_time_;
}
inline void BasicFullLine::set_full_line_lasting_time(::google::protobuf::int32 value) {
  set_has_full_line_lasting_time();
  full_line_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFullLine.full_line_lasting_time)
}

// optional int32 full_line_deduction_number = 5;
inline bool BasicFullLine::has_full_line_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicFullLine::set_has_full_line_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicFullLine::clear_has_full_line_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicFullLine::clear_full_line_deduction_number() {
  full_line_deduction_number_ = 0;
  clear_has_full_line_deduction_number();
}
inline ::google::protobuf::int32 BasicFullLine::full_line_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFullLine.full_line_deduction_number)
  return full_line_deduction_number_;
}
inline void BasicFullLine::set_full_line_deduction_number(::google::protobuf::int32 value) {
  set_has_full_line_deduction_number();
  full_line_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFullLine.full_line_deduction_number)
}

// optional int32 full_line_judge_number = 6;
inline bool BasicFullLine::has_full_line_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicFullLine::set_has_full_line_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicFullLine::clear_has_full_line_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicFullLine::clear_full_line_judge_number() {
  full_line_judge_number_ = 0;
  clear_has_full_line_judge_number();
}
inline ::google::protobuf::int32 BasicFullLine::full_line_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFullLine.full_line_judge_number)
  return full_line_judge_number_;
}
inline void BasicFullLine::set_full_line_judge_number(::google::protobuf::int32 value) {
  set_has_full_line_judge_number();
  full_line_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFullLine.full_line_judge_number)
}

// -------------------------------------------------------------------

// BasicDottedLine

// optional bool dotted_line_whether_check = 1;
inline bool BasicDottedLine::has_dotted_line_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicDottedLine::set_has_dotted_line_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicDottedLine::clear_has_dotted_line_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicDottedLine::clear_dotted_line_whether_check() {
  dotted_line_whether_check_ = false;
  clear_has_dotted_line_whether_check();
}
inline bool BasicDottedLine::dotted_line_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDottedLine.dotted_line_whether_check)
  return dotted_line_whether_check_;
}
inline void BasicDottedLine::set_dotted_line_whether_check(bool value) {
  set_has_dotted_line_whether_check();
  dotted_line_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDottedLine.dotted_line_whether_check)
}

// optional int32 dotted_line_deduction = 2;
inline bool BasicDottedLine::has_dotted_line_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicDottedLine::set_has_dotted_line_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicDottedLine::clear_has_dotted_line_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicDottedLine::clear_dotted_line_deduction() {
  dotted_line_deduction_ = 0;
  clear_has_dotted_line_deduction();
}
inline ::google::protobuf::int32 BasicDottedLine::dotted_line_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDottedLine.dotted_line_deduction)
  return dotted_line_deduction_;
}
inline void BasicDottedLine::set_dotted_line_deduction(::google::protobuf::int32 value) {
  set_has_dotted_line_deduction();
  dotted_line_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDottedLine.dotted_line_deduction)
}

// optional string dotted_line_voice = 3;
inline bool BasicDottedLine::has_dotted_line_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicDottedLine::set_has_dotted_line_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicDottedLine::clear_has_dotted_line_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicDottedLine::clear_dotted_line_voice() {
  dotted_line_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dotted_line_voice();
}
inline const ::std::string& BasicDottedLine::dotted_line_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDottedLine.dotted_line_voice)
  return dotted_line_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicDottedLine::set_dotted_line_voice(const ::std::string& value) {
  set_has_dotted_line_voice();
  dotted_line_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicDottedLine.dotted_line_voice)
}
inline void BasicDottedLine::set_dotted_line_voice(const char* value) {
  set_has_dotted_line_voice();
  dotted_line_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicDottedLine.dotted_line_voice)
}
inline void BasicDottedLine::set_dotted_line_voice(const char* value, size_t size) {
  set_has_dotted_line_voice();
  dotted_line_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicDottedLine.dotted_line_voice)
}
inline ::std::string* BasicDottedLine::mutable_dotted_line_voice() {
  set_has_dotted_line_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicDottedLine.dotted_line_voice)
  return dotted_line_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicDottedLine::release_dotted_line_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicDottedLine.dotted_line_voice)
  clear_has_dotted_line_voice();
  return dotted_line_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicDottedLine::set_allocated_dotted_line_voice(::std::string* dotted_line_voice) {
  if (dotted_line_voice != NULL) {
    set_has_dotted_line_voice();
  } else {
    clear_has_dotted_line_voice();
  }
  dotted_line_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dotted_line_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicDottedLine.dotted_line_voice)
}

// optional int32 dotted_line_lasting_time = 4;
inline bool BasicDottedLine::has_dotted_line_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicDottedLine::set_has_dotted_line_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicDottedLine::clear_has_dotted_line_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicDottedLine::clear_dotted_line_lasting_time() {
  dotted_line_lasting_time_ = 0;
  clear_has_dotted_line_lasting_time();
}
inline ::google::protobuf::int32 BasicDottedLine::dotted_line_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDottedLine.dotted_line_lasting_time)
  return dotted_line_lasting_time_;
}
inline void BasicDottedLine::set_dotted_line_lasting_time(::google::protobuf::int32 value) {
  set_has_dotted_line_lasting_time();
  dotted_line_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDottedLine.dotted_line_lasting_time)
}

// optional int32 dotted_line_deduction_number = 5;
inline bool BasicDottedLine::has_dotted_line_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicDottedLine::set_has_dotted_line_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicDottedLine::clear_has_dotted_line_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicDottedLine::clear_dotted_line_deduction_number() {
  dotted_line_deduction_number_ = 0;
  clear_has_dotted_line_deduction_number();
}
inline ::google::protobuf::int32 BasicDottedLine::dotted_line_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDottedLine.dotted_line_deduction_number)
  return dotted_line_deduction_number_;
}
inline void BasicDottedLine::set_dotted_line_deduction_number(::google::protobuf::int32 value) {
  set_has_dotted_line_deduction_number();
  dotted_line_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDottedLine.dotted_line_deduction_number)
}

// optional int32 dotted_line_judge_number = 6;
inline bool BasicDottedLine::has_dotted_line_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicDottedLine::set_has_dotted_line_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicDottedLine::clear_has_dotted_line_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicDottedLine::clear_dotted_line_judge_number() {
  dotted_line_judge_number_ = 0;
  clear_has_dotted_line_judge_number();
}
inline ::google::protobuf::int32 BasicDottedLine::dotted_line_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDottedLine.dotted_line_judge_number)
  return dotted_line_judge_number_;
}
inline void BasicDottedLine::set_dotted_line_judge_number(::google::protobuf::int32 value) {
  set_has_dotted_line_judge_number();
  dotted_line_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDottedLine.dotted_line_judge_number)
}

// -------------------------------------------------------------------

// BasicLeftTurnLamp

// optional bool leftTurnLamp_whether_check = 1;
inline bool BasicLeftTurnLamp::has_leftturnlamp_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicLeftTurnLamp::set_has_leftturnlamp_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicLeftTurnLamp::clear_has_leftturnlamp_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicLeftTurnLamp::clear_leftturnlamp_whether_check() {
  leftturnlamp_whether_check_ = false;
  clear_has_leftturnlamp_whether_check();
}
inline bool BasicLeftTurnLamp::leftturnlamp_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_whether_check)
  return leftturnlamp_whether_check_;
}
inline void BasicLeftTurnLamp::set_leftturnlamp_whether_check(bool value) {
  set_has_leftturnlamp_whether_check();
  leftturnlamp_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_whether_check)
}

// optional int32 leftTurnLamp_deduction = 2;
inline bool BasicLeftTurnLamp::has_leftturnlamp_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicLeftTurnLamp::set_has_leftturnlamp_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicLeftTurnLamp::clear_has_leftturnlamp_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicLeftTurnLamp::clear_leftturnlamp_deduction() {
  leftturnlamp_deduction_ = 0;
  clear_has_leftturnlamp_deduction();
}
inline ::google::protobuf::int32 BasicLeftTurnLamp::leftturnlamp_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_deduction)
  return leftturnlamp_deduction_;
}
inline void BasicLeftTurnLamp::set_leftturnlamp_deduction(::google::protobuf::int32 value) {
  set_has_leftturnlamp_deduction();
  leftturnlamp_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_deduction)
}

// optional string leftTurnLamp_voice = 3;
inline bool BasicLeftTurnLamp::has_leftturnlamp_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicLeftTurnLamp::set_has_leftturnlamp_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicLeftTurnLamp::clear_has_leftturnlamp_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicLeftTurnLamp::clear_leftturnlamp_voice() {
  leftturnlamp_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_leftturnlamp_voice();
}
inline const ::std::string& BasicLeftTurnLamp::leftturnlamp_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
  return leftturnlamp_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicLeftTurnLamp::set_leftturnlamp_voice(const ::std::string& value) {
  set_has_leftturnlamp_voice();
  leftturnlamp_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
}
inline void BasicLeftTurnLamp::set_leftturnlamp_voice(const char* value) {
  set_has_leftturnlamp_voice();
  leftturnlamp_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
}
inline void BasicLeftTurnLamp::set_leftturnlamp_voice(const char* value, size_t size) {
  set_has_leftturnlamp_voice();
  leftturnlamp_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
}
inline ::std::string* BasicLeftTurnLamp::mutable_leftturnlamp_voice() {
  set_has_leftturnlamp_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
  return leftturnlamp_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicLeftTurnLamp::release_leftturnlamp_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
  clear_has_leftturnlamp_voice();
  return leftturnlamp_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicLeftTurnLamp::set_allocated_leftturnlamp_voice(::std::string* leftturnlamp_voice) {
  if (leftturnlamp_voice != NULL) {
    set_has_leftturnlamp_voice();
  } else {
    clear_has_leftturnlamp_voice();
  }
  leftturnlamp_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leftturnlamp_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
}

// optional int32 leftTurnLamp_lasting_time = 4;
inline bool BasicLeftTurnLamp::has_leftturnlamp_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicLeftTurnLamp::set_has_leftturnlamp_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicLeftTurnLamp::clear_has_leftturnlamp_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicLeftTurnLamp::clear_leftturnlamp_lasting_time() {
  leftturnlamp_lasting_time_ = 0;
  clear_has_leftturnlamp_lasting_time();
}
inline ::google::protobuf::int32 BasicLeftTurnLamp::leftturnlamp_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_lasting_time)
  return leftturnlamp_lasting_time_;
}
inline void BasicLeftTurnLamp::set_leftturnlamp_lasting_time(::google::protobuf::int32 value) {
  set_has_leftturnlamp_lasting_time();
  leftturnlamp_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_lasting_time)
}

// optional int32 leftTurnLamp_deduction_number = 5;
inline bool BasicLeftTurnLamp::has_leftturnlamp_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicLeftTurnLamp::set_has_leftturnlamp_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicLeftTurnLamp::clear_has_leftturnlamp_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicLeftTurnLamp::clear_leftturnlamp_deduction_number() {
  leftturnlamp_deduction_number_ = 0;
  clear_has_leftturnlamp_deduction_number();
}
inline ::google::protobuf::int32 BasicLeftTurnLamp::leftturnlamp_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_deduction_number)
  return leftturnlamp_deduction_number_;
}
inline void BasicLeftTurnLamp::set_leftturnlamp_deduction_number(::google::protobuf::int32 value) {
  set_has_leftturnlamp_deduction_number();
  leftturnlamp_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_deduction_number)
}

// optional int32 leftTurnLamp_judge_number = 6;
inline bool BasicLeftTurnLamp::has_leftturnlamp_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicLeftTurnLamp::set_has_leftturnlamp_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicLeftTurnLamp::clear_has_leftturnlamp_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicLeftTurnLamp::clear_leftturnlamp_judge_number() {
  leftturnlamp_judge_number_ = 0;
  clear_has_leftturnlamp_judge_number();
}
inline ::google::protobuf::int32 BasicLeftTurnLamp::leftturnlamp_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_judge_number)
  return leftturnlamp_judge_number_;
}
inline void BasicLeftTurnLamp::set_leftturnlamp_judge_number(::google::protobuf::int32 value) {
  set_has_leftturnlamp_judge_number();
  leftturnlamp_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_judge_number)
}

// optional bool leftTurnLamp_lasting_whole_course = 7 [default = false];
inline bool BasicLeftTurnLamp::has_leftturnlamp_lasting_whole_course() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BasicLeftTurnLamp::set_has_leftturnlamp_lasting_whole_course() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BasicLeftTurnLamp::clear_has_leftturnlamp_lasting_whole_course() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BasicLeftTurnLamp::clear_leftturnlamp_lasting_whole_course() {
  leftturnlamp_lasting_whole_course_ = false;
  clear_has_leftturnlamp_lasting_whole_course();
}
inline bool BasicLeftTurnLamp::leftturnlamp_lasting_whole_course() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_lasting_whole_course)
  return leftturnlamp_lasting_whole_course_;
}
inline void BasicLeftTurnLamp::set_leftturnlamp_lasting_whole_course(bool value) {
  set_has_leftturnlamp_lasting_whole_course();
  leftturnlamp_lasting_whole_course_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_lasting_whole_course)
}

// -------------------------------------------------------------------

// BasicRightTurnLamp

// optional bool rightTurnLamp_whether_check = 1;
inline bool BasicRightTurnLamp::has_rightturnlamp_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicRightTurnLamp::set_has_rightturnlamp_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicRightTurnLamp::clear_has_rightturnlamp_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicRightTurnLamp::clear_rightturnlamp_whether_check() {
  rightturnlamp_whether_check_ = false;
  clear_has_rightturnlamp_whether_check();
}
inline bool BasicRightTurnLamp::rightturnlamp_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_whether_check)
  return rightturnlamp_whether_check_;
}
inline void BasicRightTurnLamp::set_rightturnlamp_whether_check(bool value) {
  set_has_rightturnlamp_whether_check();
  rightturnlamp_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_whether_check)
}

// optional int32 rightTurnLamp_deduction = 2;
inline bool BasicRightTurnLamp::has_rightturnlamp_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicRightTurnLamp::set_has_rightturnlamp_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicRightTurnLamp::clear_has_rightturnlamp_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicRightTurnLamp::clear_rightturnlamp_deduction() {
  rightturnlamp_deduction_ = 0;
  clear_has_rightturnlamp_deduction();
}
inline ::google::protobuf::int32 BasicRightTurnLamp::rightturnlamp_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_deduction)
  return rightturnlamp_deduction_;
}
inline void BasicRightTurnLamp::set_rightturnlamp_deduction(::google::protobuf::int32 value) {
  set_has_rightturnlamp_deduction();
  rightturnlamp_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_deduction)
}

// optional string rightTurnLamp_voice = 3;
inline bool BasicRightTurnLamp::has_rightturnlamp_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicRightTurnLamp::set_has_rightturnlamp_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicRightTurnLamp::clear_has_rightturnlamp_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicRightTurnLamp::clear_rightturnlamp_voice() {
  rightturnlamp_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rightturnlamp_voice();
}
inline const ::std::string& BasicRightTurnLamp::rightturnlamp_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
  return rightturnlamp_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicRightTurnLamp::set_rightturnlamp_voice(const ::std::string& value) {
  set_has_rightturnlamp_voice();
  rightturnlamp_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
}
inline void BasicRightTurnLamp::set_rightturnlamp_voice(const char* value) {
  set_has_rightturnlamp_voice();
  rightturnlamp_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
}
inline void BasicRightTurnLamp::set_rightturnlamp_voice(const char* value, size_t size) {
  set_has_rightturnlamp_voice();
  rightturnlamp_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
}
inline ::std::string* BasicRightTurnLamp::mutable_rightturnlamp_voice() {
  set_has_rightturnlamp_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
  return rightturnlamp_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicRightTurnLamp::release_rightturnlamp_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
  clear_has_rightturnlamp_voice();
  return rightturnlamp_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicRightTurnLamp::set_allocated_rightturnlamp_voice(::std::string* rightturnlamp_voice) {
  if (rightturnlamp_voice != NULL) {
    set_has_rightturnlamp_voice();
  } else {
    clear_has_rightturnlamp_voice();
  }
  rightturnlamp_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rightturnlamp_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
}

// optional int32 rightTurnLamp_lasting_time = 4;
inline bool BasicRightTurnLamp::has_rightturnlamp_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicRightTurnLamp::set_has_rightturnlamp_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicRightTurnLamp::clear_has_rightturnlamp_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicRightTurnLamp::clear_rightturnlamp_lasting_time() {
  rightturnlamp_lasting_time_ = 0;
  clear_has_rightturnlamp_lasting_time();
}
inline ::google::protobuf::int32 BasicRightTurnLamp::rightturnlamp_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_lasting_time)
  return rightturnlamp_lasting_time_;
}
inline void BasicRightTurnLamp::set_rightturnlamp_lasting_time(::google::protobuf::int32 value) {
  set_has_rightturnlamp_lasting_time();
  rightturnlamp_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_lasting_time)
}

// optional int32 rightTurnLamp_deduction_number = 5;
inline bool BasicRightTurnLamp::has_rightturnlamp_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicRightTurnLamp::set_has_rightturnlamp_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicRightTurnLamp::clear_has_rightturnlamp_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicRightTurnLamp::clear_rightturnlamp_deduction_number() {
  rightturnlamp_deduction_number_ = 0;
  clear_has_rightturnlamp_deduction_number();
}
inline ::google::protobuf::int32 BasicRightTurnLamp::rightturnlamp_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_deduction_number)
  return rightturnlamp_deduction_number_;
}
inline void BasicRightTurnLamp::set_rightturnlamp_deduction_number(::google::protobuf::int32 value) {
  set_has_rightturnlamp_deduction_number();
  rightturnlamp_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_deduction_number)
}

// optional int32 rightTurnLamp_judge_number = 6;
inline bool BasicRightTurnLamp::has_rightturnlamp_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicRightTurnLamp::set_has_rightturnlamp_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicRightTurnLamp::clear_has_rightturnlamp_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicRightTurnLamp::clear_rightturnlamp_judge_number() {
  rightturnlamp_judge_number_ = 0;
  clear_has_rightturnlamp_judge_number();
}
inline ::google::protobuf::int32 BasicRightTurnLamp::rightturnlamp_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_judge_number)
  return rightturnlamp_judge_number_;
}
inline void BasicRightTurnLamp::set_rightturnlamp_judge_number(::google::protobuf::int32 value) {
  set_has_rightturnlamp_judge_number();
  rightturnlamp_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_judge_number)
}

// optional bool rightTurnLamp_lasting_whole_course = 7 [default = false];
inline bool BasicRightTurnLamp::has_rightturnlamp_lasting_whole_course() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BasicRightTurnLamp::set_has_rightturnlamp_lasting_whole_course() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BasicRightTurnLamp::clear_has_rightturnlamp_lasting_whole_course() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BasicRightTurnLamp::clear_rightturnlamp_lasting_whole_course() {
  rightturnlamp_lasting_whole_course_ = false;
  clear_has_rightturnlamp_lasting_whole_course();
}
inline bool BasicRightTurnLamp::rightturnlamp_lasting_whole_course() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_lasting_whole_course)
  return rightturnlamp_lasting_whole_course_;
}
inline void BasicRightTurnLamp::set_rightturnlamp_lasting_whole_course(bool value) {
  set_has_rightturnlamp_lasting_whole_course();
  rightturnlamp_lasting_whole_course_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_lasting_whole_course)
}

// -------------------------------------------------------------------

// BasicCarStop

// optional bool carStop_whether_check = 1;
inline bool BasicCarStop::has_carstop_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicCarStop::set_has_carstop_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicCarStop::clear_has_carstop_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicCarStop::clear_carstop_whether_check() {
  carstop_whether_check_ = false;
  clear_has_carstop_whether_check();
}
inline bool BasicCarStop::carstop_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicCarStop.carStop_whether_check)
  return carstop_whether_check_;
}
inline void BasicCarStop::set_carstop_whether_check(bool value) {
  set_has_carstop_whether_check();
  carstop_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicCarStop.carStop_whether_check)
}

// optional int32 carStop_deduction = 2;
inline bool BasicCarStop::has_carstop_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicCarStop::set_has_carstop_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicCarStop::clear_has_carstop_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicCarStop::clear_carstop_deduction() {
  carstop_deduction_ = 0;
  clear_has_carstop_deduction();
}
inline ::google::protobuf::int32 BasicCarStop::carstop_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicCarStop.carStop_deduction)
  return carstop_deduction_;
}
inline void BasicCarStop::set_carstop_deduction(::google::protobuf::int32 value) {
  set_has_carstop_deduction();
  carstop_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicCarStop.carStop_deduction)
}

// optional string carStop_voice = 3;
inline bool BasicCarStop::has_carstop_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicCarStop::set_has_carstop_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicCarStop::clear_has_carstop_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicCarStop::clear_carstop_voice() {
  carstop_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_carstop_voice();
}
inline const ::std::string& BasicCarStop::carstop_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicCarStop.carStop_voice)
  return carstop_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicCarStop::set_carstop_voice(const ::std::string& value) {
  set_has_carstop_voice();
  carstop_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicCarStop.carStop_voice)
}
inline void BasicCarStop::set_carstop_voice(const char* value) {
  set_has_carstop_voice();
  carstop_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicCarStop.carStop_voice)
}
inline void BasicCarStop::set_carstop_voice(const char* value, size_t size) {
  set_has_carstop_voice();
  carstop_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicCarStop.carStop_voice)
}
inline ::std::string* BasicCarStop::mutable_carstop_voice() {
  set_has_carstop_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicCarStop.carStop_voice)
  return carstop_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicCarStop::release_carstop_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicCarStop.carStop_voice)
  clear_has_carstop_voice();
  return carstop_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicCarStop::set_allocated_carstop_voice(::std::string* carstop_voice) {
  if (carstop_voice != NULL) {
    set_has_carstop_voice();
  } else {
    clear_has_carstop_voice();
  }
  carstop_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), carstop_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicCarStop.carStop_voice)
}

// optional int32 carStop_lasting_time = 4;
inline bool BasicCarStop::has_carstop_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicCarStop::set_has_carstop_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicCarStop::clear_has_carstop_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicCarStop::clear_carstop_lasting_time() {
  carstop_lasting_time_ = 0;
  clear_has_carstop_lasting_time();
}
inline ::google::protobuf::int32 BasicCarStop::carstop_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicCarStop.carStop_lasting_time)
  return carstop_lasting_time_;
}
inline void BasicCarStop::set_carstop_lasting_time(::google::protobuf::int32 value) {
  set_has_carstop_lasting_time();
  carstop_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicCarStop.carStop_lasting_time)
}

// optional int32 carStop_deduction_number = 5;
inline bool BasicCarStop::has_carstop_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicCarStop::set_has_carstop_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicCarStop::clear_has_carstop_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicCarStop::clear_carstop_deduction_number() {
  carstop_deduction_number_ = 0;
  clear_has_carstop_deduction_number();
}
inline ::google::protobuf::int32 BasicCarStop::carstop_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicCarStop.carStop_deduction_number)
  return carstop_deduction_number_;
}
inline void BasicCarStop::set_carstop_deduction_number(::google::protobuf::int32 value) {
  set_has_carstop_deduction_number();
  carstop_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicCarStop.carStop_deduction_number)
}

// optional int32 carStop_judge_number = 6;
inline bool BasicCarStop::has_carstop_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicCarStop::set_has_carstop_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicCarStop::clear_has_carstop_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicCarStop::clear_carstop_judge_number() {
  carstop_judge_number_ = 0;
  clear_has_carstop_judge_number();
}
inline ::google::protobuf::int32 BasicCarStop::carstop_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicCarStop.carStop_judge_number)
  return carstop_judge_number_;
}
inline void BasicCarStop::set_carstop_judge_number(::google::protobuf::int32 value) {
  set_has_carstop_judge_number();
  carstop_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicCarStop.carStop_judge_number)
}

// -------------------------------------------------------------------

// BasicHandBrake

// optional bool handBrake_whether_check = 1;
inline bool BasicHandBrake::has_handbrake_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicHandBrake::set_has_handbrake_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicHandBrake::clear_has_handbrake_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicHandBrake::clear_handbrake_whether_check() {
  handbrake_whether_check_ = false;
  clear_has_handbrake_whether_check();
}
inline bool BasicHandBrake::handbrake_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_whether_check)
  return handbrake_whether_check_;
}
inline void BasicHandBrake::set_handbrake_whether_check(bool value) {
  set_has_handbrake_whether_check();
  handbrake_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_whether_check)
}

// optional int32 handBrake_deduction = 2;
inline bool BasicHandBrake::has_handbrake_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicHandBrake::set_has_handbrake_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicHandBrake::clear_has_handbrake_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicHandBrake::clear_handbrake_deduction() {
  handbrake_deduction_ = 0;
  clear_has_handbrake_deduction();
}
inline ::google::protobuf::int32 BasicHandBrake::handbrake_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_deduction)
  return handbrake_deduction_;
}
inline void BasicHandBrake::set_handbrake_deduction(::google::protobuf::int32 value) {
  set_has_handbrake_deduction();
  handbrake_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_deduction)
}

// optional string handBrake_voice = 3;
inline bool BasicHandBrake::has_handbrake_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicHandBrake::set_has_handbrake_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicHandBrake::clear_has_handbrake_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicHandBrake::clear_handbrake_voice() {
  handbrake_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_handbrake_voice();
}
inline const ::std::string& BasicHandBrake::handbrake_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_voice)
  return handbrake_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicHandBrake::set_handbrake_voice(const ::std::string& value) {
  set_has_handbrake_voice();
  handbrake_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_voice)
}
inline void BasicHandBrake::set_handbrake_voice(const char* value) {
  set_has_handbrake_voice();
  handbrake_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicHandBrake.handBrake_voice)
}
inline void BasicHandBrake::set_handbrake_voice(const char* value, size_t size) {
  set_has_handbrake_voice();
  handbrake_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicHandBrake.handBrake_voice)
}
inline ::std::string* BasicHandBrake::mutable_handbrake_voice() {
  set_has_handbrake_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicHandBrake.handBrake_voice)
  return handbrake_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicHandBrake::release_handbrake_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicHandBrake.handBrake_voice)
  clear_has_handbrake_voice();
  return handbrake_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicHandBrake::set_allocated_handbrake_voice(::std::string* handbrake_voice) {
  if (handbrake_voice != NULL) {
    set_has_handbrake_voice();
  } else {
    clear_has_handbrake_voice();
  }
  handbrake_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), handbrake_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicHandBrake.handBrake_voice)
}

// optional int32 handBrake_distance = 4;
inline bool BasicHandBrake::has_handbrake_distance() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicHandBrake::set_has_handbrake_distance() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicHandBrake::clear_has_handbrake_distance() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicHandBrake::clear_handbrake_distance() {
  handbrake_distance_ = 0;
  clear_has_handbrake_distance();
}
inline ::google::protobuf::int32 BasicHandBrake::handbrake_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_distance)
  return handbrake_distance_;
}
inline void BasicHandBrake::set_handbrake_distance(::google::protobuf::int32 value) {
  set_has_handbrake_distance();
  handbrake_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_distance)
}

// optional int32 handBrake_lasting_time = 5;
inline bool BasicHandBrake::has_handbrake_lasting_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicHandBrake::set_has_handbrake_lasting_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicHandBrake::clear_has_handbrake_lasting_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicHandBrake::clear_handbrake_lasting_time() {
  handbrake_lasting_time_ = 0;
  clear_has_handbrake_lasting_time();
}
inline ::google::protobuf::int32 BasicHandBrake::handbrake_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_lasting_time)
  return handbrake_lasting_time_;
}
inline void BasicHandBrake::set_handbrake_lasting_time(::google::protobuf::int32 value) {
  set_has_handbrake_lasting_time();
  handbrake_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_lasting_time)
}

// optional int32 handBrake_deduction_number = 6;
inline bool BasicHandBrake::has_handbrake_deduction_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicHandBrake::set_has_handbrake_deduction_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicHandBrake::clear_has_handbrake_deduction_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicHandBrake::clear_handbrake_deduction_number() {
  handbrake_deduction_number_ = 0;
  clear_has_handbrake_deduction_number();
}
inline ::google::protobuf::int32 BasicHandBrake::handbrake_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_deduction_number)
  return handbrake_deduction_number_;
}
inline void BasicHandBrake::set_handbrake_deduction_number(::google::protobuf::int32 value) {
  set_has_handbrake_deduction_number();
  handbrake_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_deduction_number)
}

// optional int32 handBrake_judge_number = 7;
inline bool BasicHandBrake::has_handbrake_judge_number() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BasicHandBrake::set_has_handbrake_judge_number() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BasicHandBrake::clear_has_handbrake_judge_number() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BasicHandBrake::clear_handbrake_judge_number() {
  handbrake_judge_number_ = 0;
  clear_has_handbrake_judge_number();
}
inline ::google::protobuf::int32 BasicHandBrake::handbrake_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_judge_number)
  return handbrake_judge_number_;
}
inline void BasicHandBrake::set_handbrake_judge_number(::google::protobuf::int32 value) {
  set_has_handbrake_judge_number();
  handbrake_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_judge_number)
}

// -------------------------------------------------------------------

// BasicTimeout

// optional bool timeout_whether_check = 1;
inline bool BasicTimeout::has_timeout_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicTimeout::set_has_timeout_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicTimeout::clear_has_timeout_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicTimeout::clear_timeout_whether_check() {
  timeout_whether_check_ = false;
  clear_has_timeout_whether_check();
}
inline bool BasicTimeout::timeout_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicTimeout.timeout_whether_check)
  return timeout_whether_check_;
}
inline void BasicTimeout::set_timeout_whether_check(bool value) {
  set_has_timeout_whether_check();
  timeout_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicTimeout.timeout_whether_check)
}

// optional int32 timeout_milliseconds = 2;
inline bool BasicTimeout::has_timeout_milliseconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicTimeout::set_has_timeout_milliseconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicTimeout::clear_has_timeout_milliseconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicTimeout::clear_timeout_milliseconds() {
  timeout_milliseconds_ = 0;
  clear_has_timeout_milliseconds();
}
inline ::google::protobuf::int32 BasicTimeout::timeout_milliseconds() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicTimeout.timeout_milliseconds)
  return timeout_milliseconds_;
}
inline void BasicTimeout::set_timeout_milliseconds(::google::protobuf::int32 value) {
  set_has_timeout_milliseconds();
  timeout_milliseconds_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicTimeout.timeout_milliseconds)
}

// optional int32 timeout_deduction = 3;
inline bool BasicTimeout::has_timeout_deduction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicTimeout::set_has_timeout_deduction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicTimeout::clear_has_timeout_deduction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicTimeout::clear_timeout_deduction() {
  timeout_deduction_ = 0;
  clear_has_timeout_deduction();
}
inline ::google::protobuf::int32 BasicTimeout::timeout_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicTimeout.timeout_deduction)
  return timeout_deduction_;
}
inline void BasicTimeout::set_timeout_deduction(::google::protobuf::int32 value) {
  set_has_timeout_deduction();
  timeout_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicTimeout.timeout_deduction)
}

// optional string timeout_voice = 4;
inline bool BasicTimeout::has_timeout_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicTimeout::set_has_timeout_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicTimeout::clear_has_timeout_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicTimeout::clear_timeout_voice() {
  timeout_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timeout_voice();
}
inline const ::std::string& BasicTimeout::timeout_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicTimeout.timeout_voice)
  return timeout_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicTimeout::set_timeout_voice(const ::std::string& value) {
  set_has_timeout_voice();
  timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicTimeout.timeout_voice)
}
inline void BasicTimeout::set_timeout_voice(const char* value) {
  set_has_timeout_voice();
  timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicTimeout.timeout_voice)
}
inline void BasicTimeout::set_timeout_voice(const char* value, size_t size) {
  set_has_timeout_voice();
  timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicTimeout.timeout_voice)
}
inline ::std::string* BasicTimeout::mutable_timeout_voice() {
  set_has_timeout_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicTimeout.timeout_voice)
  return timeout_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicTimeout::release_timeout_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicTimeout.timeout_voice)
  clear_has_timeout_voice();
  return timeout_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicTimeout::set_allocated_timeout_voice(::std::string* timeout_voice) {
  if (timeout_voice != NULL) {
    set_has_timeout_voice();
  } else {
    clear_has_timeout_voice();
  }
  timeout_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timeout_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicTimeout.timeout_voice)
}

// -------------------------------------------------------------------

// BasicClutch

// optional bool clutch_whether_check = 1;
inline bool BasicClutch::has_clutch_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicClutch::set_has_clutch_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicClutch::clear_has_clutch_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicClutch::clear_clutch_whether_check() {
  clutch_whether_check_ = false;
  clear_has_clutch_whether_check();
}
inline bool BasicClutch::clutch_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicClutch.clutch_whether_check)
  return clutch_whether_check_;
}
inline void BasicClutch::set_clutch_whether_check(bool value) {
  set_has_clutch_whether_check();
  clutch_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicClutch.clutch_whether_check)
}

// optional int32 clutch_deduction = 2;
inline bool BasicClutch::has_clutch_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicClutch::set_has_clutch_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicClutch::clear_has_clutch_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicClutch::clear_clutch_deduction() {
  clutch_deduction_ = 0;
  clear_has_clutch_deduction();
}
inline ::google::protobuf::int32 BasicClutch::clutch_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicClutch.clutch_deduction)
  return clutch_deduction_;
}
inline void BasicClutch::set_clutch_deduction(::google::protobuf::int32 value) {
  set_has_clutch_deduction();
  clutch_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicClutch.clutch_deduction)
}

// optional string clutch_voice = 3;
inline bool BasicClutch::has_clutch_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicClutch::set_has_clutch_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicClutch::clear_has_clutch_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicClutch::clear_clutch_voice() {
  clutch_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clutch_voice();
}
inline const ::std::string& BasicClutch::clutch_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicClutch.clutch_voice)
  return clutch_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicClutch::set_clutch_voice(const ::std::string& value) {
  set_has_clutch_voice();
  clutch_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicClutch.clutch_voice)
}
inline void BasicClutch::set_clutch_voice(const char* value) {
  set_has_clutch_voice();
  clutch_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicClutch.clutch_voice)
}
inline void BasicClutch::set_clutch_voice(const char* value, size_t size) {
  set_has_clutch_voice();
  clutch_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicClutch.clutch_voice)
}
inline ::std::string* BasicClutch::mutable_clutch_voice() {
  set_has_clutch_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicClutch.clutch_voice)
  return clutch_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicClutch::release_clutch_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicClutch.clutch_voice)
  clear_has_clutch_voice();
  return clutch_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicClutch::set_allocated_clutch_voice(::std::string* clutch_voice) {
  if (clutch_voice != NULL) {
    set_has_clutch_voice();
  } else {
    clear_has_clutch_voice();
  }
  clutch_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clutch_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicClutch.clutch_voice)
}

// optional int32 clutch_lasting_time = 4;
inline bool BasicClutch::has_clutch_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicClutch::set_has_clutch_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicClutch::clear_has_clutch_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicClutch::clear_clutch_lasting_time() {
  clutch_lasting_time_ = 0;
  clear_has_clutch_lasting_time();
}
inline ::google::protobuf::int32 BasicClutch::clutch_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicClutch.clutch_lasting_time)
  return clutch_lasting_time_;
}
inline void BasicClutch::set_clutch_lasting_time(::google::protobuf::int32 value) {
  set_has_clutch_lasting_time();
  clutch_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicClutch.clutch_lasting_time)
}

// optional int32 clutch_deduction_number = 5;
inline bool BasicClutch::has_clutch_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicClutch::set_has_clutch_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicClutch::clear_has_clutch_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicClutch::clear_clutch_deduction_number() {
  clutch_deduction_number_ = 0;
  clear_has_clutch_deduction_number();
}
inline ::google::protobuf::int32 BasicClutch::clutch_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicClutch.clutch_deduction_number)
  return clutch_deduction_number_;
}
inline void BasicClutch::set_clutch_deduction_number(::google::protobuf::int32 value) {
  set_has_clutch_deduction_number();
  clutch_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicClutch.clutch_deduction_number)
}

// optional int32 clutch_judge_number = 6;
inline bool BasicClutch::has_clutch_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicClutch::set_has_clutch_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicClutch::clear_has_clutch_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicClutch::clear_clutch_judge_number() {
  clutch_judge_number_ = 0;
  clear_has_clutch_judge_number();
}
inline ::google::protobuf::int32 BasicClutch::clutch_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicClutch.clutch_judge_number)
  return clutch_judge_number_;
}
inline void BasicClutch::set_clutch_judge_number(::google::protobuf::int32 value) {
  set_has_clutch_judge_number();
  clutch_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicClutch.clutch_judge_number)
}

// -------------------------------------------------------------------

// BasicRoundCar

// optional bool roundCar_whether_check = 1;
inline bool BasicRoundCar::has_roundcar_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicRoundCar::set_has_roundcar_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicRoundCar::clear_has_roundcar_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicRoundCar::clear_roundcar_whether_check() {
  roundcar_whether_check_ = false;
  clear_has_roundcar_whether_check();
}
inline bool BasicRoundCar::roundcar_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRoundCar.roundCar_whether_check)
  return roundcar_whether_check_;
}
inline void BasicRoundCar::set_roundcar_whether_check(bool value) {
  set_has_roundcar_whether_check();
  roundcar_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRoundCar.roundCar_whether_check)
}

// optional int32 roundCar_deduction = 2;
inline bool BasicRoundCar::has_roundcar_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicRoundCar::set_has_roundcar_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicRoundCar::clear_has_roundcar_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicRoundCar::clear_roundcar_deduction() {
  roundcar_deduction_ = 0;
  clear_has_roundcar_deduction();
}
inline ::google::protobuf::int32 BasicRoundCar::roundcar_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRoundCar.roundCar_deduction)
  return roundcar_deduction_;
}
inline void BasicRoundCar::set_roundcar_deduction(::google::protobuf::int32 value) {
  set_has_roundcar_deduction();
  roundcar_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRoundCar.roundCar_deduction)
}

// optional string roundCar_voice = 3;
inline bool BasicRoundCar::has_roundcar_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicRoundCar::set_has_roundcar_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicRoundCar::clear_has_roundcar_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicRoundCar::clear_roundcar_voice() {
  roundcar_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roundcar_voice();
}
inline const ::std::string& BasicRoundCar::roundcar_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRoundCar.roundCar_voice)
  return roundcar_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicRoundCar::set_roundcar_voice(const ::std::string& value) {
  set_has_roundcar_voice();
  roundcar_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicRoundCar.roundCar_voice)
}
inline void BasicRoundCar::set_roundcar_voice(const char* value) {
  set_has_roundcar_voice();
  roundcar_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicRoundCar.roundCar_voice)
}
inline void BasicRoundCar::set_roundcar_voice(const char* value, size_t size) {
  set_has_roundcar_voice();
  roundcar_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicRoundCar.roundCar_voice)
}
inline ::std::string* BasicRoundCar::mutable_roundcar_voice() {
  set_has_roundcar_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicRoundCar.roundCar_voice)
  return roundcar_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicRoundCar::release_roundcar_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicRoundCar.roundCar_voice)
  clear_has_roundcar_voice();
  return roundcar_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicRoundCar::set_allocated_roundcar_voice(::std::string* roundcar_voice) {
  if (roundcar_voice != NULL) {
    set_has_roundcar_voice();
  } else {
    clear_has_roundcar_voice();
  }
  roundcar_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roundcar_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicRoundCar.roundCar_voice)
}

// optional int32 roundCar_lasting_time = 4;
inline bool BasicRoundCar::has_roundcar_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicRoundCar::set_has_roundcar_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicRoundCar::clear_has_roundcar_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicRoundCar::clear_roundcar_lasting_time() {
  roundcar_lasting_time_ = 0;
  clear_has_roundcar_lasting_time();
}
inline ::google::protobuf::int32 BasicRoundCar::roundcar_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRoundCar.roundCar_lasting_time)
  return roundcar_lasting_time_;
}
inline void BasicRoundCar::set_roundcar_lasting_time(::google::protobuf::int32 value) {
  set_has_roundcar_lasting_time();
  roundcar_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRoundCar.roundCar_lasting_time)
}

// optional int32 roundCar_deduction_number = 5;
inline bool BasicRoundCar::has_roundcar_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicRoundCar::set_has_roundcar_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicRoundCar::clear_has_roundcar_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicRoundCar::clear_roundcar_deduction_number() {
  roundcar_deduction_number_ = 0;
  clear_has_roundcar_deduction_number();
}
inline ::google::protobuf::int32 BasicRoundCar::roundcar_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRoundCar.roundCar_deduction_number)
  return roundcar_deduction_number_;
}
inline void BasicRoundCar::set_roundcar_deduction_number(::google::protobuf::int32 value) {
  set_has_roundcar_deduction_number();
  roundcar_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRoundCar.roundCar_deduction_number)
}

// optional int32 roundCar_judge_number = 6;
inline bool BasicRoundCar::has_roundcar_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicRoundCar::set_has_roundcar_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicRoundCar::clear_has_roundcar_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicRoundCar::clear_roundcar_judge_number() {
  roundcar_judge_number_ = 0;
  clear_has_roundcar_judge_number();
}
inline ::google::protobuf::int32 BasicRoundCar::roundcar_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRoundCar.roundCar_judge_number)
  return roundcar_judge_number_;
}
inline void BasicRoundCar::set_roundcar_judge_number(::google::protobuf::int32 value) {
  set_has_roundcar_judge_number();
  roundcar_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRoundCar.roundCar_judge_number)
}

// -------------------------------------------------------------------

// BasicSlowDown

// optional bool slowDown_whether_check = 1 [default = true];
inline bool BasicSlowDown::has_slowdown_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicSlowDown::set_has_slowdown_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicSlowDown::clear_has_slowdown_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicSlowDown::clear_slowdown_whether_check() {
  slowdown_whether_check_ = true;
  clear_has_slowdown_whether_check();
}
inline bool BasicSlowDown::slowdown_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.slowDown_whether_check)
  return slowdown_whether_check_;
}
inline void BasicSlowDown::set_slowdown_whether_check(bool value) {
  set_has_slowdown_whether_check();
  slowdown_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.slowDown_whether_check)
}

// optional int32 slowDown_deduction = 2;
inline bool BasicSlowDown::has_slowdown_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicSlowDown::set_has_slowdown_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicSlowDown::clear_has_slowdown_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicSlowDown::clear_slowdown_deduction() {
  slowdown_deduction_ = 0;
  clear_has_slowdown_deduction();
}
inline ::google::protobuf::int32 BasicSlowDown::slowdown_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.slowDown_deduction)
  return slowdown_deduction_;
}
inline void BasicSlowDown::set_slowdown_deduction(::google::protobuf::int32 value) {
  set_has_slowdown_deduction();
  slowdown_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.slowDown_deduction)
}

// optional string slowDown_voice = 3;
inline bool BasicSlowDown::has_slowdown_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicSlowDown::set_has_slowdown_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicSlowDown::clear_has_slowdown_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicSlowDown::clear_slowdown_voice() {
  slowdown_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_slowdown_voice();
}
inline const ::std::string& BasicSlowDown::slowdown_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.slowDown_voice)
  return slowdown_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicSlowDown::set_slowdown_voice(const ::std::string& value) {
  set_has_slowdown_voice();
  slowdown_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.slowDown_voice)
}
inline void BasicSlowDown::set_slowdown_voice(const char* value) {
  set_has_slowdown_voice();
  slowdown_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicSlowDown.slowDown_voice)
}
inline void BasicSlowDown::set_slowdown_voice(const char* value, size_t size) {
  set_has_slowdown_voice();
  slowdown_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicSlowDown.slowDown_voice)
}
inline ::std::string* BasicSlowDown::mutable_slowdown_voice() {
  set_has_slowdown_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicSlowDown.slowDown_voice)
  return slowdown_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicSlowDown::release_slowdown_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicSlowDown.slowDown_voice)
  clear_has_slowdown_voice();
  return slowdown_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicSlowDown::set_allocated_slowdown_voice(::std::string* slowdown_voice) {
  if (slowdown_voice != NULL) {
    set_has_slowdown_voice();
  } else {
    clear_has_slowdown_voice();
  }
  slowdown_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), slowdown_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicSlowDown.slowDown_voice)
}

// optional int32 slowDown_lasting_time = 4;
inline bool BasicSlowDown::has_slowdown_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicSlowDown::set_has_slowdown_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicSlowDown::clear_has_slowdown_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicSlowDown::clear_slowdown_lasting_time() {
  slowdown_lasting_time_ = 0;
  clear_has_slowdown_lasting_time();
}
inline ::google::protobuf::int32 BasicSlowDown::slowdown_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.slowDown_lasting_time)
  return slowdown_lasting_time_;
}
inline void BasicSlowDown::set_slowdown_lasting_time(::google::protobuf::int32 value) {
  set_has_slowdown_lasting_time();
  slowdown_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.slowDown_lasting_time)
}

// optional int32 slowDown_deduction_number = 5;
inline bool BasicSlowDown::has_slowdown_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicSlowDown::set_has_slowdown_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicSlowDown::clear_has_slowdown_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicSlowDown::clear_slowdown_deduction_number() {
  slowdown_deduction_number_ = 0;
  clear_has_slowdown_deduction_number();
}
inline ::google::protobuf::int32 BasicSlowDown::slowdown_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.slowDown_deduction_number)
  return slowdown_deduction_number_;
}
inline void BasicSlowDown::set_slowdown_deduction_number(::google::protobuf::int32 value) {
  set_has_slowdown_deduction_number();
  slowdown_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.slowDown_deduction_number)
}

// optional int32 slowDown_judge_number = 6;
inline bool BasicSlowDown::has_slowdown_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicSlowDown::set_has_slowdown_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicSlowDown::clear_has_slowdown_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicSlowDown::clear_slowdown_judge_number() {
  slowdown_judge_number_ = 0;
  clear_has_slowdown_judge_number();
}
inline ::google::protobuf::int32 BasicSlowDown::slowdown_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.slowDown_judge_number)
  return slowdown_judge_number_;
}
inline void BasicSlowDown::set_slowdown_judge_number(::google::protobuf::int32 value) {
  set_has_slowdown_judge_number();
  slowdown_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.slowDown_judge_number)
}

// optional int32 limit_speed = 7;
inline bool BasicSlowDown::has_limit_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BasicSlowDown::set_has_limit_speed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BasicSlowDown::clear_has_limit_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BasicSlowDown::clear_limit_speed() {
  limit_speed_ = 0;
  clear_has_limit_speed();
}
inline ::google::protobuf::int32 BasicSlowDown::limit_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.limit_speed)
  return limit_speed_;
}
inline void BasicSlowDown::set_limit_speed(::google::protobuf::int32 value) {
  set_has_limit_speed();
  limit_speed_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.limit_speed)
}

// -------------------------------------------------------------------

// BasicFireUp

// optional bool fireup_whether_check = 1;
inline bool BasicFireUp::has_fireup_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicFireUp::set_has_fireup_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicFireUp::clear_has_fireup_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicFireUp::clear_fireup_whether_check() {
  fireup_whether_check_ = false;
  clear_has_fireup_whether_check();
}
inline bool BasicFireUp::fireup_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFireUp.fireup_whether_check)
  return fireup_whether_check_;
}
inline void BasicFireUp::set_fireup_whether_check(bool value) {
  set_has_fireup_whether_check();
  fireup_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFireUp.fireup_whether_check)
}

// optional int32 fireup_deduction = 2;
inline bool BasicFireUp::has_fireup_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicFireUp::set_has_fireup_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicFireUp::clear_has_fireup_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicFireUp::clear_fireup_deduction() {
  fireup_deduction_ = 0;
  clear_has_fireup_deduction();
}
inline ::google::protobuf::int32 BasicFireUp::fireup_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFireUp.fireup_deduction)
  return fireup_deduction_;
}
inline void BasicFireUp::set_fireup_deduction(::google::protobuf::int32 value) {
  set_has_fireup_deduction();
  fireup_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFireUp.fireup_deduction)
}

// optional string fireup_voice = 3;
inline bool BasicFireUp::has_fireup_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicFireUp::set_has_fireup_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicFireUp::clear_has_fireup_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicFireUp::clear_fireup_voice() {
  fireup_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fireup_voice();
}
inline const ::std::string& BasicFireUp::fireup_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFireUp.fireup_voice)
  return fireup_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicFireUp::set_fireup_voice(const ::std::string& value) {
  set_has_fireup_voice();
  fireup_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicFireUp.fireup_voice)
}
inline void BasicFireUp::set_fireup_voice(const char* value) {
  set_has_fireup_voice();
  fireup_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicFireUp.fireup_voice)
}
inline void BasicFireUp::set_fireup_voice(const char* value, size_t size) {
  set_has_fireup_voice();
  fireup_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicFireUp.fireup_voice)
}
inline ::std::string* BasicFireUp::mutable_fireup_voice() {
  set_has_fireup_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicFireUp.fireup_voice)
  return fireup_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicFireUp::release_fireup_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicFireUp.fireup_voice)
  clear_has_fireup_voice();
  return fireup_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicFireUp::set_allocated_fireup_voice(::std::string* fireup_voice) {
  if (fireup_voice != NULL) {
    set_has_fireup_voice();
  } else {
    clear_has_fireup_voice();
  }
  fireup_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fireup_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicFireUp.fireup_voice)
}

// optional int32 fireup_lasting_time = 4;
inline bool BasicFireUp::has_fireup_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicFireUp::set_has_fireup_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicFireUp::clear_has_fireup_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicFireUp::clear_fireup_lasting_time() {
  fireup_lasting_time_ = 0;
  clear_has_fireup_lasting_time();
}
inline ::google::protobuf::int32 BasicFireUp::fireup_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFireUp.fireup_lasting_time)
  return fireup_lasting_time_;
}
inline void BasicFireUp::set_fireup_lasting_time(::google::protobuf::int32 value) {
  set_has_fireup_lasting_time();
  fireup_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFireUp.fireup_lasting_time)
}

// optional int32 slowDown_judge_number = 5;
inline bool BasicFireUp::has_slowdown_judge_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicFireUp::set_has_slowdown_judge_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicFireUp::clear_has_slowdown_judge_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicFireUp::clear_slowdown_judge_number() {
  slowdown_judge_number_ = 0;
  clear_has_slowdown_judge_number();
}
inline ::google::protobuf::int32 BasicFireUp::slowdown_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFireUp.slowDown_judge_number)
  return slowdown_judge_number_;
}
inline void BasicFireUp::set_slowdown_judge_number(::google::protobuf::int32 value) {
  set_has_slowdown_judge_number();
  slowdown_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFireUp.slowDown_judge_number)
}

// -------------------------------------------------------------------

// BasicSeat

// optional bool seat_whether_check = 1;
inline bool BasicSeat::has_seat_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicSeat::set_has_seat_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicSeat::clear_has_seat_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicSeat::clear_seat_whether_check() {
  seat_whether_check_ = false;
  clear_has_seat_whether_check();
}
inline bool BasicSeat::seat_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSeat.seat_whether_check)
  return seat_whether_check_;
}
inline void BasicSeat::set_seat_whether_check(bool value) {
  set_has_seat_whether_check();
  seat_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSeat.seat_whether_check)
}

// optional int32 seat_deduction = 2;
inline bool BasicSeat::has_seat_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicSeat::set_has_seat_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicSeat::clear_has_seat_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicSeat::clear_seat_deduction() {
  seat_deduction_ = 0;
  clear_has_seat_deduction();
}
inline ::google::protobuf::int32 BasicSeat::seat_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSeat.seat_deduction)
  return seat_deduction_;
}
inline void BasicSeat::set_seat_deduction(::google::protobuf::int32 value) {
  set_has_seat_deduction();
  seat_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSeat.seat_deduction)
}

// optional string seat_voice = 3;
inline bool BasicSeat::has_seat_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicSeat::set_has_seat_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicSeat::clear_has_seat_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicSeat::clear_seat_voice() {
  seat_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_seat_voice();
}
inline const ::std::string& BasicSeat::seat_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSeat.seat_voice)
  return seat_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicSeat::set_seat_voice(const ::std::string& value) {
  set_has_seat_voice();
  seat_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicSeat.seat_voice)
}
inline void BasicSeat::set_seat_voice(const char* value) {
  set_has_seat_voice();
  seat_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicSeat.seat_voice)
}
inline void BasicSeat::set_seat_voice(const char* value, size_t size) {
  set_has_seat_voice();
  seat_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicSeat.seat_voice)
}
inline ::std::string* BasicSeat::mutable_seat_voice() {
  set_has_seat_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicSeat.seat_voice)
  return seat_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicSeat::release_seat_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicSeat.seat_voice)
  clear_has_seat_voice();
  return seat_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicSeat::set_allocated_seat_voice(::std::string* seat_voice) {
  if (seat_voice != NULL) {
    set_has_seat_voice();
  } else {
    clear_has_seat_voice();
  }
  seat_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seat_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicSeat.seat_voice)
}

// optional int32 seat_lasting_time = 4;
inline bool BasicSeat::has_seat_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicSeat::set_has_seat_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicSeat::clear_has_seat_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicSeat::clear_seat_lasting_time() {
  seat_lasting_time_ = 0;
  clear_has_seat_lasting_time();
}
inline ::google::protobuf::int32 BasicSeat::seat_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSeat.seat_lasting_time)
  return seat_lasting_time_;
}
inline void BasicSeat::set_seat_lasting_time(::google::protobuf::int32 value) {
  set_has_seat_lasting_time();
  seat_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSeat.seat_lasting_time)
}

// optional int32 slowDown_judge_number = 5;
inline bool BasicSeat::has_slowdown_judge_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicSeat::set_has_slowdown_judge_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicSeat::clear_has_slowdown_judge_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicSeat::clear_slowdown_judge_number() {
  slowdown_judge_number_ = 0;
  clear_has_slowdown_judge_number();
}
inline ::google::protobuf::int32 BasicSeat::slowdown_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSeat.slowDown_judge_number)
  return slowdown_judge_number_;
}
inline void BasicSeat::set_slowdown_judge_number(::google::protobuf::int32 value) {
  set_has_slowdown_judge_number();
  slowdown_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSeat.slowDown_judge_number)
}

// -------------------------------------------------------------------

// BasicLeftMirror

// optional bool left_mirror_whether_check = 1;
inline bool BasicLeftMirror::has_left_mirror_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicLeftMirror::set_has_left_mirror_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicLeftMirror::clear_has_left_mirror_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicLeftMirror::clear_left_mirror_whether_check() {
  left_mirror_whether_check_ = false;
  clear_has_left_mirror_whether_check();
}
inline bool BasicLeftMirror::left_mirror_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftMirror.left_mirror_whether_check)
  return left_mirror_whether_check_;
}
inline void BasicLeftMirror::set_left_mirror_whether_check(bool value) {
  set_has_left_mirror_whether_check();
  left_mirror_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftMirror.left_mirror_whether_check)
}

// optional int32 left_mirror_deduction = 2;
inline bool BasicLeftMirror::has_left_mirror_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicLeftMirror::set_has_left_mirror_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicLeftMirror::clear_has_left_mirror_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicLeftMirror::clear_left_mirror_deduction() {
  left_mirror_deduction_ = 0;
  clear_has_left_mirror_deduction();
}
inline ::google::protobuf::int32 BasicLeftMirror::left_mirror_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftMirror.left_mirror_deduction)
  return left_mirror_deduction_;
}
inline void BasicLeftMirror::set_left_mirror_deduction(::google::protobuf::int32 value) {
  set_has_left_mirror_deduction();
  left_mirror_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftMirror.left_mirror_deduction)
}

// optional string left_mirror_voice = 3;
inline bool BasicLeftMirror::has_left_mirror_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicLeftMirror::set_has_left_mirror_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicLeftMirror::clear_has_left_mirror_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicLeftMirror::clear_left_mirror_voice() {
  left_mirror_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left_mirror_voice();
}
inline const ::std::string& BasicLeftMirror::left_mirror_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftMirror.left_mirror_voice)
  return left_mirror_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicLeftMirror::set_left_mirror_voice(const ::std::string& value) {
  set_has_left_mirror_voice();
  left_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftMirror.left_mirror_voice)
}
inline void BasicLeftMirror::set_left_mirror_voice(const char* value) {
  set_has_left_mirror_voice();
  left_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicLeftMirror.left_mirror_voice)
}
inline void BasicLeftMirror::set_left_mirror_voice(const char* value, size_t size) {
  set_has_left_mirror_voice();
  left_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicLeftMirror.left_mirror_voice)
}
inline ::std::string* BasicLeftMirror::mutable_left_mirror_voice() {
  set_has_left_mirror_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicLeftMirror.left_mirror_voice)
  return left_mirror_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicLeftMirror::release_left_mirror_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicLeftMirror.left_mirror_voice)
  clear_has_left_mirror_voice();
  return left_mirror_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicLeftMirror::set_allocated_left_mirror_voice(::std::string* left_mirror_voice) {
  if (left_mirror_voice != NULL) {
    set_has_left_mirror_voice();
  } else {
    clear_has_left_mirror_voice();
  }
  left_mirror_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left_mirror_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicLeftMirror.left_mirror_voice)
}

// optional int32 left_mirror_lasting_time = 4;
inline bool BasicLeftMirror::has_left_mirror_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicLeftMirror::set_has_left_mirror_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicLeftMirror::clear_has_left_mirror_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicLeftMirror::clear_left_mirror_lasting_time() {
  left_mirror_lasting_time_ = 0;
  clear_has_left_mirror_lasting_time();
}
inline ::google::protobuf::int32 BasicLeftMirror::left_mirror_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftMirror.left_mirror_lasting_time)
  return left_mirror_lasting_time_;
}
inline void BasicLeftMirror::set_left_mirror_lasting_time(::google::protobuf::int32 value) {
  set_has_left_mirror_lasting_time();
  left_mirror_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftMirror.left_mirror_lasting_time)
}

// optional int32 left_judge_number = 5;
inline bool BasicLeftMirror::has_left_judge_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicLeftMirror::set_has_left_judge_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicLeftMirror::clear_has_left_judge_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicLeftMirror::clear_left_judge_number() {
  left_judge_number_ = 0;
  clear_has_left_judge_number();
}
inline ::google::protobuf::int32 BasicLeftMirror::left_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftMirror.left_judge_number)
  return left_judge_number_;
}
inline void BasicLeftMirror::set_left_judge_number(::google::protobuf::int32 value) {
  set_has_left_judge_number();
  left_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftMirror.left_judge_number)
}

// -------------------------------------------------------------------

// BasicMiddleMirror

// optional bool middle_mirror_whether_check = 1;
inline bool BasicMiddleMirror::has_middle_mirror_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicMiddleMirror::set_has_middle_mirror_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicMiddleMirror::clear_has_middle_mirror_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicMiddleMirror::clear_middle_mirror_whether_check() {
  middle_mirror_whether_check_ = false;
  clear_has_middle_mirror_whether_check();
}
inline bool BasicMiddleMirror::middle_mirror_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicMiddleMirror.middle_mirror_whether_check)
  return middle_mirror_whether_check_;
}
inline void BasicMiddleMirror::set_middle_mirror_whether_check(bool value) {
  set_has_middle_mirror_whether_check();
  middle_mirror_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicMiddleMirror.middle_mirror_whether_check)
}

// optional int32 middle_mirror_deduction = 2;
inline bool BasicMiddleMirror::has_middle_mirror_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicMiddleMirror::set_has_middle_mirror_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicMiddleMirror::clear_has_middle_mirror_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicMiddleMirror::clear_middle_mirror_deduction() {
  middle_mirror_deduction_ = 0;
  clear_has_middle_mirror_deduction();
}
inline ::google::protobuf::int32 BasicMiddleMirror::middle_mirror_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicMiddleMirror.middle_mirror_deduction)
  return middle_mirror_deduction_;
}
inline void BasicMiddleMirror::set_middle_mirror_deduction(::google::protobuf::int32 value) {
  set_has_middle_mirror_deduction();
  middle_mirror_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicMiddleMirror.middle_mirror_deduction)
}

// optional string middle_mirror_voice = 3;
inline bool BasicMiddleMirror::has_middle_mirror_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicMiddleMirror::set_has_middle_mirror_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicMiddleMirror::clear_has_middle_mirror_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicMiddleMirror::clear_middle_mirror_voice() {
  middle_mirror_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_middle_mirror_voice();
}
inline const ::std::string& BasicMiddleMirror::middle_mirror_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicMiddleMirror.middle_mirror_voice)
  return middle_mirror_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicMiddleMirror::set_middle_mirror_voice(const ::std::string& value) {
  set_has_middle_mirror_voice();
  middle_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicMiddleMirror.middle_mirror_voice)
}
inline void BasicMiddleMirror::set_middle_mirror_voice(const char* value) {
  set_has_middle_mirror_voice();
  middle_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicMiddleMirror.middle_mirror_voice)
}
inline void BasicMiddleMirror::set_middle_mirror_voice(const char* value, size_t size) {
  set_has_middle_mirror_voice();
  middle_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicMiddleMirror.middle_mirror_voice)
}
inline ::std::string* BasicMiddleMirror::mutable_middle_mirror_voice() {
  set_has_middle_mirror_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicMiddleMirror.middle_mirror_voice)
  return middle_mirror_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicMiddleMirror::release_middle_mirror_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicMiddleMirror.middle_mirror_voice)
  clear_has_middle_mirror_voice();
  return middle_mirror_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicMiddleMirror::set_allocated_middle_mirror_voice(::std::string* middle_mirror_voice) {
  if (middle_mirror_voice != NULL) {
    set_has_middle_mirror_voice();
  } else {
    clear_has_middle_mirror_voice();
  }
  middle_mirror_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), middle_mirror_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicMiddleMirror.middle_mirror_voice)
}

// optional int32 middle_mirror_lasting_time = 4;
inline bool BasicMiddleMirror::has_middle_mirror_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicMiddleMirror::set_has_middle_mirror_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicMiddleMirror::clear_has_middle_mirror_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicMiddleMirror::clear_middle_mirror_lasting_time() {
  middle_mirror_lasting_time_ = 0;
  clear_has_middle_mirror_lasting_time();
}
inline ::google::protobuf::int32 BasicMiddleMirror::middle_mirror_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicMiddleMirror.middle_mirror_lasting_time)
  return middle_mirror_lasting_time_;
}
inline void BasicMiddleMirror::set_middle_mirror_lasting_time(::google::protobuf::int32 value) {
  set_has_middle_mirror_lasting_time();
  middle_mirror_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicMiddleMirror.middle_mirror_lasting_time)
}

// optional int32 middle_judge_number = 5;
inline bool BasicMiddleMirror::has_middle_judge_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicMiddleMirror::set_has_middle_judge_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicMiddleMirror::clear_has_middle_judge_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicMiddleMirror::clear_middle_judge_number() {
  middle_judge_number_ = 0;
  clear_has_middle_judge_number();
}
inline ::google::protobuf::int32 BasicMiddleMirror::middle_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicMiddleMirror.middle_judge_number)
  return middle_judge_number_;
}
inline void BasicMiddleMirror::set_middle_judge_number(::google::protobuf::int32 value) {
  set_has_middle_judge_number();
  middle_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicMiddleMirror.middle_judge_number)
}

// -------------------------------------------------------------------

// BasicRightMirror

// optional bool right_mirror_whether_check = 1;
inline bool BasicRightMirror::has_right_mirror_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicRightMirror::set_has_right_mirror_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicRightMirror::clear_has_right_mirror_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicRightMirror::clear_right_mirror_whether_check() {
  right_mirror_whether_check_ = false;
  clear_has_right_mirror_whether_check();
}
inline bool BasicRightMirror::right_mirror_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightMirror.right_mirror_whether_check)
  return right_mirror_whether_check_;
}
inline void BasicRightMirror::set_right_mirror_whether_check(bool value) {
  set_has_right_mirror_whether_check();
  right_mirror_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightMirror.right_mirror_whether_check)
}

// optional int32 right_mirror_deduction = 2;
inline bool BasicRightMirror::has_right_mirror_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicRightMirror::set_has_right_mirror_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicRightMirror::clear_has_right_mirror_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicRightMirror::clear_right_mirror_deduction() {
  right_mirror_deduction_ = 0;
  clear_has_right_mirror_deduction();
}
inline ::google::protobuf::int32 BasicRightMirror::right_mirror_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightMirror.right_mirror_deduction)
  return right_mirror_deduction_;
}
inline void BasicRightMirror::set_right_mirror_deduction(::google::protobuf::int32 value) {
  set_has_right_mirror_deduction();
  right_mirror_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightMirror.right_mirror_deduction)
}

// optional string right_mirror_voice = 3;
inline bool BasicRightMirror::has_right_mirror_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicRightMirror::set_has_right_mirror_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicRightMirror::clear_has_right_mirror_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicRightMirror::clear_right_mirror_voice() {
  right_mirror_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_right_mirror_voice();
}
inline const ::std::string& BasicRightMirror::right_mirror_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightMirror.right_mirror_voice)
  return right_mirror_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicRightMirror::set_right_mirror_voice(const ::std::string& value) {
  set_has_right_mirror_voice();
  right_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightMirror.right_mirror_voice)
}
inline void BasicRightMirror::set_right_mirror_voice(const char* value) {
  set_has_right_mirror_voice();
  right_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicRightMirror.right_mirror_voice)
}
inline void BasicRightMirror::set_right_mirror_voice(const char* value, size_t size) {
  set_has_right_mirror_voice();
  right_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicRightMirror.right_mirror_voice)
}
inline ::std::string* BasicRightMirror::mutable_right_mirror_voice() {
  set_has_right_mirror_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicRightMirror.right_mirror_voice)
  return right_mirror_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicRightMirror::release_right_mirror_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicRightMirror.right_mirror_voice)
  clear_has_right_mirror_voice();
  return right_mirror_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicRightMirror::set_allocated_right_mirror_voice(::std::string* right_mirror_voice) {
  if (right_mirror_voice != NULL) {
    set_has_right_mirror_voice();
  } else {
    clear_has_right_mirror_voice();
  }
  right_mirror_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), right_mirror_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicRightMirror.right_mirror_voice)
}

// optional int32 right_mirror_lasting_time = 4;
inline bool BasicRightMirror::has_right_mirror_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicRightMirror::set_has_right_mirror_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicRightMirror::clear_has_right_mirror_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicRightMirror::clear_right_mirror_lasting_time() {
  right_mirror_lasting_time_ = 0;
  clear_has_right_mirror_lasting_time();
}
inline ::google::protobuf::int32 BasicRightMirror::right_mirror_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightMirror.right_mirror_lasting_time)
  return right_mirror_lasting_time_;
}
inline void BasicRightMirror::set_right_mirror_lasting_time(::google::protobuf::int32 value) {
  set_has_right_mirror_lasting_time();
  right_mirror_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightMirror.right_mirror_lasting_time)
}

// optional int32 right_judge_number = 5;
inline bool BasicRightMirror::has_right_judge_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicRightMirror::set_has_right_judge_number() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicRightMirror::clear_has_right_judge_number() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicRightMirror::clear_right_judge_number() {
  right_judge_number_ = 0;
  clear_has_right_judge_number();
}
inline ::google::protobuf::int32 BasicRightMirror::right_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightMirror.right_judge_number)
  return right_judge_number_;
}
inline void BasicRightMirror::set_right_judge_number(::google::protobuf::int32 value) {
  set_has_right_judge_number();
  right_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightMirror.right_judge_number)
}

// -------------------------------------------------------------------

// ItemJudgeDistance

// optional bool item_distance_check = 1;
inline bool ItemJudgeDistance::has_item_distance_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeDistance::set_has_item_distance_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeDistance::clear_has_item_distance_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeDistance::clear_item_distance_check() {
  item_distance_check_ = false;
  clear_has_item_distance_check();
}
inline bool ItemJudgeDistance::item_distance_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeDistance.item_distance_check)
  return item_distance_check_;
}
inline void ItemJudgeDistance::set_item_distance_check(bool value) {
  set_has_item_distance_check();
  item_distance_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeDistance.item_distance_check)
}

// optional int32 item_min_distance = 2;
inline bool ItemJudgeDistance::has_item_min_distance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeDistance::set_has_item_min_distance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeDistance::clear_has_item_min_distance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeDistance::clear_item_min_distance() {
  item_min_distance_ = 0;
  clear_has_item_min_distance();
}
inline ::google::protobuf::int32 ItemJudgeDistance::item_min_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeDistance.item_min_distance)
  return item_min_distance_;
}
inline void ItemJudgeDistance::set_item_min_distance(::google::protobuf::int32 value) {
  set_has_item_min_distance();
  item_min_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeDistance.item_min_distance)
}

// optional int32 item_max_distance = 3;
inline bool ItemJudgeDistance::has_item_max_distance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeDistance::set_has_item_max_distance() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeDistance::clear_has_item_max_distance() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeDistance::clear_item_max_distance() {
  item_max_distance_ = 0;
  clear_has_item_max_distance();
}
inline ::google::protobuf::int32 ItemJudgeDistance::item_max_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeDistance.item_max_distance)
  return item_max_distance_;
}
inline void ItemJudgeDistance::set_item_max_distance(::google::protobuf::int32 value) {
  set_has_item_max_distance();
  item_max_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeDistance.item_max_distance)
}

// optional int32 item_deduction = 4;
inline bool ItemJudgeDistance::has_item_deduction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeDistance::set_has_item_deduction() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeDistance::clear_has_item_deduction() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeDistance::clear_item_deduction() {
  item_deduction_ = 0;
  clear_has_item_deduction();
}
inline ::google::protobuf::int32 ItemJudgeDistance::item_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeDistance.item_deduction)
  return item_deduction_;
}
inline void ItemJudgeDistance::set_item_deduction(::google::protobuf::int32 value) {
  set_has_item_deduction();
  item_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeDistance.item_deduction)
}

// optional string item_deduction_voice = 5;
inline bool ItemJudgeDistance::has_item_deduction_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeDistance::set_has_item_deduction_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeDistance::clear_has_item_deduction_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeDistance::clear_item_deduction_voice() {
  item_deduction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_deduction_voice();
}
inline const ::std::string& ItemJudgeDistance::item_deduction_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeDistance.item_deduction_voice)
  return item_deduction_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeDistance::set_item_deduction_voice(const ::std::string& value) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeDistance.item_deduction_voice)
}
inline void ItemJudgeDistance::set_item_deduction_voice(const char* value) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeDistance.item_deduction_voice)
}
inline void ItemJudgeDistance::set_item_deduction_voice(const char* value, size_t size) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeDistance.item_deduction_voice)
}
inline ::std::string* ItemJudgeDistance::mutable_item_deduction_voice() {
  set_has_item_deduction_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeDistance.item_deduction_voice)
  return item_deduction_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeDistance::release_item_deduction_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeDistance.item_deduction_voice)
  clear_has_item_deduction_voice();
  return item_deduction_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeDistance::set_allocated_item_deduction_voice(::std::string* item_deduction_voice) {
  if (item_deduction_voice != NULL) {
    set_has_item_deduction_voice();
  } else {
    clear_has_item_deduction_voice();
  }
  item_deduction_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_deduction_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeDistance.item_deduction_voice)
}

// -------------------------------------------------------------------

// ItemJudgeTime

// optional bool item_time_check = 1;
inline bool ItemJudgeTime::has_item_time_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeTime::set_has_item_time_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeTime::clear_has_item_time_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeTime::clear_item_time_check() {
  item_time_check_ = false;
  clear_has_item_time_check();
}
inline bool ItemJudgeTime::item_time_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeTime.item_time_check)
  return item_time_check_;
}
inline void ItemJudgeTime::set_item_time_check(bool value) {
  set_has_item_time_check();
  item_time_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeTime.item_time_check)
}

// optional int32 item_min_time = 2;
inline bool ItemJudgeTime::has_item_min_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeTime::set_has_item_min_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeTime::clear_has_item_min_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeTime::clear_item_min_time() {
  item_min_time_ = 0;
  clear_has_item_min_time();
}
inline ::google::protobuf::int32 ItemJudgeTime::item_min_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeTime.item_min_time)
  return item_min_time_;
}
inline void ItemJudgeTime::set_item_min_time(::google::protobuf::int32 value) {
  set_has_item_min_time();
  item_min_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeTime.item_min_time)
}

// optional int32 item_max_time = 3;
inline bool ItemJudgeTime::has_item_max_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeTime::set_has_item_max_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeTime::clear_has_item_max_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeTime::clear_item_max_time() {
  item_max_time_ = 0;
  clear_has_item_max_time();
}
inline ::google::protobuf::int32 ItemJudgeTime::item_max_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeTime.item_max_time)
  return item_max_time_;
}
inline void ItemJudgeTime::set_item_max_time(::google::protobuf::int32 value) {
  set_has_item_max_time();
  item_max_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeTime.item_max_time)
}

// optional int32 item_deduction = 4;
inline bool ItemJudgeTime::has_item_deduction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeTime::set_has_item_deduction() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeTime::clear_has_item_deduction() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeTime::clear_item_deduction() {
  item_deduction_ = 0;
  clear_has_item_deduction();
}
inline ::google::protobuf::int32 ItemJudgeTime::item_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeTime.item_deduction)
  return item_deduction_;
}
inline void ItemJudgeTime::set_item_deduction(::google::protobuf::int32 value) {
  set_has_item_deduction();
  item_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeTime.item_deduction)
}

// optional string item_deduction_voice = 5;
inline bool ItemJudgeTime::has_item_deduction_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeTime::set_has_item_deduction_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeTime::clear_has_item_deduction_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeTime::clear_item_deduction_voice() {
  item_deduction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_deduction_voice();
}
inline const ::std::string& ItemJudgeTime::item_deduction_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeTime.item_deduction_voice)
  return item_deduction_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeTime::set_item_deduction_voice(const ::std::string& value) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeTime.item_deduction_voice)
}
inline void ItemJudgeTime::set_item_deduction_voice(const char* value) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeTime.item_deduction_voice)
}
inline void ItemJudgeTime::set_item_deduction_voice(const char* value, size_t size) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeTime.item_deduction_voice)
}
inline ::std::string* ItemJudgeTime::mutable_item_deduction_voice() {
  set_has_item_deduction_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeTime.item_deduction_voice)
  return item_deduction_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeTime::release_item_deduction_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeTime.item_deduction_voice)
  clear_has_item_deduction_voice();
  return item_deduction_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeTime::set_allocated_item_deduction_voice(::std::string* item_deduction_voice) {
  if (item_deduction_voice != NULL) {
    set_has_item_deduction_voice();
  } else {
    clear_has_item_deduction_voice();
  }
  item_deduction_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_deduction_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeTime.item_deduction_voice)
}

// -------------------------------------------------------------------

// ItemJudgeSpeed

// optional bool item_speed_check = 1;
inline bool ItemJudgeSpeed::has_item_speed_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeSpeed::set_has_item_speed_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeSpeed::clear_has_item_speed_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeSpeed::clear_item_speed_check() {
  item_speed_check_ = false;
  clear_has_item_speed_check();
}
inline bool ItemJudgeSpeed::item_speed_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeSpeed.item_speed_check)
  return item_speed_check_;
}
inline void ItemJudgeSpeed::set_item_speed_check(bool value) {
  set_has_item_speed_check();
  item_speed_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeSpeed.item_speed_check)
}

// optional int32 item_min_speed = 2;
inline bool ItemJudgeSpeed::has_item_min_speed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeSpeed::set_has_item_min_speed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeSpeed::clear_has_item_min_speed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeSpeed::clear_item_min_speed() {
  item_min_speed_ = 0;
  clear_has_item_min_speed();
}
inline ::google::protobuf::int32 ItemJudgeSpeed::item_min_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeSpeed.item_min_speed)
  return item_min_speed_;
}
inline void ItemJudgeSpeed::set_item_min_speed(::google::protobuf::int32 value) {
  set_has_item_min_speed();
  item_min_speed_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeSpeed.item_min_speed)
}

// optional int32 item_max_speed = 3;
inline bool ItemJudgeSpeed::has_item_max_speed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeSpeed::set_has_item_max_speed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeSpeed::clear_has_item_max_speed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeSpeed::clear_item_max_speed() {
  item_max_speed_ = 0;
  clear_has_item_max_speed();
}
inline ::google::protobuf::int32 ItemJudgeSpeed::item_max_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeSpeed.item_max_speed)
  return item_max_speed_;
}
inline void ItemJudgeSpeed::set_item_max_speed(::google::protobuf::int32 value) {
  set_has_item_max_speed();
  item_max_speed_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeSpeed.item_max_speed)
}

// optional int32 item_deduction = 4;
inline bool ItemJudgeSpeed::has_item_deduction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeSpeed::set_has_item_deduction() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeSpeed::clear_has_item_deduction() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeSpeed::clear_item_deduction() {
  item_deduction_ = 0;
  clear_has_item_deduction();
}
inline ::google::protobuf::int32 ItemJudgeSpeed::item_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeSpeed.item_deduction)
  return item_deduction_;
}
inline void ItemJudgeSpeed::set_item_deduction(::google::protobuf::int32 value) {
  set_has_item_deduction();
  item_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeSpeed.item_deduction)
}

// optional string item_deduction_voice = 5;
inline bool ItemJudgeSpeed::has_item_deduction_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeSpeed::set_has_item_deduction_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeSpeed::clear_has_item_deduction_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeSpeed::clear_item_deduction_voice() {
  item_deduction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_deduction_voice();
}
inline const ::std::string& ItemJudgeSpeed::item_deduction_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeSpeed.item_deduction_voice)
  return item_deduction_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeSpeed::set_item_deduction_voice(const ::std::string& value) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeSpeed.item_deduction_voice)
}
inline void ItemJudgeSpeed::set_item_deduction_voice(const char* value) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeSpeed.item_deduction_voice)
}
inline void ItemJudgeSpeed::set_item_deduction_voice(const char* value, size_t size) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeSpeed.item_deduction_voice)
}
inline ::std::string* ItemJudgeSpeed::mutable_item_deduction_voice() {
  set_has_item_deduction_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeSpeed.item_deduction_voice)
  return item_deduction_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeSpeed::release_item_deduction_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeSpeed.item_deduction_voice)
  clear_has_item_deduction_voice();
  return item_deduction_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeSpeed::set_allocated_item_deduction_voice(::std::string* item_deduction_voice) {
  if (item_deduction_voice != NULL) {
    set_has_item_deduction_voice();
  } else {
    clear_has_item_deduction_voice();
  }
  item_deduction_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_deduction_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeSpeed.item_deduction_voice)
}

// -------------------------------------------------------------------

// ItemJudgeBasic

// optional .OPMessage.BasicSafety basic_safety = 1;
inline bool ItemJudgeBasic::has_basic_safety() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeBasic::set_has_basic_safety() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeBasic::clear_has_basic_safety() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeBasic::clear_basic_safety() {
  if (basic_safety_ != NULL) basic_safety_->::OPMessage::BasicSafety::Clear();
  clear_has_basic_safety();
}
inline const ::OPMessage::BasicSafety& ItemJudgeBasic::basic_safety() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_safety)
  return basic_safety_ != NULL ? *basic_safety_ : *default_instance_->basic_safety_;
}
inline ::OPMessage::BasicSafety* ItemJudgeBasic::mutable_basic_safety() {
  set_has_basic_safety();
  if (basic_safety_ == NULL) {
    basic_safety_ = new ::OPMessage::BasicSafety;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_safety)
  return basic_safety_;
}
inline ::OPMessage::BasicSafety* ItemJudgeBasic::release_basic_safety() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_safety)
  clear_has_basic_safety();
  ::OPMessage::BasicSafety* temp = basic_safety_;
  basic_safety_ = NULL;
  return temp;
}
inline void ItemJudgeBasic::set_allocated_basic_safety(::OPMessage::BasicSafety* basic_safety) {
  delete basic_safety_;
  basic_safety_ = basic_safety;
  if (basic_safety) {
    set_has_basic_safety();
  } else {
    clear_has_basic_safety();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_safety)
}

// optional .OPMessage.BasicDoor basic_door = 2;
inline bool ItemJudgeBasic::has_basic_door() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeBasic::set_has_basic_door() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeBasic::clear_has_basic_door() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeBasic::clear_basic_door() {
  if (basic_door_ != NULL) basic_door_->::OPMessage::BasicDoor::Clear();
  clear_has_basic_door();
}
inline const ::OPMessage::BasicDoor& ItemJudgeBasic::basic_door() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_door)
  return basic_door_ != NULL ? *basic_door_ : *default_instance_->basic_door_;
}
inline ::OPMessage::BasicDoor* ItemJudgeBasic::mutable_basic_door() {
  set_has_basic_door();
  if (basic_door_ == NULL) {
    basic_door_ = new ::OPMessage::BasicDoor;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_door)
  return basic_door_;
}
inline ::OPMessage::BasicDoor* ItemJudgeBasic::release_basic_door() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_door)
  clear_has_basic_door();
  ::OPMessage::BasicDoor* temp = basic_door_;
  basic_door_ = NULL;
  return temp;
}
inline void ItemJudgeBasic::set_allocated_basic_door(::OPMessage::BasicDoor* basic_door) {
  delete basic_door_;
  basic_door_ = basic_door;
  if (basic_door) {
    set_has_basic_door();
  } else {
    clear_has_basic_door();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_door)
}

// optional .OPMessage.BasicFlameout basic_flameout = 3;
inline bool ItemJudgeBasic::has_basic_flameout() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeBasic::set_has_basic_flameout() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeBasic::clear_has_basic_flameout() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeBasic::clear_basic_flameout() {
  if (basic_flameout_ != NULL) basic_flameout_->::OPMessage::BasicFlameout::Clear();
  clear_has_basic_flameout();
}
inline const ::OPMessage::BasicFlameout& ItemJudgeBasic::basic_flameout() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_flameout)
  return basic_flameout_ != NULL ? *basic_flameout_ : *default_instance_->basic_flameout_;
}
inline ::OPMessage::BasicFlameout* ItemJudgeBasic::mutable_basic_flameout() {
  set_has_basic_flameout();
  if (basic_flameout_ == NULL) {
    basic_flameout_ = new ::OPMessage::BasicFlameout;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_flameout)
  return basic_flameout_;
}
inline ::OPMessage::BasicFlameout* ItemJudgeBasic::release_basic_flameout() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_flameout)
  clear_has_basic_flameout();
  ::OPMessage::BasicFlameout* temp = basic_flameout_;
  basic_flameout_ = NULL;
  return temp;
}
inline void ItemJudgeBasic::set_allocated_basic_flameout(::OPMessage::BasicFlameout* basic_flameout) {
  delete basic_flameout_;
  basic_flameout_ = basic_flameout;
  if (basic_flameout) {
    set_has_basic_flameout();
  } else {
    clear_has_basic_flameout();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_flameout)
}

// optional .OPMessage.BasicLeftTurnLamp basic_leftTurnLamp = 4;
inline bool ItemJudgeBasic::has_basic_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeBasic::set_has_basic_leftturnlamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeBasic::clear_has_basic_leftturnlamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeBasic::clear_basic_leftturnlamp() {
  if (basic_leftturnlamp_ != NULL) basic_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_basic_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeBasic::basic_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_leftTurnLamp)
  return basic_leftturnlamp_ != NULL ? *basic_leftturnlamp_ : *default_instance_->basic_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeBasic::mutable_basic_leftturnlamp() {
  set_has_basic_leftturnlamp();
  if (basic_leftturnlamp_ == NULL) {
    basic_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_leftTurnLamp)
  return basic_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeBasic::release_basic_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_leftTurnLamp)
  clear_has_basic_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = basic_leftturnlamp_;
  basic_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeBasic::set_allocated_basic_leftturnlamp(::OPMessage::BasicLeftTurnLamp* basic_leftturnlamp) {
  delete basic_leftturnlamp_;
  basic_leftturnlamp_ = basic_leftturnlamp;
  if (basic_leftturnlamp) {
    set_has_basic_leftturnlamp();
  } else {
    clear_has_basic_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp basic_rightTurnLamp = 5;
inline bool ItemJudgeBasic::has_basic_rightturnlamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeBasic::set_has_basic_rightturnlamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeBasic::clear_has_basic_rightturnlamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeBasic::clear_basic_rightturnlamp() {
  if (basic_rightturnlamp_ != NULL) basic_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_basic_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeBasic::basic_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_rightTurnLamp)
  return basic_rightturnlamp_ != NULL ? *basic_rightturnlamp_ : *default_instance_->basic_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeBasic::mutable_basic_rightturnlamp() {
  set_has_basic_rightturnlamp();
  if (basic_rightturnlamp_ == NULL) {
    basic_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_rightTurnLamp)
  return basic_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeBasic::release_basic_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_rightTurnLamp)
  clear_has_basic_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = basic_rightturnlamp_;
  basic_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeBasic::set_allocated_basic_rightturnlamp(::OPMessage::BasicRightTurnLamp* basic_rightturnlamp) {
  delete basic_rightturnlamp_;
  basic_rightturnlamp_ = basic_rightturnlamp;
  if (basic_rightturnlamp) {
    set_has_basic_rightturnlamp();
  } else {
    clear_has_basic_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_rightTurnLamp)
}

// optional .OPMessage.BasicCarStop basic_carStop = 6;
inline bool ItemJudgeBasic::has_basic_carstop() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeBasic::set_has_basic_carstop() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeBasic::clear_has_basic_carstop() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeBasic::clear_basic_carstop() {
  if (basic_carstop_ != NULL) basic_carstop_->::OPMessage::BasicCarStop::Clear();
  clear_has_basic_carstop();
}
inline const ::OPMessage::BasicCarStop& ItemJudgeBasic::basic_carstop() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_carStop)
  return basic_carstop_ != NULL ? *basic_carstop_ : *default_instance_->basic_carstop_;
}
inline ::OPMessage::BasicCarStop* ItemJudgeBasic::mutable_basic_carstop() {
  set_has_basic_carstop();
  if (basic_carstop_ == NULL) {
    basic_carstop_ = new ::OPMessage::BasicCarStop;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_carStop)
  return basic_carstop_;
}
inline ::OPMessage::BasicCarStop* ItemJudgeBasic::release_basic_carstop() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_carStop)
  clear_has_basic_carstop();
  ::OPMessage::BasicCarStop* temp = basic_carstop_;
  basic_carstop_ = NULL;
  return temp;
}
inline void ItemJudgeBasic::set_allocated_basic_carstop(::OPMessage::BasicCarStop* basic_carstop) {
  delete basic_carstop_;
  basic_carstop_ = basic_carstop;
  if (basic_carstop) {
    set_has_basic_carstop();
  } else {
    clear_has_basic_carstop();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_carStop)
}

// optional .OPMessage.BasicHandBrake basic_handBrake = 7;
inline bool ItemJudgeBasic::has_basic_handbrake() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeBasic::set_has_basic_handbrake() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeBasic::clear_has_basic_handbrake() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeBasic::clear_basic_handbrake() {
  if (basic_handbrake_ != NULL) basic_handbrake_->::OPMessage::BasicHandBrake::Clear();
  clear_has_basic_handbrake();
}
inline const ::OPMessage::BasicHandBrake& ItemJudgeBasic::basic_handbrake() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_handBrake)
  return basic_handbrake_ != NULL ? *basic_handbrake_ : *default_instance_->basic_handbrake_;
}
inline ::OPMessage::BasicHandBrake* ItemJudgeBasic::mutable_basic_handbrake() {
  set_has_basic_handbrake();
  if (basic_handbrake_ == NULL) {
    basic_handbrake_ = new ::OPMessage::BasicHandBrake;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_handBrake)
  return basic_handbrake_;
}
inline ::OPMessage::BasicHandBrake* ItemJudgeBasic::release_basic_handbrake() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_handBrake)
  clear_has_basic_handbrake();
  ::OPMessage::BasicHandBrake* temp = basic_handbrake_;
  basic_handbrake_ = NULL;
  return temp;
}
inline void ItemJudgeBasic::set_allocated_basic_handbrake(::OPMessage::BasicHandBrake* basic_handbrake) {
  delete basic_handbrake_;
  basic_handbrake_ = basic_handbrake;
  if (basic_handbrake) {
    set_has_basic_handbrake();
  } else {
    clear_has_basic_handbrake();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_handBrake)
}

// optional .OPMessage.BasicTimeout basic_timeout = 8;
inline bool ItemJudgeBasic::has_basic_timeout() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeBasic::set_has_basic_timeout() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeBasic::clear_has_basic_timeout() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeBasic::clear_basic_timeout() {
  if (basic_timeout_ != NULL) basic_timeout_->::OPMessage::BasicTimeout::Clear();
  clear_has_basic_timeout();
}
inline const ::OPMessage::BasicTimeout& ItemJudgeBasic::basic_timeout() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_timeout)
  return basic_timeout_ != NULL ? *basic_timeout_ : *default_instance_->basic_timeout_;
}
inline ::OPMessage::BasicTimeout* ItemJudgeBasic::mutable_basic_timeout() {
  set_has_basic_timeout();
  if (basic_timeout_ == NULL) {
    basic_timeout_ = new ::OPMessage::BasicTimeout;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_timeout)
  return basic_timeout_;
}
inline ::OPMessage::BasicTimeout* ItemJudgeBasic::release_basic_timeout() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_timeout)
  clear_has_basic_timeout();
  ::OPMessage::BasicTimeout* temp = basic_timeout_;
  basic_timeout_ = NULL;
  return temp;
}
inline void ItemJudgeBasic::set_allocated_basic_timeout(::OPMessage::BasicTimeout* basic_timeout) {
  delete basic_timeout_;
  basic_timeout_ = basic_timeout;
  if (basic_timeout) {
    set_has_basic_timeout();
  } else {
    clear_has_basic_timeout();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_timeout)
}

// -------------------------------------------------------------------

// GlobalJudgeRule

// optional bool run_mode_mn_again_dk_end = 1;
inline bool GlobalJudgeRule::has_run_mode_mn_again_dk_end() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GlobalJudgeRule::set_has_run_mode_mn_again_dk_end() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GlobalJudgeRule::clear_has_run_mode_mn_again_dk_end() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GlobalJudgeRule::clear_run_mode_mn_again_dk_end() {
  run_mode_mn_again_dk_end_ = false;
  clear_has_run_mode_mn_again_dk_end();
}
inline bool GlobalJudgeRule::run_mode_mn_again_dk_end() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.run_mode_mn_again_dk_end)
  return run_mode_mn_again_dk_end_;
}
inline void GlobalJudgeRule::set_run_mode_mn_again_dk_end(bool value) {
  set_has_run_mode_mn_again_dk_end();
  run_mode_mn_again_dk_end_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.run_mode_mn_again_dk_end)
}

// optional bool run_mode_ks_whether_have_second_chance = 2;
inline bool GlobalJudgeRule::has_run_mode_ks_whether_have_second_chance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GlobalJudgeRule::set_has_run_mode_ks_whether_have_second_chance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GlobalJudgeRule::clear_has_run_mode_ks_whether_have_second_chance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GlobalJudgeRule::clear_run_mode_ks_whether_have_second_chance() {
  run_mode_ks_whether_have_second_chance_ = false;
  clear_has_run_mode_ks_whether_have_second_chance();
}
inline bool GlobalJudgeRule::run_mode_ks_whether_have_second_chance() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.run_mode_ks_whether_have_second_chance)
  return run_mode_ks_whether_have_second_chance_;
}
inline void GlobalJudgeRule::set_run_mode_ks_whether_have_second_chance(bool value) {
  set_has_run_mode_ks_whether_have_second_chance();
  run_mode_ks_whether_have_second_chance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.run_mode_ks_whether_have_second_chance)
}

// optional string round_start_voice = 3;
inline bool GlobalJudgeRule::has_round_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GlobalJudgeRule::set_has_round_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GlobalJudgeRule::clear_has_round_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GlobalJudgeRule::clear_round_start_voice() {
  round_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_round_start_voice();
}
inline const ::std::string& GlobalJudgeRule::round_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.round_start_voice)
  return round_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_round_start_voice(const ::std::string& value) {
  set_has_round_start_voice();
  round_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.round_start_voice)
}
inline void GlobalJudgeRule::set_round_start_voice(const char* value) {
  set_has_round_start_voice();
  round_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.round_start_voice)
}
inline void GlobalJudgeRule::set_round_start_voice(const char* value, size_t size) {
  set_has_round_start_voice();
  round_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.round_start_voice)
}
inline ::std::string* GlobalJudgeRule::mutable_round_start_voice() {
  set_has_round_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.round_start_voice)
  return round_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalJudgeRule::release_round_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.round_start_voice)
  clear_has_round_start_voice();
  return round_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_allocated_round_start_voice(::std::string* round_start_voice) {
  if (round_start_voice != NULL) {
    set_has_round_start_voice();
  } else {
    clear_has_round_start_voice();
  }
  round_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), round_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.round_start_voice)
}

// optional string item_finish_pass_voice = 4;
inline bool GlobalJudgeRule::has_item_finish_pass_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GlobalJudgeRule::set_has_item_finish_pass_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GlobalJudgeRule::clear_has_item_finish_pass_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GlobalJudgeRule::clear_item_finish_pass_voice() {
  item_finish_pass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_finish_pass_voice();
}
inline const ::std::string& GlobalJudgeRule::item_finish_pass_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
  return item_finish_pass_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_item_finish_pass_voice(const ::std::string& value) {
  set_has_item_finish_pass_voice();
  item_finish_pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
}
inline void GlobalJudgeRule::set_item_finish_pass_voice(const char* value) {
  set_has_item_finish_pass_voice();
  item_finish_pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
}
inline void GlobalJudgeRule::set_item_finish_pass_voice(const char* value, size_t size) {
  set_has_item_finish_pass_voice();
  item_finish_pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
}
inline ::std::string* GlobalJudgeRule::mutable_item_finish_pass_voice() {
  set_has_item_finish_pass_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
  return item_finish_pass_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalJudgeRule::release_item_finish_pass_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
  clear_has_item_finish_pass_voice();
  return item_finish_pass_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_allocated_item_finish_pass_voice(::std::string* item_finish_pass_voice) {
  if (item_finish_pass_voice != NULL) {
    set_has_item_finish_pass_voice();
  } else {
    clear_has_item_finish_pass_voice();
  }
  item_finish_pass_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_finish_pass_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
}

// optional string item_finish_unpass_voice = 5;
inline bool GlobalJudgeRule::has_item_finish_unpass_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GlobalJudgeRule::set_has_item_finish_unpass_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GlobalJudgeRule::clear_has_item_finish_unpass_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GlobalJudgeRule::clear_item_finish_unpass_voice() {
  item_finish_unpass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_finish_unpass_voice();
}
inline const ::std::string& GlobalJudgeRule::item_finish_unpass_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
  return item_finish_unpass_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_item_finish_unpass_voice(const ::std::string& value) {
  set_has_item_finish_unpass_voice();
  item_finish_unpass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
}
inline void GlobalJudgeRule::set_item_finish_unpass_voice(const char* value) {
  set_has_item_finish_unpass_voice();
  item_finish_unpass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
}
inline void GlobalJudgeRule::set_item_finish_unpass_voice(const char* value, size_t size) {
  set_has_item_finish_unpass_voice();
  item_finish_unpass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
}
inline ::std::string* GlobalJudgeRule::mutable_item_finish_unpass_voice() {
  set_has_item_finish_unpass_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
  return item_finish_unpass_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalJudgeRule::release_item_finish_unpass_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
  clear_has_item_finish_unpass_voice();
  return item_finish_unpass_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_allocated_item_finish_unpass_voice(::std::string* item_finish_unpass_voice) {
  if (item_finish_unpass_voice != NULL) {
    set_has_item_finish_unpass_voice();
  } else {
    clear_has_item_finish_unpass_voice();
  }
  item_finish_unpass_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_finish_unpass_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
}

// optional string round_finish_pass_voice = 6;
inline bool GlobalJudgeRule::has_round_finish_pass_voice() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GlobalJudgeRule::set_has_round_finish_pass_voice() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GlobalJudgeRule::clear_has_round_finish_pass_voice() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GlobalJudgeRule::clear_round_finish_pass_voice() {
  round_finish_pass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_round_finish_pass_voice();
}
inline const ::std::string& GlobalJudgeRule::round_finish_pass_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
  return round_finish_pass_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_round_finish_pass_voice(const ::std::string& value) {
  set_has_round_finish_pass_voice();
  round_finish_pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
}
inline void GlobalJudgeRule::set_round_finish_pass_voice(const char* value) {
  set_has_round_finish_pass_voice();
  round_finish_pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
}
inline void GlobalJudgeRule::set_round_finish_pass_voice(const char* value, size_t size) {
  set_has_round_finish_pass_voice();
  round_finish_pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
}
inline ::std::string* GlobalJudgeRule::mutable_round_finish_pass_voice() {
  set_has_round_finish_pass_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
  return round_finish_pass_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalJudgeRule::release_round_finish_pass_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
  clear_has_round_finish_pass_voice();
  return round_finish_pass_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_allocated_round_finish_pass_voice(::std::string* round_finish_pass_voice) {
  if (round_finish_pass_voice != NULL) {
    set_has_round_finish_pass_voice();
  } else {
    clear_has_round_finish_pass_voice();
  }
  round_finish_pass_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), round_finish_pass_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
}

// optional string round_finish_unpass_voice = 7;
inline bool GlobalJudgeRule::has_round_finish_unpass_voice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GlobalJudgeRule::set_has_round_finish_unpass_voice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GlobalJudgeRule::clear_has_round_finish_unpass_voice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GlobalJudgeRule::clear_round_finish_unpass_voice() {
  round_finish_unpass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_round_finish_unpass_voice();
}
inline const ::std::string& GlobalJudgeRule::round_finish_unpass_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
  return round_finish_unpass_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_round_finish_unpass_voice(const ::std::string& value) {
  set_has_round_finish_unpass_voice();
  round_finish_unpass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
}
inline void GlobalJudgeRule::set_round_finish_unpass_voice(const char* value) {
  set_has_round_finish_unpass_voice();
  round_finish_unpass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
}
inline void GlobalJudgeRule::set_round_finish_unpass_voice(const char* value, size_t size) {
  set_has_round_finish_unpass_voice();
  round_finish_unpass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
}
inline ::std::string* GlobalJudgeRule::mutable_round_finish_unpass_voice() {
  set_has_round_finish_unpass_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
  return round_finish_unpass_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalJudgeRule::release_round_finish_unpass_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
  clear_has_round_finish_unpass_voice();
  return round_finish_unpass_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_allocated_round_finish_unpass_voice(::std::string* round_finish_unpass_voice) {
  if (round_finish_unpass_voice != NULL) {
    set_has_round_finish_unpass_voice();
  } else {
    clear_has_round_finish_unpass_voice();
  }
  round_finish_unpass_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), round_finish_unpass_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
}

// optional string retake_round_start_voice = 8;
inline bool GlobalJudgeRule::has_retake_round_start_voice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GlobalJudgeRule::set_has_retake_round_start_voice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GlobalJudgeRule::clear_has_retake_round_start_voice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GlobalJudgeRule::clear_retake_round_start_voice() {
  retake_round_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retake_round_start_voice();
}
inline const ::std::string& GlobalJudgeRule::retake_round_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.retake_round_start_voice)
  return retake_round_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_retake_round_start_voice(const ::std::string& value) {
  set_has_retake_round_start_voice();
  retake_round_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.retake_round_start_voice)
}
inline void GlobalJudgeRule::set_retake_round_start_voice(const char* value) {
  set_has_retake_round_start_voice();
  retake_round_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.retake_round_start_voice)
}
inline void GlobalJudgeRule::set_retake_round_start_voice(const char* value, size_t size) {
  set_has_retake_round_start_voice();
  retake_round_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.retake_round_start_voice)
}
inline ::std::string* GlobalJudgeRule::mutable_retake_round_start_voice() {
  set_has_retake_round_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.retake_round_start_voice)
  return retake_round_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalJudgeRule::release_retake_round_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.retake_round_start_voice)
  clear_has_retake_round_start_voice();
  return retake_round_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_allocated_retake_round_start_voice(::std::string* retake_round_start_voice) {
  if (retake_round_start_voice != NULL) {
    set_has_retake_round_start_voice();
  } else {
    clear_has_retake_round_start_voice();
  }
  retake_round_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retake_round_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.retake_round_start_voice)
}

// optional .OPMessage.enum_judge_retake retake_type = 9;
inline bool GlobalJudgeRule::has_retake_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GlobalJudgeRule::set_has_retake_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GlobalJudgeRule::clear_has_retake_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GlobalJudgeRule::clear_retake_type() {
  retake_type_ = 0;
  clear_has_retake_type();
}
inline ::OPMessage::enum_judge_retake GlobalJudgeRule::retake_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.retake_type)
  return static_cast< ::OPMessage::enum_judge_retake >(retake_type_);
}
inline void GlobalJudgeRule::set_retake_type(::OPMessage::enum_judge_retake value) {
  assert(::OPMessage::enum_judge_retake_IsValid(value));
  set_has_retake_type();
  retake_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.retake_type)
}

// optional string retake_dk_enter_voice = 10;
inline bool GlobalJudgeRule::has_retake_dk_enter_voice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GlobalJudgeRule::set_has_retake_dk_enter_voice() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GlobalJudgeRule::clear_has_retake_dk_enter_voice() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GlobalJudgeRule::clear_retake_dk_enter_voice() {
  retake_dk_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retake_dk_enter_voice();
}
inline const ::std::string& GlobalJudgeRule::retake_dk_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
  return retake_dk_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_retake_dk_enter_voice(const ::std::string& value) {
  set_has_retake_dk_enter_voice();
  retake_dk_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
}
inline void GlobalJudgeRule::set_retake_dk_enter_voice(const char* value) {
  set_has_retake_dk_enter_voice();
  retake_dk_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
}
inline void GlobalJudgeRule::set_retake_dk_enter_voice(const char* value, size_t size) {
  set_has_retake_dk_enter_voice();
  retake_dk_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
}
inline ::std::string* GlobalJudgeRule::mutable_retake_dk_enter_voice() {
  set_has_retake_dk_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
  return retake_dk_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalJudgeRule::release_retake_dk_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
  clear_has_retake_dk_enter_voice();
  return retake_dk_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalJudgeRule::set_allocated_retake_dk_enter_voice(::std::string* retake_dk_enter_voice) {
  if (retake_dk_enter_voice != NULL) {
    set_has_retake_dk_enter_voice();
  } else {
    clear_has_retake_dk_enter_voice();
  }
  retake_dk_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retake_dk_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
}

// optional .OPMessage.BasicSafety basic_safety = 11;
inline bool GlobalJudgeRule::has_basic_safety() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GlobalJudgeRule::set_has_basic_safety() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GlobalJudgeRule::clear_has_basic_safety() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GlobalJudgeRule::clear_basic_safety() {
  if (basic_safety_ != NULL) basic_safety_->::OPMessage::BasicSafety::Clear();
  clear_has_basic_safety();
}
inline const ::OPMessage::BasicSafety& GlobalJudgeRule::basic_safety() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.basic_safety)
  return basic_safety_ != NULL ? *basic_safety_ : *default_instance_->basic_safety_;
}
inline ::OPMessage::BasicSafety* GlobalJudgeRule::mutable_basic_safety() {
  set_has_basic_safety();
  if (basic_safety_ == NULL) {
    basic_safety_ = new ::OPMessage::BasicSafety;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.basic_safety)
  return basic_safety_;
}
inline ::OPMessage::BasicSafety* GlobalJudgeRule::release_basic_safety() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.basic_safety)
  clear_has_basic_safety();
  ::OPMessage::BasicSafety* temp = basic_safety_;
  basic_safety_ = NULL;
  return temp;
}
inline void GlobalJudgeRule::set_allocated_basic_safety(::OPMessage::BasicSafety* basic_safety) {
  delete basic_safety_;
  basic_safety_ = basic_safety;
  if (basic_safety) {
    set_has_basic_safety();
  } else {
    clear_has_basic_safety();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.basic_safety)
}

// optional .OPMessage.BasicDoor basic_door = 12;
inline bool GlobalJudgeRule::has_basic_door() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GlobalJudgeRule::set_has_basic_door() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GlobalJudgeRule::clear_has_basic_door() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GlobalJudgeRule::clear_basic_door() {
  if (basic_door_ != NULL) basic_door_->::OPMessage::BasicDoor::Clear();
  clear_has_basic_door();
}
inline const ::OPMessage::BasicDoor& GlobalJudgeRule::basic_door() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.basic_door)
  return basic_door_ != NULL ? *basic_door_ : *default_instance_->basic_door_;
}
inline ::OPMessage::BasicDoor* GlobalJudgeRule::mutable_basic_door() {
  set_has_basic_door();
  if (basic_door_ == NULL) {
    basic_door_ = new ::OPMessage::BasicDoor;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.basic_door)
  return basic_door_;
}
inline ::OPMessage::BasicDoor* GlobalJudgeRule::release_basic_door() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.basic_door)
  clear_has_basic_door();
  ::OPMessage::BasicDoor* temp = basic_door_;
  basic_door_ = NULL;
  return temp;
}
inline void GlobalJudgeRule::set_allocated_basic_door(::OPMessage::BasicDoor* basic_door) {
  delete basic_door_;
  basic_door_ = basic_door;
  if (basic_door) {
    set_has_basic_door();
  } else {
    clear_has_basic_door();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.basic_door)
}

// optional .OPMessage.BasicFlameout basic_flameout = 13;
inline bool GlobalJudgeRule::has_basic_flameout() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GlobalJudgeRule::set_has_basic_flameout() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GlobalJudgeRule::clear_has_basic_flameout() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GlobalJudgeRule::clear_basic_flameout() {
  if (basic_flameout_ != NULL) basic_flameout_->::OPMessage::BasicFlameout::Clear();
  clear_has_basic_flameout();
}
inline const ::OPMessage::BasicFlameout& GlobalJudgeRule::basic_flameout() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.basic_flameout)
  return basic_flameout_ != NULL ? *basic_flameout_ : *default_instance_->basic_flameout_;
}
inline ::OPMessage::BasicFlameout* GlobalJudgeRule::mutable_basic_flameout() {
  set_has_basic_flameout();
  if (basic_flameout_ == NULL) {
    basic_flameout_ = new ::OPMessage::BasicFlameout;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.basic_flameout)
  return basic_flameout_;
}
inline ::OPMessage::BasicFlameout* GlobalJudgeRule::release_basic_flameout() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.basic_flameout)
  clear_has_basic_flameout();
  ::OPMessage::BasicFlameout* temp = basic_flameout_;
  basic_flameout_ = NULL;
  return temp;
}
inline void GlobalJudgeRule::set_allocated_basic_flameout(::OPMessage::BasicFlameout* basic_flameout) {
  delete basic_flameout_;
  basic_flameout_ = basic_flameout;
  if (basic_flameout) {
    set_has_basic_flameout();
  } else {
    clear_has_basic_flameout();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.basic_flameout)
}

// optional double max_speed = 14 [default = 50];
inline bool GlobalJudgeRule::has_max_speed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GlobalJudgeRule::set_has_max_speed() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GlobalJudgeRule::clear_has_max_speed() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GlobalJudgeRule::clear_max_speed() {
  max_speed_ = 50;
  clear_has_max_speed();
}
inline double GlobalJudgeRule::max_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.max_speed)
  return max_speed_;
}
inline void GlobalJudgeRule::set_max_speed(double value) {
  set_has_max_speed();
  max_speed_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.max_speed)
}

// optional .OPMessage.BasicFullLine basic_full_line = 15;
inline bool GlobalJudgeRule::has_basic_full_line() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GlobalJudgeRule::set_has_basic_full_line() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GlobalJudgeRule::clear_has_basic_full_line() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GlobalJudgeRule::clear_basic_full_line() {
  if (basic_full_line_ != NULL) basic_full_line_->::OPMessage::BasicFullLine::Clear();
  clear_has_basic_full_line();
}
inline const ::OPMessage::BasicFullLine& GlobalJudgeRule::basic_full_line() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.basic_full_line)
  return basic_full_line_ != NULL ? *basic_full_line_ : *default_instance_->basic_full_line_;
}
inline ::OPMessage::BasicFullLine* GlobalJudgeRule::mutable_basic_full_line() {
  set_has_basic_full_line();
  if (basic_full_line_ == NULL) {
    basic_full_line_ = new ::OPMessage::BasicFullLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.basic_full_line)
  return basic_full_line_;
}
inline ::OPMessage::BasicFullLine* GlobalJudgeRule::release_basic_full_line() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.basic_full_line)
  clear_has_basic_full_line();
  ::OPMessage::BasicFullLine* temp = basic_full_line_;
  basic_full_line_ = NULL;
  return temp;
}
inline void GlobalJudgeRule::set_allocated_basic_full_line(::OPMessage::BasicFullLine* basic_full_line) {
  delete basic_full_line_;
  basic_full_line_ = basic_full_line;
  if (basic_full_line) {
    set_has_basic_full_line();
  } else {
    clear_has_basic_full_line();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.basic_full_line)
}

// optional .OPMessage.BasicDottedLine basic_dotted_line = 16;
inline bool GlobalJudgeRule::has_basic_dotted_line() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GlobalJudgeRule::set_has_basic_dotted_line() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GlobalJudgeRule::clear_has_basic_dotted_line() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GlobalJudgeRule::clear_basic_dotted_line() {
  if (basic_dotted_line_ != NULL) basic_dotted_line_->::OPMessage::BasicDottedLine::Clear();
  clear_has_basic_dotted_line();
}
inline const ::OPMessage::BasicDottedLine& GlobalJudgeRule::basic_dotted_line() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.basic_dotted_line)
  return basic_dotted_line_ != NULL ? *basic_dotted_line_ : *default_instance_->basic_dotted_line_;
}
inline ::OPMessage::BasicDottedLine* GlobalJudgeRule::mutable_basic_dotted_line() {
  set_has_basic_dotted_line();
  if (basic_dotted_line_ == NULL) {
    basic_dotted_line_ = new ::OPMessage::BasicDottedLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.basic_dotted_line)
  return basic_dotted_line_;
}
inline ::OPMessage::BasicDottedLine* GlobalJudgeRule::release_basic_dotted_line() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.basic_dotted_line)
  clear_has_basic_dotted_line();
  ::OPMessage::BasicDottedLine* temp = basic_dotted_line_;
  basic_dotted_line_ = NULL;
  return temp;
}
inline void GlobalJudgeRule::set_allocated_basic_dotted_line(::OPMessage::BasicDottedLine* basic_dotted_line) {
  delete basic_dotted_line_;
  basic_dotted_line_ = basic_dotted_line;
  if (basic_dotted_line) {
    set_has_basic_dotted_line();
  } else {
    clear_has_basic_dotted_line();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.basic_dotted_line)
}

// optional .OPMessage.BasicLeftTurnLamp longtime_leftTurnLamp = 17;
inline bool GlobalJudgeRule::has_longtime_leftturnlamp() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GlobalJudgeRule::set_has_longtime_leftturnlamp() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GlobalJudgeRule::clear_has_longtime_leftturnlamp() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GlobalJudgeRule::clear_longtime_leftturnlamp() {
  if (longtime_leftturnlamp_ != NULL) longtime_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_longtime_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& GlobalJudgeRule::longtime_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.longtime_leftTurnLamp)
  return longtime_leftturnlamp_ != NULL ? *longtime_leftturnlamp_ : *default_instance_->longtime_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* GlobalJudgeRule::mutable_longtime_leftturnlamp() {
  set_has_longtime_leftturnlamp();
  if (longtime_leftturnlamp_ == NULL) {
    longtime_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.longtime_leftTurnLamp)
  return longtime_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* GlobalJudgeRule::release_longtime_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.longtime_leftTurnLamp)
  clear_has_longtime_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = longtime_leftturnlamp_;
  longtime_leftturnlamp_ = NULL;
  return temp;
}
inline void GlobalJudgeRule::set_allocated_longtime_leftturnlamp(::OPMessage::BasicLeftTurnLamp* longtime_leftturnlamp) {
  delete longtime_leftturnlamp_;
  longtime_leftturnlamp_ = longtime_leftturnlamp;
  if (longtime_leftturnlamp) {
    set_has_longtime_leftturnlamp();
  } else {
    clear_has_longtime_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.longtime_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp longtime_rightTurnLamp = 18;
inline bool GlobalJudgeRule::has_longtime_rightturnlamp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GlobalJudgeRule::set_has_longtime_rightturnlamp() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GlobalJudgeRule::clear_has_longtime_rightturnlamp() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GlobalJudgeRule::clear_longtime_rightturnlamp() {
  if (longtime_rightturnlamp_ != NULL) longtime_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_longtime_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& GlobalJudgeRule::longtime_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.longtime_rightTurnLamp)
  return longtime_rightturnlamp_ != NULL ? *longtime_rightturnlamp_ : *default_instance_->longtime_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* GlobalJudgeRule::mutable_longtime_rightturnlamp() {
  set_has_longtime_rightturnlamp();
  if (longtime_rightturnlamp_ == NULL) {
    longtime_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.longtime_rightTurnLamp)
  return longtime_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* GlobalJudgeRule::release_longtime_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.longtime_rightTurnLamp)
  clear_has_longtime_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = longtime_rightturnlamp_;
  longtime_rightturnlamp_ = NULL;
  return temp;
}
inline void GlobalJudgeRule::set_allocated_longtime_rightturnlamp(::OPMessage::BasicRightTurnLamp* longtime_rightturnlamp) {
  delete longtime_rightturnlamp_;
  longtime_rightturnlamp_ = longtime_rightturnlamp;
  if (longtime_rightturnlamp) {
    set_has_longtime_rightturnlamp();
  } else {
    clear_has_longtime_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.longtime_rightTurnLamp)
}

// optional .OPMessage.BasicClutch longtime_clutch = 19;
inline bool GlobalJudgeRule::has_longtime_clutch() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GlobalJudgeRule::set_has_longtime_clutch() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GlobalJudgeRule::clear_has_longtime_clutch() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GlobalJudgeRule::clear_longtime_clutch() {
  if (longtime_clutch_ != NULL) longtime_clutch_->::OPMessage::BasicClutch::Clear();
  clear_has_longtime_clutch();
}
inline const ::OPMessage::BasicClutch& GlobalJudgeRule::longtime_clutch() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.longtime_clutch)
  return longtime_clutch_ != NULL ? *longtime_clutch_ : *default_instance_->longtime_clutch_;
}
inline ::OPMessage::BasicClutch* GlobalJudgeRule::mutable_longtime_clutch() {
  set_has_longtime_clutch();
  if (longtime_clutch_ == NULL) {
    longtime_clutch_ = new ::OPMessage::BasicClutch;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.longtime_clutch)
  return longtime_clutch_;
}
inline ::OPMessage::BasicClutch* GlobalJudgeRule::release_longtime_clutch() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.longtime_clutch)
  clear_has_longtime_clutch();
  ::OPMessage::BasicClutch* temp = longtime_clutch_;
  longtime_clutch_ = NULL;
  return temp;
}
inline void GlobalJudgeRule::set_allocated_longtime_clutch(::OPMessage::BasicClutch* longtime_clutch) {
  delete longtime_clutch_;
  longtime_clutch_ = longtime_clutch;
  if (longtime_clutch) {
    set_has_longtime_clutch();
  } else {
    clear_has_longtime_clutch();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.longtime_clutch)
}

// optional double min_distance = 20 [default = 2.8];
inline bool GlobalJudgeRule::has_min_distance() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void GlobalJudgeRule::set_has_min_distance() {
  _has_bits_[0] |= 0x00080000u;
}
inline void GlobalJudgeRule::clear_has_min_distance() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void GlobalJudgeRule::clear_min_distance() {
  min_distance_ = 2.8;
  clear_has_min_distance();
}
inline double GlobalJudgeRule::min_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.min_distance)
  return min_distance_;
}
inline void GlobalJudgeRule::set_min_distance(double value) {
  set_has_min_distance();
  min_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.min_distance)
}

// -------------------------------------------------------------------

// ItemJudgeRuleZero

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
inline bool ItemJudgeRuleZero::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleZero::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleZero::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleZero::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
inline const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleZero::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZero.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleZero::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZero.basic_event_check)
  return basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleZero::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZero.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
inline void ItemJudgeRuleZero::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZero.basic_event_check)
}

// optional string item_enter_voice = 2;
inline bool ItemJudgeRuleZero::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleZero::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleZero::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleZero::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleZero::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZero.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZero::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZero.item_enter_voice)
}
inline void ItemJudgeRuleZero::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZero.item_enter_voice)
}
inline void ItemJudgeRuleZero::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZero.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleZero::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZero.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZero::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZero.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZero::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZero.item_enter_voice)
}

// optional string item_leave_voice = 3;
inline bool ItemJudgeRuleZero::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleZero::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleZero::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleZero::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleZero::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZero.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZero::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZero.item_leave_voice)
}
inline void ItemJudgeRuleZero::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZero.item_leave_voice)
}
inline void ItemJudgeRuleZero::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZero.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleZero::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZero.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZero::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZero.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZero::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZero.item_leave_voice)
}

// optional string item_start_voice = 4;
inline bool ItemJudgeRuleZero::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleZero::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleZero::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleZero::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleZero::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZero.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZero::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZero.item_start_voice)
}
inline void ItemJudgeRuleZero::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZero.item_start_voice)
}
inline void ItemJudgeRuleZero::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZero.item_start_voice)
}
inline ::std::string* ItemJudgeRuleZero::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZero.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZero::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZero.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZero::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZero.item_start_voice)
}

// optional string item_end_voice = 5;
inline bool ItemJudgeRuleZero::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleZero::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleZero::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleZero::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleZero::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZero.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZero::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZero.item_end_voice)
}
inline void ItemJudgeRuleZero::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZero.item_end_voice)
}
inline void ItemJudgeRuleZero::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZero.item_end_voice)
}
inline ::std::string* ItemJudgeRuleZero::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZero.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZero::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZero.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZero::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZero.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
inline bool ItemJudgeRuleZero::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleZero::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleZero::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleZero::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
inline ::OPMessage::enum_judge_points ItemJudgeRuleZero::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZero.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
inline void ItemJudgeRuleZero::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZero.judge_points_type)
}

// -------------------------------------------------------------------

// ItemJudgeRuleDk

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
inline bool ItemJudgeRuleDk::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleDk::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleDk::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleDk::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
inline const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleDk::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleDk::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDk.basic_event_check)
  return basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleDk::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDk.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDk::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDk.basic_event_check)
}

// optional string item_enter_voice = 2;
inline bool ItemJudgeRuleDk::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleDk::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleDk::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleDk::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleDk::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDk::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDk.item_enter_voice)
}
inline void ItemJudgeRuleDk::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDk.item_enter_voice)
}
inline void ItemJudgeRuleDk::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDk.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleDk::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDk.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDk::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDk.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDk::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDk.item_enter_voice)
}

// optional string item_leave_voice = 3;
inline bool ItemJudgeRuleDk::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleDk::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleDk::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleDk::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleDk::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDk::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDk.item_leave_voice)
}
inline void ItemJudgeRuleDk::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDk.item_leave_voice)
}
inline void ItemJudgeRuleDk::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDk.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleDk::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDk.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDk::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDk.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDk::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDk.item_leave_voice)
}

// optional string item_start_voice = 4;
inline bool ItemJudgeRuleDk::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleDk::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleDk::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleDk::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleDk::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDk::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDk.item_start_voice)
}
inline void ItemJudgeRuleDk::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDk.item_start_voice)
}
inline void ItemJudgeRuleDk::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDk.item_start_voice)
}
inline ::std::string* ItemJudgeRuleDk::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDk.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDk::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDk.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDk::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDk.item_start_voice)
}

// optional string item_end_voice = 5;
inline bool ItemJudgeRuleDk::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleDk::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleDk::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleDk::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleDk::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDk::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDk.item_end_voice)
}
inline void ItemJudgeRuleDk::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDk.item_end_voice)
}
inline void ItemJudgeRuleDk::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDk.item_end_voice)
}
inline ::std::string* ItemJudgeRuleDk::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDk.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDk::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDk.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDk::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDk.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
inline bool ItemJudgeRuleDk::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleDk::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleDk::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleDk::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
inline ::OPMessage::enum_judge_points ItemJudgeRuleDk::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
inline void ItemJudgeRuleDk::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDk.judge_points_type)
}

// optional .OPMessage.CheckStartTypeStart check_start_type = 7;
inline bool ItemJudgeRuleDk::has_check_start_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleDk::set_has_check_start_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleDk::clear_has_check_start_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleDk::clear_check_start_type() {
  check_start_type_ = 0;
  clear_has_check_start_type();
}
inline ::OPMessage::CheckStartTypeStart ItemJudgeRuleDk::check_start_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.check_start_type)
  return static_cast< ::OPMessage::CheckStartTypeStart >(check_start_type_);
}
inline void ItemJudgeRuleDk::set_check_start_type(::OPMessage::CheckStartTypeStart value) {
  assert(::OPMessage::CheckStartTypeStart_IsValid(value));
  set_has_check_start_type();
  check_start_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDk.check_start_type)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 8;
inline bool ItemJudgeRuleDk::has_event_check_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleDk::set_has_event_check_leftturnlamp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeRuleDk::clear_has_event_check_leftturnlamp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeRuleDk::clear_event_check_leftturnlamp() {
  if (event_check_leftturnlamp_ != NULL) event_check_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDk::event_check_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.event_check_leftTurnLamp)
  return event_check_leftturnlamp_ != NULL ? *event_check_leftturnlamp_ : *default_instance_->event_check_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDk::mutable_event_check_leftturnlamp() {
  set_has_event_check_leftturnlamp();
  if (event_check_leftturnlamp_ == NULL) {
    event_check_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDk.event_check_leftTurnLamp)
  return event_check_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDk::release_event_check_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDk.event_check_leftTurnLamp)
  clear_has_event_check_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_leftturnlamp_;
  event_check_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDk::set_allocated_event_check_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_leftturnlamp) {
  delete event_check_leftturnlamp_;
  event_check_leftturnlamp_ = event_check_leftturnlamp;
  if (event_check_leftturnlamp) {
    set_has_event_check_leftturnlamp();
  } else {
    clear_has_event_check_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDk.event_check_leftTurnLamp)
}

// -------------------------------------------------------------------

// ItemJudgeRuleShangCheZhunBei

// optional string item_start_voice = 1;
inline bool ItemJudgeRuleShangCheZhunBei::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleShangCheZhunBei::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleShangCheZhunBei::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleShangCheZhunBei::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleShangCheZhunBei::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleShangCheZhunBei::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
}
inline void ItemJudgeRuleShangCheZhunBei::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
}
inline void ItemJudgeRuleShangCheZhunBei::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
}
inline ::std::string* ItemJudgeRuleShangCheZhunBei::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleShangCheZhunBei::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleShangCheZhunBei::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
}

// optional string item_end_voice = 2;
inline bool ItemJudgeRuleShangCheZhunBei::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleShangCheZhunBei::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleShangCheZhunBei::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleShangCheZhunBei::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleShangCheZhunBei::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleShangCheZhunBei::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
}
inline void ItemJudgeRuleShangCheZhunBei::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
}
inline void ItemJudgeRuleShangCheZhunBei::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
}
inline ::std::string* ItemJudgeRuleShangCheZhunBei::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleShangCheZhunBei::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleShangCheZhunBei::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
}

// optional .OPMessage.BasicRoundCar basic_roundcar = 3;
inline bool ItemJudgeRuleShangCheZhunBei::has_basic_roundcar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleShangCheZhunBei::set_has_basic_roundcar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleShangCheZhunBei::clear_has_basic_roundcar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleShangCheZhunBei::clear_basic_roundcar() {
  if (basic_roundcar_ != NULL) basic_roundcar_->::OPMessage::BasicRoundCar::Clear();
  clear_has_basic_roundcar();
}
inline const ::OPMessage::BasicRoundCar& ItemJudgeRuleShangCheZhunBei::basic_roundcar() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleShangCheZhunBei.basic_roundcar)
  return basic_roundcar_ != NULL ? *basic_roundcar_ : *default_instance_->basic_roundcar_;
}
inline ::OPMessage::BasicRoundCar* ItemJudgeRuleShangCheZhunBei::mutable_basic_roundcar() {
  set_has_basic_roundcar();
  if (basic_roundcar_ == NULL) {
    basic_roundcar_ = new ::OPMessage::BasicRoundCar;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleShangCheZhunBei.basic_roundcar)
  return basic_roundcar_;
}
inline ::OPMessage::BasicRoundCar* ItemJudgeRuleShangCheZhunBei::release_basic_roundcar() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleShangCheZhunBei.basic_roundcar)
  clear_has_basic_roundcar();
  ::OPMessage::BasicRoundCar* temp = basic_roundcar_;
  basic_roundcar_ = NULL;
  return temp;
}
inline void ItemJudgeRuleShangCheZhunBei::set_allocated_basic_roundcar(::OPMessage::BasicRoundCar* basic_roundcar) {
  delete basic_roundcar_;
  basic_roundcar_ = basic_roundcar;
  if (basic_roundcar) {
    set_has_basic_roundcar();
  } else {
    clear_has_basic_roundcar();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleShangCheZhunBei.basic_roundcar)
}

// -------------------------------------------------------------------

// BasicDengGuangMoNiItem

// optional .OPMessage.enum_judge_dengguangmoni_type type = 1;
inline bool BasicDengGuangMoNiItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BasicDengGuangMoNiItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BasicDengGuangMoNiItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BasicDengGuangMoNiItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::OPMessage::enum_judge_dengguangmoni_type BasicDengGuangMoNiItem::type() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.type)
  return static_cast< ::OPMessage::enum_judge_dengguangmoni_type >(type_);
}
inline void BasicDengGuangMoNiItem::set_type(::OPMessage::enum_judge_dengguangmoni_type value) {
  assert(::OPMessage::enum_judge_dengguangmoni_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.type)
}

// optional bool is_participant_judge = 2 [default = true];
inline bool BasicDengGuangMoNiItem::has_is_participant_judge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BasicDengGuangMoNiItem::set_has_is_participant_judge() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BasicDengGuangMoNiItem::clear_has_is_participant_judge() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BasicDengGuangMoNiItem::clear_is_participant_judge() {
  is_participant_judge_ = true;
  clear_has_is_participant_judge();
}
inline bool BasicDengGuangMoNiItem::is_participant_judge() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.is_participant_judge)
  return is_participant_judge_;
}
inline void BasicDengGuangMoNiItem::set_is_participant_judge(bool value) {
  set_has_is_participant_judge();
  is_participant_judge_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.is_participant_judge)
}

// optional bool is_must_type = 3 [default = true];
inline bool BasicDengGuangMoNiItem::has_is_must_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BasicDengGuangMoNiItem::set_has_is_must_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BasicDengGuangMoNiItem::clear_has_is_must_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BasicDengGuangMoNiItem::clear_is_must_type() {
  is_must_type_ = true;
  clear_has_is_must_type();
}
inline bool BasicDengGuangMoNiItem::is_must_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.is_must_type)
  return is_must_type_;
}
inline void BasicDengGuangMoNiItem::set_is_must_type(bool value) {
  set_has_is_must_type();
  is_must_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.is_must_type)
}

// optional string tip_voice = 4;
inline bool BasicDengGuangMoNiItem::has_tip_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BasicDengGuangMoNiItem::set_has_tip_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BasicDengGuangMoNiItem::clear_has_tip_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BasicDengGuangMoNiItem::clear_tip_voice() {
  tip_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tip_voice();
}
inline const ::std::string& BasicDengGuangMoNiItem::tip_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.tip_voice)
  return tip_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicDengGuangMoNiItem::set_tip_voice(const ::std::string& value) {
  set_has_tip_voice();
  tip_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.tip_voice)
}
inline void BasicDengGuangMoNiItem::set_tip_voice(const char* value) {
  set_has_tip_voice();
  tip_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicDengGuangMoNiItem.tip_voice)
}
inline void BasicDengGuangMoNiItem::set_tip_voice(const char* value, size_t size) {
  set_has_tip_voice();
  tip_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicDengGuangMoNiItem.tip_voice)
}
inline ::std::string* BasicDengGuangMoNiItem::mutable_tip_voice() {
  set_has_tip_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicDengGuangMoNiItem.tip_voice)
  return tip_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicDengGuangMoNiItem::release_tip_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicDengGuangMoNiItem.tip_voice)
  clear_has_tip_voice();
  return tip_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicDengGuangMoNiItem::set_allocated_tip_voice(::std::string* tip_voice) {
  if (tip_voice != NULL) {
    set_has_tip_voice();
  } else {
    clear_has_tip_voice();
  }
  tip_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tip_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicDengGuangMoNiItem.tip_voice)
}

// optional string pass_voice = 5;
inline bool BasicDengGuangMoNiItem::has_pass_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BasicDengGuangMoNiItem::set_has_pass_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BasicDengGuangMoNiItem::clear_has_pass_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BasicDengGuangMoNiItem::clear_pass_voice() {
  pass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pass_voice();
}
inline const ::std::string& BasicDengGuangMoNiItem::pass_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.pass_voice)
  return pass_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicDengGuangMoNiItem::set_pass_voice(const ::std::string& value) {
  set_has_pass_voice();
  pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.pass_voice)
}
inline void BasicDengGuangMoNiItem::set_pass_voice(const char* value) {
  set_has_pass_voice();
  pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicDengGuangMoNiItem.pass_voice)
}
inline void BasicDengGuangMoNiItem::set_pass_voice(const char* value, size_t size) {
  set_has_pass_voice();
  pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicDengGuangMoNiItem.pass_voice)
}
inline ::std::string* BasicDengGuangMoNiItem::mutable_pass_voice() {
  set_has_pass_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicDengGuangMoNiItem.pass_voice)
  return pass_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicDengGuangMoNiItem::release_pass_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicDengGuangMoNiItem.pass_voice)
  clear_has_pass_voice();
  return pass_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicDengGuangMoNiItem::set_allocated_pass_voice(::std::string* pass_voice) {
  if (pass_voice != NULL) {
    set_has_pass_voice();
  } else {
    clear_has_pass_voice();
  }
  pass_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicDengGuangMoNiItem.pass_voice)
}

// optional int32 deduction = 6;
inline bool BasicDengGuangMoNiItem::has_deduction() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BasicDengGuangMoNiItem::set_has_deduction() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BasicDengGuangMoNiItem::clear_has_deduction() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BasicDengGuangMoNiItem::clear_deduction() {
  deduction_ = 0;
  clear_has_deduction();
}
inline ::google::protobuf::int32 BasicDengGuangMoNiItem::deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.deduction)
  return deduction_;
}
inline void BasicDengGuangMoNiItem::set_deduction(::google::protobuf::int32 value) {
  set_has_deduction();
  deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.deduction)
}

// optional int32 time_out = 7;
inline bool BasicDengGuangMoNiItem::has_time_out() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BasicDengGuangMoNiItem::set_has_time_out() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BasicDengGuangMoNiItem::clear_has_time_out() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BasicDengGuangMoNiItem::clear_time_out() {
  time_out_ = 0;
  clear_has_time_out();
}
inline ::google::protobuf::int32 BasicDengGuangMoNiItem::time_out() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.time_out)
  return time_out_;
}
inline void BasicDengGuangMoNiItem::set_time_out(::google::protobuf::int32 value) {
  set_has_time_out();
  time_out_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.time_out)
}

// optional string deduction_voice = 8;
inline bool BasicDengGuangMoNiItem::has_deduction_voice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BasicDengGuangMoNiItem::set_has_deduction_voice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BasicDengGuangMoNiItem::clear_has_deduction_voice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BasicDengGuangMoNiItem::clear_deduction_voice() {
  deduction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deduction_voice();
}
inline const ::std::string& BasicDengGuangMoNiItem::deduction_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
  return deduction_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicDengGuangMoNiItem::set_deduction_voice(const ::std::string& value) {
  set_has_deduction_voice();
  deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
}
inline void BasicDengGuangMoNiItem::set_deduction_voice(const char* value) {
  set_has_deduction_voice();
  deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
}
inline void BasicDengGuangMoNiItem::set_deduction_voice(const char* value, size_t size) {
  set_has_deduction_voice();
  deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
}
inline ::std::string* BasicDengGuangMoNiItem::mutable_deduction_voice() {
  set_has_deduction_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
  return deduction_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasicDengGuangMoNiItem::release_deduction_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
  clear_has_deduction_voice();
  return deduction_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasicDengGuangMoNiItem::set_allocated_deduction_voice(::std::string* deduction_voice) {
  if (deduction_voice != NULL) {
    set_has_deduction_voice();
  } else {
    clear_has_deduction_voice();
  }
  deduction_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deduction_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
}

// -------------------------------------------------------------------

// ItemJudgeRuleDengGuangMoNi

// optional string item_start_voice = 1;
inline bool ItemJudgeRuleDengGuangMoNi::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleDengGuangMoNi::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDengGuangMoNi::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
}
inline void ItemJudgeRuleDengGuangMoNi::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
}
inline void ItemJudgeRuleDengGuangMoNi::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
}
inline ::std::string* ItemJudgeRuleDengGuangMoNi::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDengGuangMoNi::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDengGuangMoNi::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
}

// optional string item_end_voice = 2;
inline bool ItemJudgeRuleDengGuangMoNi::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleDengGuangMoNi::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDengGuangMoNi::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
}
inline void ItemJudgeRuleDengGuangMoNi::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
}
inline void ItemJudgeRuleDengGuangMoNi::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
}
inline ::std::string* ItemJudgeRuleDengGuangMoNi::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDengGuangMoNi::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDengGuangMoNi::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
}

// optional int32 must_item_count = 3;
inline bool ItemJudgeRuleDengGuangMoNi::has_must_item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_must_item_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_must_item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_must_item_count() {
  must_item_count_ = 0;
  clear_has_must_item_count();
}
inline ::google::protobuf::int32 ItemJudgeRuleDengGuangMoNi::must_item_count() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.must_item_count)
  return must_item_count_;
}
inline void ItemJudgeRuleDengGuangMoNi::set_must_item_count(::google::protobuf::int32 value) {
  set_has_must_item_count();
  must_item_count_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDengGuangMoNi.must_item_count)
}

// optional int32 not_must_item_count = 4;
inline bool ItemJudgeRuleDengGuangMoNi::has_not_must_item_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_not_must_item_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_not_must_item_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_not_must_item_count() {
  not_must_item_count_ = 0;
  clear_has_not_must_item_count();
}
inline ::google::protobuf::int32 ItemJudgeRuleDengGuangMoNi::not_must_item_count() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.not_must_item_count)
  return not_must_item_count_;
}
inline void ItemJudgeRuleDengGuangMoNi::set_not_must_item_count(::google::protobuf::int32 value) {
  set_has_not_must_item_count();
  not_must_item_count_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDengGuangMoNi.not_must_item_count)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting = 5;
inline bool ItemJudgeRuleDengGuangMoNi::has_basic_night_no_lamp_poor_lighting() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_no_lamp_poor_lighting() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_no_lamp_poor_lighting() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_basic_night_no_lamp_poor_lighting() {
  if (basic_night_no_lamp_poor_lighting_ != NULL) basic_night_no_lamp_poor_lighting_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_no_lamp_poor_lighting();
}
inline const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_no_lamp_poor_lighting() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting)
  return basic_night_no_lamp_poor_lighting_ != NULL ? *basic_night_no_lamp_poor_lighting_ : *default_instance_->basic_night_no_lamp_poor_lighting_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_no_lamp_poor_lighting() {
  set_has_basic_night_no_lamp_poor_lighting();
  if (basic_night_no_lamp_poor_lighting_ == NULL) {
    basic_night_no_lamp_poor_lighting_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting)
  return basic_night_no_lamp_poor_lighting_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_no_lamp_poor_lighting() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting)
  clear_has_basic_night_no_lamp_poor_lighting();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_no_lamp_poor_lighting_;
  basic_night_no_lamp_poor_lighting_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_no_lamp_poor_lighting(::OPMessage::BasicDengGuangMoNiItem* basic_night_no_lamp_poor_lighting) {
  delete basic_night_no_lamp_poor_lighting_;
  basic_night_no_lamp_poor_lighting_ = basic_night_no_lamp_poor_lighting;
  if (basic_night_no_lamp_poor_lighting) {
    set_has_basic_night_no_lamp_poor_lighting();
  } else {
    clear_has_basic_night_no_lamp_poor_lighting();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_city = 6;
inline bool ItemJudgeRuleDengGuangMoNi::has_basic_night_no_lamp_poor_lighting_in_city() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_no_lamp_poor_lighting_in_city() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_no_lamp_poor_lighting_in_city() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_basic_night_no_lamp_poor_lighting_in_city() {
  if (basic_night_no_lamp_poor_lighting_in_city_ != NULL) basic_night_no_lamp_poor_lighting_in_city_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_no_lamp_poor_lighting_in_city();
}
inline const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_no_lamp_poor_lighting_in_city() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_city)
  return basic_night_no_lamp_poor_lighting_in_city_ != NULL ? *basic_night_no_lamp_poor_lighting_in_city_ : *default_instance_->basic_night_no_lamp_poor_lighting_in_city_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_no_lamp_poor_lighting_in_city() {
  set_has_basic_night_no_lamp_poor_lighting_in_city();
  if (basic_night_no_lamp_poor_lighting_in_city_ == NULL) {
    basic_night_no_lamp_poor_lighting_in_city_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_city)
  return basic_night_no_lamp_poor_lighting_in_city_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_no_lamp_poor_lighting_in_city() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_city)
  clear_has_basic_night_no_lamp_poor_lighting_in_city();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_no_lamp_poor_lighting_in_city_;
  basic_night_no_lamp_poor_lighting_in_city_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_no_lamp_poor_lighting_in_city(::OPMessage::BasicDengGuangMoNiItem* basic_night_no_lamp_poor_lighting_in_city) {
  delete basic_night_no_lamp_poor_lighting_in_city_;
  basic_night_no_lamp_poor_lighting_in_city_ = basic_night_no_lamp_poor_lighting_in_city;
  if (basic_night_no_lamp_poor_lighting_in_city) {
    set_has_basic_night_no_lamp_poor_lighting_in_city();
  } else {
    clear_has_basic_night_no_lamp_poor_lighting_in_city();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_city)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_close_with_car_same_direction = 7;
inline bool ItemJudgeRuleDengGuangMoNi::has_basic_night_close_with_car_same_direction() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_close_with_car_same_direction() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_close_with_car_same_direction() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_basic_night_close_with_car_same_direction() {
  if (basic_night_close_with_car_same_direction_ != NULL) basic_night_close_with_car_same_direction_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_close_with_car_same_direction();
}
inline const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_close_with_car_same_direction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_close_with_car_same_direction)
  return basic_night_close_with_car_same_direction_ != NULL ? *basic_night_close_with_car_same_direction_ : *default_instance_->basic_night_close_with_car_same_direction_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_close_with_car_same_direction() {
  set_has_basic_night_close_with_car_same_direction();
  if (basic_night_close_with_car_same_direction_ == NULL) {
    basic_night_close_with_car_same_direction_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_close_with_car_same_direction)
  return basic_night_close_with_car_same_direction_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_close_with_car_same_direction() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_close_with_car_same_direction)
  clear_has_basic_night_close_with_car_same_direction();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_close_with_car_same_direction_;
  basic_night_close_with_car_same_direction_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_close_with_car_same_direction(::OPMessage::BasicDengGuangMoNiItem* basic_night_close_with_car_same_direction) {
  delete basic_night_close_with_car_same_direction_;
  basic_night_close_with_car_same_direction_ = basic_night_close_with_car_same_direction;
  if (basic_night_close_with_car_same_direction) {
    set_has_basic_night_close_with_car_same_direction();
  } else {
    clear_has_basic_night_close_with_car_same_direction();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_close_with_car_same_direction)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_suburban = 8;
inline bool ItemJudgeRuleDengGuangMoNi::has_basic_night_no_lamp_poor_lighting_in_suburban() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_no_lamp_poor_lighting_in_suburban() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_no_lamp_poor_lighting_in_suburban() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_basic_night_no_lamp_poor_lighting_in_suburban() {
  if (basic_night_no_lamp_poor_lighting_in_suburban_ != NULL) basic_night_no_lamp_poor_lighting_in_suburban_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_no_lamp_poor_lighting_in_suburban();
}
inline const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_no_lamp_poor_lighting_in_suburban() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_suburban)
  return basic_night_no_lamp_poor_lighting_in_suburban_ != NULL ? *basic_night_no_lamp_poor_lighting_in_suburban_ : *default_instance_->basic_night_no_lamp_poor_lighting_in_suburban_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_no_lamp_poor_lighting_in_suburban() {
  set_has_basic_night_no_lamp_poor_lighting_in_suburban();
  if (basic_night_no_lamp_poor_lighting_in_suburban_ == NULL) {
    basic_night_no_lamp_poor_lighting_in_suburban_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_suburban)
  return basic_night_no_lamp_poor_lighting_in_suburban_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_no_lamp_poor_lighting_in_suburban() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_suburban)
  clear_has_basic_night_no_lamp_poor_lighting_in_suburban();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_no_lamp_poor_lighting_in_suburban_;
  basic_night_no_lamp_poor_lighting_in_suburban_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_no_lamp_poor_lighting_in_suburban(::OPMessage::BasicDengGuangMoNiItem* basic_night_no_lamp_poor_lighting_in_suburban) {
  delete basic_night_no_lamp_poor_lighting_in_suburban_;
  basic_night_no_lamp_poor_lighting_in_suburban_ = basic_night_no_lamp_poor_lighting_in_suburban;
  if (basic_night_no_lamp_poor_lighting_in_suburban) {
    set_has_basic_night_no_lamp_poor_lighting_in_suburban();
  } else {
    clear_has_basic_night_no_lamp_poor_lighting_in_suburban();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_suburban)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_curve_ramp_bridge = 9;
inline bool ItemJudgeRuleDengGuangMoNi::has_basic_night_through_curve_ramp_bridge() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_through_curve_ramp_bridge() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_through_curve_ramp_bridge() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_basic_night_through_curve_ramp_bridge() {
  if (basic_night_through_curve_ramp_bridge_ != NULL) basic_night_through_curve_ramp_bridge_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_through_curve_ramp_bridge();
}
inline const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_through_curve_ramp_bridge() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_curve_ramp_bridge)
  return basic_night_through_curve_ramp_bridge_ != NULL ? *basic_night_through_curve_ramp_bridge_ : *default_instance_->basic_night_through_curve_ramp_bridge_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_through_curve_ramp_bridge() {
  set_has_basic_night_through_curve_ramp_bridge();
  if (basic_night_through_curve_ramp_bridge_ == NULL) {
    basic_night_through_curve_ramp_bridge_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_curve_ramp_bridge)
  return basic_night_through_curve_ramp_bridge_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_through_curve_ramp_bridge() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_curve_ramp_bridge)
  clear_has_basic_night_through_curve_ramp_bridge();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_through_curve_ramp_bridge_;
  basic_night_through_curve_ramp_bridge_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_through_curve_ramp_bridge(::OPMessage::BasicDengGuangMoNiItem* basic_night_through_curve_ramp_bridge) {
  delete basic_night_through_curve_ramp_bridge_;
  basic_night_through_curve_ramp_bridge_ = basic_night_through_curve_ramp_bridge;
  if (basic_night_through_curve_ramp_bridge) {
    set_has_basic_night_through_curve_ramp_bridge();
  } else {
    clear_has_basic_night_through_curve_ramp_bridge();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_curve_ramp_bridge)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_fog_driving = 10;
inline bool ItemJudgeRuleDengGuangMoNi::has_basic_fog_driving() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_basic_fog_driving() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_basic_fog_driving() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_basic_fog_driving() {
  if (basic_fog_driving_ != NULL) basic_fog_driving_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_fog_driving();
}
inline const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_fog_driving() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_fog_driving)
  return basic_fog_driving_ != NULL ? *basic_fog_driving_ : *default_instance_->basic_fog_driving_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_fog_driving() {
  set_has_basic_fog_driving();
  if (basic_fog_driving_ == NULL) {
    basic_fog_driving_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_fog_driving)
  return basic_fog_driving_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_fog_driving() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_fog_driving)
  clear_has_basic_fog_driving();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_fog_driving_;
  basic_fog_driving_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_fog_driving(::OPMessage::BasicDengGuangMoNiItem* basic_fog_driving) {
  delete basic_fog_driving_;
  basic_fog_driving_ = basic_fog_driving;
  if (basic_fog_driving) {
    set_has_basic_fog_driving();
  } else {
    clear_has_basic_fog_driving();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_fog_driving)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_in_narrow_road = 11;
inline bool ItemJudgeRuleDengGuangMoNi::has_basic_night_passing_in_narrow_road() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_passing_in_narrow_road() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_passing_in_narrow_road() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_basic_night_passing_in_narrow_road() {
  if (basic_night_passing_in_narrow_road_ != NULL) basic_night_passing_in_narrow_road_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_passing_in_narrow_road();
}
inline const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_passing_in_narrow_road() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_in_narrow_road)
  return basic_night_passing_in_narrow_road_ != NULL ? *basic_night_passing_in_narrow_road_ : *default_instance_->basic_night_passing_in_narrow_road_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_passing_in_narrow_road() {
  set_has_basic_night_passing_in_narrow_road();
  if (basic_night_passing_in_narrow_road_ == NULL) {
    basic_night_passing_in_narrow_road_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_in_narrow_road)
  return basic_night_passing_in_narrow_road_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_passing_in_narrow_road() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_in_narrow_road)
  clear_has_basic_night_passing_in_narrow_road();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_passing_in_narrow_road_;
  basic_night_passing_in_narrow_road_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_passing_in_narrow_road(::OPMessage::BasicDengGuangMoNiItem* basic_night_passing_in_narrow_road) {
  delete basic_night_passing_in_narrow_road_;
  basic_night_passing_in_narrow_road_ = basic_night_passing_in_narrow_road;
  if (basic_night_passing_in_narrow_road) {
    set_has_basic_night_passing_in_narrow_road();
  } else {
    clear_has_basic_night_passing_in_narrow_road();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_in_narrow_road)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_nearly_150_other_car = 12;
inline bool ItemJudgeRuleDengGuangMoNi::has_basic_night_passing_nearly_150_other_car() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_passing_nearly_150_other_car() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_passing_nearly_150_other_car() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_basic_night_passing_nearly_150_other_car() {
  if (basic_night_passing_nearly_150_other_car_ != NULL) basic_night_passing_nearly_150_other_car_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_passing_nearly_150_other_car();
}
inline const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_passing_nearly_150_other_car() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_nearly_150_other_car)
  return basic_night_passing_nearly_150_other_car_ != NULL ? *basic_night_passing_nearly_150_other_car_ : *default_instance_->basic_night_passing_nearly_150_other_car_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_passing_nearly_150_other_car() {
  set_has_basic_night_passing_nearly_150_other_car();
  if (basic_night_passing_nearly_150_other_car_ == NULL) {
    basic_night_passing_nearly_150_other_car_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_nearly_150_other_car)
  return basic_night_passing_nearly_150_other_car_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_passing_nearly_150_other_car() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_nearly_150_other_car)
  clear_has_basic_night_passing_nearly_150_other_car();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_passing_nearly_150_other_car_;
  basic_night_passing_nearly_150_other_car_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_passing_nearly_150_other_car(::OPMessage::BasicDengGuangMoNiItem* basic_night_passing_nearly_150_other_car) {
  delete basic_night_passing_nearly_150_other_car_;
  basic_night_passing_nearly_150_other_car_ = basic_night_passing_nearly_150_other_car;
  if (basic_night_passing_nearly_150_other_car) {
    set_has_basic_night_passing_nearly_150_other_car();
  } else {
    clear_has_basic_night_passing_nearly_150_other_car();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_nearly_150_other_car)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_car_road_down = 13;
inline bool ItemJudgeRuleDengGuangMoNi::has_basic_night_car_road_down() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_car_road_down() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_car_road_down() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_basic_night_car_road_down() {
  if (basic_night_car_road_down_ != NULL) basic_night_car_road_down_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_car_road_down();
}
inline const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_car_road_down() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_car_road_down)
  return basic_night_car_road_down_ != NULL ? *basic_night_car_road_down_ : *default_instance_->basic_night_car_road_down_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_car_road_down() {
  set_has_basic_night_car_road_down();
  if (basic_night_car_road_down_ == NULL) {
    basic_night_car_road_down_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_car_road_down)
  return basic_night_car_road_down_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_car_road_down() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_car_road_down)
  clear_has_basic_night_car_road_down();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_car_road_down_;
  basic_night_car_road_down_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_car_road_down(::OPMessage::BasicDengGuangMoNiItem* basic_night_car_road_down) {
  delete basic_night_car_road_down_;
  basic_night_car_road_down_ = basic_night_car_road_down;
  if (basic_night_car_road_down) {
    set_has_basic_night_car_road_down();
  } else {
    clear_has_basic_night_car_road_down();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_car_road_down)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_no_traffic_signal_road = 14;
inline bool ItemJudgeRuleDengGuangMoNi::has_basic_night_through_no_traffic_signal_road() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_through_no_traffic_signal_road() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_through_no_traffic_signal_road() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_basic_night_through_no_traffic_signal_road() {
  if (basic_night_through_no_traffic_signal_road_ != NULL) basic_night_through_no_traffic_signal_road_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_through_no_traffic_signal_road();
}
inline const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_through_no_traffic_signal_road() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_no_traffic_signal_road)
  return basic_night_through_no_traffic_signal_road_ != NULL ? *basic_night_through_no_traffic_signal_road_ : *default_instance_->basic_night_through_no_traffic_signal_road_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_through_no_traffic_signal_road() {
  set_has_basic_night_through_no_traffic_signal_road();
  if (basic_night_through_no_traffic_signal_road_ == NULL) {
    basic_night_through_no_traffic_signal_road_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_no_traffic_signal_road)
  return basic_night_through_no_traffic_signal_road_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_through_no_traffic_signal_road() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_no_traffic_signal_road)
  clear_has_basic_night_through_no_traffic_signal_road();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_through_no_traffic_signal_road_;
  basic_night_through_no_traffic_signal_road_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_through_no_traffic_signal_road(::OPMessage::BasicDengGuangMoNiItem* basic_night_through_no_traffic_signal_road) {
  delete basic_night_through_no_traffic_signal_road_;
  basic_night_through_no_traffic_signal_road_ = basic_night_through_no_traffic_signal_road;
  if (basic_night_through_no_traffic_signal_road) {
    set_has_basic_night_through_no_traffic_signal_road();
  } else {
    clear_has_basic_night_through_no_traffic_signal_road();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_no_traffic_signal_road)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_simulation_test_done_close_all_light = 15;
inline bool ItemJudgeRuleDengGuangMoNi::has_basic_simulation_test_done_close_all_light() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ItemJudgeRuleDengGuangMoNi::set_has_basic_simulation_test_done_close_all_light() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_has_basic_simulation_test_done_close_all_light() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ItemJudgeRuleDengGuangMoNi::clear_basic_simulation_test_done_close_all_light() {
  if (basic_simulation_test_done_close_all_light_ != NULL) basic_simulation_test_done_close_all_light_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_simulation_test_done_close_all_light();
}
inline const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_simulation_test_done_close_all_light() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_simulation_test_done_close_all_light)
  return basic_simulation_test_done_close_all_light_ != NULL ? *basic_simulation_test_done_close_all_light_ : *default_instance_->basic_simulation_test_done_close_all_light_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_simulation_test_done_close_all_light() {
  set_has_basic_simulation_test_done_close_all_light();
  if (basic_simulation_test_done_close_all_light_ == NULL) {
    basic_simulation_test_done_close_all_light_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_simulation_test_done_close_all_light)
  return basic_simulation_test_done_close_all_light_;
}
inline ::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_simulation_test_done_close_all_light() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_simulation_test_done_close_all_light)
  clear_has_basic_simulation_test_done_close_all_light();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_simulation_test_done_close_all_light_;
  basic_simulation_test_done_close_all_light_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_simulation_test_done_close_all_light(::OPMessage::BasicDengGuangMoNiItem* basic_simulation_test_done_close_all_light) {
  delete basic_simulation_test_done_close_all_light_;
  basic_simulation_test_done_close_all_light_ = basic_simulation_test_done_close_all_light;
  if (basic_simulation_test_done_close_all_light) {
    set_has_basic_simulation_test_done_close_all_light();
  } else {
    clear_has_basic_simulation_test_done_close_all_light();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_simulation_test_done_close_all_light)
}

// -------------------------------------------------------------------

// ItemJudgeRuleQiBu

// optional string item_start_voice = 1;
inline bool ItemJudgeRuleQiBu::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleQiBu::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleQiBu::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleQiBu::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQiBu::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
}
inline void ItemJudgeRuleQiBu::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
}
inline void ItemJudgeRuleQiBu::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
}
inline ::std::string* ItemJudgeRuleQiBu::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleQiBu::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQiBu::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
}

// optional string item_end_voice = 2;
inline bool ItemJudgeRuleQiBu::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleQiBu::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleQiBu::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleQiBu::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQiBu::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
}
inline void ItemJudgeRuleQiBu::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
}
inline void ItemJudgeRuleQiBu::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
}
inline ::std::string* ItemJudgeRuleQiBu::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleQiBu::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQiBu::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
}

// optional .OPMessage.BasicLeftTurnLamp basic_leftturnlamp = 3;
inline bool ItemJudgeRuleQiBu::has_basic_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_basic_leftturnlamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleQiBu::clear_has_basic_leftturnlamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleQiBu::clear_basic_leftturnlamp() {
  if (basic_leftturnlamp_ != NULL) basic_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_basic_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleQiBu::basic_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_leftturnlamp)
  return basic_leftturnlamp_ != NULL ? *basic_leftturnlamp_ : *default_instance_->basic_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleQiBu::mutable_basic_leftturnlamp() {
  set_has_basic_leftturnlamp();
  if (basic_leftturnlamp_ == NULL) {
    basic_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_leftturnlamp)
  return basic_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleQiBu::release_basic_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_leftturnlamp)
  clear_has_basic_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = basic_leftturnlamp_;
  basic_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleQiBu::set_allocated_basic_leftturnlamp(::OPMessage::BasicLeftTurnLamp* basic_leftturnlamp) {
  delete basic_leftturnlamp_;
  basic_leftturnlamp_ = basic_leftturnlamp;
  if (basic_leftturnlamp) {
    set_has_basic_leftturnlamp();
  } else {
    clear_has_basic_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_leftturnlamp)
}

// optional .OPMessage.BasicDoor basic_door = 4;
inline bool ItemJudgeRuleQiBu::has_basic_door() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_basic_door() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleQiBu::clear_has_basic_door() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleQiBu::clear_basic_door() {
  if (basic_door_ != NULL) basic_door_->::OPMessage::BasicDoor::Clear();
  clear_has_basic_door();
}
inline const ::OPMessage::BasicDoor& ItemJudgeRuleQiBu::basic_door() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_door)
  return basic_door_ != NULL ? *basic_door_ : *default_instance_->basic_door_;
}
inline ::OPMessage::BasicDoor* ItemJudgeRuleQiBu::mutable_basic_door() {
  set_has_basic_door();
  if (basic_door_ == NULL) {
    basic_door_ = new ::OPMessage::BasicDoor;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_door)
  return basic_door_;
}
inline ::OPMessage::BasicDoor* ItemJudgeRuleQiBu::release_basic_door() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_door)
  clear_has_basic_door();
  ::OPMessage::BasicDoor* temp = basic_door_;
  basic_door_ = NULL;
  return temp;
}
inline void ItemJudgeRuleQiBu::set_allocated_basic_door(::OPMessage::BasicDoor* basic_door) {
  delete basic_door_;
  basic_door_ = basic_door;
  if (basic_door) {
    set_has_basic_door();
  } else {
    clear_has_basic_door();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_door)
}

// optional .OPMessage.BasicHorn basic_horn = 5;
inline bool ItemJudgeRuleQiBu::has_basic_horn() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_basic_horn() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleQiBu::clear_has_basic_horn() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleQiBu::clear_basic_horn() {
  if (basic_horn_ != NULL) basic_horn_->::OPMessage::BasicHorn::Clear();
  clear_has_basic_horn();
}
inline const ::OPMessage::BasicHorn& ItemJudgeRuleQiBu::basic_horn() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_horn)
  return basic_horn_ != NULL ? *basic_horn_ : *default_instance_->basic_horn_;
}
inline ::OPMessage::BasicHorn* ItemJudgeRuleQiBu::mutable_basic_horn() {
  set_has_basic_horn();
  if (basic_horn_ == NULL) {
    basic_horn_ = new ::OPMessage::BasicHorn;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_horn)
  return basic_horn_;
}
inline ::OPMessage::BasicHorn* ItemJudgeRuleQiBu::release_basic_horn() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_horn)
  clear_has_basic_horn();
  ::OPMessage::BasicHorn* temp = basic_horn_;
  basic_horn_ = NULL;
  return temp;
}
inline void ItemJudgeRuleQiBu::set_allocated_basic_horn(::OPMessage::BasicHorn* basic_horn) {
  delete basic_horn_;
  basic_horn_ = basic_horn;
  if (basic_horn) {
    set_has_basic_horn();
  } else {
    clear_has_basic_horn();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_horn)
}

// optional .OPMessage.BasicFireUp basic_fireup = 6;
inline bool ItemJudgeRuleQiBu::has_basic_fireup() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_basic_fireup() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleQiBu::clear_has_basic_fireup() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleQiBu::clear_basic_fireup() {
  if (basic_fireup_ != NULL) basic_fireup_->::OPMessage::BasicFireUp::Clear();
  clear_has_basic_fireup();
}
inline const ::OPMessage::BasicFireUp& ItemJudgeRuleQiBu::basic_fireup() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_fireup)
  return basic_fireup_ != NULL ? *basic_fireup_ : *default_instance_->basic_fireup_;
}
inline ::OPMessage::BasicFireUp* ItemJudgeRuleQiBu::mutable_basic_fireup() {
  set_has_basic_fireup();
  if (basic_fireup_ == NULL) {
    basic_fireup_ = new ::OPMessage::BasicFireUp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_fireup)
  return basic_fireup_;
}
inline ::OPMessage::BasicFireUp* ItemJudgeRuleQiBu::release_basic_fireup() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_fireup)
  clear_has_basic_fireup();
  ::OPMessage::BasicFireUp* temp = basic_fireup_;
  basic_fireup_ = NULL;
  return temp;
}
inline void ItemJudgeRuleQiBu::set_allocated_basic_fireup(::OPMessage::BasicFireUp* basic_fireup) {
  delete basic_fireup_;
  basic_fireup_ = basic_fireup;
  if (basic_fireup) {
    set_has_basic_fireup();
  } else {
    clear_has_basic_fireup();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_fireup)
}

// optional .OPMessage.BasicSeat basic_seat = 7;
inline bool ItemJudgeRuleQiBu::has_basic_seat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_basic_seat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleQiBu::clear_has_basic_seat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleQiBu::clear_basic_seat() {
  if (basic_seat_ != NULL) basic_seat_->::OPMessage::BasicSeat::Clear();
  clear_has_basic_seat();
}
inline const ::OPMessage::BasicSeat& ItemJudgeRuleQiBu::basic_seat() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_seat)
  return basic_seat_ != NULL ? *basic_seat_ : *default_instance_->basic_seat_;
}
inline ::OPMessage::BasicSeat* ItemJudgeRuleQiBu::mutable_basic_seat() {
  set_has_basic_seat();
  if (basic_seat_ == NULL) {
    basic_seat_ = new ::OPMessage::BasicSeat;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_seat)
  return basic_seat_;
}
inline ::OPMessage::BasicSeat* ItemJudgeRuleQiBu::release_basic_seat() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_seat)
  clear_has_basic_seat();
  ::OPMessage::BasicSeat* temp = basic_seat_;
  basic_seat_ = NULL;
  return temp;
}
inline void ItemJudgeRuleQiBu::set_allocated_basic_seat(::OPMessage::BasicSeat* basic_seat) {
  delete basic_seat_;
  basic_seat_ = basic_seat;
  if (basic_seat) {
    set_has_basic_seat();
  } else {
    clear_has_basic_seat();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_seat)
}

// optional .OPMessage.BasicLeftMirror basic_left_mirror = 8;
inline bool ItemJudgeRuleQiBu::has_basic_left_mirror() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_basic_left_mirror() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeRuleQiBu::clear_has_basic_left_mirror() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeRuleQiBu::clear_basic_left_mirror() {
  if (basic_left_mirror_ != NULL) basic_left_mirror_->::OPMessage::BasicLeftMirror::Clear();
  clear_has_basic_left_mirror();
}
inline const ::OPMessage::BasicLeftMirror& ItemJudgeRuleQiBu::basic_left_mirror() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_left_mirror)
  return basic_left_mirror_ != NULL ? *basic_left_mirror_ : *default_instance_->basic_left_mirror_;
}
inline ::OPMessage::BasicLeftMirror* ItemJudgeRuleQiBu::mutable_basic_left_mirror() {
  set_has_basic_left_mirror();
  if (basic_left_mirror_ == NULL) {
    basic_left_mirror_ = new ::OPMessage::BasicLeftMirror;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_left_mirror)
  return basic_left_mirror_;
}
inline ::OPMessage::BasicLeftMirror* ItemJudgeRuleQiBu::release_basic_left_mirror() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_left_mirror)
  clear_has_basic_left_mirror();
  ::OPMessage::BasicLeftMirror* temp = basic_left_mirror_;
  basic_left_mirror_ = NULL;
  return temp;
}
inline void ItemJudgeRuleQiBu::set_allocated_basic_left_mirror(::OPMessage::BasicLeftMirror* basic_left_mirror) {
  delete basic_left_mirror_;
  basic_left_mirror_ = basic_left_mirror;
  if (basic_left_mirror) {
    set_has_basic_left_mirror();
  } else {
    clear_has_basic_left_mirror();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_left_mirror)
}

// optional .OPMessage.BasicMiddleMirror basic_middle_mirror = 9;
inline bool ItemJudgeRuleQiBu::has_basic_middle_mirror() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_basic_middle_mirror() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemJudgeRuleQiBu::clear_has_basic_middle_mirror() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemJudgeRuleQiBu::clear_basic_middle_mirror() {
  if (basic_middle_mirror_ != NULL) basic_middle_mirror_->::OPMessage::BasicMiddleMirror::Clear();
  clear_has_basic_middle_mirror();
}
inline const ::OPMessage::BasicMiddleMirror& ItemJudgeRuleQiBu::basic_middle_mirror() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_middle_mirror)
  return basic_middle_mirror_ != NULL ? *basic_middle_mirror_ : *default_instance_->basic_middle_mirror_;
}
inline ::OPMessage::BasicMiddleMirror* ItemJudgeRuleQiBu::mutable_basic_middle_mirror() {
  set_has_basic_middle_mirror();
  if (basic_middle_mirror_ == NULL) {
    basic_middle_mirror_ = new ::OPMessage::BasicMiddleMirror;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_middle_mirror)
  return basic_middle_mirror_;
}
inline ::OPMessage::BasicMiddleMirror* ItemJudgeRuleQiBu::release_basic_middle_mirror() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_middle_mirror)
  clear_has_basic_middle_mirror();
  ::OPMessage::BasicMiddleMirror* temp = basic_middle_mirror_;
  basic_middle_mirror_ = NULL;
  return temp;
}
inline void ItemJudgeRuleQiBu::set_allocated_basic_middle_mirror(::OPMessage::BasicMiddleMirror* basic_middle_mirror) {
  delete basic_middle_mirror_;
  basic_middle_mirror_ = basic_middle_mirror;
  if (basic_middle_mirror) {
    set_has_basic_middle_mirror();
  } else {
    clear_has_basic_middle_mirror();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_middle_mirror)
}

// optional .OPMessage.BasicRightMirror basic_right_mirror = 10;
inline bool ItemJudgeRuleQiBu::has_basic_right_mirror() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_basic_right_mirror() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemJudgeRuleQiBu::clear_has_basic_right_mirror() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemJudgeRuleQiBu::clear_basic_right_mirror() {
  if (basic_right_mirror_ != NULL) basic_right_mirror_->::OPMessage::BasicRightMirror::Clear();
  clear_has_basic_right_mirror();
}
inline const ::OPMessage::BasicRightMirror& ItemJudgeRuleQiBu::basic_right_mirror() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_right_mirror)
  return basic_right_mirror_ != NULL ? *basic_right_mirror_ : *default_instance_->basic_right_mirror_;
}
inline ::OPMessage::BasicRightMirror* ItemJudgeRuleQiBu::mutable_basic_right_mirror() {
  set_has_basic_right_mirror();
  if (basic_right_mirror_ == NULL) {
    basic_right_mirror_ = new ::OPMessage::BasicRightMirror;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_right_mirror)
  return basic_right_mirror_;
}
inline ::OPMessage::BasicRightMirror* ItemJudgeRuleQiBu::release_basic_right_mirror() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_right_mirror)
  clear_has_basic_right_mirror();
  ::OPMessage::BasicRightMirror* temp = basic_right_mirror_;
  basic_right_mirror_ = NULL;
  return temp;
}
inline void ItemJudgeRuleQiBu::set_allocated_basic_right_mirror(::OPMessage::BasicRightMirror* basic_right_mirror) {
  delete basic_right_mirror_;
  basic_right_mirror_ = basic_right_mirror;
  if (basic_right_mirror) {
    set_has_basic_right_mirror();
  } else {
    clear_has_basic_right_mirror();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_right_mirror)
}

// optional bool car_hl_whether_check = 11 [default = true];
inline bool ItemJudgeRuleQiBu::has_car_hl_whether_check() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_car_hl_whether_check() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemJudgeRuleQiBu::clear_has_car_hl_whether_check() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemJudgeRuleQiBu::clear_car_hl_whether_check() {
  car_hl_whether_check_ = true;
  clear_has_car_hl_whether_check();
}
inline bool ItemJudgeRuleQiBu::car_hl_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_hl_whether_check)
  return car_hl_whether_check_;
}
inline void ItemJudgeRuleQiBu::set_car_hl_whether_check(bool value) {
  set_has_car_hl_whether_check();
  car_hl_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_hl_whether_check)
}

// optional string car_hl_distance_more_30cm_voice = 12;
inline bool ItemJudgeRuleQiBu::has_car_hl_distance_more_30cm_voice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_car_hl_distance_more_30cm_voice() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemJudgeRuleQiBu::clear_has_car_hl_distance_more_30cm_voice() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemJudgeRuleQiBu::clear_car_hl_distance_more_30cm_voice() {
  car_hl_distance_more_30cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_hl_distance_more_30cm_voice();
}
inline const ::std::string& ItemJudgeRuleQiBu::car_hl_distance_more_30cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
  return car_hl_distance_more_30cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQiBu::set_car_hl_distance_more_30cm_voice(const ::std::string& value) {
  set_has_car_hl_distance_more_30cm_voice();
  car_hl_distance_more_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
}
inline void ItemJudgeRuleQiBu::set_car_hl_distance_more_30cm_voice(const char* value) {
  set_has_car_hl_distance_more_30cm_voice();
  car_hl_distance_more_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
}
inline void ItemJudgeRuleQiBu::set_car_hl_distance_more_30cm_voice(const char* value, size_t size) {
  set_has_car_hl_distance_more_30cm_voice();
  car_hl_distance_more_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
}
inline ::std::string* ItemJudgeRuleQiBu::mutable_car_hl_distance_more_30cm_voice() {
  set_has_car_hl_distance_more_30cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
  return car_hl_distance_more_30cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleQiBu::release_car_hl_distance_more_30cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
  clear_has_car_hl_distance_more_30cm_voice();
  return car_hl_distance_more_30cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQiBu::set_allocated_car_hl_distance_more_30cm_voice(::std::string* car_hl_distance_more_30cm_voice) {
  if (car_hl_distance_more_30cm_voice != NULL) {
    set_has_car_hl_distance_more_30cm_voice();
  } else {
    clear_has_car_hl_distance_more_30cm_voice();
  }
  car_hl_distance_more_30cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_hl_distance_more_30cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
}

// optional int32 car_hl_distance_more_30cm_deduction = 13;
inline bool ItemJudgeRuleQiBu::has_car_hl_distance_more_30cm_deduction() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_car_hl_distance_more_30cm_deduction() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ItemJudgeRuleQiBu::clear_has_car_hl_distance_more_30cm_deduction() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ItemJudgeRuleQiBu::clear_car_hl_distance_more_30cm_deduction() {
  car_hl_distance_more_30cm_deduction_ = 0;
  clear_has_car_hl_distance_more_30cm_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleQiBu::car_hl_distance_more_30cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_deduction)
  return car_hl_distance_more_30cm_deduction_;
}
inline void ItemJudgeRuleQiBu::set_car_hl_distance_more_30cm_deduction(::google::protobuf::int32 value) {
  set_has_car_hl_distance_more_30cm_deduction();
  car_hl_distance_more_30cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_deduction)
}

// optional string car_hl_distance_less_30cm_voice = 14;
inline bool ItemJudgeRuleQiBu::has_car_hl_distance_less_30cm_voice() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_car_hl_distance_less_30cm_voice() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ItemJudgeRuleQiBu::clear_has_car_hl_distance_less_30cm_voice() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ItemJudgeRuleQiBu::clear_car_hl_distance_less_30cm_voice() {
  car_hl_distance_less_30cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_hl_distance_less_30cm_voice();
}
inline const ::std::string& ItemJudgeRuleQiBu::car_hl_distance_less_30cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
  return car_hl_distance_less_30cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQiBu::set_car_hl_distance_less_30cm_voice(const ::std::string& value) {
  set_has_car_hl_distance_less_30cm_voice();
  car_hl_distance_less_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
}
inline void ItemJudgeRuleQiBu::set_car_hl_distance_less_30cm_voice(const char* value) {
  set_has_car_hl_distance_less_30cm_voice();
  car_hl_distance_less_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
}
inline void ItemJudgeRuleQiBu::set_car_hl_distance_less_30cm_voice(const char* value, size_t size) {
  set_has_car_hl_distance_less_30cm_voice();
  car_hl_distance_less_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
}
inline ::std::string* ItemJudgeRuleQiBu::mutable_car_hl_distance_less_30cm_voice() {
  set_has_car_hl_distance_less_30cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
  return car_hl_distance_less_30cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleQiBu::release_car_hl_distance_less_30cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
  clear_has_car_hl_distance_less_30cm_voice();
  return car_hl_distance_less_30cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQiBu::set_allocated_car_hl_distance_less_30cm_voice(::std::string* car_hl_distance_less_30cm_voice) {
  if (car_hl_distance_less_30cm_voice != NULL) {
    set_has_car_hl_distance_less_30cm_voice();
  } else {
    clear_has_car_hl_distance_less_30cm_voice();
  }
  car_hl_distance_less_30cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_hl_distance_less_30cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
}

// optional int32 car_hl_distance_less_30cm_deduction = 15;
inline bool ItemJudgeRuleQiBu::has_car_hl_distance_less_30cm_deduction() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_car_hl_distance_less_30cm_deduction() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ItemJudgeRuleQiBu::clear_has_car_hl_distance_less_30cm_deduction() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ItemJudgeRuleQiBu::clear_car_hl_distance_less_30cm_deduction() {
  car_hl_distance_less_30cm_deduction_ = 0;
  clear_has_car_hl_distance_less_30cm_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleQiBu::car_hl_distance_less_30cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_deduction)
  return car_hl_distance_less_30cm_deduction_;
}
inline void ItemJudgeRuleQiBu::set_car_hl_distance_less_30cm_deduction(::google::protobuf::int32 value) {
  set_has_car_hl_distance_less_30cm_deduction();
  car_hl_distance_less_30cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_deduction)
}

// optional bool car_handbrake_whether_check = 16 [default = true];
inline bool ItemJudgeRuleQiBu::has_car_handbrake_whether_check() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_car_handbrake_whether_check() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ItemJudgeRuleQiBu::clear_has_car_handbrake_whether_check() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ItemJudgeRuleQiBu::clear_car_handbrake_whether_check() {
  car_handbrake_whether_check_ = true;
  clear_has_car_handbrake_whether_check();
}
inline bool ItemJudgeRuleQiBu::car_handbrake_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_whether_check)
  return car_handbrake_whether_check_;
}
inline void ItemJudgeRuleQiBu::set_car_handbrake_whether_check(bool value) {
  set_has_car_handbrake_whether_check();
  car_handbrake_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_whether_check)
}

// optional int32 car_handbrake_more_distance = 17;
inline bool ItemJudgeRuleQiBu::has_car_handbrake_more_distance() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_car_handbrake_more_distance() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ItemJudgeRuleQiBu::clear_has_car_handbrake_more_distance() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ItemJudgeRuleQiBu::clear_car_handbrake_more_distance() {
  car_handbrake_more_distance_ = 0;
  clear_has_car_handbrake_more_distance();
}
inline ::google::protobuf::int32 ItemJudgeRuleQiBu::car_handbrake_more_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_distance)
  return car_handbrake_more_distance_;
}
inline void ItemJudgeRuleQiBu::set_car_handbrake_more_distance(::google::protobuf::int32 value) {
  set_has_car_handbrake_more_distance();
  car_handbrake_more_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_distance)
}

// optional string car_handbrake_more_voice = 18;
inline bool ItemJudgeRuleQiBu::has_car_handbrake_more_voice() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_car_handbrake_more_voice() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ItemJudgeRuleQiBu::clear_has_car_handbrake_more_voice() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ItemJudgeRuleQiBu::clear_car_handbrake_more_voice() {
  car_handbrake_more_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_handbrake_more_voice();
}
inline const ::std::string& ItemJudgeRuleQiBu::car_handbrake_more_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
  return car_handbrake_more_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQiBu::set_car_handbrake_more_voice(const ::std::string& value) {
  set_has_car_handbrake_more_voice();
  car_handbrake_more_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
}
inline void ItemJudgeRuleQiBu::set_car_handbrake_more_voice(const char* value) {
  set_has_car_handbrake_more_voice();
  car_handbrake_more_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
}
inline void ItemJudgeRuleQiBu::set_car_handbrake_more_voice(const char* value, size_t size) {
  set_has_car_handbrake_more_voice();
  car_handbrake_more_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
}
inline ::std::string* ItemJudgeRuleQiBu::mutable_car_handbrake_more_voice() {
  set_has_car_handbrake_more_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
  return car_handbrake_more_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleQiBu::release_car_handbrake_more_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
  clear_has_car_handbrake_more_voice();
  return car_handbrake_more_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQiBu::set_allocated_car_handbrake_more_voice(::std::string* car_handbrake_more_voice) {
  if (car_handbrake_more_voice != NULL) {
    set_has_car_handbrake_more_voice();
  } else {
    clear_has_car_handbrake_more_voice();
  }
  car_handbrake_more_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_handbrake_more_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
}

// optional int32 car_handbrake_more_deduction = 19;
inline bool ItemJudgeRuleQiBu::has_car_handbrake_more_deduction() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_car_handbrake_more_deduction() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ItemJudgeRuleQiBu::clear_has_car_handbrake_more_deduction() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ItemJudgeRuleQiBu::clear_car_handbrake_more_deduction() {
  car_handbrake_more_deduction_ = 0;
  clear_has_car_handbrake_more_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleQiBu::car_handbrake_more_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_deduction)
  return car_handbrake_more_deduction_;
}
inline void ItemJudgeRuleQiBu::set_car_handbrake_more_deduction(::google::protobuf::int32 value) {
  set_has_car_handbrake_more_deduction();
  car_handbrake_more_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_deduction)
}

// optional int32 car_handbrake_less_distance = 20;
inline bool ItemJudgeRuleQiBu::has_car_handbrake_less_distance() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_car_handbrake_less_distance() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ItemJudgeRuleQiBu::clear_has_car_handbrake_less_distance() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ItemJudgeRuleQiBu::clear_car_handbrake_less_distance() {
  car_handbrake_less_distance_ = 0;
  clear_has_car_handbrake_less_distance();
}
inline ::google::protobuf::int32 ItemJudgeRuleQiBu::car_handbrake_less_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_distance)
  return car_handbrake_less_distance_;
}
inline void ItemJudgeRuleQiBu::set_car_handbrake_less_distance(::google::protobuf::int32 value) {
  set_has_car_handbrake_less_distance();
  car_handbrake_less_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_distance)
}

// optional string car_handbrake_less_voice = 21;
inline bool ItemJudgeRuleQiBu::has_car_handbrake_less_voice() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_car_handbrake_less_voice() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ItemJudgeRuleQiBu::clear_has_car_handbrake_less_voice() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ItemJudgeRuleQiBu::clear_car_handbrake_less_voice() {
  car_handbrake_less_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_handbrake_less_voice();
}
inline const ::std::string& ItemJudgeRuleQiBu::car_handbrake_less_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
  return car_handbrake_less_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQiBu::set_car_handbrake_less_voice(const ::std::string& value) {
  set_has_car_handbrake_less_voice();
  car_handbrake_less_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
}
inline void ItemJudgeRuleQiBu::set_car_handbrake_less_voice(const char* value) {
  set_has_car_handbrake_less_voice();
  car_handbrake_less_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
}
inline void ItemJudgeRuleQiBu::set_car_handbrake_less_voice(const char* value, size_t size) {
  set_has_car_handbrake_less_voice();
  car_handbrake_less_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
}
inline ::std::string* ItemJudgeRuleQiBu::mutable_car_handbrake_less_voice() {
  set_has_car_handbrake_less_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
  return car_handbrake_less_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleQiBu::release_car_handbrake_less_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
  clear_has_car_handbrake_less_voice();
  return car_handbrake_less_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQiBu::set_allocated_car_handbrake_less_voice(::std::string* car_handbrake_less_voice) {
  if (car_handbrake_less_voice != NULL) {
    set_has_car_handbrake_less_voice();
  } else {
    clear_has_car_handbrake_less_voice();
  }
  car_handbrake_less_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_handbrake_less_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
}

// optional int32 car_handbrake_less_deduction = 22;
inline bool ItemJudgeRuleQiBu::has_car_handbrake_less_deduction() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ItemJudgeRuleQiBu::set_has_car_handbrake_less_deduction() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ItemJudgeRuleQiBu::clear_has_car_handbrake_less_deduction() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ItemJudgeRuleQiBu::clear_car_handbrake_less_deduction() {
  car_handbrake_less_deduction_ = 0;
  clear_has_car_handbrake_less_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleQiBu::car_handbrake_less_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_deduction)
  return car_handbrake_less_deduction_;
}
inline void ItemJudgeRuleQiBu::set_car_handbrake_less_deduction(::google::protobuf::int32 value) {
  set_has_car_handbrake_less_deduction();
  car_handbrake_less_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_deduction)
}

// -------------------------------------------------------------------

// ItemJudgeRuleKaoBianTingChe

// optional string item_start_voice = 1;
inline bool ItemJudgeRuleKaoBianTingChe::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleKaoBianTingChe::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleKaoBianTingChe::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleKaoBianTingChe::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
}
inline void ItemJudgeRuleKaoBianTingChe::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
}
inline void ItemJudgeRuleKaoBianTingChe::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
}
inline ::std::string* ItemJudgeRuleKaoBianTingChe::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleKaoBianTingChe::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleKaoBianTingChe::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
}

// optional string item_end_voice = 2;
inline bool ItemJudgeRuleKaoBianTingChe::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleKaoBianTingChe::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleKaoBianTingChe::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleKaoBianTingChe::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
}
inline void ItemJudgeRuleKaoBianTingChe::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
}
inline void ItemJudgeRuleKaoBianTingChe::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
}
inline ::std::string* ItemJudgeRuleKaoBianTingChe::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleKaoBianTingChe::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleKaoBianTingChe::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
}

// optional .OPMessage.BasicRightTurnLamp basic_rightturnlamp = 3;
inline bool ItemJudgeRuleKaoBianTingChe::has_basic_rightturnlamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleKaoBianTingChe::set_has_basic_rightturnlamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_has_basic_rightturnlamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_basic_rightturnlamp() {
  if (basic_rightturnlamp_ != NULL) basic_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_basic_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleKaoBianTingChe::basic_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_rightturnlamp)
  return basic_rightturnlamp_ != NULL ? *basic_rightturnlamp_ : *default_instance_->basic_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleKaoBianTingChe::mutable_basic_rightturnlamp() {
  set_has_basic_rightturnlamp();
  if (basic_rightturnlamp_ == NULL) {
    basic_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_rightturnlamp)
  return basic_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleKaoBianTingChe::release_basic_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_rightturnlamp)
  clear_has_basic_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = basic_rightturnlamp_;
  basic_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleKaoBianTingChe::set_allocated_basic_rightturnlamp(::OPMessage::BasicRightTurnLamp* basic_rightturnlamp) {
  delete basic_rightturnlamp_;
  basic_rightturnlamp_ = basic_rightturnlamp;
  if (basic_rightturnlamp) {
    set_has_basic_rightturnlamp();
  } else {
    clear_has_basic_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_rightturnlamp)
}

// optional .OPMessage.BasicFlameout basic_flameout = 4;
inline bool ItemJudgeRuleKaoBianTingChe::has_basic_flameout() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleKaoBianTingChe::set_has_basic_flameout() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_has_basic_flameout() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_basic_flameout() {
  if (basic_flameout_ != NULL) basic_flameout_->::OPMessage::BasicFlameout::Clear();
  clear_has_basic_flameout();
}
inline const ::OPMessage::BasicFlameout& ItemJudgeRuleKaoBianTingChe::basic_flameout() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_flameout)
  return basic_flameout_ != NULL ? *basic_flameout_ : *default_instance_->basic_flameout_;
}
inline ::OPMessage::BasicFlameout* ItemJudgeRuleKaoBianTingChe::mutable_basic_flameout() {
  set_has_basic_flameout();
  if (basic_flameout_ == NULL) {
    basic_flameout_ = new ::OPMessage::BasicFlameout;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_flameout)
  return basic_flameout_;
}
inline ::OPMessage::BasicFlameout* ItemJudgeRuleKaoBianTingChe::release_basic_flameout() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_flameout)
  clear_has_basic_flameout();
  ::OPMessage::BasicFlameout* temp = basic_flameout_;
  basic_flameout_ = NULL;
  return temp;
}
inline void ItemJudgeRuleKaoBianTingChe::set_allocated_basic_flameout(::OPMessage::BasicFlameout* basic_flameout) {
  delete basic_flameout_;
  basic_flameout_ = basic_flameout;
  if (basic_flameout) {
    set_has_basic_flameout();
  } else {
    clear_has_basic_flameout();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_flameout)
}

// optional .OPMessage.BasicDoor basic_door = 5;
inline bool ItemJudgeRuleKaoBianTingChe::has_basic_door() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleKaoBianTingChe::set_has_basic_door() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_has_basic_door() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_basic_door() {
  if (basic_door_ != NULL) basic_door_->::OPMessage::BasicDoor::Clear();
  clear_has_basic_door();
}
inline const ::OPMessage::BasicDoor& ItemJudgeRuleKaoBianTingChe::basic_door() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_door)
  return basic_door_ != NULL ? *basic_door_ : *default_instance_->basic_door_;
}
inline ::OPMessage::BasicDoor* ItemJudgeRuleKaoBianTingChe::mutable_basic_door() {
  set_has_basic_door();
  if (basic_door_ == NULL) {
    basic_door_ = new ::OPMessage::BasicDoor;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_door)
  return basic_door_;
}
inline ::OPMessage::BasicDoor* ItemJudgeRuleKaoBianTingChe::release_basic_door() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_door)
  clear_has_basic_door();
  ::OPMessage::BasicDoor* temp = basic_door_;
  basic_door_ = NULL;
  return temp;
}
inline void ItemJudgeRuleKaoBianTingChe::set_allocated_basic_door(::OPMessage::BasicDoor* basic_door) {
  delete basic_door_;
  basic_door_ = basic_door;
  if (basic_door) {
    set_has_basic_door();
  } else {
    clear_has_basic_door();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_door)
}

// optional bool limit_complete_distance_whether_check = 6 [default = true];
inline bool ItemJudgeRuleKaoBianTingChe::has_limit_complete_distance_whether_check() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleKaoBianTingChe::set_has_limit_complete_distance_whether_check() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_has_limit_complete_distance_whether_check() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_limit_complete_distance_whether_check() {
  limit_complete_distance_whether_check_ = true;
  clear_has_limit_complete_distance_whether_check();
}
inline bool ItemJudgeRuleKaoBianTingChe::limit_complete_distance_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_whether_check)
  return limit_complete_distance_whether_check_;
}
inline void ItemJudgeRuleKaoBianTingChe::set_limit_complete_distance_whether_check(bool value) {
  set_has_limit_complete_distance_whether_check();
  limit_complete_distance_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_whether_check)
}

// optional int32 limit_complete_distance = 7;
inline bool ItemJudgeRuleKaoBianTingChe::has_limit_complete_distance() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleKaoBianTingChe::set_has_limit_complete_distance() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_has_limit_complete_distance() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_limit_complete_distance() {
  limit_complete_distance_ = 0;
  clear_has_limit_complete_distance();
}
inline ::google::protobuf::int32 ItemJudgeRuleKaoBianTingChe::limit_complete_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance)
  return limit_complete_distance_;
}
inline void ItemJudgeRuleKaoBianTingChe::set_limit_complete_distance(::google::protobuf::int32 value) {
  set_has_limit_complete_distance();
  limit_complete_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance)
}

// optional string limit_complete_distance_voice = 8;
inline bool ItemJudgeRuleKaoBianTingChe::has_limit_complete_distance_voice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleKaoBianTingChe::set_has_limit_complete_distance_voice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_has_limit_complete_distance_voice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_limit_complete_distance_voice() {
  limit_complete_distance_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_limit_complete_distance_voice();
}
inline const ::std::string& ItemJudgeRuleKaoBianTingChe::limit_complete_distance_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
  return limit_complete_distance_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleKaoBianTingChe::set_limit_complete_distance_voice(const ::std::string& value) {
  set_has_limit_complete_distance_voice();
  limit_complete_distance_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
}
inline void ItemJudgeRuleKaoBianTingChe::set_limit_complete_distance_voice(const char* value) {
  set_has_limit_complete_distance_voice();
  limit_complete_distance_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
}
inline void ItemJudgeRuleKaoBianTingChe::set_limit_complete_distance_voice(const char* value, size_t size) {
  set_has_limit_complete_distance_voice();
  limit_complete_distance_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
}
inline ::std::string* ItemJudgeRuleKaoBianTingChe::mutable_limit_complete_distance_voice() {
  set_has_limit_complete_distance_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
  return limit_complete_distance_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleKaoBianTingChe::release_limit_complete_distance_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
  clear_has_limit_complete_distance_voice();
  return limit_complete_distance_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleKaoBianTingChe::set_allocated_limit_complete_distance_voice(::std::string* limit_complete_distance_voice) {
  if (limit_complete_distance_voice != NULL) {
    set_has_limit_complete_distance_voice();
  } else {
    clear_has_limit_complete_distance_voice();
  }
  limit_complete_distance_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), limit_complete_distance_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
}

// optional int32 limit_complete_distance_deduction = 9;
inline bool ItemJudgeRuleKaoBianTingChe::has_limit_complete_distance_deduction() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemJudgeRuleKaoBianTingChe::set_has_limit_complete_distance_deduction() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_has_limit_complete_distance_deduction() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemJudgeRuleKaoBianTingChe::clear_limit_complete_distance_deduction() {
  limit_complete_distance_deduction_ = 0;
  clear_has_limit_complete_distance_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleKaoBianTingChe::limit_complete_distance_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_deduction)
  return limit_complete_distance_deduction_;
}
inline void ItemJudgeRuleKaoBianTingChe::set_limit_complete_distance_deduction(::google::protobuf::int32 value) {
  set_has_limit_complete_distance_deduction();
  limit_complete_distance_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_deduction)
}

// -------------------------------------------------------------------

// ItemJudgeRuleXueXiaoQuYu

// optional string item_enter_voice = 1;
inline bool ItemJudgeRuleXueXiaoQuYu::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleXueXiaoQuYu::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleXueXiaoQuYu::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleXueXiaoQuYu::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleXueXiaoQuYu::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleXueXiaoQuYu::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
}
inline void ItemJudgeRuleXueXiaoQuYu::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
}
inline void ItemJudgeRuleXueXiaoQuYu::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleXueXiaoQuYu::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleXueXiaoQuYu::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleXueXiaoQuYu::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
}

// optional string item_leave_voice = 2;
inline bool ItemJudgeRuleXueXiaoQuYu::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleXueXiaoQuYu::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleXueXiaoQuYu::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleXueXiaoQuYu::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleXueXiaoQuYu::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleXueXiaoQuYu::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
}
inline void ItemJudgeRuleXueXiaoQuYu::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
}
inline void ItemJudgeRuleXueXiaoQuYu::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleXueXiaoQuYu::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleXueXiaoQuYu::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleXueXiaoQuYu::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
}

// optional string item_start_voice = 3;
inline bool ItemJudgeRuleXueXiaoQuYu::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleXueXiaoQuYu::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleXueXiaoQuYu::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleXueXiaoQuYu::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleXueXiaoQuYu::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleXueXiaoQuYu::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
}
inline void ItemJudgeRuleXueXiaoQuYu::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
}
inline void ItemJudgeRuleXueXiaoQuYu::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
}
inline ::std::string* ItemJudgeRuleXueXiaoQuYu::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleXueXiaoQuYu::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleXueXiaoQuYu::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
}

// optional string item_end_voice = 4;
inline bool ItemJudgeRuleXueXiaoQuYu::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleXueXiaoQuYu::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleXueXiaoQuYu::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleXueXiaoQuYu::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleXueXiaoQuYu::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleXueXiaoQuYu::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
}
inline void ItemJudgeRuleXueXiaoQuYu::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
}
inline void ItemJudgeRuleXueXiaoQuYu::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
}
inline ::std::string* ItemJudgeRuleXueXiaoQuYu::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleXueXiaoQuYu::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleXueXiaoQuYu::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
}

// optional .OPMessage.CheckFinishCarPositionXueXiaoQuYu check_finish_type = 5;
inline bool ItemJudgeRuleXueXiaoQuYu::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleXueXiaoQuYu::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleXueXiaoQuYu::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleXueXiaoQuYu::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionXueXiaoQuYu ItemJudgeRuleXueXiaoQuYu::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleXueXiaoQuYu.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionXueXiaoQuYu >(check_finish_type_);
}
inline void ItemJudgeRuleXueXiaoQuYu::set_check_finish_type(::OPMessage::CheckFinishCarPositionXueXiaoQuYu value) {
  assert(::OPMessage::CheckFinishCarPositionXueXiaoQuYu_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleXueXiaoQuYu.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 6;
inline bool ItemJudgeRuleXueXiaoQuYu::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleXueXiaoQuYu::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleXueXiaoQuYu::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleXueXiaoQuYu::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
inline const ::OPMessage::BasicSlowDown& ItemJudgeRuleXueXiaoQuYu::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleXueXiaoQuYu.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleXueXiaoQuYu::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleXueXiaoQuYu.basic_slowdown)
  return basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleXueXiaoQuYu::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleXueXiaoQuYu.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
inline void ItemJudgeRuleXueXiaoQuYu::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleXueXiaoQuYu.basic_slowdown)
}

// -------------------------------------------------------------------

// ItemJudgeRuleLuKouZuoZhuan

// optional string item_enter_voice = 1;
inline bool ItemJudgeRuleLuKouZuoZhuan::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleLuKouZuoZhuan::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleLuKouZuoZhuan::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleLuKouZuoZhuan::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
}

// optional string item_leave_voice = 2;
inline bool ItemJudgeRuleLuKouZuoZhuan::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleLuKouZuoZhuan::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleLuKouZuoZhuan::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleLuKouZuoZhuan::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
}

// optional string item_start_voice = 3;
inline bool ItemJudgeRuleLuKouZuoZhuan::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleLuKouZuoZhuan::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
}
inline ::std::string* ItemJudgeRuleLuKouZuoZhuan::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleLuKouZuoZhuan::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
}

// optional string item_end_voice = 4;
inline bool ItemJudgeRuleLuKouZuoZhuan::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleLuKouZuoZhuan::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
}
inline ::std::string* ItemJudgeRuleLuKouZuoZhuan::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleLuKouZuoZhuan::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
}

// optional .OPMessage.CheckFinishCarPositionLuKouZuoZhuan check_finish_type = 5;
inline bool ItemJudgeRuleLuKouZuoZhuan::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionLuKouZuoZhuan ItemJudgeRuleLuKouZuoZhuan::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionLuKouZuoZhuan >(check_finish_type_);
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_check_finish_type(::OPMessage::CheckFinishCarPositionLuKouZuoZhuan value) {
  assert(::OPMessage::CheckFinishCarPositionLuKouZuoZhuan_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouZuoZhuan.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 6;
inline bool ItemJudgeRuleLuKouZuoZhuan::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
inline const ::OPMessage::BasicSlowDown& ItemJudgeRuleLuKouZuoZhuan::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleLuKouZuoZhuan::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouZuoZhuan.basic_slowdown)
  return basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleLuKouZuoZhuan::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouZuoZhuan.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouZuoZhuan.basic_slowdown)
}

// optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 7;
inline bool ItemJudgeRuleLuKouZuoZhuan::has_item_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_has_item_leftturnlamp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_has_item_leftturnlamp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleLuKouZuoZhuan::clear_item_leftturnlamp() {
  if (item_leftturnlamp_ != NULL) item_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_item_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleLuKouZuoZhuan::item_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leftturnlamp)
  return item_leftturnlamp_ != NULL ? *item_leftturnlamp_ : *default_instance_->item_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleLuKouZuoZhuan::mutable_item_leftturnlamp() {
  set_has_item_leftturnlamp();
  if (item_leftturnlamp_ == NULL) {
    item_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leftturnlamp)
  return item_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleLuKouZuoZhuan::release_item_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leftturnlamp)
  clear_has_item_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = item_leftturnlamp_;
  item_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleLuKouZuoZhuan::set_allocated_item_leftturnlamp(::OPMessage::BasicLeftTurnLamp* item_leftturnlamp) {
  delete item_leftturnlamp_;
  item_leftturnlamp_ = item_leftturnlamp;
  if (item_leftturnlamp) {
    set_has_item_leftturnlamp();
  } else {
    clear_has_item_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leftturnlamp)
}

// -------------------------------------------------------------------

// ItemJudgeRuleLuKouYouZhuan

// optional string item_enter_voice = 1;
inline bool ItemJudgeRuleLuKouYouZhuan::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleLuKouYouZhuan::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleLuKouYouZhuan::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouYouZhuan::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
}
inline void ItemJudgeRuleLuKouYouZhuan::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
}
inline void ItemJudgeRuleLuKouYouZhuan::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleLuKouYouZhuan::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleLuKouYouZhuan::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouYouZhuan::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
}

// optional string item_leave_voice = 2;
inline bool ItemJudgeRuleLuKouYouZhuan::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleLuKouYouZhuan::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleLuKouYouZhuan::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouYouZhuan::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
}
inline void ItemJudgeRuleLuKouYouZhuan::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
}
inline void ItemJudgeRuleLuKouYouZhuan::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleLuKouYouZhuan::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleLuKouYouZhuan::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouYouZhuan::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
}

// optional string item_start_voice = 3;
inline bool ItemJudgeRuleLuKouYouZhuan::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleLuKouYouZhuan::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleLuKouYouZhuan::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouYouZhuan::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
}
inline void ItemJudgeRuleLuKouYouZhuan::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
}
inline void ItemJudgeRuleLuKouYouZhuan::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
}
inline ::std::string* ItemJudgeRuleLuKouYouZhuan::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleLuKouYouZhuan::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouYouZhuan::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
}

// optional string item_end_voice = 4;
inline bool ItemJudgeRuleLuKouYouZhuan::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleLuKouYouZhuan::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleLuKouYouZhuan::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouYouZhuan::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
}
inline void ItemJudgeRuleLuKouYouZhuan::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
}
inline void ItemJudgeRuleLuKouYouZhuan::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
}
inline ::std::string* ItemJudgeRuleLuKouYouZhuan::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleLuKouYouZhuan::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleLuKouYouZhuan::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
}

// optional .OPMessage.CheckFinishCarPositionLuKouYouZhuan check_finish_type = 5;
inline bool ItemJudgeRuleLuKouYouZhuan::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleLuKouYouZhuan::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionLuKouYouZhuan ItemJudgeRuleLuKouYouZhuan::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionLuKouYouZhuan >(check_finish_type_);
}
inline void ItemJudgeRuleLuKouYouZhuan::set_check_finish_type(::OPMessage::CheckFinishCarPositionLuKouYouZhuan value) {
  assert(::OPMessage::CheckFinishCarPositionLuKouYouZhuan_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouYouZhuan.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 6;
inline bool ItemJudgeRuleLuKouYouZhuan::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleLuKouYouZhuan::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
inline const ::OPMessage::BasicSlowDown& ItemJudgeRuleLuKouYouZhuan::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleLuKouYouZhuan::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouYouZhuan.basic_slowdown)
  return basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleLuKouYouZhuan::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouYouZhuan.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
inline void ItemJudgeRuleLuKouYouZhuan::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouYouZhuan.basic_slowdown)
}

// optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 7;
inline bool ItemJudgeRuleLuKouYouZhuan::has_item_rightturnlamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleLuKouYouZhuan::set_has_item_rightturnlamp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_has_item_rightturnlamp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleLuKouYouZhuan::clear_item_rightturnlamp() {
  if (item_rightturnlamp_ != NULL) item_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_item_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleLuKouYouZhuan::item_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_rightturnlamp)
  return item_rightturnlamp_ != NULL ? *item_rightturnlamp_ : *default_instance_->item_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleLuKouYouZhuan::mutable_item_rightturnlamp() {
  set_has_item_rightturnlamp();
  if (item_rightturnlamp_ == NULL) {
    item_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_rightturnlamp)
  return item_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleLuKouYouZhuan::release_item_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_rightturnlamp)
  clear_has_item_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = item_rightturnlamp_;
  item_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleLuKouYouZhuan::set_allocated_item_rightturnlamp(::OPMessage::BasicRightTurnLamp* item_rightturnlamp) {
  delete item_rightturnlamp_;
  item_rightturnlamp_ = item_rightturnlamp;
  if (item_rightturnlamp) {
    set_has_item_rightturnlamp();
  } else {
    clear_has_item_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_rightturnlamp)
}

// -------------------------------------------------------------------

// ItemJudgeRuleZhiXianTongGuoLuKou

// optional string item_enter_voice = 1;
inline bool ItemJudgeRuleZhiXianTongGuoLuKou::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleZhiXianTongGuoLuKou::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
}

// optional string item_leave_voice = 2;
inline bool ItemJudgeRuleZhiXianTongGuoLuKou::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleZhiXianTongGuoLuKou::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
}

// optional string item_start_voice = 3;
inline bool ItemJudgeRuleZhiXianTongGuoLuKou::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleZhiXianTongGuoLuKou::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
}
inline ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
}

// optional string item_end_voice = 4;
inline bool ItemJudgeRuleZhiXianTongGuoLuKou::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleZhiXianTongGuoLuKou::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
}
inline ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
}

// optional .OPMessage.CheckFinishCarPositionZhiXianTongGuoLuKou check_finish_type = 5;
inline bool ItemJudgeRuleZhiXianTongGuoLuKou::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou ItemJudgeRuleZhiXianTongGuoLuKou::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou >(check_finish_type_);
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_check_finish_type(::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou value) {
  assert(::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 6;
inline bool ItemJudgeRuleZhiXianTongGuoLuKou::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
inline const ::OPMessage::BasicSlowDown& ItemJudgeRuleZhiXianTongGuoLuKou::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleZhiXianTongGuoLuKou::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.basic_slowdown)
  return basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleZhiXianTongGuoLuKou::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
inline void ItemJudgeRuleZhiXianTongGuoLuKou::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.basic_slowdown)
}

// -------------------------------------------------------------------

// ItemJudgeRuleGongGongQiCheZhan

// optional string item_enter_voice = 1;
inline bool ItemJudgeRuleGongGongQiCheZhan::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleGongGongQiCheZhan::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleGongGongQiCheZhan::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleGongGongQiCheZhan::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleGongGongQiCheZhan::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleGongGongQiCheZhan::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
}

// optional string item_leave_voice = 2;
inline bool ItemJudgeRuleGongGongQiCheZhan::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleGongGongQiCheZhan::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleGongGongQiCheZhan::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleGongGongQiCheZhan::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleGongGongQiCheZhan::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleGongGongQiCheZhan::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
}

// optional string item_start_voice = 3;
inline bool ItemJudgeRuleGongGongQiCheZhan::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleGongGongQiCheZhan::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleGongGongQiCheZhan::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleGongGongQiCheZhan::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
}
inline ::std::string* ItemJudgeRuleGongGongQiCheZhan::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleGongGongQiCheZhan::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
}

// optional string item_end_voice = 4;
inline bool ItemJudgeRuleGongGongQiCheZhan::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleGongGongQiCheZhan::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleGongGongQiCheZhan::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleGongGongQiCheZhan::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
}
inline ::std::string* ItemJudgeRuleGongGongQiCheZhan::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleGongGongQiCheZhan::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
}

// optional .OPMessage.CheckFinishCarPositionGongGongQiCheZhan check_finish_type = 5;
inline bool ItemJudgeRuleGongGongQiCheZhan::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleGongGongQiCheZhan::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleGongGongQiCheZhan::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionGongGongQiCheZhan ItemJudgeRuleGongGongQiCheZhan::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleGongGongQiCheZhan.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionGongGongQiCheZhan >(check_finish_type_);
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_check_finish_type(::OPMessage::CheckFinishCarPositionGongGongQiCheZhan value) {
  assert(::OPMessage::CheckFinishCarPositionGongGongQiCheZhan_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleGongGongQiCheZhan.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 6;
inline bool ItemJudgeRuleGongGongQiCheZhan::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleGongGongQiCheZhan::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleGongGongQiCheZhan::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
inline const ::OPMessage::BasicSlowDown& ItemJudgeRuleGongGongQiCheZhan::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleGongGongQiCheZhan.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleGongGongQiCheZhan::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleGongGongQiCheZhan.basic_slowdown)
  return basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleGongGongQiCheZhan::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleGongGongQiCheZhan.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
inline void ItemJudgeRuleGongGongQiCheZhan::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleGongGongQiCheZhan.basic_slowdown)
}

// -------------------------------------------------------------------

// ItemJudgeRuleRenXingHengDao

// optional string item_enter_voice = 1;
inline bool ItemJudgeRuleRenXingHengDao::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleRenXingHengDao::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleRenXingHengDao::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleRenXingHengDao::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleRenXingHengDao::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleRenXingHengDao::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
}
inline void ItemJudgeRuleRenXingHengDao::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
}
inline void ItemJudgeRuleRenXingHengDao::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleRenXingHengDao::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleRenXingHengDao::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleRenXingHengDao::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
}

// optional string item_leave_voice = 2;
inline bool ItemJudgeRuleRenXingHengDao::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleRenXingHengDao::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleRenXingHengDao::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleRenXingHengDao::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleRenXingHengDao::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleRenXingHengDao::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
}
inline void ItemJudgeRuleRenXingHengDao::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
}
inline void ItemJudgeRuleRenXingHengDao::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleRenXingHengDao::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleRenXingHengDao::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleRenXingHengDao::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
}

// optional string item_start_voice = 3;
inline bool ItemJudgeRuleRenXingHengDao::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleRenXingHengDao::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleRenXingHengDao::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleRenXingHengDao::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleRenXingHengDao::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleRenXingHengDao::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
}
inline void ItemJudgeRuleRenXingHengDao::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
}
inline void ItemJudgeRuleRenXingHengDao::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
}
inline ::std::string* ItemJudgeRuleRenXingHengDao::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleRenXingHengDao::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleRenXingHengDao::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
}

// optional string item_end_voice = 4;
inline bool ItemJudgeRuleRenXingHengDao::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleRenXingHengDao::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleRenXingHengDao::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleRenXingHengDao::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleRenXingHengDao::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleRenXingHengDao::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
}
inline void ItemJudgeRuleRenXingHengDao::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
}
inline void ItemJudgeRuleRenXingHengDao::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
}
inline ::std::string* ItemJudgeRuleRenXingHengDao::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleRenXingHengDao::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleRenXingHengDao::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
}

// optional .OPMessage.CheckFinishCarPositionRenXingHengDao check_finish_type = 5;
inline bool ItemJudgeRuleRenXingHengDao::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleRenXingHengDao::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleRenXingHengDao::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleRenXingHengDao::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionRenXingHengDao ItemJudgeRuleRenXingHengDao::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleRenXingHengDao.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionRenXingHengDao >(check_finish_type_);
}
inline void ItemJudgeRuleRenXingHengDao::set_check_finish_type(::OPMessage::CheckFinishCarPositionRenXingHengDao value) {
  assert(::OPMessage::CheckFinishCarPositionRenXingHengDao_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleRenXingHengDao.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 6;
inline bool ItemJudgeRuleRenXingHengDao::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleRenXingHengDao::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleRenXingHengDao::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleRenXingHengDao::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
inline const ::OPMessage::BasicSlowDown& ItemJudgeRuleRenXingHengDao::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleRenXingHengDao.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleRenXingHengDao::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleRenXingHengDao.basic_slowdown)
  return basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleRenXingHengDao::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleRenXingHengDao.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
inline void ItemJudgeRuleRenXingHengDao::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleRenXingHengDao.basic_slowdown)
}

// -------------------------------------------------------------------

// ItemJudgeRuleZhiXianXingShi

// optional string item_enter_voice = 1;
inline bool ItemJudgeRuleZhiXianXingShi::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleZhiXianXingShi::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleZhiXianXingShi::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleZhiXianXingShi::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZhiXianXingShi::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianXingShi::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
}

// optional string item_leave_voice = 2;
inline bool ItemJudgeRuleZhiXianXingShi::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleZhiXianXingShi::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleZhiXianXingShi::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleZhiXianXingShi::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZhiXianXingShi::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianXingShi::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
}

// optional string item_start_voice = 3;
inline bool ItemJudgeRuleZhiXianXingShi::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleZhiXianXingShi::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleZhiXianXingShi::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
}
inline ::std::string* ItemJudgeRuleZhiXianXingShi::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZhiXianXingShi::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianXingShi::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
}

// optional string item_end_voice = 4;
inline bool ItemJudgeRuleZhiXianXingShi::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleZhiXianXingShi::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleZhiXianXingShi::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
}
inline ::std::string* ItemJudgeRuleZhiXianXingShi::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZhiXianXingShi::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianXingShi::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
}

// optional bool item_direction_check = 5;
inline bool ItemJudgeRuleZhiXianXingShi::has_item_direction_check() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleZhiXianXingShi::set_has_item_direction_check() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_has_item_direction_check() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_item_direction_check() {
  item_direction_check_ = false;
  clear_has_item_direction_check();
}
inline bool ItemJudgeRuleZhiXianXingShi::item_direction_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_check)
  return item_direction_check_;
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_direction_check(bool value) {
  set_has_item_direction_check();
  item_direction_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_check)
}

// optional int32 item_direction_deduction = 6;
inline bool ItemJudgeRuleZhiXianXingShi::has_item_direction_deduction() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleZhiXianXingShi::set_has_item_direction_deduction() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_has_item_direction_deduction() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_item_direction_deduction() {
  item_direction_deduction_ = 0;
  clear_has_item_direction_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleZhiXianXingShi::item_direction_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_deduction)
  return item_direction_deduction_;
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_direction_deduction(::google::protobuf::int32 value) {
  set_has_item_direction_deduction();
  item_direction_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_deduction)
}

// optional int32 item_direction_angle_limit = 7;
inline bool ItemJudgeRuleZhiXianXingShi::has_item_direction_angle_limit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleZhiXianXingShi::set_has_item_direction_angle_limit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_has_item_direction_angle_limit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_item_direction_angle_limit() {
  item_direction_angle_limit_ = 0;
  clear_has_item_direction_angle_limit();
}
inline ::google::protobuf::int32 ItemJudgeRuleZhiXianXingShi::item_direction_angle_limit() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_angle_limit)
  return item_direction_angle_limit_;
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_direction_angle_limit(::google::protobuf::int32 value) {
  set_has_item_direction_angle_limit();
  item_direction_angle_limit_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_angle_limit)
}

// optional int32 item_direction_lasting_time = 8;
inline bool ItemJudgeRuleZhiXianXingShi::has_item_direction_lasting_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleZhiXianXingShi::set_has_item_direction_lasting_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_has_item_direction_lasting_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_item_direction_lasting_time() {
  item_direction_lasting_time_ = 0;
  clear_has_item_direction_lasting_time();
}
inline ::google::protobuf::int32 ItemJudgeRuleZhiXianXingShi::item_direction_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_lasting_time)
  return item_direction_lasting_time_;
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_direction_lasting_time(::google::protobuf::int32 value) {
  set_has_item_direction_lasting_time();
  item_direction_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_lasting_time)
}

// optional string item_direction_voice = 9;
inline bool ItemJudgeRuleZhiXianXingShi::has_item_direction_voice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemJudgeRuleZhiXianXingShi::set_has_item_direction_voice() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_has_item_direction_voice() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_item_direction_voice() {
  item_direction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_direction_voice();
}
inline const ::std::string& ItemJudgeRuleZhiXianXingShi::item_direction_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
  return item_direction_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_direction_voice(const ::std::string& value) {
  set_has_item_direction_voice();
  item_direction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_direction_voice(const char* value) {
  set_has_item_direction_voice();
  item_direction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
}
inline void ItemJudgeRuleZhiXianXingShi::set_item_direction_voice(const char* value, size_t size) {
  set_has_item_direction_voice();
  item_direction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
}
inline ::std::string* ItemJudgeRuleZhiXianXingShi::mutable_item_direction_voice() {
  set_has_item_direction_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
  return item_direction_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZhiXianXingShi::release_item_direction_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
  clear_has_item_direction_voice();
  return item_direction_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZhiXianXingShi::set_allocated_item_direction_voice(::std::string* item_direction_voice) {
  if (item_direction_voice != NULL) {
    set_has_item_direction_voice();
  } else {
    clear_has_item_direction_voice();
  }
  item_direction_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_direction_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
}

// optional .OPMessage.ItemJudgeDistance item_distance = 10;
inline bool ItemJudgeRuleZhiXianXingShi::has_item_distance() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemJudgeRuleZhiXianXingShi::set_has_item_distance() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_has_item_distance() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_item_distance() {
  if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
  clear_has_item_distance();
}
inline const ::OPMessage::ItemJudgeDistance& ItemJudgeRuleZhiXianXingShi::item_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_distance)
  return item_distance_ != NULL ? *item_distance_ : *default_instance_->item_distance_;
}
inline ::OPMessage::ItemJudgeDistance* ItemJudgeRuleZhiXianXingShi::mutable_item_distance() {
  set_has_item_distance();
  if (item_distance_ == NULL) {
    item_distance_ = new ::OPMessage::ItemJudgeDistance;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_distance)
  return item_distance_;
}
inline ::OPMessage::ItemJudgeDistance* ItemJudgeRuleZhiXianXingShi::release_item_distance() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_distance)
  clear_has_item_distance();
  ::OPMessage::ItemJudgeDistance* temp = item_distance_;
  item_distance_ = NULL;
  return temp;
}
inline void ItemJudgeRuleZhiXianXingShi::set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance) {
  delete item_distance_;
  item_distance_ = item_distance;
  if (item_distance) {
    set_has_item_distance();
  } else {
    clear_has_item_distance();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_distance)
}

// optional .OPMessage.ItemJudgeTime item_time = 11;
inline bool ItemJudgeRuleZhiXianXingShi::has_item_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemJudgeRuleZhiXianXingShi::set_has_item_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_has_item_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_item_time() {
  if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
  clear_has_item_time();
}
inline const ::OPMessage::ItemJudgeTime& ItemJudgeRuleZhiXianXingShi::item_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_time)
  return item_time_ != NULL ? *item_time_ : *default_instance_->item_time_;
}
inline ::OPMessage::ItemJudgeTime* ItemJudgeRuleZhiXianXingShi::mutable_item_time() {
  set_has_item_time();
  if (item_time_ == NULL) {
    item_time_ = new ::OPMessage::ItemJudgeTime;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_time)
  return item_time_;
}
inline ::OPMessage::ItemJudgeTime* ItemJudgeRuleZhiXianXingShi::release_item_time() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_time)
  clear_has_item_time();
  ::OPMessage::ItemJudgeTime* temp = item_time_;
  item_time_ = NULL;
  return temp;
}
inline void ItemJudgeRuleZhiXianXingShi::set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time) {
  delete item_time_;
  item_time_ = item_time;
  if (item_time) {
    set_has_item_time();
  } else {
    clear_has_item_time();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_time)
}

// optional .OPMessage.ItemJudgeSpeed item_speed = 12;
inline bool ItemJudgeRuleZhiXianXingShi::has_item_speed() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemJudgeRuleZhiXianXingShi::set_has_item_speed() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_has_item_speed() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_item_speed() {
  if (item_speed_ != NULL) item_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_speed();
}
inline const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleZhiXianXingShi::item_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_speed)
  return item_speed_ != NULL ? *item_speed_ : *default_instance_->item_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleZhiXianXingShi::mutable_item_speed() {
  set_has_item_speed();
  if (item_speed_ == NULL) {
    item_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_speed)
  return item_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleZhiXianXingShi::release_item_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_speed)
  clear_has_item_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_speed_;
  item_speed_ = NULL;
  return temp;
}
inline void ItemJudgeRuleZhiXianXingShi::set_allocated_item_speed(::OPMessage::ItemJudgeSpeed* item_speed) {
  delete item_speed_;
  item_speed_ = item_speed;
  if (item_speed) {
    set_has_item_speed();
  } else {
    clear_has_item_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_speed)
}

// optional .OPMessage.CheckFinishCarPositionZhiXianXingShi check_finish_type = 13;
inline bool ItemJudgeRuleZhiXianXingShi::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ItemJudgeRuleZhiXianXingShi::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ItemJudgeRuleZhiXianXingShi::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionZhiXianXingShi ItemJudgeRuleZhiXianXingShi::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionZhiXianXingShi >(check_finish_type_);
}
inline void ItemJudgeRuleZhiXianXingShi::set_check_finish_type(::OPMessage::CheckFinishCarPositionZhiXianXingShi value) {
  assert(::OPMessage::CheckFinishCarPositionZhiXianXingShi_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.check_finish_type)
}

// -------------------------------------------------------------------

// ItemJudgeRuleJiaJianDang

// optional string item_enter_voice = 1;
inline bool ItemJudgeRuleJiaJianDang::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleJiaJianDang::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleJiaJianDang::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
}
inline void ItemJudgeRuleJiaJianDang::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
}
inline void ItemJudgeRuleJiaJianDang::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleJiaJianDang::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleJiaJianDang::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleJiaJianDang::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
}

// optional string item_leave_voice = 2;
inline bool ItemJudgeRuleJiaJianDang::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleJiaJianDang::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleJiaJianDang::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
}
inline void ItemJudgeRuleJiaJianDang::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
}
inline void ItemJudgeRuleJiaJianDang::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleJiaJianDang::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleJiaJianDang::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleJiaJianDang::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
}

// optional string item_start_voice = 3;
inline bool ItemJudgeRuleJiaJianDang::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleJiaJianDang::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleJiaJianDang::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
}
inline void ItemJudgeRuleJiaJianDang::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
}
inline void ItemJudgeRuleJiaJianDang::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
}
inline ::std::string* ItemJudgeRuleJiaJianDang::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleJiaJianDang::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleJiaJianDang::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
}

// optional string item_end_voice = 4;
inline bool ItemJudgeRuleJiaJianDang::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleJiaJianDang::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleJiaJianDang::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
}
inline void ItemJudgeRuleJiaJianDang::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
}
inline void ItemJudgeRuleJiaJianDang::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
}
inline ::std::string* ItemJudgeRuleJiaJianDang::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleJiaJianDang::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleJiaJianDang::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
}

// optional .OPMessage.ItemJudgeDistance item_distance = 5;
inline bool ItemJudgeRuleJiaJianDang::has_item_distance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_distance() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_distance() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_distance() {
  if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
  clear_has_item_distance();
}
inline const ::OPMessage::ItemJudgeDistance& ItemJudgeRuleJiaJianDang::item_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_distance)
  return item_distance_ != NULL ? *item_distance_ : *default_instance_->item_distance_;
}
inline ::OPMessage::ItemJudgeDistance* ItemJudgeRuleJiaJianDang::mutable_item_distance() {
  set_has_item_distance();
  if (item_distance_ == NULL) {
    item_distance_ = new ::OPMessage::ItemJudgeDistance;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_distance)
  return item_distance_;
}
inline ::OPMessage::ItemJudgeDistance* ItemJudgeRuleJiaJianDang::release_item_distance() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_distance)
  clear_has_item_distance();
  ::OPMessage::ItemJudgeDistance* temp = item_distance_;
  item_distance_ = NULL;
  return temp;
}
inline void ItemJudgeRuleJiaJianDang::set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance) {
  delete item_distance_;
  item_distance_ = item_distance;
  if (item_distance) {
    set_has_item_distance();
  } else {
    clear_has_item_distance();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_distance)
}

// optional .OPMessage.ItemJudgeTime item_time = 6;
inline bool ItemJudgeRuleJiaJianDang::has_item_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_time() {
  if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
  clear_has_item_time();
}
inline const ::OPMessage::ItemJudgeTime& ItemJudgeRuleJiaJianDang::item_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_time)
  return item_time_ != NULL ? *item_time_ : *default_instance_->item_time_;
}
inline ::OPMessage::ItemJudgeTime* ItemJudgeRuleJiaJianDang::mutable_item_time() {
  set_has_item_time();
  if (item_time_ == NULL) {
    item_time_ = new ::OPMessage::ItemJudgeTime;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_time)
  return item_time_;
}
inline ::OPMessage::ItemJudgeTime* ItemJudgeRuleJiaJianDang::release_item_time() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_time)
  clear_has_item_time();
  ::OPMessage::ItemJudgeTime* temp = item_time_;
  item_time_ = NULL;
  return temp;
}
inline void ItemJudgeRuleJiaJianDang::set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time) {
  delete item_time_;
  item_time_ = item_time;
  if (item_time) {
    set_has_item_time();
  } else {
    clear_has_item_time();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_time)
}

// optional bool item_jiajiandang_whether_check = 7 [default = true];
inline bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_whether_check() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_whether_check() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_whether_check() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_whether_check() {
  item_jiajiandang_whether_check_ = true;
  clear_has_item_jiajiandang_whether_check();
}
inline bool ItemJudgeRuleJiaJianDang::item_jiajiandang_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_whether_check)
  return item_jiajiandang_whether_check_;
}
inline void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_whether_check(bool value) {
  set_has_item_jiajiandang_whether_check();
  item_jiajiandang_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_whether_check)
}

// optional .OPMessage.AddToLimitedGear item_jiajiandang_add_gear = 8;
inline bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_add_gear() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_add_gear() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_add_gear() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_add_gear() {
  item_jiajiandang_add_gear_ = 0;
  clear_has_item_jiajiandang_add_gear();
}
inline ::OPMessage::AddToLimitedGear ItemJudgeRuleJiaJianDang::item_jiajiandang_add_gear() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_add_gear)
  return static_cast< ::OPMessage::AddToLimitedGear >(item_jiajiandang_add_gear_);
}
inline void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_add_gear(::OPMessage::AddToLimitedGear value) {
  assert(::OPMessage::AddToLimitedGear_IsValid(value));
  set_has_item_jiajiandang_add_gear();
  item_jiajiandang_add_gear_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_add_gear)
}

// optional .OPMessage.ReduceToLimitedGear item_jiajiandang_reduce_gear = 9;
inline bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_reduce_gear() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_reduce_gear() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_reduce_gear() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_reduce_gear() {
  item_jiajiandang_reduce_gear_ = 0;
  clear_has_item_jiajiandang_reduce_gear();
}
inline ::OPMessage::ReduceToLimitedGear ItemJudgeRuleJiaJianDang::item_jiajiandang_reduce_gear() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_reduce_gear)
  return static_cast< ::OPMessage::ReduceToLimitedGear >(item_jiajiandang_reduce_gear_);
}
inline void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_reduce_gear(::OPMessage::ReduceToLimitedGear value) {
  assert(::OPMessage::ReduceToLimitedGear_IsValid(value));
  set_has_item_jiajiandang_reduce_gear();
  item_jiajiandang_reduce_gear_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_reduce_gear)
}

// optional int32 item_jiajiandang_deduction = 10;
inline bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_deduction() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_deduction() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_deduction() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_deduction() {
  item_jiajiandang_deduction_ = 0;
  clear_has_item_jiajiandang_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleJiaJianDang::item_jiajiandang_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_deduction)
  return item_jiajiandang_deduction_;
}
inline void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_deduction(::google::protobuf::int32 value) {
  set_has_item_jiajiandang_deduction();
  item_jiajiandang_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_deduction)
}

// optional string item_jiajiandang_voice = 11;
inline bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_voice() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_voice() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_voice() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_voice() {
  item_jiajiandang_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_jiajiandang_voice();
}
inline const ::std::string& ItemJudgeRuleJiaJianDang::item_jiajiandang_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
  return item_jiajiandang_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_voice(const ::std::string& value) {
  set_has_item_jiajiandang_voice();
  item_jiajiandang_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
}
inline void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_voice(const char* value) {
  set_has_item_jiajiandang_voice();
  item_jiajiandang_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
}
inline void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_voice(const char* value, size_t size) {
  set_has_item_jiajiandang_voice();
  item_jiajiandang_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
}
inline ::std::string* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_voice() {
  set_has_item_jiajiandang_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
  return item_jiajiandang_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
  clear_has_item_jiajiandang_voice();
  return item_jiajiandang_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_voice(::std::string* item_jiajiandang_voice) {
  if (item_jiajiandang_voice != NULL) {
    set_has_item_jiajiandang_voice();
  } else {
    clear_has_item_jiajiandang_voice();
  }
  item_jiajiandang_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_jiajiandang_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
}

// optional .OPMessage.ItemJudgeSpeed item_jiajiandang_one_gear_speed = 12;
inline bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_one_gear_speed() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_one_gear_speed() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_one_gear_speed() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_one_gear_speed() {
  if (item_jiajiandang_one_gear_speed_ != NULL) item_jiajiandang_one_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_jiajiandang_one_gear_speed();
}
inline const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleJiaJianDang::item_jiajiandang_one_gear_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_one_gear_speed)
  return item_jiajiandang_one_gear_speed_ != NULL ? *item_jiajiandang_one_gear_speed_ : *default_instance_->item_jiajiandang_one_gear_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_one_gear_speed() {
  set_has_item_jiajiandang_one_gear_speed();
  if (item_jiajiandang_one_gear_speed_ == NULL) {
    item_jiajiandang_one_gear_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_one_gear_speed)
  return item_jiajiandang_one_gear_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_one_gear_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_one_gear_speed)
  clear_has_item_jiajiandang_one_gear_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_jiajiandang_one_gear_speed_;
  item_jiajiandang_one_gear_speed_ = NULL;
  return temp;
}
inline void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_one_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_one_gear_speed) {
  delete item_jiajiandang_one_gear_speed_;
  item_jiajiandang_one_gear_speed_ = item_jiajiandang_one_gear_speed;
  if (item_jiajiandang_one_gear_speed) {
    set_has_item_jiajiandang_one_gear_speed();
  } else {
    clear_has_item_jiajiandang_one_gear_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_one_gear_speed)
}

// optional .OPMessage.ItemJudgeSpeed item_jiajiandang_two_gear_speed = 13;
inline bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_two_gear_speed() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_two_gear_speed() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_two_gear_speed() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_two_gear_speed() {
  if (item_jiajiandang_two_gear_speed_ != NULL) item_jiajiandang_two_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_jiajiandang_two_gear_speed();
}
inline const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleJiaJianDang::item_jiajiandang_two_gear_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_two_gear_speed)
  return item_jiajiandang_two_gear_speed_ != NULL ? *item_jiajiandang_two_gear_speed_ : *default_instance_->item_jiajiandang_two_gear_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_two_gear_speed() {
  set_has_item_jiajiandang_two_gear_speed();
  if (item_jiajiandang_two_gear_speed_ == NULL) {
    item_jiajiandang_two_gear_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_two_gear_speed)
  return item_jiajiandang_two_gear_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_two_gear_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_two_gear_speed)
  clear_has_item_jiajiandang_two_gear_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_jiajiandang_two_gear_speed_;
  item_jiajiandang_two_gear_speed_ = NULL;
  return temp;
}
inline void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_two_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_two_gear_speed) {
  delete item_jiajiandang_two_gear_speed_;
  item_jiajiandang_two_gear_speed_ = item_jiajiandang_two_gear_speed;
  if (item_jiajiandang_two_gear_speed) {
    set_has_item_jiajiandang_two_gear_speed();
  } else {
    clear_has_item_jiajiandang_two_gear_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_two_gear_speed)
}

// optional .OPMessage.ItemJudgeSpeed item_jiajiandang_three_gear_speed = 14;
inline bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_three_gear_speed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_three_gear_speed() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_three_gear_speed() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_three_gear_speed() {
  if (item_jiajiandang_three_gear_speed_ != NULL) item_jiajiandang_three_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_jiajiandang_three_gear_speed();
}
inline const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleJiaJianDang::item_jiajiandang_three_gear_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_three_gear_speed)
  return item_jiajiandang_three_gear_speed_ != NULL ? *item_jiajiandang_three_gear_speed_ : *default_instance_->item_jiajiandang_three_gear_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_three_gear_speed() {
  set_has_item_jiajiandang_three_gear_speed();
  if (item_jiajiandang_three_gear_speed_ == NULL) {
    item_jiajiandang_three_gear_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_three_gear_speed)
  return item_jiajiandang_three_gear_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_three_gear_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_three_gear_speed)
  clear_has_item_jiajiandang_three_gear_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_jiajiandang_three_gear_speed_;
  item_jiajiandang_three_gear_speed_ = NULL;
  return temp;
}
inline void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_three_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_three_gear_speed) {
  delete item_jiajiandang_three_gear_speed_;
  item_jiajiandang_three_gear_speed_ = item_jiajiandang_three_gear_speed;
  if (item_jiajiandang_three_gear_speed) {
    set_has_item_jiajiandang_three_gear_speed();
  } else {
    clear_has_item_jiajiandang_three_gear_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_three_gear_speed)
}

// optional .OPMessage.ItemJudgeSpeed item_jiajiandang_four_gear_speed = 15;
inline bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_four_gear_speed() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_four_gear_speed() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_four_gear_speed() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_four_gear_speed() {
  if (item_jiajiandang_four_gear_speed_ != NULL) item_jiajiandang_four_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_jiajiandang_four_gear_speed();
}
inline const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleJiaJianDang::item_jiajiandang_four_gear_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_four_gear_speed)
  return item_jiajiandang_four_gear_speed_ != NULL ? *item_jiajiandang_four_gear_speed_ : *default_instance_->item_jiajiandang_four_gear_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_four_gear_speed() {
  set_has_item_jiajiandang_four_gear_speed();
  if (item_jiajiandang_four_gear_speed_ == NULL) {
    item_jiajiandang_four_gear_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_four_gear_speed)
  return item_jiajiandang_four_gear_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_four_gear_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_four_gear_speed)
  clear_has_item_jiajiandang_four_gear_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_jiajiandang_four_gear_speed_;
  item_jiajiandang_four_gear_speed_ = NULL;
  return temp;
}
inline void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_four_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_four_gear_speed) {
  delete item_jiajiandang_four_gear_speed_;
  item_jiajiandang_four_gear_speed_ = item_jiajiandang_four_gear_speed;
  if (item_jiajiandang_four_gear_speed) {
    set_has_item_jiajiandang_four_gear_speed();
  } else {
    clear_has_item_jiajiandang_four_gear_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_four_gear_speed)
}

// optional .OPMessage.ItemJudgeSpeed item_jiajiandang_five_gear_speed = 16;
inline bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_five_gear_speed() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_five_gear_speed() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_five_gear_speed() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_five_gear_speed() {
  if (item_jiajiandang_five_gear_speed_ != NULL) item_jiajiandang_five_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_jiajiandang_five_gear_speed();
}
inline const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleJiaJianDang::item_jiajiandang_five_gear_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_five_gear_speed)
  return item_jiajiandang_five_gear_speed_ != NULL ? *item_jiajiandang_five_gear_speed_ : *default_instance_->item_jiajiandang_five_gear_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_five_gear_speed() {
  set_has_item_jiajiandang_five_gear_speed();
  if (item_jiajiandang_five_gear_speed_ == NULL) {
    item_jiajiandang_five_gear_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_five_gear_speed)
  return item_jiajiandang_five_gear_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_five_gear_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_five_gear_speed)
  clear_has_item_jiajiandang_five_gear_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_jiajiandang_five_gear_speed_;
  item_jiajiandang_five_gear_speed_ = NULL;
  return temp;
}
inline void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_five_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_five_gear_speed) {
  delete item_jiajiandang_five_gear_speed_;
  item_jiajiandang_five_gear_speed_ = item_jiajiandang_five_gear_speed;
  if (item_jiajiandang_five_gear_speed) {
    set_has_item_jiajiandang_five_gear_speed();
  } else {
    clear_has_item_jiajiandang_five_gear_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_five_gear_speed)
}

// optional .OPMessage.ItemJudgeSpeed item_jiajiandang_six_gear_speed = 17;
inline bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_six_gear_speed() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_six_gear_speed() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_six_gear_speed() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_six_gear_speed() {
  if (item_jiajiandang_six_gear_speed_ != NULL) item_jiajiandang_six_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_jiajiandang_six_gear_speed();
}
inline const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleJiaJianDang::item_jiajiandang_six_gear_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_six_gear_speed)
  return item_jiajiandang_six_gear_speed_ != NULL ? *item_jiajiandang_six_gear_speed_ : *default_instance_->item_jiajiandang_six_gear_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_six_gear_speed() {
  set_has_item_jiajiandang_six_gear_speed();
  if (item_jiajiandang_six_gear_speed_ == NULL) {
    item_jiajiandang_six_gear_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_six_gear_speed)
  return item_jiajiandang_six_gear_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_six_gear_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_six_gear_speed)
  clear_has_item_jiajiandang_six_gear_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_jiajiandang_six_gear_speed_;
  item_jiajiandang_six_gear_speed_ = NULL;
  return temp;
}
inline void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_six_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_six_gear_speed) {
  delete item_jiajiandang_six_gear_speed_;
  item_jiajiandang_six_gear_speed_ = item_jiajiandang_six_gear_speed;
  if (item_jiajiandang_six_gear_speed) {
    set_has_item_jiajiandang_six_gear_speed();
  } else {
    clear_has_item_jiajiandang_six_gear_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_six_gear_speed)
}

// -------------------------------------------------------------------

// ItemJudgeRuleDiaoTou

// optional string item_enter_voice = 1;
inline bool ItemJudgeRuleDiaoTou::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleDiaoTou::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleDiaoTou::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleDiaoTou::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleDiaoTou::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDiaoTou::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
}
inline void ItemJudgeRuleDiaoTou::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
}
inline void ItemJudgeRuleDiaoTou::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleDiaoTou::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDiaoTou::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDiaoTou::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
}

// optional string item_leave_voice = 2;
inline bool ItemJudgeRuleDiaoTou::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleDiaoTou::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleDiaoTou::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleDiaoTou::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleDiaoTou::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDiaoTou::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
}
inline void ItemJudgeRuleDiaoTou::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
}
inline void ItemJudgeRuleDiaoTou::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleDiaoTou::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDiaoTou::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDiaoTou::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
}

// optional string item_start_voice = 3;
inline bool ItemJudgeRuleDiaoTou::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleDiaoTou::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleDiaoTou::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleDiaoTou::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleDiaoTou::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDiaoTou::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
}
inline void ItemJudgeRuleDiaoTou::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
}
inline void ItemJudgeRuleDiaoTou::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
}
inline ::std::string* ItemJudgeRuleDiaoTou::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDiaoTou::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDiaoTou::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
}

// optional string item_end_voice = 4;
inline bool ItemJudgeRuleDiaoTou::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleDiaoTou::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleDiaoTou::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleDiaoTou::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleDiaoTou::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDiaoTou::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
}
inline void ItemJudgeRuleDiaoTou::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
}
inline void ItemJudgeRuleDiaoTou::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
}
inline ::std::string* ItemJudgeRuleDiaoTou::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDiaoTou::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDiaoTou::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
}

// optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 5;
inline bool ItemJudgeRuleDiaoTou::has_item_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleDiaoTou::set_has_item_leftturnlamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleDiaoTou::clear_has_item_leftturnlamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleDiaoTou::clear_item_leftturnlamp() {
  if (item_leftturnlamp_ != NULL) item_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_item_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDiaoTou::item_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.item_leftturnlamp)
  return item_leftturnlamp_ != NULL ? *item_leftturnlamp_ : *default_instance_->item_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDiaoTou::mutable_item_leftturnlamp() {
  set_has_item_leftturnlamp();
  if (item_leftturnlamp_ == NULL) {
    item_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDiaoTou.item_leftturnlamp)
  return item_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDiaoTou::release_item_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDiaoTou.item_leftturnlamp)
  clear_has_item_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = item_leftturnlamp_;
  item_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDiaoTou::set_allocated_item_leftturnlamp(::OPMessage::BasicLeftTurnLamp* item_leftturnlamp) {
  delete item_leftturnlamp_;
  item_leftturnlamp_ = item_leftturnlamp;
  if (item_leftturnlamp) {
    set_has_item_leftturnlamp();
  } else {
    clear_has_item_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDiaoTou.item_leftturnlamp)
}

// optional .OPMessage.CheckFinishCarPositionDiaoTou check_finish_type = 6;
inline bool ItemJudgeRuleDiaoTou::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleDiaoTou::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleDiaoTou::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleDiaoTou::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionDiaoTou ItemJudgeRuleDiaoTou::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionDiaoTou >(check_finish_type_);
}
inline void ItemJudgeRuleDiaoTou::set_check_finish_type(::OPMessage::CheckFinishCarPositionDiaoTou value) {
  assert(::OPMessage::CheckFinishCarPositionDiaoTou_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDiaoTou.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 7;
inline bool ItemJudgeRuleDiaoTou::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleDiaoTou::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleDiaoTou::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleDiaoTou::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
inline const ::OPMessage::BasicSlowDown& ItemJudgeRuleDiaoTou::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleDiaoTou::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDiaoTou.basic_slowdown)
  return basic_slowdown_;
}
inline ::OPMessage::BasicSlowDown* ItemJudgeRuleDiaoTou::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDiaoTou.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDiaoTou::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDiaoTou.basic_slowdown)
}

// -------------------------------------------------------------------

// ItemJudgeRuleBianGengCheDao

// optional string item_enter_voice = 1;
inline bool ItemJudgeRuleBianGengCheDao::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleBianGengCheDao::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleBianGengCheDao::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleBianGengCheDao::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
}
inline void ItemJudgeRuleBianGengCheDao::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
}
inline void ItemJudgeRuleBianGengCheDao::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleBianGengCheDao::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleBianGengCheDao::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleBianGengCheDao::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
}

// optional string item_leave_voice = 2;
inline bool ItemJudgeRuleBianGengCheDao::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleBianGengCheDao::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleBianGengCheDao::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleBianGengCheDao::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
}
inline void ItemJudgeRuleBianGengCheDao::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
}
inline void ItemJudgeRuleBianGengCheDao::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleBianGengCheDao::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleBianGengCheDao::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleBianGengCheDao::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
}

// optional string item_start_voice = 3;
inline bool ItemJudgeRuleBianGengCheDao::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleBianGengCheDao::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleBianGengCheDao::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleBianGengCheDao::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
}
inline void ItemJudgeRuleBianGengCheDao::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
}
inline void ItemJudgeRuleBianGengCheDao::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
}
inline ::std::string* ItemJudgeRuleBianGengCheDao::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleBianGengCheDao::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleBianGengCheDao::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
}

// optional string item_end_voice = 4;
inline bool ItemJudgeRuleBianGengCheDao::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleBianGengCheDao::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleBianGengCheDao::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleBianGengCheDao::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
}
inline void ItemJudgeRuleBianGengCheDao::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
}
inline void ItemJudgeRuleBianGengCheDao::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
}
inline ::std::string* ItemJudgeRuleBianGengCheDao::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleBianGengCheDao::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleBianGengCheDao::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
}

// optional .OPMessage.ItemJudgeDistance item_distance = 5;
inline bool ItemJudgeRuleBianGengCheDao::has_item_distance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleBianGengCheDao::set_has_item_distance() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_has_item_distance() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_item_distance() {
  if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
  clear_has_item_distance();
}
inline const ::OPMessage::ItemJudgeDistance& ItemJudgeRuleBianGengCheDao::item_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_distance)
  return item_distance_ != NULL ? *item_distance_ : *default_instance_->item_distance_;
}
inline ::OPMessage::ItemJudgeDistance* ItemJudgeRuleBianGengCheDao::mutable_item_distance() {
  set_has_item_distance();
  if (item_distance_ == NULL) {
    item_distance_ = new ::OPMessage::ItemJudgeDistance;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_distance)
  return item_distance_;
}
inline ::OPMessage::ItemJudgeDistance* ItemJudgeRuleBianGengCheDao::release_item_distance() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_distance)
  clear_has_item_distance();
  ::OPMessage::ItemJudgeDistance* temp = item_distance_;
  item_distance_ = NULL;
  return temp;
}
inline void ItemJudgeRuleBianGengCheDao::set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance) {
  delete item_distance_;
  item_distance_ = item_distance;
  if (item_distance) {
    set_has_item_distance();
  } else {
    clear_has_item_distance();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_distance)
}

// optional .OPMessage.ItemJudgeTime item_time = 6;
inline bool ItemJudgeRuleBianGengCheDao::has_item_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleBianGengCheDao::set_has_item_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_has_item_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_item_time() {
  if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
  clear_has_item_time();
}
inline const ::OPMessage::ItemJudgeTime& ItemJudgeRuleBianGengCheDao::item_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_time)
  return item_time_ != NULL ? *item_time_ : *default_instance_->item_time_;
}
inline ::OPMessage::ItemJudgeTime* ItemJudgeRuleBianGengCheDao::mutable_item_time() {
  set_has_item_time();
  if (item_time_ == NULL) {
    item_time_ = new ::OPMessage::ItemJudgeTime;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_time)
  return item_time_;
}
inline ::OPMessage::ItemJudgeTime* ItemJudgeRuleBianGengCheDao::release_item_time() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_time)
  clear_has_item_time();
  ::OPMessage::ItemJudgeTime* temp = item_time_;
  item_time_ = NULL;
  return temp;
}
inline void ItemJudgeRuleBianGengCheDao::set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time) {
  delete item_time_;
  item_time_ = item_time;
  if (item_time) {
    set_has_item_time();
  } else {
    clear_has_item_time();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_time)
}

// optional .OPMessage.ItemJudgeSpeed item_speed = 7;
inline bool ItemJudgeRuleBianGengCheDao::has_item_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleBianGengCheDao::set_has_item_speed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_has_item_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_item_speed() {
  if (item_speed_ != NULL) item_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_speed();
}
inline const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleBianGengCheDao::item_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_speed)
  return item_speed_ != NULL ? *item_speed_ : *default_instance_->item_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleBianGengCheDao::mutable_item_speed() {
  set_has_item_speed();
  if (item_speed_ == NULL) {
    item_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_speed)
  return item_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleBianGengCheDao::release_item_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_speed)
  clear_has_item_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_speed_;
  item_speed_ = NULL;
  return temp;
}
inline void ItemJudgeRuleBianGengCheDao::set_allocated_item_speed(::OPMessage::ItemJudgeSpeed* item_speed) {
  delete item_speed_;
  item_speed_ = item_speed;
  if (item_speed) {
    set_has_item_speed();
  } else {
    clear_has_item_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_speed)
}

// optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
inline bool ItemJudgeRuleBianGengCheDao::has_item_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleBianGengCheDao::set_has_item_leftturnlamp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_has_item_leftturnlamp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_item_leftturnlamp() {
  if (item_leftturnlamp_ != NULL) item_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_item_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleBianGengCheDao::item_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_leftturnlamp)
  return item_leftturnlamp_ != NULL ? *item_leftturnlamp_ : *default_instance_->item_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleBianGengCheDao::mutable_item_leftturnlamp() {
  set_has_item_leftturnlamp();
  if (item_leftturnlamp_ == NULL) {
    item_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_leftturnlamp)
  return item_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleBianGengCheDao::release_item_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_leftturnlamp)
  clear_has_item_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = item_leftturnlamp_;
  item_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleBianGengCheDao::set_allocated_item_leftturnlamp(::OPMessage::BasicLeftTurnLamp* item_leftturnlamp) {
  delete item_leftturnlamp_;
  item_leftturnlamp_ = item_leftturnlamp;
  if (item_leftturnlamp) {
    set_has_item_leftturnlamp();
  } else {
    clear_has_item_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_leftturnlamp)
}

// optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
inline bool ItemJudgeRuleBianGengCheDao::has_item_rightturnlamp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemJudgeRuleBianGengCheDao::set_has_item_rightturnlamp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_has_item_rightturnlamp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_item_rightturnlamp() {
  if (item_rightturnlamp_ != NULL) item_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_item_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleBianGengCheDao::item_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_rightturnlamp)
  return item_rightturnlamp_ != NULL ? *item_rightturnlamp_ : *default_instance_->item_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleBianGengCheDao::mutable_item_rightturnlamp() {
  set_has_item_rightturnlamp();
  if (item_rightturnlamp_ == NULL) {
    item_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_rightturnlamp)
  return item_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleBianGengCheDao::release_item_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_rightturnlamp)
  clear_has_item_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = item_rightturnlamp_;
  item_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleBianGengCheDao::set_allocated_item_rightturnlamp(::OPMessage::BasicRightTurnLamp* item_rightturnlamp) {
  delete item_rightturnlamp_;
  item_rightturnlamp_ = item_rightturnlamp;
  if (item_rightturnlamp) {
    set_has_item_rightturnlamp();
  } else {
    clear_has_item_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_rightturnlamp)
}

// optional .OPMessage.CheckFinishCarPositionBianGengCheDao check_finish_type = 10;
inline bool ItemJudgeRuleBianGengCheDao::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemJudgeRuleBianGengCheDao::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionBianGengCheDao ItemJudgeRuleBianGengCheDao::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionBianGengCheDao >(check_finish_type_);
}
inline void ItemJudgeRuleBianGengCheDao::set_check_finish_type(::OPMessage::CheckFinishCarPositionBianGengCheDao value) {
  assert(::OPMessage::CheckFinishCarPositionBianGengCheDao_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.check_finish_type)
}

// optional bool item_whether_biangengchedao_one = 11;
inline bool ItemJudgeRuleBianGengCheDao::has_item_whether_biangengchedao_one() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemJudgeRuleBianGengCheDao::set_has_item_whether_biangengchedao_one() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_has_item_whether_biangengchedao_one() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_item_whether_biangengchedao_one() {
  item_whether_biangengchedao_one_ = false;
  clear_has_item_whether_biangengchedao_one();
}
inline bool ItemJudgeRuleBianGengCheDao::item_whether_biangengchedao_one() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_whether_biangengchedao_one)
  return item_whether_biangengchedao_one_;
}
inline void ItemJudgeRuleBianGengCheDao::set_item_whether_biangengchedao_one(bool value) {
  set_has_item_whether_biangengchedao_one();
  item_whether_biangengchedao_one_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.item_whether_biangengchedao_one)
}

// optional bool item_whether_biangengchedao_two = 12;
inline bool ItemJudgeRuleBianGengCheDao::has_item_whether_biangengchedao_two() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemJudgeRuleBianGengCheDao::set_has_item_whether_biangengchedao_two() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_has_item_whether_biangengchedao_two() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemJudgeRuleBianGengCheDao::clear_item_whether_biangengchedao_two() {
  item_whether_biangengchedao_two_ = false;
  clear_has_item_whether_biangengchedao_two();
}
inline bool ItemJudgeRuleBianGengCheDao::item_whether_biangengchedao_two() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_whether_biangengchedao_two)
  return item_whether_biangengchedao_two_;
}
inline void ItemJudgeRuleBianGengCheDao::set_item_whether_biangengchedao_two(bool value) {
  set_has_item_whether_biangengchedao_two();
  item_whether_biangengchedao_two_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.item_whether_biangengchedao_two)
}

// -------------------------------------------------------------------

// ItemJudgeRuleChaoChe

// optional string item_enter_voice = 1;
inline bool ItemJudgeRuleChaoChe::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleChaoChe::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleChaoChe::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleChaoChe::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleChaoChe::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleChaoChe::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
}
inline void ItemJudgeRuleChaoChe::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
}
inline void ItemJudgeRuleChaoChe::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleChaoChe::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleChaoChe::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleChaoChe::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
}

// optional string item_leave_voice = 2;
inline bool ItemJudgeRuleChaoChe::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleChaoChe::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleChaoChe::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleChaoChe::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleChaoChe::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleChaoChe::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
}
inline void ItemJudgeRuleChaoChe::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
}
inline void ItemJudgeRuleChaoChe::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleChaoChe::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleChaoChe::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleChaoChe::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
}

// optional string item_start_voice = 3;
inline bool ItemJudgeRuleChaoChe::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleChaoChe::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleChaoChe::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleChaoChe::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleChaoChe::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleChaoChe::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
}
inline void ItemJudgeRuleChaoChe::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
}
inline void ItemJudgeRuleChaoChe::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
}
inline ::std::string* ItemJudgeRuleChaoChe::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleChaoChe::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleChaoChe::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
}

// optional string item_end_voice = 4;
inline bool ItemJudgeRuleChaoChe::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleChaoChe::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleChaoChe::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleChaoChe::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleChaoChe::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleChaoChe::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
}
inline void ItemJudgeRuleChaoChe::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
}
inline void ItemJudgeRuleChaoChe::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
}
inline ::std::string* ItemJudgeRuleChaoChe::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleChaoChe::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleChaoChe::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
}

// optional .OPMessage.ItemJudgeDistance item_distance = 5;
inline bool ItemJudgeRuleChaoChe::has_item_distance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleChaoChe::set_has_item_distance() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleChaoChe::clear_has_item_distance() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleChaoChe::clear_item_distance() {
  if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
  clear_has_item_distance();
}
inline const ::OPMessage::ItemJudgeDistance& ItemJudgeRuleChaoChe::item_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_distance)
  return item_distance_ != NULL ? *item_distance_ : *default_instance_->item_distance_;
}
inline ::OPMessage::ItemJudgeDistance* ItemJudgeRuleChaoChe::mutable_item_distance() {
  set_has_item_distance();
  if (item_distance_ == NULL) {
    item_distance_ = new ::OPMessage::ItemJudgeDistance;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_distance)
  return item_distance_;
}
inline ::OPMessage::ItemJudgeDistance* ItemJudgeRuleChaoChe::release_item_distance() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_distance)
  clear_has_item_distance();
  ::OPMessage::ItemJudgeDistance* temp = item_distance_;
  item_distance_ = NULL;
  return temp;
}
inline void ItemJudgeRuleChaoChe::set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance) {
  delete item_distance_;
  item_distance_ = item_distance;
  if (item_distance) {
    set_has_item_distance();
  } else {
    clear_has_item_distance();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_distance)
}

// optional .OPMessage.ItemJudgeTime item_time = 6;
inline bool ItemJudgeRuleChaoChe::has_item_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleChaoChe::set_has_item_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleChaoChe::clear_has_item_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleChaoChe::clear_item_time() {
  if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
  clear_has_item_time();
}
inline const ::OPMessage::ItemJudgeTime& ItemJudgeRuleChaoChe::item_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_time)
  return item_time_ != NULL ? *item_time_ : *default_instance_->item_time_;
}
inline ::OPMessage::ItemJudgeTime* ItemJudgeRuleChaoChe::mutable_item_time() {
  set_has_item_time();
  if (item_time_ == NULL) {
    item_time_ = new ::OPMessage::ItemJudgeTime;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_time)
  return item_time_;
}
inline ::OPMessage::ItemJudgeTime* ItemJudgeRuleChaoChe::release_item_time() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_time)
  clear_has_item_time();
  ::OPMessage::ItemJudgeTime* temp = item_time_;
  item_time_ = NULL;
  return temp;
}
inline void ItemJudgeRuleChaoChe::set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time) {
  delete item_time_;
  item_time_ = item_time;
  if (item_time) {
    set_has_item_time();
  } else {
    clear_has_item_time();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_time)
}

// optional .OPMessage.ItemJudgeSpeed item_speed = 7;
inline bool ItemJudgeRuleChaoChe::has_item_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleChaoChe::set_has_item_speed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleChaoChe::clear_has_item_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleChaoChe::clear_item_speed() {
  if (item_speed_ != NULL) item_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_speed();
}
inline const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleChaoChe::item_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_speed)
  return item_speed_ != NULL ? *item_speed_ : *default_instance_->item_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleChaoChe::mutable_item_speed() {
  set_has_item_speed();
  if (item_speed_ == NULL) {
    item_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_speed)
  return item_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleChaoChe::release_item_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_speed)
  clear_has_item_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_speed_;
  item_speed_ = NULL;
  return temp;
}
inline void ItemJudgeRuleChaoChe::set_allocated_item_speed(::OPMessage::ItemJudgeSpeed* item_speed) {
  delete item_speed_;
  item_speed_ = item_speed;
  if (item_speed) {
    set_has_item_speed();
  } else {
    clear_has_item_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_speed)
}

// optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
inline bool ItemJudgeRuleChaoChe::has_item_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleChaoChe::set_has_item_leftturnlamp() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeRuleChaoChe::clear_has_item_leftturnlamp() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeRuleChaoChe::clear_item_leftturnlamp() {
  if (item_leftturnlamp_ != NULL) item_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_item_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleChaoChe::item_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_leftturnlamp)
  return item_leftturnlamp_ != NULL ? *item_leftturnlamp_ : *default_instance_->item_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleChaoChe::mutable_item_leftturnlamp() {
  set_has_item_leftturnlamp();
  if (item_leftturnlamp_ == NULL) {
    item_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_leftturnlamp)
  return item_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleChaoChe::release_item_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_leftturnlamp)
  clear_has_item_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = item_leftturnlamp_;
  item_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleChaoChe::set_allocated_item_leftturnlamp(::OPMessage::BasicLeftTurnLamp* item_leftturnlamp) {
  delete item_leftturnlamp_;
  item_leftturnlamp_ = item_leftturnlamp;
  if (item_leftturnlamp) {
    set_has_item_leftturnlamp();
  } else {
    clear_has_item_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_leftturnlamp)
}

// optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
inline bool ItemJudgeRuleChaoChe::has_item_rightturnlamp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemJudgeRuleChaoChe::set_has_item_rightturnlamp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemJudgeRuleChaoChe::clear_has_item_rightturnlamp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemJudgeRuleChaoChe::clear_item_rightturnlamp() {
  if (item_rightturnlamp_ != NULL) item_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_item_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleChaoChe::item_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_rightturnlamp)
  return item_rightturnlamp_ != NULL ? *item_rightturnlamp_ : *default_instance_->item_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleChaoChe::mutable_item_rightturnlamp() {
  set_has_item_rightturnlamp();
  if (item_rightturnlamp_ == NULL) {
    item_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_rightturnlamp)
  return item_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleChaoChe::release_item_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_rightturnlamp)
  clear_has_item_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = item_rightturnlamp_;
  item_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleChaoChe::set_allocated_item_rightturnlamp(::OPMessage::BasicRightTurnLamp* item_rightturnlamp) {
  delete item_rightturnlamp_;
  item_rightturnlamp_ = item_rightturnlamp;
  if (item_rightturnlamp) {
    set_has_item_rightturnlamp();
  } else {
    clear_has_item_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_rightturnlamp)
}

// optional .OPMessage.CheckFinishCarPositionChaoChe check_finish_type = 10;
inline bool ItemJudgeRuleChaoChe::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemJudgeRuleChaoChe::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemJudgeRuleChaoChe::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemJudgeRuleChaoChe::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionChaoChe ItemJudgeRuleChaoChe::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionChaoChe >(check_finish_type_);
}
inline void ItemJudgeRuleChaoChe::set_check_finish_type(::OPMessage::CheckFinishCarPositionChaoChe value) {
  assert(::OPMessage::CheckFinishCarPositionChaoChe_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.check_finish_type)
}

// optional bool item_whether_chaoche_one = 11;
inline bool ItemJudgeRuleChaoChe::has_item_whether_chaoche_one() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemJudgeRuleChaoChe::set_has_item_whether_chaoche_one() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemJudgeRuleChaoChe::clear_has_item_whether_chaoche_one() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemJudgeRuleChaoChe::clear_item_whether_chaoche_one() {
  item_whether_chaoche_one_ = false;
  clear_has_item_whether_chaoche_one();
}
inline bool ItemJudgeRuleChaoChe::item_whether_chaoche_one() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_whether_chaoche_one)
  return item_whether_chaoche_one_;
}
inline void ItemJudgeRuleChaoChe::set_item_whether_chaoche_one(bool value) {
  set_has_item_whether_chaoche_one();
  item_whether_chaoche_one_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.item_whether_chaoche_one)
}

// optional bool item_whether_chaoche_two = 12;
inline bool ItemJudgeRuleChaoChe::has_item_whether_chaoche_two() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemJudgeRuleChaoChe::set_has_item_whether_chaoche_two() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemJudgeRuleChaoChe::clear_has_item_whether_chaoche_two() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemJudgeRuleChaoChe::clear_item_whether_chaoche_two() {
  item_whether_chaoche_two_ = false;
  clear_has_item_whether_chaoche_two();
}
inline bool ItemJudgeRuleChaoChe::item_whether_chaoche_two() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_whether_chaoche_two)
  return item_whether_chaoche_two_;
}
inline void ItemJudgeRuleChaoChe::set_item_whether_chaoche_two(bool value) {
  set_has_item_whether_chaoche_two();
  item_whether_chaoche_two_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.item_whether_chaoche_two)
}

// -------------------------------------------------------------------

// ItemJudgeRuleHuiChe

// optional string item_enter_voice = 1;
inline bool ItemJudgeRuleHuiChe::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleHuiChe::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleHuiChe::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleHuiChe::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleHuiChe::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleHuiChe::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
}
inline void ItemJudgeRuleHuiChe::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
}
inline void ItemJudgeRuleHuiChe::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleHuiChe::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleHuiChe::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleHuiChe::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
}

// optional string item_leave_voice = 2;
inline bool ItemJudgeRuleHuiChe::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleHuiChe::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleHuiChe::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleHuiChe::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleHuiChe::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleHuiChe::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
}
inline void ItemJudgeRuleHuiChe::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
}
inline void ItemJudgeRuleHuiChe::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleHuiChe::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleHuiChe::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleHuiChe::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
}

// optional string item_start_voice = 3;
inline bool ItemJudgeRuleHuiChe::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleHuiChe::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleHuiChe::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleHuiChe::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleHuiChe::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleHuiChe::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
}
inline void ItemJudgeRuleHuiChe::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
}
inline void ItemJudgeRuleHuiChe::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
}
inline ::std::string* ItemJudgeRuleHuiChe::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleHuiChe::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleHuiChe::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
}

// optional string item_end_voice = 4;
inline bool ItemJudgeRuleHuiChe::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleHuiChe::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleHuiChe::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleHuiChe::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleHuiChe::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleHuiChe::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
}
inline void ItemJudgeRuleHuiChe::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
}
inline void ItemJudgeRuleHuiChe::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
}
inline ::std::string* ItemJudgeRuleHuiChe::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleHuiChe::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleHuiChe::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
}

// optional .OPMessage.ItemJudgeDistance item_distance = 5;
inline bool ItemJudgeRuleHuiChe::has_item_distance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleHuiChe::set_has_item_distance() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleHuiChe::clear_has_item_distance() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleHuiChe::clear_item_distance() {
  if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
  clear_has_item_distance();
}
inline const ::OPMessage::ItemJudgeDistance& ItemJudgeRuleHuiChe::item_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_distance)
  return item_distance_ != NULL ? *item_distance_ : *default_instance_->item_distance_;
}
inline ::OPMessage::ItemJudgeDistance* ItemJudgeRuleHuiChe::mutable_item_distance() {
  set_has_item_distance();
  if (item_distance_ == NULL) {
    item_distance_ = new ::OPMessage::ItemJudgeDistance;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_distance)
  return item_distance_;
}
inline ::OPMessage::ItemJudgeDistance* ItemJudgeRuleHuiChe::release_item_distance() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_distance)
  clear_has_item_distance();
  ::OPMessage::ItemJudgeDistance* temp = item_distance_;
  item_distance_ = NULL;
  return temp;
}
inline void ItemJudgeRuleHuiChe::set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance) {
  delete item_distance_;
  item_distance_ = item_distance;
  if (item_distance) {
    set_has_item_distance();
  } else {
    clear_has_item_distance();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_distance)
}

// optional .OPMessage.ItemJudgeTime item_time = 6;
inline bool ItemJudgeRuleHuiChe::has_item_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleHuiChe::set_has_item_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleHuiChe::clear_has_item_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleHuiChe::clear_item_time() {
  if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
  clear_has_item_time();
}
inline const ::OPMessage::ItemJudgeTime& ItemJudgeRuleHuiChe::item_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_time)
  return item_time_ != NULL ? *item_time_ : *default_instance_->item_time_;
}
inline ::OPMessage::ItemJudgeTime* ItemJudgeRuleHuiChe::mutable_item_time() {
  set_has_item_time();
  if (item_time_ == NULL) {
    item_time_ = new ::OPMessage::ItemJudgeTime;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_time)
  return item_time_;
}
inline ::OPMessage::ItemJudgeTime* ItemJudgeRuleHuiChe::release_item_time() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_time)
  clear_has_item_time();
  ::OPMessage::ItemJudgeTime* temp = item_time_;
  item_time_ = NULL;
  return temp;
}
inline void ItemJudgeRuleHuiChe::set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time) {
  delete item_time_;
  item_time_ = item_time;
  if (item_time) {
    set_has_item_time();
  } else {
    clear_has_item_time();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_time)
}

// optional .OPMessage.ItemJudgeSpeed item_speed = 7;
inline bool ItemJudgeRuleHuiChe::has_item_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleHuiChe::set_has_item_speed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleHuiChe::clear_has_item_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleHuiChe::clear_item_speed() {
  if (item_speed_ != NULL) item_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_speed();
}
inline const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleHuiChe::item_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_speed)
  return item_speed_ != NULL ? *item_speed_ : *default_instance_->item_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleHuiChe::mutable_item_speed() {
  set_has_item_speed();
  if (item_speed_ == NULL) {
    item_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_speed)
  return item_speed_;
}
inline ::OPMessage::ItemJudgeSpeed* ItemJudgeRuleHuiChe::release_item_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_speed)
  clear_has_item_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_speed_;
  item_speed_ = NULL;
  return temp;
}
inline void ItemJudgeRuleHuiChe::set_allocated_item_speed(::OPMessage::ItemJudgeSpeed* item_speed) {
  delete item_speed_;
  item_speed_ = item_speed;
  if (item_speed) {
    set_has_item_speed();
  } else {
    clear_has_item_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_speed)
}

// -------------------------------------------------------------------

// ItemJudgeRuleZjzw

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
inline bool ItemJudgeRuleZjzw::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleZjzw::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleZjzw::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
inline const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleZjzw::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleZjzw::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.basic_event_check)
  return basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleZjzw::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
inline void ItemJudgeRuleZjzw::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.basic_event_check)
}

// optional string item_enter_voice = 2;
inline bool ItemJudgeRuleZjzw::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleZjzw::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleZjzw::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleZjzw::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZjzw::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
}
inline void ItemJudgeRuleZjzw::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
}
inline void ItemJudgeRuleZjzw::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleZjzw::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZjzw::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZjzw::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
}

// optional string item_leave_voice = 3;
inline bool ItemJudgeRuleZjzw::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleZjzw::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleZjzw::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleZjzw::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZjzw::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
}
inline void ItemJudgeRuleZjzw::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
}
inline void ItemJudgeRuleZjzw::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleZjzw::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZjzw::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZjzw::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
}

// optional string item_start_voice = 4;
inline bool ItemJudgeRuleZjzw::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleZjzw::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleZjzw::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleZjzw::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZjzw::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
}
inline void ItemJudgeRuleZjzw::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
}
inline void ItemJudgeRuleZjzw::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
}
inline ::std::string* ItemJudgeRuleZjzw::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZjzw::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZjzw::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
}

// optional string item_end_voice = 5;
inline bool ItemJudgeRuleZjzw::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleZjzw::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleZjzw::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleZjzw::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZjzw::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
}
inline void ItemJudgeRuleZjzw::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
}
inline void ItemJudgeRuleZjzw::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
}
inline ::std::string* ItemJudgeRuleZjzw::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZjzw::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZjzw::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
inline bool ItemJudgeRuleZjzw::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleZjzw::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleZjzw::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
inline ::OPMessage::enum_judge_points ItemJudgeRuleZjzw::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
inline void ItemJudgeRuleZjzw::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.judge_points_type)
}

// optional .OPMessage.CheckStartCarPositionZjzw check_start_type = 7;
inline bool ItemJudgeRuleZjzw::has_check_start_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_check_start_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleZjzw::clear_has_check_start_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleZjzw::clear_check_start_type() {
  check_start_type_ = 0;
  clear_has_check_start_type();
}
inline ::OPMessage::CheckStartCarPositionZjzw ItemJudgeRuleZjzw::check_start_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.check_start_type)
  return static_cast< ::OPMessage::CheckStartCarPositionZjzw >(check_start_type_);
}
inline void ItemJudgeRuleZjzw::set_check_start_type(::OPMessage::CheckStartCarPositionZjzw value) {
  assert(::OPMessage::CheckStartCarPositionZjzw_IsValid(value));
  set_has_check_start_type();
  check_start_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.check_start_type)
}

// optional .OPMessage.CheckFinishCarPositionZjzw check_finish_type = 8;
inline bool ItemJudgeRuleZjzw::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeRuleZjzw::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeRuleZjzw::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionZjzw ItemJudgeRuleZjzw::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionZjzw >(check_finish_type_);
}
inline void ItemJudgeRuleZjzw::set_check_finish_type(::OPMessage::CheckFinishCarPositionZjzw value) {
  assert(::OPMessage::CheckFinishCarPositionZjzw_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.check_finish_type)
}

// optional bool car_PressLine_whether_check = 9 [default = true];
inline bool ItemJudgeRuleZjzw::has_car_pressline_whether_check() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_car_pressline_whether_check() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemJudgeRuleZjzw::clear_has_car_pressline_whether_check() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemJudgeRuleZjzw::clear_car_pressline_whether_check() {
  car_pressline_whether_check_ = true;
  clear_has_car_pressline_whether_check();
}
inline bool ItemJudgeRuleZjzw::car_pressline_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.car_PressLine_whether_check)
  return car_pressline_whether_check_;
}
inline void ItemJudgeRuleZjzw::set_car_pressline_whether_check(bool value) {
  set_has_car_pressline_whether_check();
  car_pressline_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.car_PressLine_whether_check)
}

// optional int32 car_PressLine_deduction = 10 [default = 100];
inline bool ItemJudgeRuleZjzw::has_car_pressline_deduction() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_car_pressline_deduction() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemJudgeRuleZjzw::clear_has_car_pressline_deduction() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemJudgeRuleZjzw::clear_car_pressline_deduction() {
  car_pressline_deduction_ = 100;
  clear_has_car_pressline_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleZjzw::car_pressline_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.car_PressLine_deduction)
  return car_pressline_deduction_;
}
inline void ItemJudgeRuleZjzw::set_car_pressline_deduction(::google::protobuf::int32 value) {
  set_has_car_pressline_deduction();
  car_pressline_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.car_PressLine_deduction)
}

// optional string car_PressLine_voice = 11;
inline bool ItemJudgeRuleZjzw::has_car_pressline_voice() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_car_pressline_voice() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemJudgeRuleZjzw::clear_has_car_pressline_voice() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemJudgeRuleZjzw::clear_car_pressline_voice() {
  car_pressline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_pressline_voice();
}
inline const ::std::string& ItemJudgeRuleZjzw::car_pressline_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
  return car_pressline_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZjzw::set_car_pressline_voice(const ::std::string& value) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
}
inline void ItemJudgeRuleZjzw::set_car_pressline_voice(const char* value) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
}
inline void ItemJudgeRuleZjzw::set_car_pressline_voice(const char* value, size_t size) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
}
inline ::std::string* ItemJudgeRuleZjzw::mutable_car_pressline_voice() {
  set_has_car_pressline_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
  return car_pressline_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleZjzw::release_car_pressline_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
  clear_has_car_pressline_voice();
  return car_pressline_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleZjzw::set_allocated_car_pressline_voice(::std::string* car_pressline_voice) {
  if (car_pressline_voice != NULL) {
    set_has_car_pressline_voice();
  } else {
    clear_has_car_pressline_voice();
  }
  car_pressline_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_pressline_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
}

// optional bool in_area_again = 12 [default = false];
inline bool ItemJudgeRuleZjzw::has_in_area_again() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_in_area_again() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemJudgeRuleZjzw::clear_has_in_area_again() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemJudgeRuleZjzw::clear_in_area_again() {
  in_area_again_ = false;
  clear_has_in_area_again();
}
inline bool ItemJudgeRuleZjzw::in_area_again() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.in_area_again)
  return in_area_again_;
}
inline void ItemJudgeRuleZjzw::set_in_area_again(bool value) {
  set_has_in_area_again();
  in_area_again_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.in_area_again)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 13;
inline bool ItemJudgeRuleZjzw::has_event_check_leftturnlamp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_event_check_leftturnlamp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ItemJudgeRuleZjzw::clear_has_event_check_leftturnlamp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ItemJudgeRuleZjzw::clear_event_check_leftturnlamp() {
  if (event_check_leftturnlamp_ != NULL) event_check_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleZjzw::event_check_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.event_check_leftTurnLamp)
  return event_check_leftturnlamp_ != NULL ? *event_check_leftturnlamp_ : *default_instance_->event_check_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleZjzw::mutable_event_check_leftturnlamp() {
  set_has_event_check_leftturnlamp();
  if (event_check_leftturnlamp_ == NULL) {
    event_check_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.event_check_leftTurnLamp)
  return event_check_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleZjzw::release_event_check_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.event_check_leftTurnLamp)
  clear_has_event_check_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_leftturnlamp_;
  event_check_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleZjzw::set_allocated_event_check_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_leftturnlamp) {
  delete event_check_leftturnlamp_;
  event_check_leftturnlamp_ = event_check_leftturnlamp;
  if (event_check_leftturnlamp) {
    set_has_event_check_leftturnlamp();
  } else {
    clear_has_event_check_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.event_check_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_rightTurnLamp = 14;
inline bool ItemJudgeRuleZjzw::has_event_check_rightturnlamp() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ItemJudgeRuleZjzw::set_has_event_check_rightturnlamp() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ItemJudgeRuleZjzw::clear_has_event_check_rightturnlamp() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ItemJudgeRuleZjzw::clear_event_check_rightturnlamp() {
  if (event_check_rightturnlamp_ != NULL) event_check_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleZjzw::event_check_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.event_check_rightTurnLamp)
  return event_check_rightturnlamp_ != NULL ? *event_check_rightturnlamp_ : *default_instance_->event_check_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleZjzw::mutable_event_check_rightturnlamp() {
  set_has_event_check_rightturnlamp();
  if (event_check_rightturnlamp_ == NULL) {
    event_check_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.event_check_rightTurnLamp)
  return event_check_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleZjzw::release_event_check_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.event_check_rightTurnLamp)
  clear_has_event_check_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_rightturnlamp_;
  event_check_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleZjzw::set_allocated_event_check_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rightturnlamp) {
  delete event_check_rightturnlamp_;
  event_check_rightturnlamp_ = event_check_rightturnlamp;
  if (event_check_rightturnlamp) {
    set_has_event_check_rightturnlamp();
  } else {
    clear_has_event_check_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.event_check_rightTurnLamp)
}

// -------------------------------------------------------------------

// ItemJudgeRuleQxxs

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
inline bool ItemJudgeRuleQxxs::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleQxxs::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleQxxs::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleQxxs::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
inline const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleQxxs::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleQxxs::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQxxs.basic_event_check)
  return basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleQxxs::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQxxs.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
inline void ItemJudgeRuleQxxs::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQxxs.basic_event_check)
}

// optional string item_enter_voice = 2;
inline bool ItemJudgeRuleQxxs::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleQxxs::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleQxxs::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleQxxs::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleQxxs::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQxxs::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
}
inline void ItemJudgeRuleQxxs::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
}
inline void ItemJudgeRuleQxxs::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleQxxs::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleQxxs::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQxxs::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
}

// optional string item_leave_voice = 3;
inline bool ItemJudgeRuleQxxs::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleQxxs::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleQxxs::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleQxxs::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleQxxs::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQxxs::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
}
inline void ItemJudgeRuleQxxs::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
}
inline void ItemJudgeRuleQxxs::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleQxxs::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleQxxs::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQxxs::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
}

// optional string item_start_voice = 4;
inline bool ItemJudgeRuleQxxs::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleQxxs::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleQxxs::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleQxxs::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleQxxs::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQxxs::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
}
inline void ItemJudgeRuleQxxs::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
}
inline void ItemJudgeRuleQxxs::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
}
inline ::std::string* ItemJudgeRuleQxxs::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleQxxs::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQxxs::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
}

// optional string item_end_voice = 5;
inline bool ItemJudgeRuleQxxs::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleQxxs::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleQxxs::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleQxxs::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleQxxs::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQxxs::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
}
inline void ItemJudgeRuleQxxs::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
}
inline void ItemJudgeRuleQxxs::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
}
inline ::std::string* ItemJudgeRuleQxxs::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleQxxs::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQxxs::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
inline bool ItemJudgeRuleQxxs::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleQxxs::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleQxxs::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleQxxs::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
inline ::OPMessage::enum_judge_points ItemJudgeRuleQxxs::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
inline void ItemJudgeRuleQxxs::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.judge_points_type)
}

// optional .OPMessage.CheckStartCarPositionQxxs check_start_type = 7;
inline bool ItemJudgeRuleQxxs::has_check_start_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleQxxs::set_has_check_start_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleQxxs::clear_has_check_start_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleQxxs::clear_check_start_type() {
  check_start_type_ = 0;
  clear_has_check_start_type();
}
inline ::OPMessage::CheckStartCarPositionQxxs ItemJudgeRuleQxxs::check_start_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.check_start_type)
  return static_cast< ::OPMessage::CheckStartCarPositionQxxs >(check_start_type_);
}
inline void ItemJudgeRuleQxxs::set_check_start_type(::OPMessage::CheckStartCarPositionQxxs value) {
  assert(::OPMessage::CheckStartCarPositionQxxs_IsValid(value));
  set_has_check_start_type();
  check_start_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.check_start_type)
}

// optional .OPMessage.CheckFinishCarPositionQxxs check_finish_type = 8;
inline bool ItemJudgeRuleQxxs::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleQxxs::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeRuleQxxs::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeRuleQxxs::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionQxxs ItemJudgeRuleQxxs::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionQxxs >(check_finish_type_);
}
inline void ItemJudgeRuleQxxs::set_check_finish_type(::OPMessage::CheckFinishCarPositionQxxs value) {
  assert(::OPMessage::CheckFinishCarPositionQxxs_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.check_finish_type)
}

// optional bool car_PressLine_whether_check = 9 [default = true];
inline bool ItemJudgeRuleQxxs::has_car_pressline_whether_check() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemJudgeRuleQxxs::set_has_car_pressline_whether_check() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemJudgeRuleQxxs::clear_has_car_pressline_whether_check() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemJudgeRuleQxxs::clear_car_pressline_whether_check() {
  car_pressline_whether_check_ = true;
  clear_has_car_pressline_whether_check();
}
inline bool ItemJudgeRuleQxxs::car_pressline_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.car_PressLine_whether_check)
  return car_pressline_whether_check_;
}
inline void ItemJudgeRuleQxxs::set_car_pressline_whether_check(bool value) {
  set_has_car_pressline_whether_check();
  car_pressline_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.car_PressLine_whether_check)
}

// optional int32 car_PressLine_deduction = 10 [default = 100];
inline bool ItemJudgeRuleQxxs::has_car_pressline_deduction() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemJudgeRuleQxxs::set_has_car_pressline_deduction() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemJudgeRuleQxxs::clear_has_car_pressline_deduction() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemJudgeRuleQxxs::clear_car_pressline_deduction() {
  car_pressline_deduction_ = 100;
  clear_has_car_pressline_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleQxxs::car_pressline_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.car_PressLine_deduction)
  return car_pressline_deduction_;
}
inline void ItemJudgeRuleQxxs::set_car_pressline_deduction(::google::protobuf::int32 value) {
  set_has_car_pressline_deduction();
  car_pressline_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.car_PressLine_deduction)
}

// optional string car_PressLine_voice = 11;
inline bool ItemJudgeRuleQxxs::has_car_pressline_voice() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemJudgeRuleQxxs::set_has_car_pressline_voice() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemJudgeRuleQxxs::clear_has_car_pressline_voice() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemJudgeRuleQxxs::clear_car_pressline_voice() {
  car_pressline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_pressline_voice();
}
inline const ::std::string& ItemJudgeRuleQxxs::car_pressline_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
  return car_pressline_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQxxs::set_car_pressline_voice(const ::std::string& value) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
}
inline void ItemJudgeRuleQxxs::set_car_pressline_voice(const char* value) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
}
inline void ItemJudgeRuleQxxs::set_car_pressline_voice(const char* value, size_t size) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
}
inline ::std::string* ItemJudgeRuleQxxs::mutable_car_pressline_voice() {
  set_has_car_pressline_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
  return car_pressline_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleQxxs::release_car_pressline_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
  clear_has_car_pressline_voice();
  return car_pressline_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleQxxs::set_allocated_car_pressline_voice(::std::string* car_pressline_voice) {
  if (car_pressline_voice != NULL) {
    set_has_car_pressline_voice();
  } else {
    clear_has_car_pressline_voice();
  }
  car_pressline_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_pressline_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
}

// optional bool in_area_again = 12 [default = false];
inline bool ItemJudgeRuleQxxs::has_in_area_again() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemJudgeRuleQxxs::set_has_in_area_again() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemJudgeRuleQxxs::clear_has_in_area_again() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemJudgeRuleQxxs::clear_in_area_again() {
  in_area_again_ = false;
  clear_has_in_area_again();
}
inline bool ItemJudgeRuleQxxs::in_area_again() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.in_area_again)
  return in_area_again_;
}
inline void ItemJudgeRuleQxxs::set_in_area_again(bool value) {
  set_has_in_area_again();
  in_area_again_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.in_area_again)
}

// -------------------------------------------------------------------

// CftcPressLine

// optional string car_run_pressline_3_voice = 1;
inline bool CftcPressLine::has_car_run_pressline_3_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CftcPressLine::set_has_car_run_pressline_3_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CftcPressLine::clear_has_car_run_pressline_3_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CftcPressLine::clear_car_run_pressline_3_voice() {
  car_run_pressline_3_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_3_voice();
}
inline const ::std::string& CftcPressLine::car_run_pressline_3_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_3_voice)
  return car_run_pressline_3_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CftcPressLine::set_car_run_pressline_3_voice(const ::std::string& value) {
  set_has_car_run_pressline_3_voice();
  car_run_pressline_3_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_3_voice)
}
inline void CftcPressLine::set_car_run_pressline_3_voice(const char* value) {
  set_has_car_run_pressline_3_voice();
  car_run_pressline_3_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.CftcPressLine.car_run_pressline_3_voice)
}
inline void CftcPressLine::set_car_run_pressline_3_voice(const char* value, size_t size) {
  set_has_car_run_pressline_3_voice();
  car_run_pressline_3_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.CftcPressLine.car_run_pressline_3_voice)
}
inline ::std::string* CftcPressLine::mutable_car_run_pressline_3_voice() {
  set_has_car_run_pressline_3_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.CftcPressLine.car_run_pressline_3_voice)
  return car_run_pressline_3_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CftcPressLine::release_car_run_pressline_3_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.CftcPressLine.car_run_pressline_3_voice)
  clear_has_car_run_pressline_3_voice();
  return car_run_pressline_3_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CftcPressLine::set_allocated_car_run_pressline_3_voice(::std::string* car_run_pressline_3_voice) {
  if (car_run_pressline_3_voice != NULL) {
    set_has_car_run_pressline_3_voice();
  } else {
    clear_has_car_run_pressline_3_voice();
  }
  car_run_pressline_3_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_3_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CftcPressLine.car_run_pressline_3_voice)
}

// optional int32 car_run_pressline_3_deduction = 2;
inline bool CftcPressLine::has_car_run_pressline_3_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CftcPressLine::set_has_car_run_pressline_3_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CftcPressLine::clear_has_car_run_pressline_3_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CftcPressLine::clear_car_run_pressline_3_deduction() {
  car_run_pressline_3_deduction_ = 0;
  clear_has_car_run_pressline_3_deduction();
}
inline ::google::protobuf::int32 CftcPressLine::car_run_pressline_3_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_3_deduction)
  return car_run_pressline_3_deduction_;
}
inline void CftcPressLine::set_car_run_pressline_3_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_3_deduction();
  car_run_pressline_3_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_3_deduction)
}

// optional string car_run_pressline_4_voice = 3;
inline bool CftcPressLine::has_car_run_pressline_4_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CftcPressLine::set_has_car_run_pressline_4_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CftcPressLine::clear_has_car_run_pressline_4_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CftcPressLine::clear_car_run_pressline_4_voice() {
  car_run_pressline_4_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_4_voice();
}
inline const ::std::string& CftcPressLine::car_run_pressline_4_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_4_voice)
  return car_run_pressline_4_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CftcPressLine::set_car_run_pressline_4_voice(const ::std::string& value) {
  set_has_car_run_pressline_4_voice();
  car_run_pressline_4_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_4_voice)
}
inline void CftcPressLine::set_car_run_pressline_4_voice(const char* value) {
  set_has_car_run_pressline_4_voice();
  car_run_pressline_4_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.CftcPressLine.car_run_pressline_4_voice)
}
inline void CftcPressLine::set_car_run_pressline_4_voice(const char* value, size_t size) {
  set_has_car_run_pressline_4_voice();
  car_run_pressline_4_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.CftcPressLine.car_run_pressline_4_voice)
}
inline ::std::string* CftcPressLine::mutable_car_run_pressline_4_voice() {
  set_has_car_run_pressline_4_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.CftcPressLine.car_run_pressline_4_voice)
  return car_run_pressline_4_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CftcPressLine::release_car_run_pressline_4_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.CftcPressLine.car_run_pressline_4_voice)
  clear_has_car_run_pressline_4_voice();
  return car_run_pressline_4_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CftcPressLine::set_allocated_car_run_pressline_4_voice(::std::string* car_run_pressline_4_voice) {
  if (car_run_pressline_4_voice != NULL) {
    set_has_car_run_pressline_4_voice();
  } else {
    clear_has_car_run_pressline_4_voice();
  }
  car_run_pressline_4_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_4_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CftcPressLine.car_run_pressline_4_voice)
}

// optional int32 car_run_pressline_4_deduction = 4;
inline bool CftcPressLine::has_car_run_pressline_4_deduction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CftcPressLine::set_has_car_run_pressline_4_deduction() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CftcPressLine::clear_has_car_run_pressline_4_deduction() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CftcPressLine::clear_car_run_pressline_4_deduction() {
  car_run_pressline_4_deduction_ = 0;
  clear_has_car_run_pressline_4_deduction();
}
inline ::google::protobuf::int32 CftcPressLine::car_run_pressline_4_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_4_deduction)
  return car_run_pressline_4_deduction_;
}
inline void CftcPressLine::set_car_run_pressline_4_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_4_deduction();
  car_run_pressline_4_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_4_deduction)
}

// optional string car_run_pressline_7_voice = 5;
inline bool CftcPressLine::has_car_run_pressline_7_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CftcPressLine::set_has_car_run_pressline_7_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CftcPressLine::clear_has_car_run_pressline_7_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CftcPressLine::clear_car_run_pressline_7_voice() {
  car_run_pressline_7_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_7_voice();
}
inline const ::std::string& CftcPressLine::car_run_pressline_7_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_7_voice)
  return car_run_pressline_7_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CftcPressLine::set_car_run_pressline_7_voice(const ::std::string& value) {
  set_has_car_run_pressline_7_voice();
  car_run_pressline_7_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_7_voice)
}
inline void CftcPressLine::set_car_run_pressline_7_voice(const char* value) {
  set_has_car_run_pressline_7_voice();
  car_run_pressline_7_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.CftcPressLine.car_run_pressline_7_voice)
}
inline void CftcPressLine::set_car_run_pressline_7_voice(const char* value, size_t size) {
  set_has_car_run_pressline_7_voice();
  car_run_pressline_7_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.CftcPressLine.car_run_pressline_7_voice)
}
inline ::std::string* CftcPressLine::mutable_car_run_pressline_7_voice() {
  set_has_car_run_pressline_7_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.CftcPressLine.car_run_pressline_7_voice)
  return car_run_pressline_7_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CftcPressLine::release_car_run_pressline_7_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.CftcPressLine.car_run_pressline_7_voice)
  clear_has_car_run_pressline_7_voice();
  return car_run_pressline_7_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CftcPressLine::set_allocated_car_run_pressline_7_voice(::std::string* car_run_pressline_7_voice) {
  if (car_run_pressline_7_voice != NULL) {
    set_has_car_run_pressline_7_voice();
  } else {
    clear_has_car_run_pressline_7_voice();
  }
  car_run_pressline_7_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_7_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CftcPressLine.car_run_pressline_7_voice)
}

// optional int32 car_run_pressline_7_deduction = 6;
inline bool CftcPressLine::has_car_run_pressline_7_deduction() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CftcPressLine::set_has_car_run_pressline_7_deduction() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CftcPressLine::clear_has_car_run_pressline_7_deduction() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CftcPressLine::clear_car_run_pressline_7_deduction() {
  car_run_pressline_7_deduction_ = 0;
  clear_has_car_run_pressline_7_deduction();
}
inline ::google::protobuf::int32 CftcPressLine::car_run_pressline_7_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_7_deduction)
  return car_run_pressline_7_deduction_;
}
inline void CftcPressLine::set_car_run_pressline_7_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_7_deduction();
  car_run_pressline_7_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_7_deduction)
}

// optional string car_run_pressline_5_voice = 7;
inline bool CftcPressLine::has_car_run_pressline_5_voice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CftcPressLine::set_has_car_run_pressline_5_voice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CftcPressLine::clear_has_car_run_pressline_5_voice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CftcPressLine::clear_car_run_pressline_5_voice() {
  car_run_pressline_5_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_5_voice();
}
inline const ::std::string& CftcPressLine::car_run_pressline_5_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_5_voice)
  return car_run_pressline_5_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CftcPressLine::set_car_run_pressline_5_voice(const ::std::string& value) {
  set_has_car_run_pressline_5_voice();
  car_run_pressline_5_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_5_voice)
}
inline void CftcPressLine::set_car_run_pressline_5_voice(const char* value) {
  set_has_car_run_pressline_5_voice();
  car_run_pressline_5_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.CftcPressLine.car_run_pressline_5_voice)
}
inline void CftcPressLine::set_car_run_pressline_5_voice(const char* value, size_t size) {
  set_has_car_run_pressline_5_voice();
  car_run_pressline_5_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.CftcPressLine.car_run_pressline_5_voice)
}
inline ::std::string* CftcPressLine::mutable_car_run_pressline_5_voice() {
  set_has_car_run_pressline_5_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.CftcPressLine.car_run_pressline_5_voice)
  return car_run_pressline_5_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CftcPressLine::release_car_run_pressline_5_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.CftcPressLine.car_run_pressline_5_voice)
  clear_has_car_run_pressline_5_voice();
  return car_run_pressline_5_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CftcPressLine::set_allocated_car_run_pressline_5_voice(::std::string* car_run_pressline_5_voice) {
  if (car_run_pressline_5_voice != NULL) {
    set_has_car_run_pressline_5_voice();
  } else {
    clear_has_car_run_pressline_5_voice();
  }
  car_run_pressline_5_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_5_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CftcPressLine.car_run_pressline_5_voice)
}

// optional int32 car_run_pressline_5_deduction = 8;
inline bool CftcPressLine::has_car_run_pressline_5_deduction() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CftcPressLine::set_has_car_run_pressline_5_deduction() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CftcPressLine::clear_has_car_run_pressline_5_deduction() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CftcPressLine::clear_car_run_pressline_5_deduction() {
  car_run_pressline_5_deduction_ = 0;
  clear_has_car_run_pressline_5_deduction();
}
inline ::google::protobuf::int32 CftcPressLine::car_run_pressline_5_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_5_deduction)
  return car_run_pressline_5_deduction_;
}
inline void CftcPressLine::set_car_run_pressline_5_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_5_deduction();
  car_run_pressline_5_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_5_deduction)
}

// optional string car_run_pressline_9_voice = 9;
inline bool CftcPressLine::has_car_run_pressline_9_voice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CftcPressLine::set_has_car_run_pressline_9_voice() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CftcPressLine::clear_has_car_run_pressline_9_voice() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CftcPressLine::clear_car_run_pressline_9_voice() {
  car_run_pressline_9_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_9_voice();
}
inline const ::std::string& CftcPressLine::car_run_pressline_9_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_9_voice)
  return car_run_pressline_9_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CftcPressLine::set_car_run_pressline_9_voice(const ::std::string& value) {
  set_has_car_run_pressline_9_voice();
  car_run_pressline_9_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_9_voice)
}
inline void CftcPressLine::set_car_run_pressline_9_voice(const char* value) {
  set_has_car_run_pressline_9_voice();
  car_run_pressline_9_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.CftcPressLine.car_run_pressline_9_voice)
}
inline void CftcPressLine::set_car_run_pressline_9_voice(const char* value, size_t size) {
  set_has_car_run_pressline_9_voice();
  car_run_pressline_9_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.CftcPressLine.car_run_pressline_9_voice)
}
inline ::std::string* CftcPressLine::mutable_car_run_pressline_9_voice() {
  set_has_car_run_pressline_9_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.CftcPressLine.car_run_pressline_9_voice)
  return car_run_pressline_9_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CftcPressLine::release_car_run_pressline_9_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.CftcPressLine.car_run_pressline_9_voice)
  clear_has_car_run_pressline_9_voice();
  return car_run_pressline_9_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CftcPressLine::set_allocated_car_run_pressline_9_voice(::std::string* car_run_pressline_9_voice) {
  if (car_run_pressline_9_voice != NULL) {
    set_has_car_run_pressline_9_voice();
  } else {
    clear_has_car_run_pressline_9_voice();
  }
  car_run_pressline_9_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_9_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CftcPressLine.car_run_pressline_9_voice)
}

// optional int32 car_run_pressline_9_deduction = 10;
inline bool CftcPressLine::has_car_run_pressline_9_deduction() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CftcPressLine::set_has_car_run_pressline_9_deduction() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CftcPressLine::clear_has_car_run_pressline_9_deduction() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CftcPressLine::clear_car_run_pressline_9_deduction() {
  car_run_pressline_9_deduction_ = 0;
  clear_has_car_run_pressline_9_deduction();
}
inline ::google::protobuf::int32 CftcPressLine::car_run_pressline_9_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_9_deduction)
  return car_run_pressline_9_deduction_;
}
inline void CftcPressLine::set_car_run_pressline_9_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_9_deduction();
  car_run_pressline_9_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_9_deduction)
}

// repeated int32 car_pressline_nums_mutex = 11;
inline int CftcPressLine::car_pressline_nums_mutex_size() const {
  return car_pressline_nums_mutex_.size();
}
inline void CftcPressLine::clear_car_pressline_nums_mutex() {
  car_pressline_nums_mutex_.Clear();
}
inline ::google::protobuf::int32 CftcPressLine::car_pressline_nums_mutex(int index) const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_pressline_nums_mutex)
  return car_pressline_nums_mutex_.Get(index);
}
inline void CftcPressLine::set_car_pressline_nums_mutex(int index, ::google::protobuf::int32 value) {
  car_pressline_nums_mutex_.Set(index, value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_pressline_nums_mutex)
}
inline void CftcPressLine::add_car_pressline_nums_mutex(::google::protobuf::int32 value) {
  car_pressline_nums_mutex_.Add(value);
  // @@protoc_insertion_point(field_add:OPMessage.CftcPressLine.car_pressline_nums_mutex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CftcPressLine::car_pressline_nums_mutex() const {
  // @@protoc_insertion_point(field_list:OPMessage.CftcPressLine.car_pressline_nums_mutex)
  return car_pressline_nums_mutex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CftcPressLine::mutable_car_pressline_nums_mutex() {
  // @@protoc_insertion_point(field_mutable_list:OPMessage.CftcPressLine.car_pressline_nums_mutex)
  return &car_pressline_nums_mutex_;
}

// optional string car_run_pressline_2_voice = 12;
inline bool CftcPressLine::has_car_run_pressline_2_voice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CftcPressLine::set_has_car_run_pressline_2_voice() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CftcPressLine::clear_has_car_run_pressline_2_voice() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CftcPressLine::clear_car_run_pressline_2_voice() {
  car_run_pressline_2_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_2_voice();
}
inline const ::std::string& CftcPressLine::car_run_pressline_2_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_2_voice)
  return car_run_pressline_2_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CftcPressLine::set_car_run_pressline_2_voice(const ::std::string& value) {
  set_has_car_run_pressline_2_voice();
  car_run_pressline_2_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_2_voice)
}
inline void CftcPressLine::set_car_run_pressline_2_voice(const char* value) {
  set_has_car_run_pressline_2_voice();
  car_run_pressline_2_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.CftcPressLine.car_run_pressline_2_voice)
}
inline void CftcPressLine::set_car_run_pressline_2_voice(const char* value, size_t size) {
  set_has_car_run_pressline_2_voice();
  car_run_pressline_2_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.CftcPressLine.car_run_pressline_2_voice)
}
inline ::std::string* CftcPressLine::mutable_car_run_pressline_2_voice() {
  set_has_car_run_pressline_2_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.CftcPressLine.car_run_pressline_2_voice)
  return car_run_pressline_2_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CftcPressLine::release_car_run_pressline_2_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.CftcPressLine.car_run_pressline_2_voice)
  clear_has_car_run_pressline_2_voice();
  return car_run_pressline_2_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CftcPressLine::set_allocated_car_run_pressline_2_voice(::std::string* car_run_pressline_2_voice) {
  if (car_run_pressline_2_voice != NULL) {
    set_has_car_run_pressline_2_voice();
  } else {
    clear_has_car_run_pressline_2_voice();
  }
  car_run_pressline_2_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_2_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CftcPressLine.car_run_pressline_2_voice)
}

// optional int32 car_run_pressline_2_deduction = 13;
inline bool CftcPressLine::has_car_run_pressline_2_deduction() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CftcPressLine::set_has_car_run_pressline_2_deduction() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CftcPressLine::clear_has_car_run_pressline_2_deduction() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CftcPressLine::clear_car_run_pressline_2_deduction() {
  car_run_pressline_2_deduction_ = 0;
  clear_has_car_run_pressline_2_deduction();
}
inline ::google::protobuf::int32 CftcPressLine::car_run_pressline_2_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_2_deduction)
  return car_run_pressline_2_deduction_;
}
inline void CftcPressLine::set_car_run_pressline_2_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_2_deduction();
  car_run_pressline_2_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_2_deduction)
}

// -------------------------------------------------------------------

// ItemJudgeRuleCftc

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
inline bool ItemJudgeRuleCftc::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleCftc::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleCftc::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
inline const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleCftc::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleCftc::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.basic_event_check)
  return basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleCftc::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.basic_event_check)
}

// optional string item_enter_voice = 2;
inline bool ItemJudgeRuleCftc::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleCftc::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleCftc::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleCftc::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
}
inline void ItemJudgeRuleCftc::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
}
inline void ItemJudgeRuleCftc::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleCftc::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleCftc::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
}

// optional string item_leave_voice = 3;
inline bool ItemJudgeRuleCftc::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleCftc::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleCftc::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleCftc::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
}
inline void ItemJudgeRuleCftc::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
}
inline void ItemJudgeRuleCftc::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleCftc::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleCftc::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
}

// optional string item_start_voice = 4;
inline bool ItemJudgeRuleCftc::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleCftc::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleCftc::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleCftc::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.item_start_voice)
}
inline void ItemJudgeRuleCftc::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.item_start_voice)
}
inline void ItemJudgeRuleCftc::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.item_start_voice)
}
inline ::std::string* ItemJudgeRuleCftc::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleCftc::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.item_start_voice)
}

// optional string item_end_voice = 5;
inline bool ItemJudgeRuleCftc::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleCftc::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleCftc::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleCftc::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.item_end_voice)
}
inline void ItemJudgeRuleCftc::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.item_end_voice)
}
inline void ItemJudgeRuleCftc::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.item_end_voice)
}
inline ::std::string* ItemJudgeRuleCftc::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleCftc::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
inline bool ItemJudgeRuleCftc::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleCftc::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleCftc::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
inline ::OPMessage::enum_judge_points ItemJudgeRuleCftc::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
inline void ItemJudgeRuleCftc::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.judge_points_type)
}

// optional .OPMessage.CheckStartCarPositionCftc check_start_type = 7;
inline bool ItemJudgeRuleCftc::has_check_start_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_check_start_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleCftc::clear_has_check_start_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleCftc::clear_check_start_type() {
  check_start_type_ = 0;
  clear_has_check_start_type();
}
inline ::OPMessage::CheckStartCarPositionCftc ItemJudgeRuleCftc::check_start_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.check_start_type)
  return static_cast< ::OPMessage::CheckStartCarPositionCftc >(check_start_type_);
}
inline void ItemJudgeRuleCftc::set_check_start_type(::OPMessage::CheckStartCarPositionCftc value) {
  assert(::OPMessage::CheckStartCarPositionCftc_IsValid(value));
  set_has_check_start_type();
  check_start_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.check_start_type)
}

// optional .OPMessage.CheckFinishCarPositionCftc check_finish_type = 8;
inline bool ItemJudgeRuleCftc::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeRuleCftc::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeRuleCftc::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionCftc ItemJudgeRuleCftc::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionCftc >(check_finish_type_);
}
inline void ItemJudgeRuleCftc::set_check_finish_type(::OPMessage::CheckFinishCarPositionCftc value) {
  assert(::OPMessage::CheckFinishCarPositionCftc_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.check_finish_type)
}

// optional bool car_run_error_whether_check = 9 [default = true];
inline bool ItemJudgeRuleCftc::has_car_run_error_whether_check() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_car_run_error_whether_check() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemJudgeRuleCftc::clear_has_car_run_error_whether_check() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemJudgeRuleCftc::clear_car_run_error_whether_check() {
  car_run_error_whether_check_ = true;
  clear_has_car_run_error_whether_check();
}
inline bool ItemJudgeRuleCftc::car_run_error_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_run_error_whether_check)
  return car_run_error_whether_check_;
}
inline void ItemJudgeRuleCftc::set_car_run_error_whether_check(bool value) {
  set_has_car_run_error_whether_check();
  car_run_error_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_run_error_whether_check)
}

// optional string car_run_error_voice = 10;
inline bool ItemJudgeRuleCftc::has_car_run_error_voice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_car_run_error_voice() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemJudgeRuleCftc::clear_has_car_run_error_voice() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemJudgeRuleCftc::clear_car_run_error_voice() {
  car_run_error_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_error_voice();
}
inline const ::std::string& ItemJudgeRuleCftc::car_run_error_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
  return car_run_error_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_car_run_error_voice(const ::std::string& value) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
}
inline void ItemJudgeRuleCftc::set_car_run_error_voice(const char* value) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
}
inline void ItemJudgeRuleCftc::set_car_run_error_voice(const char* value, size_t size) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
}
inline ::std::string* ItemJudgeRuleCftc::mutable_car_run_error_voice() {
  set_has_car_run_error_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
  return car_run_error_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleCftc::release_car_run_error_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
  clear_has_car_run_error_voice();
  return car_run_error_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_allocated_car_run_error_voice(::std::string* car_run_error_voice) {
  if (car_run_error_voice != NULL) {
    set_has_car_run_error_voice();
  } else {
    clear_has_car_run_error_voice();
  }
  car_run_error_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_error_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
}

// optional int32 car_run_error_deduction = 11;
inline bool ItemJudgeRuleCftc::has_car_run_error_deduction() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_car_run_error_deduction() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemJudgeRuleCftc::clear_has_car_run_error_deduction() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemJudgeRuleCftc::clear_car_run_error_deduction() {
  car_run_error_deduction_ = 0;
  clear_has_car_run_error_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleCftc::car_run_error_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_run_error_deduction)
  return car_run_error_deduction_;
}
inline void ItemJudgeRuleCftc::set_car_run_error_deduction(::google::protobuf::int32 value) {
  set_has_car_run_error_deduction();
  car_run_error_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_run_error_deduction)
}

// optional string car_rk_check_right_voice = 12;
inline bool ItemJudgeRuleCftc::has_car_rk_check_right_voice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_car_rk_check_right_voice() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemJudgeRuleCftc::clear_has_car_rk_check_right_voice() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemJudgeRuleCftc::clear_car_rk_check_right_voice() {
  car_rk_check_right_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_rk_check_right_voice();
}
inline const ::std::string& ItemJudgeRuleCftc::car_rk_check_right_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
  return car_rk_check_right_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_car_rk_check_right_voice(const ::std::string& value) {
  set_has_car_rk_check_right_voice();
  car_rk_check_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
}
inline void ItemJudgeRuleCftc::set_car_rk_check_right_voice(const char* value) {
  set_has_car_rk_check_right_voice();
  car_rk_check_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
}
inline void ItemJudgeRuleCftc::set_car_rk_check_right_voice(const char* value, size_t size) {
  set_has_car_rk_check_right_voice();
  car_rk_check_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
}
inline ::std::string* ItemJudgeRuleCftc::mutable_car_rk_check_right_voice() {
  set_has_car_rk_check_right_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
  return car_rk_check_right_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleCftc::release_car_rk_check_right_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
  clear_has_car_rk_check_right_voice();
  return car_rk_check_right_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_allocated_car_rk_check_right_voice(::std::string* car_rk_check_right_voice) {
  if (car_rk_check_right_voice != NULL) {
    set_has_car_rk_check_right_voice();
  } else {
    clear_has_car_rk_check_right_voice();
  }
  car_rk_check_right_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_rk_check_right_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
}

// optional string car_rk_check_fail_voice = 13;
inline bool ItemJudgeRuleCftc::has_car_rk_check_fail_voice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_car_rk_check_fail_voice() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ItemJudgeRuleCftc::clear_has_car_rk_check_fail_voice() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ItemJudgeRuleCftc::clear_car_rk_check_fail_voice() {
  car_rk_check_fail_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_rk_check_fail_voice();
}
inline const ::std::string& ItemJudgeRuleCftc::car_rk_check_fail_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
  return car_rk_check_fail_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_car_rk_check_fail_voice(const ::std::string& value) {
  set_has_car_rk_check_fail_voice();
  car_rk_check_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
}
inline void ItemJudgeRuleCftc::set_car_rk_check_fail_voice(const char* value) {
  set_has_car_rk_check_fail_voice();
  car_rk_check_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
}
inline void ItemJudgeRuleCftc::set_car_rk_check_fail_voice(const char* value, size_t size) {
  set_has_car_rk_check_fail_voice();
  car_rk_check_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
}
inline ::std::string* ItemJudgeRuleCftc::mutable_car_rk_check_fail_voice() {
  set_has_car_rk_check_fail_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
  return car_rk_check_fail_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleCftc::release_car_rk_check_fail_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
  clear_has_car_rk_check_fail_voice();
  return car_rk_check_fail_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_allocated_car_rk_check_fail_voice(::std::string* car_rk_check_fail_voice) {
  if (car_rk_check_fail_voice != NULL) {
    set_has_car_rk_check_fail_voice();
  } else {
    clear_has_car_rk_check_fail_voice();
  }
  car_rk_check_fail_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_rk_check_fail_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
}

// optional int32 car_rk_check_fail_deduction = 14;
inline bool ItemJudgeRuleCftc::has_car_rk_check_fail_deduction() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_car_rk_check_fail_deduction() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ItemJudgeRuleCftc::clear_has_car_rk_check_fail_deduction() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ItemJudgeRuleCftc::clear_car_rk_check_fail_deduction() {
  car_rk_check_fail_deduction_ = 0;
  clear_has_car_rk_check_fail_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleCftc::car_rk_check_fail_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_deduction)
  return car_rk_check_fail_deduction_;
}
inline void ItemJudgeRuleCftc::set_car_rk_check_fail_deduction(::google::protobuf::int32 value) {
  set_has_car_rk_check_fail_deduction();
  car_rk_check_fail_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_deduction)
}

// optional .OPMessage.CftcPressLine forwarding_pressline = 15;
inline bool ItemJudgeRuleCftc::has_forwarding_pressline() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_forwarding_pressline() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ItemJudgeRuleCftc::clear_has_forwarding_pressline() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ItemJudgeRuleCftc::clear_forwarding_pressline() {
  if (forwarding_pressline_ != NULL) forwarding_pressline_->::OPMessage::CftcPressLine::Clear();
  clear_has_forwarding_pressline();
}
inline const ::OPMessage::CftcPressLine& ItemJudgeRuleCftc::forwarding_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.forwarding_pressline)
  return forwarding_pressline_ != NULL ? *forwarding_pressline_ : *default_instance_->forwarding_pressline_;
}
inline ::OPMessage::CftcPressLine* ItemJudgeRuleCftc::mutable_forwarding_pressline() {
  set_has_forwarding_pressline();
  if (forwarding_pressline_ == NULL) {
    forwarding_pressline_ = new ::OPMessage::CftcPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.forwarding_pressline)
  return forwarding_pressline_;
}
inline ::OPMessage::CftcPressLine* ItemJudgeRuleCftc::release_forwarding_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.forwarding_pressline)
  clear_has_forwarding_pressline();
  ::OPMessage::CftcPressLine* temp = forwarding_pressline_;
  forwarding_pressline_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_forwarding_pressline(::OPMessage::CftcPressLine* forwarding_pressline) {
  delete forwarding_pressline_;
  forwarding_pressline_ = forwarding_pressline;
  if (forwarding_pressline) {
    set_has_forwarding_pressline();
  } else {
    clear_has_forwarding_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.forwarding_pressline)
}

// optional .OPMessage.BasicRightTurnLamp event_check_rking_rightTurnLamp = 16;
inline bool ItemJudgeRuleCftc::has_event_check_rking_rightturnlamp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_event_check_rking_rightturnlamp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ItemJudgeRuleCftc::clear_has_event_check_rking_rightturnlamp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ItemJudgeRuleCftc::clear_event_check_rking_rightturnlamp() {
  if (event_check_rking_rightturnlamp_ != NULL) event_check_rking_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_rking_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleCftc::event_check_rking_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_rking_rightTurnLamp)
  return event_check_rking_rightturnlamp_ != NULL ? *event_check_rking_rightturnlamp_ : *default_instance_->event_check_rking_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::mutable_event_check_rking_rightturnlamp() {
  set_has_event_check_rking_rightturnlamp();
  if (event_check_rking_rightturnlamp_ == NULL) {
    event_check_rking_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_rking_rightTurnLamp)
  return event_check_rking_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::release_event_check_rking_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_rking_rightTurnLamp)
  clear_has_event_check_rking_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_rking_rightturnlamp_;
  event_check_rking_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_event_check_rking_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rking_rightturnlamp) {
  delete event_check_rking_rightturnlamp_;
  event_check_rking_rightturnlamp_ = event_check_rking_rightturnlamp;
  if (event_check_rking_rightturnlamp) {
    set_has_event_check_rking_rightturnlamp();
  } else {
    clear_has_event_check_rking_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_rking_rightTurnLamp)
}

// optional .OPMessage.CftcPressLine rking_pressline = 17;
inline bool ItemJudgeRuleCftc::has_rking_pressline() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_rking_pressline() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ItemJudgeRuleCftc::clear_has_rking_pressline() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ItemJudgeRuleCftc::clear_rking_pressline() {
  if (rking_pressline_ != NULL) rking_pressline_->::OPMessage::CftcPressLine::Clear();
  clear_has_rking_pressline();
}
inline const ::OPMessage::CftcPressLine& ItemJudgeRuleCftc::rking_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.rking_pressline)
  return rking_pressline_ != NULL ? *rking_pressline_ : *default_instance_->rking_pressline_;
}
inline ::OPMessage::CftcPressLine* ItemJudgeRuleCftc::mutable_rking_pressline() {
  set_has_rking_pressline();
  if (rking_pressline_ == NULL) {
    rking_pressline_ = new ::OPMessage::CftcPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.rking_pressline)
  return rking_pressline_;
}
inline ::OPMessage::CftcPressLine* ItemJudgeRuleCftc::release_rking_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.rking_pressline)
  clear_has_rking_pressline();
  ::OPMessage::CftcPressLine* temp = rking_pressline_;
  rking_pressline_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_rking_pressline(::OPMessage::CftcPressLine* rking_pressline) {
  delete rking_pressline_;
  rking_pressline_ = rking_pressline;
  if (rking_pressline) {
    set_has_rking_pressline();
  } else {
    clear_has_rking_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.rking_pressline)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 18;
inline bool ItemJudgeRuleCftc::has_event_check_cking_leftturnlamp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_event_check_cking_leftturnlamp() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ItemJudgeRuleCftc::clear_has_event_check_cking_leftturnlamp() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ItemJudgeRuleCftc::clear_event_check_cking_leftturnlamp() {
  if (event_check_cking_leftturnlamp_ != NULL) event_check_cking_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_cking_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleCftc::event_check_cking_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_cking_leftTurnLamp)
  return event_check_cking_leftturnlamp_ != NULL ? *event_check_cking_leftturnlamp_ : *default_instance_->event_check_cking_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleCftc::mutable_event_check_cking_leftturnlamp() {
  set_has_event_check_cking_leftturnlamp();
  if (event_check_cking_leftturnlamp_ == NULL) {
    event_check_cking_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_cking_leftTurnLamp)
  return event_check_cking_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleCftc::release_event_check_cking_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_cking_leftTurnLamp)
  clear_has_event_check_cking_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_cking_leftturnlamp_;
  event_check_cking_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_event_check_cking_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_cking_leftturnlamp) {
  delete event_check_cking_leftturnlamp_;
  event_check_cking_leftturnlamp_ = event_check_cking_leftturnlamp;
  if (event_check_cking_leftturnlamp) {
    set_has_event_check_cking_leftturnlamp();
  } else {
    clear_has_event_check_cking_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_cking_leftTurnLamp)
}

// optional .OPMessage.CftcPressLine cking_pressline = 19;
inline bool ItemJudgeRuleCftc::has_cking_pressline() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_cking_pressline() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ItemJudgeRuleCftc::clear_has_cking_pressline() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ItemJudgeRuleCftc::clear_cking_pressline() {
  if (cking_pressline_ != NULL) cking_pressline_->::OPMessage::CftcPressLine::Clear();
  clear_has_cking_pressline();
}
inline const ::OPMessage::CftcPressLine& ItemJudgeRuleCftc::cking_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.cking_pressline)
  return cking_pressline_ != NULL ? *cking_pressline_ : *default_instance_->cking_pressline_;
}
inline ::OPMessage::CftcPressLine* ItemJudgeRuleCftc::mutable_cking_pressline() {
  set_has_cking_pressline();
  if (cking_pressline_ == NULL) {
    cking_pressline_ = new ::OPMessage::CftcPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.cking_pressline)
  return cking_pressline_;
}
inline ::OPMessage::CftcPressLine* ItemJudgeRuleCftc::release_cking_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.cking_pressline)
  clear_has_cking_pressline();
  ::OPMessage::CftcPressLine* temp = cking_pressline_;
  cking_pressline_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_cking_pressline(::OPMessage::CftcPressLine* cking_pressline) {
  delete cking_pressline_;
  cking_pressline_ = cking_pressline;
  if (cking_pressline) {
    set_has_cking_pressline();
  } else {
    clear_has_cking_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.cking_pressline)
}

// optional string car_run_not_staff_command_voice = 20;
inline bool ItemJudgeRuleCftc::has_car_run_not_staff_command_voice() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_car_run_not_staff_command_voice() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ItemJudgeRuleCftc::clear_has_car_run_not_staff_command_voice() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ItemJudgeRuleCftc::clear_car_run_not_staff_command_voice() {
  car_run_not_staff_command_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_not_staff_command_voice();
}
inline const ::std::string& ItemJudgeRuleCftc::car_run_not_staff_command_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
  return car_run_not_staff_command_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_car_run_not_staff_command_voice(const ::std::string& value) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
}
inline void ItemJudgeRuleCftc::set_car_run_not_staff_command_voice(const char* value) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
}
inline void ItemJudgeRuleCftc::set_car_run_not_staff_command_voice(const char* value, size_t size) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
}
inline ::std::string* ItemJudgeRuleCftc::mutable_car_run_not_staff_command_voice() {
  set_has_car_run_not_staff_command_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
  return car_run_not_staff_command_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleCftc::release_car_run_not_staff_command_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
  clear_has_car_run_not_staff_command_voice();
  return car_run_not_staff_command_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleCftc::set_allocated_car_run_not_staff_command_voice(::std::string* car_run_not_staff_command_voice) {
  if (car_run_not_staff_command_voice != NULL) {
    set_has_car_run_not_staff_command_voice();
  } else {
    clear_has_car_run_not_staff_command_voice();
  }
  car_run_not_staff_command_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_not_staff_command_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
}

// optional int32 car_run_not_staff_command_deduction = 21;
inline bool ItemJudgeRuleCftc::has_car_run_not_staff_command_deduction() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_car_run_not_staff_command_deduction() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ItemJudgeRuleCftc::clear_has_car_run_not_staff_command_deduction() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ItemJudgeRuleCftc::clear_car_run_not_staff_command_deduction() {
  car_run_not_staff_command_deduction_ = 0;
  clear_has_car_run_not_staff_command_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleCftc::car_run_not_staff_command_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_deduction)
  return car_run_not_staff_command_deduction_;
}
inline void ItemJudgeRuleCftc::set_car_run_not_staff_command_deduction(::google::protobuf::int32 value) {
  set_has_car_run_not_staff_command_deduction();
  car_run_not_staff_command_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_deduction)
}

// optional bool in_area_again = 22 [default = false];
inline bool ItemJudgeRuleCftc::has_in_area_again() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_in_area_again() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ItemJudgeRuleCftc::clear_has_in_area_again() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ItemJudgeRuleCftc::clear_in_area_again() {
  in_area_again_ = false;
  clear_has_in_area_again();
}
inline bool ItemJudgeRuleCftc::in_area_again() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.in_area_again)
  return in_area_again_;
}
inline void ItemJudgeRuleCftc::set_in_area_again(bool value) {
  set_has_in_area_again();
  in_area_again_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.in_area_again)
}

// optional int32 car_rk_check_delay_time = 23 [default = 0];
inline bool ItemJudgeRuleCftc::has_car_rk_check_delay_time() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_car_rk_check_delay_time() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ItemJudgeRuleCftc::clear_has_car_rk_check_delay_time() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ItemJudgeRuleCftc::clear_car_rk_check_delay_time() {
  car_rk_check_delay_time_ = 0;
  clear_has_car_rk_check_delay_time();
}
inline ::google::protobuf::int32 ItemJudgeRuleCftc::car_rk_check_delay_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_rk_check_delay_time)
  return car_rk_check_delay_time_;
}
inline void ItemJudgeRuleCftc::set_car_rk_check_delay_time(::google::protobuf::int32 value) {
  set_has_car_rk_check_delay_time();
  car_rk_check_delay_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_rk_check_delay_time)
}

// optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 24;
inline bool ItemJudgeRuleCftc::has_event_check_forwarding_rightturnlamp() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_event_check_forwarding_rightturnlamp() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ItemJudgeRuleCftc::clear_has_event_check_forwarding_rightturnlamp() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ItemJudgeRuleCftc::clear_event_check_forwarding_rightturnlamp() {
  if (event_check_forwarding_rightturnlamp_ != NULL) event_check_forwarding_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_forwarding_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleCftc::event_check_forwarding_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_forwarding_rightTurnLamp)
  return event_check_forwarding_rightturnlamp_ != NULL ? *event_check_forwarding_rightturnlamp_ : *default_instance_->event_check_forwarding_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::mutable_event_check_forwarding_rightturnlamp() {
  set_has_event_check_forwarding_rightturnlamp();
  if (event_check_forwarding_rightturnlamp_ == NULL) {
    event_check_forwarding_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_forwarding_rightTurnLamp)
  return event_check_forwarding_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::release_event_check_forwarding_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_forwarding_rightTurnLamp)
  clear_has_event_check_forwarding_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_forwarding_rightturnlamp_;
  event_check_forwarding_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_event_check_forwarding_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_forwarding_rightturnlamp) {
  delete event_check_forwarding_rightturnlamp_;
  event_check_forwarding_rightturnlamp_ = event_check_forwarding_rightturnlamp;
  if (event_check_forwarding_rightturnlamp) {
    set_has_event_check_forwarding_rightturnlamp();
  } else {
    clear_has_event_check_forwarding_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_forwarding_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_leftTurnLamp = 25;
inline bool ItemJudgeRuleCftc::has_event_check_waitrk_leftturnlamp() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_event_check_waitrk_leftturnlamp() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ItemJudgeRuleCftc::clear_has_event_check_waitrk_leftturnlamp() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ItemJudgeRuleCftc::clear_event_check_waitrk_leftturnlamp() {
  if (event_check_waitrk_leftturnlamp_ != NULL) event_check_waitrk_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_waitrk_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleCftc::event_check_waitrk_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_leftTurnLamp)
  return event_check_waitrk_leftturnlamp_ != NULL ? *event_check_waitrk_leftturnlamp_ : *default_instance_->event_check_waitrk_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleCftc::mutable_event_check_waitrk_leftturnlamp() {
  set_has_event_check_waitrk_leftturnlamp();
  if (event_check_waitrk_leftturnlamp_ == NULL) {
    event_check_waitrk_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_leftTurnLamp)
  return event_check_waitrk_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleCftc::release_event_check_waitrk_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_leftTurnLamp)
  clear_has_event_check_waitrk_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_waitrk_leftturnlamp_;
  event_check_waitrk_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_event_check_waitrk_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_waitrk_leftturnlamp) {
  delete event_check_waitrk_leftturnlamp_;
  event_check_waitrk_leftturnlamp_ = event_check_waitrk_leftturnlamp;
  if (event_check_waitrk_leftturnlamp) {
    set_has_event_check_waitrk_leftturnlamp();
  } else {
    clear_has_event_check_waitrk_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_waitrk_rightTurnLamp = 26;
inline bool ItemJudgeRuleCftc::has_event_check_waitrk_rightturnlamp() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_event_check_waitrk_rightturnlamp() {
  _has_bits_[0] |= 0x02000000u;
}
inline void ItemJudgeRuleCftc::clear_has_event_check_waitrk_rightturnlamp() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void ItemJudgeRuleCftc::clear_event_check_waitrk_rightturnlamp() {
  if (event_check_waitrk_rightturnlamp_ != NULL) event_check_waitrk_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_waitrk_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleCftc::event_check_waitrk_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_rightTurnLamp)
  return event_check_waitrk_rightturnlamp_ != NULL ? *event_check_waitrk_rightturnlamp_ : *default_instance_->event_check_waitrk_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::mutable_event_check_waitrk_rightturnlamp() {
  set_has_event_check_waitrk_rightturnlamp();
  if (event_check_waitrk_rightturnlamp_ == NULL) {
    event_check_waitrk_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_rightTurnLamp)
  return event_check_waitrk_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::release_event_check_waitrk_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_rightTurnLamp)
  clear_has_event_check_waitrk_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_waitrk_rightturnlamp_;
  event_check_waitrk_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_event_check_waitrk_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_waitrk_rightturnlamp) {
  delete event_check_waitrk_rightturnlamp_;
  event_check_waitrk_rightturnlamp_ = event_check_waitrk_rightturnlamp;
  if (event_check_waitrk_rightturnlamp) {
    set_has_event_check_waitrk_rightturnlamp();
  } else {
    clear_has_event_check_waitrk_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_rkend_leftTurnLamp = 27;
inline bool ItemJudgeRuleCftc::has_event_check_rkend_leftturnlamp() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_event_check_rkend_leftturnlamp() {
  _has_bits_[0] |= 0x04000000u;
}
inline void ItemJudgeRuleCftc::clear_has_event_check_rkend_leftturnlamp() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void ItemJudgeRuleCftc::clear_event_check_rkend_leftturnlamp() {
  if (event_check_rkend_leftturnlamp_ != NULL) event_check_rkend_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_rkend_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleCftc::event_check_rkend_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_rkend_leftTurnLamp)
  return event_check_rkend_leftturnlamp_ != NULL ? *event_check_rkend_leftturnlamp_ : *default_instance_->event_check_rkend_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleCftc::mutable_event_check_rkend_leftturnlamp() {
  set_has_event_check_rkend_leftturnlamp();
  if (event_check_rkend_leftturnlamp_ == NULL) {
    event_check_rkend_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_rkend_leftTurnLamp)
  return event_check_rkend_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleCftc::release_event_check_rkend_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_rkend_leftTurnLamp)
  clear_has_event_check_rkend_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_rkend_leftturnlamp_;
  event_check_rkend_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_event_check_rkend_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_rkend_leftturnlamp) {
  delete event_check_rkend_leftturnlamp_;
  event_check_rkend_leftturnlamp_ = event_check_rkend_leftturnlamp;
  if (event_check_rkend_leftturnlamp) {
    set_has_event_check_rkend_leftturnlamp();
  } else {
    clear_has_event_check_rkend_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_rkend_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_rkend_rightTurnLamp = 28;
inline bool ItemJudgeRuleCftc::has_event_check_rkend_rightturnlamp() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_event_check_rkend_rightturnlamp() {
  _has_bits_[0] |= 0x08000000u;
}
inline void ItemJudgeRuleCftc::clear_has_event_check_rkend_rightturnlamp() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void ItemJudgeRuleCftc::clear_event_check_rkend_rightturnlamp() {
  if (event_check_rkend_rightturnlamp_ != NULL) event_check_rkend_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_rkend_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleCftc::event_check_rkend_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_rkend_rightTurnLamp)
  return event_check_rkend_rightturnlamp_ != NULL ? *event_check_rkend_rightturnlamp_ : *default_instance_->event_check_rkend_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::mutable_event_check_rkend_rightturnlamp() {
  set_has_event_check_rkend_rightturnlamp();
  if (event_check_rkend_rightturnlamp_ == NULL) {
    event_check_rkend_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_rkend_rightTurnLamp)
  return event_check_rkend_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::release_event_check_rkend_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_rkend_rightTurnLamp)
  clear_has_event_check_rkend_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_rkend_rightturnlamp_;
  event_check_rkend_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_event_check_rkend_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rkend_rightturnlamp) {
  delete event_check_rkend_rightturnlamp_;
  event_check_rkend_rightturnlamp_ = event_check_rkend_rightturnlamp;
  if (event_check_rkend_rightturnlamp) {
    set_has_event_check_rkend_rightturnlamp();
  } else {
    clear_has_event_check_rkend_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_rkend_rightTurnLamp)
}

// optional .OPMessage.CftcPressLine carwheel_forwarding_pressline = 29;
inline bool ItemJudgeRuleCftc::has_carwheel_forwarding_pressline() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_carwheel_forwarding_pressline() {
  _has_bits_[0] |= 0x10000000u;
}
inline void ItemJudgeRuleCftc::clear_has_carwheel_forwarding_pressline() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void ItemJudgeRuleCftc::clear_carwheel_forwarding_pressline() {
  if (carwheel_forwarding_pressline_ != NULL) carwheel_forwarding_pressline_->::OPMessage::CftcPressLine::Clear();
  clear_has_carwheel_forwarding_pressline();
}
inline const ::OPMessage::CftcPressLine& ItemJudgeRuleCftc::carwheel_forwarding_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.carwheel_forwarding_pressline)
  return carwheel_forwarding_pressline_ != NULL ? *carwheel_forwarding_pressline_ : *default_instance_->carwheel_forwarding_pressline_;
}
inline ::OPMessage::CftcPressLine* ItemJudgeRuleCftc::mutable_carwheel_forwarding_pressline() {
  set_has_carwheel_forwarding_pressline();
  if (carwheel_forwarding_pressline_ == NULL) {
    carwheel_forwarding_pressline_ = new ::OPMessage::CftcPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.carwheel_forwarding_pressline)
  return carwheel_forwarding_pressline_;
}
inline ::OPMessage::CftcPressLine* ItemJudgeRuleCftc::release_carwheel_forwarding_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.carwheel_forwarding_pressline)
  clear_has_carwheel_forwarding_pressline();
  ::OPMessage::CftcPressLine* temp = carwheel_forwarding_pressline_;
  carwheel_forwarding_pressline_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_carwheel_forwarding_pressline(::OPMessage::CftcPressLine* carwheel_forwarding_pressline) {
  delete carwheel_forwarding_pressline_;
  carwheel_forwarding_pressline_ = carwheel_forwarding_pressline;
  if (carwheel_forwarding_pressline) {
    set_has_carwheel_forwarding_pressline();
  } else {
    clear_has_carwheel_forwarding_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.carwheel_forwarding_pressline)
}

// optional .OPMessage.CftcPressLine carwheel_rking_pressline = 30;
inline bool ItemJudgeRuleCftc::has_carwheel_rking_pressline() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_carwheel_rking_pressline() {
  _has_bits_[0] |= 0x20000000u;
}
inline void ItemJudgeRuleCftc::clear_has_carwheel_rking_pressline() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void ItemJudgeRuleCftc::clear_carwheel_rking_pressline() {
  if (carwheel_rking_pressline_ != NULL) carwheel_rking_pressline_->::OPMessage::CftcPressLine::Clear();
  clear_has_carwheel_rking_pressline();
}
inline const ::OPMessage::CftcPressLine& ItemJudgeRuleCftc::carwheel_rking_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.carwheel_rking_pressline)
  return carwheel_rking_pressline_ != NULL ? *carwheel_rking_pressline_ : *default_instance_->carwheel_rking_pressline_;
}
inline ::OPMessage::CftcPressLine* ItemJudgeRuleCftc::mutable_carwheel_rking_pressline() {
  set_has_carwheel_rking_pressline();
  if (carwheel_rking_pressline_ == NULL) {
    carwheel_rking_pressline_ = new ::OPMessage::CftcPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.carwheel_rking_pressline)
  return carwheel_rking_pressline_;
}
inline ::OPMessage::CftcPressLine* ItemJudgeRuleCftc::release_carwheel_rking_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.carwheel_rking_pressline)
  clear_has_carwheel_rking_pressline();
  ::OPMessage::CftcPressLine* temp = carwheel_rking_pressline_;
  carwheel_rking_pressline_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_carwheel_rking_pressline(::OPMessage::CftcPressLine* carwheel_rking_pressline) {
  delete carwheel_rking_pressline_;
  carwheel_rking_pressline_ = carwheel_rking_pressline;
  if (carwheel_rking_pressline) {
    set_has_carwheel_rking_pressline();
  } else {
    clear_has_carwheel_rking_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.carwheel_rking_pressline)
}

// optional .OPMessage.CftcPressLine carwheel_cking_pressline = 31;
inline bool ItemJudgeRuleCftc::has_carwheel_cking_pressline() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void ItemJudgeRuleCftc::set_has_carwheel_cking_pressline() {
  _has_bits_[0] |= 0x40000000u;
}
inline void ItemJudgeRuleCftc::clear_has_carwheel_cking_pressline() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void ItemJudgeRuleCftc::clear_carwheel_cking_pressline() {
  if (carwheel_cking_pressline_ != NULL) carwheel_cking_pressline_->::OPMessage::CftcPressLine::Clear();
  clear_has_carwheel_cking_pressline();
}
inline const ::OPMessage::CftcPressLine& ItemJudgeRuleCftc::carwheel_cking_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.carwheel_cking_pressline)
  return carwheel_cking_pressline_ != NULL ? *carwheel_cking_pressline_ : *default_instance_->carwheel_cking_pressline_;
}
inline ::OPMessage::CftcPressLine* ItemJudgeRuleCftc::mutable_carwheel_cking_pressline() {
  set_has_carwheel_cking_pressline();
  if (carwheel_cking_pressline_ == NULL) {
    carwheel_cking_pressline_ = new ::OPMessage::CftcPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.carwheel_cking_pressline)
  return carwheel_cking_pressline_;
}
inline ::OPMessage::CftcPressLine* ItemJudgeRuleCftc::release_carwheel_cking_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.carwheel_cking_pressline)
  clear_has_carwheel_cking_pressline();
  ::OPMessage::CftcPressLine* temp = carwheel_cking_pressline_;
  carwheel_cking_pressline_ = NULL;
  return temp;
}
inline void ItemJudgeRuleCftc::set_allocated_carwheel_cking_pressline(::OPMessage::CftcPressLine* carwheel_cking_pressline) {
  delete carwheel_cking_pressline_;
  carwheel_cking_pressline_ = carwheel_cking_pressline;
  if (carwheel_cking_pressline) {
    set_has_carwheel_cking_pressline();
  } else {
    clear_has_carwheel_cking_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.carwheel_cking_pressline)
}

// -------------------------------------------------------------------

// ItemJudgeRuleSpqb

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
inline bool ItemJudgeRuleSpqb::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleSpqb::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleSpqb::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
inline const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleSpqb::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleSpqb::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.basic_event_check)
  return basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleSpqb::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
inline void ItemJudgeRuleSpqb::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.basic_event_check)
}

// optional string item_enter_voice = 2;
inline bool ItemJudgeRuleSpqb::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleSpqb::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleSpqb::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
}
inline void ItemJudgeRuleSpqb::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
}
inline void ItemJudgeRuleSpqb::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
}

// optional string item_leave_voice = 3;
inline bool ItemJudgeRuleSpqb::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleSpqb::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleSpqb::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
}
inline void ItemJudgeRuleSpqb::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
}
inline void ItemJudgeRuleSpqb::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
}

// optional string item_start_voice = 4;
inline bool ItemJudgeRuleSpqb::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleSpqb::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleSpqb::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
}
inline void ItemJudgeRuleSpqb::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
}
inline void ItemJudgeRuleSpqb::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
}

// optional string item_end_voice = 5;
inline bool ItemJudgeRuleSpqb::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleSpqb::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleSpqb::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
}
inline void ItemJudgeRuleSpqb::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
}
inline void ItemJudgeRuleSpqb::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
inline bool ItemJudgeRuleSpqb::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleSpqb::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleSpqb::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
inline ::OPMessage::enum_judge_points ItemJudgeRuleSpqb::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
inline void ItemJudgeRuleSpqb::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.judge_points_type)
}

// optional .OPMessage.CheckStartCarPositionSpqb check_start_type = 7;
inline bool ItemJudgeRuleSpqb::has_check_start_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_check_start_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleSpqb::clear_has_check_start_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleSpqb::clear_check_start_type() {
  check_start_type_ = 0;
  clear_has_check_start_type();
}
inline ::OPMessage::CheckStartCarPositionSpqb ItemJudgeRuleSpqb::check_start_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.check_start_type)
  return static_cast< ::OPMessage::CheckStartCarPositionSpqb >(check_start_type_);
}
inline void ItemJudgeRuleSpqb::set_check_start_type(::OPMessage::CheckStartCarPositionSpqb value) {
  assert(::OPMessage::CheckStartCarPositionSpqb_IsValid(value));
  set_has_check_start_type();
  check_start_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.check_start_type)
}

// optional .OPMessage.CheckFinishCarPositionSpqb check_finish_type = 8;
inline bool ItemJudgeRuleSpqb::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeRuleSpqb::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeRuleSpqb::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionSpqb ItemJudgeRuleSpqb::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionSpqb >(check_finish_type_);
}
inline void ItemJudgeRuleSpqb::set_check_finish_type(::OPMessage::CheckFinishCarPositionSpqb value) {
  assert(::OPMessage::CheckFinishCarPositionSpqb_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.check_finish_type)
}

// optional bool car_run_error_whether_check = 9 [default = true];
inline bool ItemJudgeRuleSpqb::has_car_run_error_whether_check() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_run_error_whether_check() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_run_error_whether_check() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemJudgeRuleSpqb::clear_car_run_error_whether_check() {
  car_run_error_whether_check_ = true;
  clear_has_car_run_error_whether_check();
}
inline bool ItemJudgeRuleSpqb::car_run_error_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_run_error_whether_check)
  return car_run_error_whether_check_;
}
inline void ItemJudgeRuleSpqb::set_car_run_error_whether_check(bool value) {
  set_has_car_run_error_whether_check();
  car_run_error_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_run_error_whether_check)
}

// optional string car_run_error_voice = 10;
inline bool ItemJudgeRuleSpqb::has_car_run_error_voice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_run_error_voice() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_run_error_voice() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemJudgeRuleSpqb::clear_car_run_error_voice() {
  car_run_error_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_error_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::car_run_error_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
  return car_run_error_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_car_run_error_voice(const ::std::string& value) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
}
inline void ItemJudgeRuleSpqb::set_car_run_error_voice(const char* value) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
}
inline void ItemJudgeRuleSpqb::set_car_run_error_voice(const char* value, size_t size) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_car_run_error_voice() {
  set_has_car_run_error_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
  return car_run_error_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_car_run_error_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
  clear_has_car_run_error_voice();
  return car_run_error_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_car_run_error_voice(::std::string* car_run_error_voice) {
  if (car_run_error_voice != NULL) {
    set_has_car_run_error_voice();
  } else {
    clear_has_car_run_error_voice();
  }
  car_run_error_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_error_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
}

// optional int32 car_run_error_deduction = 11;
inline bool ItemJudgeRuleSpqb::has_car_run_error_deduction() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_run_error_deduction() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_run_error_deduction() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemJudgeRuleSpqb::clear_car_run_error_deduction() {
  car_run_error_deduction_ = 0;
  clear_has_car_run_error_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleSpqb::car_run_error_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_run_error_deduction)
  return car_run_error_deduction_;
}
inline void ItemJudgeRuleSpqb::set_car_run_error_deduction(::google::protobuf::int32 value) {
  set_has_car_run_error_deduction();
  car_run_error_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_run_error_deduction)
}

// optional string car_dd_head_right_voice = 12;
inline bool ItemJudgeRuleSpqb::has_car_dd_head_right_voice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_dd_head_right_voice() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_dd_head_right_voice() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemJudgeRuleSpqb::clear_car_dd_head_right_voice() {
  car_dd_head_right_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_dd_head_right_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::car_dd_head_right_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
  return car_dd_head_right_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_car_dd_head_right_voice(const ::std::string& value) {
  set_has_car_dd_head_right_voice();
  car_dd_head_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
}
inline void ItemJudgeRuleSpqb::set_car_dd_head_right_voice(const char* value) {
  set_has_car_dd_head_right_voice();
  car_dd_head_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
}
inline void ItemJudgeRuleSpqb::set_car_dd_head_right_voice(const char* value, size_t size) {
  set_has_car_dd_head_right_voice();
  car_dd_head_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_car_dd_head_right_voice() {
  set_has_car_dd_head_right_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
  return car_dd_head_right_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_car_dd_head_right_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
  clear_has_car_dd_head_right_voice();
  return car_dd_head_right_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_car_dd_head_right_voice(::std::string* car_dd_head_right_voice) {
  if (car_dd_head_right_voice != NULL) {
    set_has_car_dd_head_right_voice();
  } else {
    clear_has_car_dd_head_right_voice();
  }
  car_dd_head_right_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_dd_head_right_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
}

// optional string car_dd_head_more_50cm_voice = 13;
inline bool ItemJudgeRuleSpqb::has_car_dd_head_more_50cm_voice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_dd_head_more_50cm_voice() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_dd_head_more_50cm_voice() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ItemJudgeRuleSpqb::clear_car_dd_head_more_50cm_voice() {
  car_dd_head_more_50cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_dd_head_more_50cm_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::car_dd_head_more_50cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
  return car_dd_head_more_50cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_car_dd_head_more_50cm_voice(const ::std::string& value) {
  set_has_car_dd_head_more_50cm_voice();
  car_dd_head_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
}
inline void ItemJudgeRuleSpqb::set_car_dd_head_more_50cm_voice(const char* value) {
  set_has_car_dd_head_more_50cm_voice();
  car_dd_head_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
}
inline void ItemJudgeRuleSpqb::set_car_dd_head_more_50cm_voice(const char* value, size_t size) {
  set_has_car_dd_head_more_50cm_voice();
  car_dd_head_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_car_dd_head_more_50cm_voice() {
  set_has_car_dd_head_more_50cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
  return car_dd_head_more_50cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_car_dd_head_more_50cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
  clear_has_car_dd_head_more_50cm_voice();
  return car_dd_head_more_50cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_car_dd_head_more_50cm_voice(::std::string* car_dd_head_more_50cm_voice) {
  if (car_dd_head_more_50cm_voice != NULL) {
    set_has_car_dd_head_more_50cm_voice();
  } else {
    clear_has_car_dd_head_more_50cm_voice();
  }
  car_dd_head_more_50cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_dd_head_more_50cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
}

// optional int32 car_dd_head_more_50cm_deduction = 14;
inline bool ItemJudgeRuleSpqb::has_car_dd_head_more_50cm_deduction() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_dd_head_more_50cm_deduction() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_dd_head_more_50cm_deduction() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ItemJudgeRuleSpqb::clear_car_dd_head_more_50cm_deduction() {
  car_dd_head_more_50cm_deduction_ = 0;
  clear_has_car_dd_head_more_50cm_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleSpqb::car_dd_head_more_50cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_deduction)
  return car_dd_head_more_50cm_deduction_;
}
inline void ItemJudgeRuleSpqb::set_car_dd_head_more_50cm_deduction(::google::protobuf::int32 value) {
  set_has_car_dd_head_more_50cm_deduction();
  car_dd_head_more_50cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_deduction)
}

// optional string car_dd_head_not_more_50cm_voice = 15;
inline bool ItemJudgeRuleSpqb::has_car_dd_head_not_more_50cm_voice() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_dd_head_not_more_50cm_voice() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_dd_head_not_more_50cm_voice() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ItemJudgeRuleSpqb::clear_car_dd_head_not_more_50cm_voice() {
  car_dd_head_not_more_50cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_dd_head_not_more_50cm_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::car_dd_head_not_more_50cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
  return car_dd_head_not_more_50cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_car_dd_head_not_more_50cm_voice(const ::std::string& value) {
  set_has_car_dd_head_not_more_50cm_voice();
  car_dd_head_not_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
}
inline void ItemJudgeRuleSpqb::set_car_dd_head_not_more_50cm_voice(const char* value) {
  set_has_car_dd_head_not_more_50cm_voice();
  car_dd_head_not_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
}
inline void ItemJudgeRuleSpqb::set_car_dd_head_not_more_50cm_voice(const char* value, size_t size) {
  set_has_car_dd_head_not_more_50cm_voice();
  car_dd_head_not_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_car_dd_head_not_more_50cm_voice() {
  set_has_car_dd_head_not_more_50cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
  return car_dd_head_not_more_50cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_car_dd_head_not_more_50cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
  clear_has_car_dd_head_not_more_50cm_voice();
  return car_dd_head_not_more_50cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_car_dd_head_not_more_50cm_voice(::std::string* car_dd_head_not_more_50cm_voice) {
  if (car_dd_head_not_more_50cm_voice != NULL) {
    set_has_car_dd_head_not_more_50cm_voice();
  } else {
    clear_has_car_dd_head_not_more_50cm_voice();
  }
  car_dd_head_not_more_50cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_dd_head_not_more_50cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
}

// optional int32 car_dd_head_not_more_50cm_deduction = 16;
inline bool ItemJudgeRuleSpqb::has_car_dd_head_not_more_50cm_deduction() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_dd_head_not_more_50cm_deduction() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_dd_head_not_more_50cm_deduction() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ItemJudgeRuleSpqb::clear_car_dd_head_not_more_50cm_deduction() {
  car_dd_head_not_more_50cm_deduction_ = 0;
  clear_has_car_dd_head_not_more_50cm_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleSpqb::car_dd_head_not_more_50cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_deduction)
  return car_dd_head_not_more_50cm_deduction_;
}
inline void ItemJudgeRuleSpqb::set_car_dd_head_not_more_50cm_deduction(::google::protobuf::int32 value) {
  set_has_car_dd_head_not_more_50cm_deduction();
  car_dd_head_not_more_50cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_deduction)
}

// optional int32 car_dd_carWheel_PressLine_deduction = 17 [default = 100];
inline bool ItemJudgeRuleSpqb::has_car_dd_carwheel_pressline_deduction() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_dd_carwheel_pressline_deduction() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_dd_carwheel_pressline_deduction() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ItemJudgeRuleSpqb::clear_car_dd_carwheel_pressline_deduction() {
  car_dd_carwheel_pressline_deduction_ = 100;
  clear_has_car_dd_carwheel_pressline_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleSpqb::car_dd_carwheel_pressline_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_deduction)
  return car_dd_carwheel_pressline_deduction_;
}
inline void ItemJudgeRuleSpqb::set_car_dd_carwheel_pressline_deduction(::google::protobuf::int32 value) {
  set_has_car_dd_carwheel_pressline_deduction();
  car_dd_carwheel_pressline_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_deduction)
}

// optional string car_dd_carWheel_PressLine_voice = 18;
inline bool ItemJudgeRuleSpqb::has_car_dd_carwheel_pressline_voice() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_dd_carwheel_pressline_voice() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_dd_carwheel_pressline_voice() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ItemJudgeRuleSpqb::clear_car_dd_carwheel_pressline_voice() {
  car_dd_carwheel_pressline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_dd_carwheel_pressline_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::car_dd_carwheel_pressline_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
  return car_dd_carwheel_pressline_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_car_dd_carwheel_pressline_voice(const ::std::string& value) {
  set_has_car_dd_carwheel_pressline_voice();
  car_dd_carwheel_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
}
inline void ItemJudgeRuleSpqb::set_car_dd_carwheel_pressline_voice(const char* value) {
  set_has_car_dd_carwheel_pressline_voice();
  car_dd_carwheel_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
}
inline void ItemJudgeRuleSpqb::set_car_dd_carwheel_pressline_voice(const char* value, size_t size) {
  set_has_car_dd_carwheel_pressline_voice();
  car_dd_carwheel_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_car_dd_carwheel_pressline_voice() {
  set_has_car_dd_carwheel_pressline_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
  return car_dd_carwheel_pressline_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_car_dd_carwheel_pressline_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
  clear_has_car_dd_carwheel_pressline_voice();
  return car_dd_carwheel_pressline_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_car_dd_carwheel_pressline_voice(::std::string* car_dd_carwheel_pressline_voice) {
  if (car_dd_carwheel_pressline_voice != NULL) {
    set_has_car_dd_carwheel_pressline_voice();
  } else {
    clear_has_car_dd_carwheel_pressline_voice();
  }
  car_dd_carwheel_pressline_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_dd_carwheel_pressline_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
}

// optional string car_dd_right_line_more_30cm_less_50cm_voice = 19;
inline bool ItemJudgeRuleSpqb::has_car_dd_right_line_more_30cm_less_50cm_voice() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_dd_right_line_more_30cm_less_50cm_voice() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_dd_right_line_more_30cm_less_50cm_voice() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ItemJudgeRuleSpqb::clear_car_dd_right_line_more_30cm_less_50cm_voice() {
  car_dd_right_line_more_30cm_less_50cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_dd_right_line_more_30cm_less_50cm_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::car_dd_right_line_more_30cm_less_50cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
  return car_dd_right_line_more_30cm_less_50cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_car_dd_right_line_more_30cm_less_50cm_voice(const ::std::string& value) {
  set_has_car_dd_right_line_more_30cm_less_50cm_voice();
  car_dd_right_line_more_30cm_less_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
}
inline void ItemJudgeRuleSpqb::set_car_dd_right_line_more_30cm_less_50cm_voice(const char* value) {
  set_has_car_dd_right_line_more_30cm_less_50cm_voice();
  car_dd_right_line_more_30cm_less_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
}
inline void ItemJudgeRuleSpqb::set_car_dd_right_line_more_30cm_less_50cm_voice(const char* value, size_t size) {
  set_has_car_dd_right_line_more_30cm_less_50cm_voice();
  car_dd_right_line_more_30cm_less_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_car_dd_right_line_more_30cm_less_50cm_voice() {
  set_has_car_dd_right_line_more_30cm_less_50cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
  return car_dd_right_line_more_30cm_less_50cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_car_dd_right_line_more_30cm_less_50cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
  clear_has_car_dd_right_line_more_30cm_less_50cm_voice();
  return car_dd_right_line_more_30cm_less_50cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_car_dd_right_line_more_30cm_less_50cm_voice(::std::string* car_dd_right_line_more_30cm_less_50cm_voice) {
  if (car_dd_right_line_more_30cm_less_50cm_voice != NULL) {
    set_has_car_dd_right_line_more_30cm_less_50cm_voice();
  } else {
    clear_has_car_dd_right_line_more_30cm_less_50cm_voice();
  }
  car_dd_right_line_more_30cm_less_50cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_dd_right_line_more_30cm_less_50cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
}

// optional int32 car_dd_right_line_more_30cm_less_50cm_deduction = 20;
inline bool ItemJudgeRuleSpqb::has_car_dd_right_line_more_30cm_less_50cm_deduction() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_dd_right_line_more_30cm_less_50cm_deduction() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_dd_right_line_more_30cm_less_50cm_deduction() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ItemJudgeRuleSpqb::clear_car_dd_right_line_more_30cm_less_50cm_deduction() {
  car_dd_right_line_more_30cm_less_50cm_deduction_ = 0;
  clear_has_car_dd_right_line_more_30cm_less_50cm_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleSpqb::car_dd_right_line_more_30cm_less_50cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_deduction)
  return car_dd_right_line_more_30cm_less_50cm_deduction_;
}
inline void ItemJudgeRuleSpqb::set_car_dd_right_line_more_30cm_less_50cm_deduction(::google::protobuf::int32 value) {
  set_has_car_dd_right_line_more_30cm_less_50cm_deduction();
  car_dd_right_line_more_30cm_less_50cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_deduction)
}

// optional string car_dd_right_line_more_50cm_voice = 21;
inline bool ItemJudgeRuleSpqb::has_car_dd_right_line_more_50cm_voice() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_dd_right_line_more_50cm_voice() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_dd_right_line_more_50cm_voice() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ItemJudgeRuleSpqb::clear_car_dd_right_line_more_50cm_voice() {
  car_dd_right_line_more_50cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_dd_right_line_more_50cm_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::car_dd_right_line_more_50cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
  return car_dd_right_line_more_50cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_car_dd_right_line_more_50cm_voice(const ::std::string& value) {
  set_has_car_dd_right_line_more_50cm_voice();
  car_dd_right_line_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
}
inline void ItemJudgeRuleSpqb::set_car_dd_right_line_more_50cm_voice(const char* value) {
  set_has_car_dd_right_line_more_50cm_voice();
  car_dd_right_line_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
}
inline void ItemJudgeRuleSpqb::set_car_dd_right_line_more_50cm_voice(const char* value, size_t size) {
  set_has_car_dd_right_line_more_50cm_voice();
  car_dd_right_line_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_car_dd_right_line_more_50cm_voice() {
  set_has_car_dd_right_line_more_50cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
  return car_dd_right_line_more_50cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_car_dd_right_line_more_50cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
  clear_has_car_dd_right_line_more_50cm_voice();
  return car_dd_right_line_more_50cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_car_dd_right_line_more_50cm_voice(::std::string* car_dd_right_line_more_50cm_voice) {
  if (car_dd_right_line_more_50cm_voice != NULL) {
    set_has_car_dd_right_line_more_50cm_voice();
  } else {
    clear_has_car_dd_right_line_more_50cm_voice();
  }
  car_dd_right_line_more_50cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_dd_right_line_more_50cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
}

// optional int32 car_dd_right_line_more_50cm_deduction = 22;
inline bool ItemJudgeRuleSpqb::has_car_dd_right_line_more_50cm_deduction() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_dd_right_line_more_50cm_deduction() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_dd_right_line_more_50cm_deduction() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ItemJudgeRuleSpqb::clear_car_dd_right_line_more_50cm_deduction() {
  car_dd_right_line_more_50cm_deduction_ = 0;
  clear_has_car_dd_right_line_more_50cm_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleSpqb::car_dd_right_line_more_50cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_deduction)
  return car_dd_right_line_more_50cm_deduction_;
}
inline void ItemJudgeRuleSpqb::set_car_dd_right_line_more_50cm_deduction(::google::protobuf::int32 value) {
  set_has_car_dd_right_line_more_50cm_deduction();
  car_dd_right_line_more_50cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_deduction)
}

// optional string car_hl_distance_more_30cm_voice = 23;
inline bool ItemJudgeRuleSpqb::has_car_hl_distance_more_30cm_voice() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_hl_distance_more_30cm_voice() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_hl_distance_more_30cm_voice() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ItemJudgeRuleSpqb::clear_car_hl_distance_more_30cm_voice() {
  car_hl_distance_more_30cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_hl_distance_more_30cm_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::car_hl_distance_more_30cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
  return car_hl_distance_more_30cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_car_hl_distance_more_30cm_voice(const ::std::string& value) {
  set_has_car_hl_distance_more_30cm_voice();
  car_hl_distance_more_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
}
inline void ItemJudgeRuleSpqb::set_car_hl_distance_more_30cm_voice(const char* value) {
  set_has_car_hl_distance_more_30cm_voice();
  car_hl_distance_more_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
}
inline void ItemJudgeRuleSpqb::set_car_hl_distance_more_30cm_voice(const char* value, size_t size) {
  set_has_car_hl_distance_more_30cm_voice();
  car_hl_distance_more_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_car_hl_distance_more_30cm_voice() {
  set_has_car_hl_distance_more_30cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
  return car_hl_distance_more_30cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_car_hl_distance_more_30cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
  clear_has_car_hl_distance_more_30cm_voice();
  return car_hl_distance_more_30cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_car_hl_distance_more_30cm_voice(::std::string* car_hl_distance_more_30cm_voice) {
  if (car_hl_distance_more_30cm_voice != NULL) {
    set_has_car_hl_distance_more_30cm_voice();
  } else {
    clear_has_car_hl_distance_more_30cm_voice();
  }
  car_hl_distance_more_30cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_hl_distance_more_30cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
}

// optional int32 car_hl_distance_more_30cm_deduction = 24;
inline bool ItemJudgeRuleSpqb::has_car_hl_distance_more_30cm_deduction() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_hl_distance_more_30cm_deduction() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_hl_distance_more_30cm_deduction() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ItemJudgeRuleSpqb::clear_car_hl_distance_more_30cm_deduction() {
  car_hl_distance_more_30cm_deduction_ = 0;
  clear_has_car_hl_distance_more_30cm_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleSpqb::car_hl_distance_more_30cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_deduction)
  return car_hl_distance_more_30cm_deduction_;
}
inline void ItemJudgeRuleSpqb::set_car_hl_distance_more_30cm_deduction(::google::protobuf::int32 value) {
  set_has_car_hl_distance_more_30cm_deduction();
  car_hl_distance_more_30cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_deduction)
}

// optional string car_hl_distance_less_30cm_voice = 25;
inline bool ItemJudgeRuleSpqb::has_car_hl_distance_less_30cm_voice() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_hl_distance_less_30cm_voice() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_hl_distance_less_30cm_voice() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ItemJudgeRuleSpqb::clear_car_hl_distance_less_30cm_voice() {
  car_hl_distance_less_30cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_hl_distance_less_30cm_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::car_hl_distance_less_30cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
  return car_hl_distance_less_30cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_car_hl_distance_less_30cm_voice(const ::std::string& value) {
  set_has_car_hl_distance_less_30cm_voice();
  car_hl_distance_less_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
}
inline void ItemJudgeRuleSpqb::set_car_hl_distance_less_30cm_voice(const char* value) {
  set_has_car_hl_distance_less_30cm_voice();
  car_hl_distance_less_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
}
inline void ItemJudgeRuleSpqb::set_car_hl_distance_less_30cm_voice(const char* value, size_t size) {
  set_has_car_hl_distance_less_30cm_voice();
  car_hl_distance_less_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_car_hl_distance_less_30cm_voice() {
  set_has_car_hl_distance_less_30cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
  return car_hl_distance_less_30cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_car_hl_distance_less_30cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
  clear_has_car_hl_distance_less_30cm_voice();
  return car_hl_distance_less_30cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_car_hl_distance_less_30cm_voice(::std::string* car_hl_distance_less_30cm_voice) {
  if (car_hl_distance_less_30cm_voice != NULL) {
    set_has_car_hl_distance_less_30cm_voice();
  } else {
    clear_has_car_hl_distance_less_30cm_voice();
  }
  car_hl_distance_less_30cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_hl_distance_less_30cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
}

// optional int32 car_hl_distance_less_30cm_deduction = 26;
inline bool ItemJudgeRuleSpqb::has_car_hl_distance_less_30cm_deduction() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_hl_distance_less_30cm_deduction() {
  _has_bits_[0] |= 0x02000000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_hl_distance_less_30cm_deduction() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void ItemJudgeRuleSpqb::clear_car_hl_distance_less_30cm_deduction() {
  car_hl_distance_less_30cm_deduction_ = 0;
  clear_has_car_hl_distance_less_30cm_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleSpqb::car_hl_distance_less_30cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_deduction)
  return car_hl_distance_less_30cm_deduction_;
}
inline void ItemJudgeRuleSpqb::set_car_hl_distance_less_30cm_deduction(::google::protobuf::int32 value) {
  set_has_car_hl_distance_less_30cm_deduction();
  car_hl_distance_less_30cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_deduction)
}

// optional int32 car_qb_timeout_num = 27;
inline bool ItemJudgeRuleSpqb::has_car_qb_timeout_num() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_qb_timeout_num() {
  _has_bits_[0] |= 0x04000000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_qb_timeout_num() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void ItemJudgeRuleSpqb::clear_car_qb_timeout_num() {
  car_qb_timeout_num_ = 0;
  clear_has_car_qb_timeout_num();
}
inline ::google::protobuf::int32 ItemJudgeRuleSpqb::car_qb_timeout_num() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_num)
  return car_qb_timeout_num_;
}
inline void ItemJudgeRuleSpqb::set_car_qb_timeout_num(::google::protobuf::int32 value) {
  set_has_car_qb_timeout_num();
  car_qb_timeout_num_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_num)
}

// optional string car_qb_timeout_voice = 28;
inline bool ItemJudgeRuleSpqb::has_car_qb_timeout_voice() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_qb_timeout_voice() {
  _has_bits_[0] |= 0x08000000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_qb_timeout_voice() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void ItemJudgeRuleSpqb::clear_car_qb_timeout_voice() {
  car_qb_timeout_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_qb_timeout_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::car_qb_timeout_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
  return car_qb_timeout_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_car_qb_timeout_voice(const ::std::string& value) {
  set_has_car_qb_timeout_voice();
  car_qb_timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
}
inline void ItemJudgeRuleSpqb::set_car_qb_timeout_voice(const char* value) {
  set_has_car_qb_timeout_voice();
  car_qb_timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
}
inline void ItemJudgeRuleSpqb::set_car_qb_timeout_voice(const char* value, size_t size) {
  set_has_car_qb_timeout_voice();
  car_qb_timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_car_qb_timeout_voice() {
  set_has_car_qb_timeout_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
  return car_qb_timeout_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_car_qb_timeout_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
  clear_has_car_qb_timeout_voice();
  return car_qb_timeout_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_car_qb_timeout_voice(::std::string* car_qb_timeout_voice) {
  if (car_qb_timeout_voice != NULL) {
    set_has_car_qb_timeout_voice();
  } else {
    clear_has_car_qb_timeout_voice();
  }
  car_qb_timeout_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_qb_timeout_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
}

// optional int32 car_qb_timeout_deduction = 29;
inline bool ItemJudgeRuleSpqb::has_car_qb_timeout_deduction() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_qb_timeout_deduction() {
  _has_bits_[0] |= 0x10000000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_qb_timeout_deduction() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void ItemJudgeRuleSpqb::clear_car_qb_timeout_deduction() {
  car_qb_timeout_deduction_ = 0;
  clear_has_car_qb_timeout_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleSpqb::car_qb_timeout_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_deduction)
  return car_qb_timeout_deduction_;
}
inline void ItemJudgeRuleSpqb::set_car_qb_timeout_deduction(::google::protobuf::int32 value) {
  set_has_car_qb_timeout_deduction();
  car_qb_timeout_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_deduction)
}

// optional bool car_PressLine_whether_check = 30 [default = true];
inline bool ItemJudgeRuleSpqb::has_car_pressline_whether_check() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_pressline_whether_check() {
  _has_bits_[0] |= 0x20000000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_pressline_whether_check() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void ItemJudgeRuleSpqb::clear_car_pressline_whether_check() {
  car_pressline_whether_check_ = true;
  clear_has_car_pressline_whether_check();
}
inline bool ItemJudgeRuleSpqb::car_pressline_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_PressLine_whether_check)
  return car_pressline_whether_check_;
}
inline void ItemJudgeRuleSpqb::set_car_pressline_whether_check(bool value) {
  set_has_car_pressline_whether_check();
  car_pressline_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_PressLine_whether_check)
}

// optional int32 car_PressLine_deduction = 31 [default = 100];
inline bool ItemJudgeRuleSpqb::has_car_pressline_deduction() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_pressline_deduction() {
  _has_bits_[0] |= 0x40000000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_pressline_deduction() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void ItemJudgeRuleSpqb::clear_car_pressline_deduction() {
  car_pressline_deduction_ = 100;
  clear_has_car_pressline_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleSpqb::car_pressline_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_PressLine_deduction)
  return car_pressline_deduction_;
}
inline void ItemJudgeRuleSpqb::set_car_pressline_deduction(::google::protobuf::int32 value) {
  set_has_car_pressline_deduction();
  car_pressline_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_PressLine_deduction)
}

// optional string car_PressLine_voice = 32;
inline bool ItemJudgeRuleSpqb::has_car_pressline_voice() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_pressline_voice() {
  _has_bits_[0] |= 0x80000000u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_pressline_voice() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void ItemJudgeRuleSpqb::clear_car_pressline_voice() {
  car_pressline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_pressline_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::car_pressline_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
  return car_pressline_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_car_pressline_voice(const ::std::string& value) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
}
inline void ItemJudgeRuleSpqb::set_car_pressline_voice(const char* value) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
}
inline void ItemJudgeRuleSpqb::set_car_pressline_voice(const char* value, size_t size) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_car_pressline_voice() {
  set_has_car_pressline_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
  return car_pressline_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_car_pressline_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
  clear_has_car_pressline_voice();
  return car_pressline_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_car_pressline_voice(::std::string* car_pressline_voice) {
  if (car_pressline_voice != NULL) {
    set_has_car_pressline_voice();
  } else {
    clear_has_car_pressline_voice();
  }
  car_pressline_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_pressline_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
}

// optional string car_run_not_staff_command_voice = 33;
inline bool ItemJudgeRuleSpqb::has_car_run_not_staff_command_voice() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_run_not_staff_command_voice() {
  _has_bits_[1] |= 0x00000001u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_run_not_staff_command_voice() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void ItemJudgeRuleSpqb::clear_car_run_not_staff_command_voice() {
  car_run_not_staff_command_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_not_staff_command_voice();
}
inline const ::std::string& ItemJudgeRuleSpqb::car_run_not_staff_command_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
  return car_run_not_staff_command_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_car_run_not_staff_command_voice(const ::std::string& value) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
}
inline void ItemJudgeRuleSpqb::set_car_run_not_staff_command_voice(const char* value) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
}
inline void ItemJudgeRuleSpqb::set_car_run_not_staff_command_voice(const char* value, size_t size) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
}
inline ::std::string* ItemJudgeRuleSpqb::mutable_car_run_not_staff_command_voice() {
  set_has_car_run_not_staff_command_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
  return car_run_not_staff_command_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleSpqb::release_car_run_not_staff_command_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
  clear_has_car_run_not_staff_command_voice();
  return car_run_not_staff_command_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleSpqb::set_allocated_car_run_not_staff_command_voice(::std::string* car_run_not_staff_command_voice) {
  if (car_run_not_staff_command_voice != NULL) {
    set_has_car_run_not_staff_command_voice();
  } else {
    clear_has_car_run_not_staff_command_voice();
  }
  car_run_not_staff_command_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_not_staff_command_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
}

// optional int32 car_run_not_staff_command_deduction = 34;
inline bool ItemJudgeRuleSpqb::has_car_run_not_staff_command_deduction() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_car_run_not_staff_command_deduction() {
  _has_bits_[1] |= 0x00000002u;
}
inline void ItemJudgeRuleSpqb::clear_has_car_run_not_staff_command_deduction() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void ItemJudgeRuleSpqb::clear_car_run_not_staff_command_deduction() {
  car_run_not_staff_command_deduction_ = 0;
  clear_has_car_run_not_staff_command_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleSpqb::car_run_not_staff_command_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_deduction)
  return car_run_not_staff_command_deduction_;
}
inline void ItemJudgeRuleSpqb::set_car_run_not_staff_command_deduction(::google::protobuf::int32 value) {
  set_has_car_run_not_staff_command_deduction();
  car_run_not_staff_command_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_deduction)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 35;
inline bool ItemJudgeRuleSpqb::has_event_check_cking_leftturnlamp() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_event_check_cking_leftturnlamp() {
  _has_bits_[1] |= 0x00000004u;
}
inline void ItemJudgeRuleSpqb::clear_has_event_check_cking_leftturnlamp() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void ItemJudgeRuleSpqb::clear_event_check_cking_leftturnlamp() {
  if (event_check_cking_leftturnlamp_ != NULL) event_check_cking_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_cking_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleSpqb::event_check_cking_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.event_check_cking_leftTurnLamp)
  return event_check_cking_leftturnlamp_ != NULL ? *event_check_cking_leftturnlamp_ : *default_instance_->event_check_cking_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleSpqb::mutable_event_check_cking_leftturnlamp() {
  set_has_event_check_cking_leftturnlamp();
  if (event_check_cking_leftturnlamp_ == NULL) {
    event_check_cking_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.event_check_cking_leftTurnLamp)
  return event_check_cking_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleSpqb::release_event_check_cking_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.event_check_cking_leftTurnLamp)
  clear_has_event_check_cking_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_cking_leftturnlamp_;
  event_check_cking_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleSpqb::set_allocated_event_check_cking_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_cking_leftturnlamp) {
  delete event_check_cking_leftturnlamp_;
  event_check_cking_leftturnlamp_ = event_check_cking_leftturnlamp;
  if (event_check_cking_leftturnlamp) {
    set_has_event_check_cking_leftturnlamp();
  } else {
    clear_has_event_check_cking_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.event_check_cking_leftTurnLamp)
}

// optional bool in_area_again = 36 [default = false];
inline bool ItemJudgeRuleSpqb::has_in_area_again() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_in_area_again() {
  _has_bits_[1] |= 0x00000008u;
}
inline void ItemJudgeRuleSpqb::clear_has_in_area_again() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void ItemJudgeRuleSpqb::clear_in_area_again() {
  in_area_again_ = false;
  clear_has_in_area_again();
}
inline bool ItemJudgeRuleSpqb::in_area_again() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.in_area_again)
  return in_area_again_;
}
inline void ItemJudgeRuleSpqb::set_in_area_again(bool value) {
  set_has_in_area_again();
  in_area_again_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.in_area_again)
}

// optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 37;
inline bool ItemJudgeRuleSpqb::has_event_check_forwarding_rightturnlamp() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_event_check_forwarding_rightturnlamp() {
  _has_bits_[1] |= 0x00000010u;
}
inline void ItemJudgeRuleSpqb::clear_has_event_check_forwarding_rightturnlamp() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void ItemJudgeRuleSpqb::clear_event_check_forwarding_rightturnlamp() {
  if (event_check_forwarding_rightturnlamp_ != NULL) event_check_forwarding_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_forwarding_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleSpqb::event_check_forwarding_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.event_check_forwarding_rightTurnLamp)
  return event_check_forwarding_rightturnlamp_ != NULL ? *event_check_forwarding_rightturnlamp_ : *default_instance_->event_check_forwarding_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleSpqb::mutable_event_check_forwarding_rightturnlamp() {
  set_has_event_check_forwarding_rightturnlamp();
  if (event_check_forwarding_rightturnlamp_ == NULL) {
    event_check_forwarding_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.event_check_forwarding_rightTurnLamp)
  return event_check_forwarding_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleSpqb::release_event_check_forwarding_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.event_check_forwarding_rightTurnLamp)
  clear_has_event_check_forwarding_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_forwarding_rightturnlamp_;
  event_check_forwarding_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleSpqb::set_allocated_event_check_forwarding_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_forwarding_rightturnlamp) {
  delete event_check_forwarding_rightturnlamp_;
  event_check_forwarding_rightturnlamp_ = event_check_forwarding_rightturnlamp;
  if (event_check_forwarding_rightturnlamp) {
    set_has_event_check_forwarding_rightturnlamp();
  } else {
    clear_has_event_check_forwarding_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.event_check_forwarding_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_waitqb_leftTurnLamp = 38;
inline bool ItemJudgeRuleSpqb::has_event_check_waitqb_leftturnlamp() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_event_check_waitqb_leftturnlamp() {
  _has_bits_[1] |= 0x00000020u;
}
inline void ItemJudgeRuleSpqb::clear_has_event_check_waitqb_leftturnlamp() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void ItemJudgeRuleSpqb::clear_event_check_waitqb_leftturnlamp() {
  if (event_check_waitqb_leftturnlamp_ != NULL) event_check_waitqb_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_waitqb_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleSpqb::event_check_waitqb_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_leftTurnLamp)
  return event_check_waitqb_leftturnlamp_ != NULL ? *event_check_waitqb_leftturnlamp_ : *default_instance_->event_check_waitqb_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleSpqb::mutable_event_check_waitqb_leftturnlamp() {
  set_has_event_check_waitqb_leftturnlamp();
  if (event_check_waitqb_leftturnlamp_ == NULL) {
    event_check_waitqb_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_leftTurnLamp)
  return event_check_waitqb_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleSpqb::release_event_check_waitqb_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_leftTurnLamp)
  clear_has_event_check_waitqb_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_waitqb_leftturnlamp_;
  event_check_waitqb_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleSpqb::set_allocated_event_check_waitqb_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_waitqb_leftturnlamp) {
  delete event_check_waitqb_leftturnlamp_;
  event_check_waitqb_leftturnlamp_ = event_check_waitqb_leftturnlamp;
  if (event_check_waitqb_leftturnlamp) {
    set_has_event_check_waitqb_leftturnlamp();
  } else {
    clear_has_event_check_waitqb_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_waitqb_rightTurnLamp = 39;
inline bool ItemJudgeRuleSpqb::has_event_check_waitqb_rightturnlamp() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_event_check_waitqb_rightturnlamp() {
  _has_bits_[1] |= 0x00000040u;
}
inline void ItemJudgeRuleSpqb::clear_has_event_check_waitqb_rightturnlamp() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void ItemJudgeRuleSpqb::clear_event_check_waitqb_rightturnlamp() {
  if (event_check_waitqb_rightturnlamp_ != NULL) event_check_waitqb_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_waitqb_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleSpqb::event_check_waitqb_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_rightTurnLamp)
  return event_check_waitqb_rightturnlamp_ != NULL ? *event_check_waitqb_rightturnlamp_ : *default_instance_->event_check_waitqb_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleSpqb::mutable_event_check_waitqb_rightturnlamp() {
  set_has_event_check_waitqb_rightturnlamp();
  if (event_check_waitqb_rightturnlamp_ == NULL) {
    event_check_waitqb_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_rightTurnLamp)
  return event_check_waitqb_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleSpqb::release_event_check_waitqb_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_rightTurnLamp)
  clear_has_event_check_waitqb_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_waitqb_rightturnlamp_;
  event_check_waitqb_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleSpqb::set_allocated_event_check_waitqb_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_waitqb_rightturnlamp) {
  delete event_check_waitqb_rightturnlamp_;
  event_check_waitqb_rightturnlamp_ = event_check_waitqb_rightturnlamp;
  if (event_check_waitqb_rightturnlamp) {
    set_has_event_check_waitqb_rightturnlamp();
  } else {
    clear_has_event_check_waitqb_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_rightTurnLamp)
}

// optional .OPMessage.BasicHandBrake event_check_waitqb_handBrake = 40;
inline bool ItemJudgeRuleSpqb::has_event_check_waitqb_handbrake() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleSpqb::set_has_event_check_waitqb_handbrake() {
  _has_bits_[1] |= 0x00000080u;
}
inline void ItemJudgeRuleSpqb::clear_has_event_check_waitqb_handbrake() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void ItemJudgeRuleSpqb::clear_event_check_waitqb_handbrake() {
  if (event_check_waitqb_handbrake_ != NULL) event_check_waitqb_handbrake_->::OPMessage::BasicHandBrake::Clear();
  clear_has_event_check_waitqb_handbrake();
}
inline const ::OPMessage::BasicHandBrake& ItemJudgeRuleSpqb::event_check_waitqb_handbrake() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_handBrake)
  return event_check_waitqb_handbrake_ != NULL ? *event_check_waitqb_handbrake_ : *default_instance_->event_check_waitqb_handbrake_;
}
inline ::OPMessage::BasicHandBrake* ItemJudgeRuleSpqb::mutable_event_check_waitqb_handbrake() {
  set_has_event_check_waitqb_handbrake();
  if (event_check_waitqb_handbrake_ == NULL) {
    event_check_waitqb_handbrake_ = new ::OPMessage::BasicHandBrake;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_handBrake)
  return event_check_waitqb_handbrake_;
}
inline ::OPMessage::BasicHandBrake* ItemJudgeRuleSpqb::release_event_check_waitqb_handbrake() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_handBrake)
  clear_has_event_check_waitqb_handbrake();
  ::OPMessage::BasicHandBrake* temp = event_check_waitqb_handbrake_;
  event_check_waitqb_handbrake_ = NULL;
  return temp;
}
inline void ItemJudgeRuleSpqb::set_allocated_event_check_waitqb_handbrake(::OPMessage::BasicHandBrake* event_check_waitqb_handbrake) {
  delete event_check_waitqb_handbrake_;
  event_check_waitqb_handbrake_ = event_check_waitqb_handbrake;
  if (event_check_waitqb_handbrake) {
    set_has_event_check_waitqb_handbrake();
  } else {
    clear_has_event_check_waitqb_handbrake();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_handBrake)
}

// -------------------------------------------------------------------

// DcrkPressLine

// optional string car_run_pressline_3_voice = 1;
inline bool DcrkPressLine::has_car_run_pressline_3_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DcrkPressLine::set_has_car_run_pressline_3_voice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DcrkPressLine::clear_has_car_run_pressline_3_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DcrkPressLine::clear_car_run_pressline_3_voice() {
  car_run_pressline_3_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_3_voice();
}
inline const ::std::string& DcrkPressLine::car_run_pressline_3_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
  return car_run_pressline_3_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DcrkPressLine::set_car_run_pressline_3_voice(const ::std::string& value) {
  set_has_car_run_pressline_3_voice();
  car_run_pressline_3_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
}
inline void DcrkPressLine::set_car_run_pressline_3_voice(const char* value) {
  set_has_car_run_pressline_3_voice();
  car_run_pressline_3_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
}
inline void DcrkPressLine::set_car_run_pressline_3_voice(const char* value, size_t size) {
  set_has_car_run_pressline_3_voice();
  car_run_pressline_3_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
}
inline ::std::string* DcrkPressLine::mutable_car_run_pressline_3_voice() {
  set_has_car_run_pressline_3_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
  return car_run_pressline_3_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DcrkPressLine::release_car_run_pressline_3_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
  clear_has_car_run_pressline_3_voice();
  return car_run_pressline_3_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DcrkPressLine::set_allocated_car_run_pressline_3_voice(::std::string* car_run_pressline_3_voice) {
  if (car_run_pressline_3_voice != NULL) {
    set_has_car_run_pressline_3_voice();
  } else {
    clear_has_car_run_pressline_3_voice();
  }
  car_run_pressline_3_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_3_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
}

// optional int32 car_run_pressline_3_deduction = 2;
inline bool DcrkPressLine::has_car_run_pressline_3_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DcrkPressLine::set_has_car_run_pressline_3_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DcrkPressLine::clear_has_car_run_pressline_3_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DcrkPressLine::clear_car_run_pressline_3_deduction() {
  car_run_pressline_3_deduction_ = 0;
  clear_has_car_run_pressline_3_deduction();
}
inline ::google::protobuf::int32 DcrkPressLine::car_run_pressline_3_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_3_deduction)
  return car_run_pressline_3_deduction_;
}
inline void DcrkPressLine::set_car_run_pressline_3_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_3_deduction();
  car_run_pressline_3_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_3_deduction)
}

// optional string car_run_pressline_4_voice = 3;
inline bool DcrkPressLine::has_car_run_pressline_4_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DcrkPressLine::set_has_car_run_pressline_4_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DcrkPressLine::clear_has_car_run_pressline_4_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DcrkPressLine::clear_car_run_pressline_4_voice() {
  car_run_pressline_4_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_4_voice();
}
inline const ::std::string& DcrkPressLine::car_run_pressline_4_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
  return car_run_pressline_4_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DcrkPressLine::set_car_run_pressline_4_voice(const ::std::string& value) {
  set_has_car_run_pressline_4_voice();
  car_run_pressline_4_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
}
inline void DcrkPressLine::set_car_run_pressline_4_voice(const char* value) {
  set_has_car_run_pressline_4_voice();
  car_run_pressline_4_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
}
inline void DcrkPressLine::set_car_run_pressline_4_voice(const char* value, size_t size) {
  set_has_car_run_pressline_4_voice();
  car_run_pressline_4_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
}
inline ::std::string* DcrkPressLine::mutable_car_run_pressline_4_voice() {
  set_has_car_run_pressline_4_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
  return car_run_pressline_4_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DcrkPressLine::release_car_run_pressline_4_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
  clear_has_car_run_pressline_4_voice();
  return car_run_pressline_4_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DcrkPressLine::set_allocated_car_run_pressline_4_voice(::std::string* car_run_pressline_4_voice) {
  if (car_run_pressline_4_voice != NULL) {
    set_has_car_run_pressline_4_voice();
  } else {
    clear_has_car_run_pressline_4_voice();
  }
  car_run_pressline_4_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_4_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
}

// optional int32 car_run_pressline_4_deduction = 4;
inline bool DcrkPressLine::has_car_run_pressline_4_deduction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DcrkPressLine::set_has_car_run_pressline_4_deduction() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DcrkPressLine::clear_has_car_run_pressline_4_deduction() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DcrkPressLine::clear_car_run_pressline_4_deduction() {
  car_run_pressline_4_deduction_ = 0;
  clear_has_car_run_pressline_4_deduction();
}
inline ::google::protobuf::int32 DcrkPressLine::car_run_pressline_4_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_4_deduction)
  return car_run_pressline_4_deduction_;
}
inline void DcrkPressLine::set_car_run_pressline_4_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_4_deduction();
  car_run_pressline_4_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_4_deduction)
}

// optional string car_run_pressline_8_voice = 5;
inline bool DcrkPressLine::has_car_run_pressline_8_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DcrkPressLine::set_has_car_run_pressline_8_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DcrkPressLine::clear_has_car_run_pressline_8_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DcrkPressLine::clear_car_run_pressline_8_voice() {
  car_run_pressline_8_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_8_voice();
}
inline const ::std::string& DcrkPressLine::car_run_pressline_8_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
  return car_run_pressline_8_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DcrkPressLine::set_car_run_pressline_8_voice(const ::std::string& value) {
  set_has_car_run_pressline_8_voice();
  car_run_pressline_8_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
}
inline void DcrkPressLine::set_car_run_pressline_8_voice(const char* value) {
  set_has_car_run_pressline_8_voice();
  car_run_pressline_8_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
}
inline void DcrkPressLine::set_car_run_pressline_8_voice(const char* value, size_t size) {
  set_has_car_run_pressline_8_voice();
  car_run_pressline_8_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
}
inline ::std::string* DcrkPressLine::mutable_car_run_pressline_8_voice() {
  set_has_car_run_pressline_8_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
  return car_run_pressline_8_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DcrkPressLine::release_car_run_pressline_8_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
  clear_has_car_run_pressline_8_voice();
  return car_run_pressline_8_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DcrkPressLine::set_allocated_car_run_pressline_8_voice(::std::string* car_run_pressline_8_voice) {
  if (car_run_pressline_8_voice != NULL) {
    set_has_car_run_pressline_8_voice();
  } else {
    clear_has_car_run_pressline_8_voice();
  }
  car_run_pressline_8_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_8_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
}

// optional int32 car_run_pressline_8_deduction = 6;
inline bool DcrkPressLine::has_car_run_pressline_8_deduction() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DcrkPressLine::set_has_car_run_pressline_8_deduction() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DcrkPressLine::clear_has_car_run_pressline_8_deduction() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DcrkPressLine::clear_car_run_pressline_8_deduction() {
  car_run_pressline_8_deduction_ = 0;
  clear_has_car_run_pressline_8_deduction();
}
inline ::google::protobuf::int32 DcrkPressLine::car_run_pressline_8_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_8_deduction)
  return car_run_pressline_8_deduction_;
}
inline void DcrkPressLine::set_car_run_pressline_8_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_8_deduction();
  car_run_pressline_8_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_8_deduction)
}

// optional string car_run_pressline_7_voice = 7;
inline bool DcrkPressLine::has_car_run_pressline_7_voice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DcrkPressLine::set_has_car_run_pressline_7_voice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DcrkPressLine::clear_has_car_run_pressline_7_voice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DcrkPressLine::clear_car_run_pressline_7_voice() {
  car_run_pressline_7_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_7_voice();
}
inline const ::std::string& DcrkPressLine::car_run_pressline_7_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
  return car_run_pressline_7_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DcrkPressLine::set_car_run_pressline_7_voice(const ::std::string& value) {
  set_has_car_run_pressline_7_voice();
  car_run_pressline_7_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
}
inline void DcrkPressLine::set_car_run_pressline_7_voice(const char* value) {
  set_has_car_run_pressline_7_voice();
  car_run_pressline_7_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
}
inline void DcrkPressLine::set_car_run_pressline_7_voice(const char* value, size_t size) {
  set_has_car_run_pressline_7_voice();
  car_run_pressline_7_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
}
inline ::std::string* DcrkPressLine::mutable_car_run_pressline_7_voice() {
  set_has_car_run_pressline_7_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
  return car_run_pressline_7_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DcrkPressLine::release_car_run_pressline_7_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
  clear_has_car_run_pressline_7_voice();
  return car_run_pressline_7_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DcrkPressLine::set_allocated_car_run_pressline_7_voice(::std::string* car_run_pressline_7_voice) {
  if (car_run_pressline_7_voice != NULL) {
    set_has_car_run_pressline_7_voice();
  } else {
    clear_has_car_run_pressline_7_voice();
  }
  car_run_pressline_7_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_7_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
}

// optional int32 car_run_pressline_7_deduction = 8;
inline bool DcrkPressLine::has_car_run_pressline_7_deduction() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DcrkPressLine::set_has_car_run_pressline_7_deduction() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DcrkPressLine::clear_has_car_run_pressline_7_deduction() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DcrkPressLine::clear_car_run_pressline_7_deduction() {
  car_run_pressline_7_deduction_ = 0;
  clear_has_car_run_pressline_7_deduction();
}
inline ::google::protobuf::int32 DcrkPressLine::car_run_pressline_7_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_7_deduction)
  return car_run_pressline_7_deduction_;
}
inline void DcrkPressLine::set_car_run_pressline_7_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_7_deduction();
  car_run_pressline_7_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_7_deduction)
}

// optional string car_run_pressline_5_voice = 9;
inline bool DcrkPressLine::has_car_run_pressline_5_voice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DcrkPressLine::set_has_car_run_pressline_5_voice() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DcrkPressLine::clear_has_car_run_pressline_5_voice() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DcrkPressLine::clear_car_run_pressline_5_voice() {
  car_run_pressline_5_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_5_voice();
}
inline const ::std::string& DcrkPressLine::car_run_pressline_5_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
  return car_run_pressline_5_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DcrkPressLine::set_car_run_pressline_5_voice(const ::std::string& value) {
  set_has_car_run_pressline_5_voice();
  car_run_pressline_5_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
}
inline void DcrkPressLine::set_car_run_pressline_5_voice(const char* value) {
  set_has_car_run_pressline_5_voice();
  car_run_pressline_5_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
}
inline void DcrkPressLine::set_car_run_pressline_5_voice(const char* value, size_t size) {
  set_has_car_run_pressline_5_voice();
  car_run_pressline_5_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
}
inline ::std::string* DcrkPressLine::mutable_car_run_pressline_5_voice() {
  set_has_car_run_pressline_5_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
  return car_run_pressline_5_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DcrkPressLine::release_car_run_pressline_5_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
  clear_has_car_run_pressline_5_voice();
  return car_run_pressline_5_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DcrkPressLine::set_allocated_car_run_pressline_5_voice(::std::string* car_run_pressline_5_voice) {
  if (car_run_pressline_5_voice != NULL) {
    set_has_car_run_pressline_5_voice();
  } else {
    clear_has_car_run_pressline_5_voice();
  }
  car_run_pressline_5_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_5_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
}

// optional int32 car_run_pressline_5_deduction = 10;
inline bool DcrkPressLine::has_car_run_pressline_5_deduction() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DcrkPressLine::set_has_car_run_pressline_5_deduction() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DcrkPressLine::clear_has_car_run_pressline_5_deduction() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DcrkPressLine::clear_car_run_pressline_5_deduction() {
  car_run_pressline_5_deduction_ = 0;
  clear_has_car_run_pressline_5_deduction();
}
inline ::google::protobuf::int32 DcrkPressLine::car_run_pressline_5_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_5_deduction)
  return car_run_pressline_5_deduction_;
}
inline void DcrkPressLine::set_car_run_pressline_5_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_5_deduction();
  car_run_pressline_5_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_5_deduction)
}

// optional string car_run_pressline_6_voice = 11;
inline bool DcrkPressLine::has_car_run_pressline_6_voice() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DcrkPressLine::set_has_car_run_pressline_6_voice() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DcrkPressLine::clear_has_car_run_pressline_6_voice() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DcrkPressLine::clear_car_run_pressline_6_voice() {
  car_run_pressline_6_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_6_voice();
}
inline const ::std::string& DcrkPressLine::car_run_pressline_6_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
  return car_run_pressline_6_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DcrkPressLine::set_car_run_pressline_6_voice(const ::std::string& value) {
  set_has_car_run_pressline_6_voice();
  car_run_pressline_6_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
}
inline void DcrkPressLine::set_car_run_pressline_6_voice(const char* value) {
  set_has_car_run_pressline_6_voice();
  car_run_pressline_6_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
}
inline void DcrkPressLine::set_car_run_pressline_6_voice(const char* value, size_t size) {
  set_has_car_run_pressline_6_voice();
  car_run_pressline_6_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
}
inline ::std::string* DcrkPressLine::mutable_car_run_pressline_6_voice() {
  set_has_car_run_pressline_6_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
  return car_run_pressline_6_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DcrkPressLine::release_car_run_pressline_6_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
  clear_has_car_run_pressline_6_voice();
  return car_run_pressline_6_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DcrkPressLine::set_allocated_car_run_pressline_6_voice(::std::string* car_run_pressline_6_voice) {
  if (car_run_pressline_6_voice != NULL) {
    set_has_car_run_pressline_6_voice();
  } else {
    clear_has_car_run_pressline_6_voice();
  }
  car_run_pressline_6_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_6_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
}

// optional int32 car_run_pressline_6_deduction = 12;
inline bool DcrkPressLine::has_car_run_pressline_6_deduction() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DcrkPressLine::set_has_car_run_pressline_6_deduction() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DcrkPressLine::clear_has_car_run_pressline_6_deduction() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DcrkPressLine::clear_car_run_pressline_6_deduction() {
  car_run_pressline_6_deduction_ = 0;
  clear_has_car_run_pressline_6_deduction();
}
inline ::google::protobuf::int32 DcrkPressLine::car_run_pressline_6_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_6_deduction)
  return car_run_pressline_6_deduction_;
}
inline void DcrkPressLine::set_car_run_pressline_6_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_6_deduction();
  car_run_pressline_6_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_6_deduction)
}

// repeated int32 car_pressline_nums_mutex = 13;
inline int DcrkPressLine::car_pressline_nums_mutex_size() const {
  return car_pressline_nums_mutex_.size();
}
inline void DcrkPressLine::clear_car_pressline_nums_mutex() {
  car_pressline_nums_mutex_.Clear();
}
inline ::google::protobuf::int32 DcrkPressLine::car_pressline_nums_mutex(int index) const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_pressline_nums_mutex)
  return car_pressline_nums_mutex_.Get(index);
}
inline void DcrkPressLine::set_car_pressline_nums_mutex(int index, ::google::protobuf::int32 value) {
  car_pressline_nums_mutex_.Set(index, value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_pressline_nums_mutex)
}
inline void DcrkPressLine::add_car_pressline_nums_mutex(::google::protobuf::int32 value) {
  car_pressline_nums_mutex_.Add(value);
  // @@protoc_insertion_point(field_add:OPMessage.DcrkPressLine.car_pressline_nums_mutex)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DcrkPressLine::car_pressline_nums_mutex() const {
  // @@protoc_insertion_point(field_list:OPMessage.DcrkPressLine.car_pressline_nums_mutex)
  return car_pressline_nums_mutex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DcrkPressLine::mutable_car_pressline_nums_mutex() {
  // @@protoc_insertion_point(field_mutable_list:OPMessage.DcrkPressLine.car_pressline_nums_mutex)
  return &car_pressline_nums_mutex_;
}

// -------------------------------------------------------------------

// ItemJudgeRuleDcrk

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
inline bool ItemJudgeRuleDcrk::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemJudgeRuleDcrk::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemJudgeRuleDcrk::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
inline const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleDcrk::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleDcrk::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.basic_event_check)
  return basic_event_check_;
}
inline ::OPMessage::ItemJudgeBasic* ItemJudgeRuleDcrk::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.basic_event_check)
}

// optional string item_enter_voice = 2;
inline bool ItemJudgeRuleDcrk::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemJudgeRuleDcrk::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemJudgeRuleDcrk::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
inline const ::std::string& ItemJudgeRuleDcrk::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
}
inline void ItemJudgeRuleDcrk::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
}
inline void ItemJudgeRuleDcrk::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
}
inline ::std::string* ItemJudgeRuleDcrk::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDcrk::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
}

// optional string item_leave_voice = 3;
inline bool ItemJudgeRuleDcrk::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemJudgeRuleDcrk::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemJudgeRuleDcrk::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
inline const ::std::string& ItemJudgeRuleDcrk::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
}
inline void ItemJudgeRuleDcrk::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
}
inline void ItemJudgeRuleDcrk::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
}
inline ::std::string* ItemJudgeRuleDcrk::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDcrk::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
}

// optional string item_start_voice = 4;
inline bool ItemJudgeRuleDcrk::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemJudgeRuleDcrk::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemJudgeRuleDcrk::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
inline const ::std::string& ItemJudgeRuleDcrk::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
}
inline void ItemJudgeRuleDcrk::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
}
inline void ItemJudgeRuleDcrk::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
}
inline ::std::string* ItemJudgeRuleDcrk::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDcrk::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
}

// optional string item_end_voice = 5;
inline bool ItemJudgeRuleDcrk::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemJudgeRuleDcrk::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemJudgeRuleDcrk::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
inline const ::std::string& ItemJudgeRuleDcrk::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
}
inline void ItemJudgeRuleDcrk::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
}
inline void ItemJudgeRuleDcrk::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
}
inline ::std::string* ItemJudgeRuleDcrk::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDcrk::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
inline bool ItemJudgeRuleDcrk::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemJudgeRuleDcrk::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemJudgeRuleDcrk::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
inline ::OPMessage::enum_judge_points ItemJudgeRuleDcrk::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
inline void ItemJudgeRuleDcrk::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.judge_points_type)
}

// optional .OPMessage.CheckStartCarPositionDcrk check_start_type = 7;
inline bool ItemJudgeRuleDcrk::has_check_start_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_check_start_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemJudgeRuleDcrk::clear_has_check_start_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemJudgeRuleDcrk::clear_check_start_type() {
  check_start_type_ = 0;
  clear_has_check_start_type();
}
inline ::OPMessage::CheckStartCarPositionDcrk ItemJudgeRuleDcrk::check_start_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.check_start_type)
  return static_cast< ::OPMessage::CheckStartCarPositionDcrk >(check_start_type_);
}
inline void ItemJudgeRuleDcrk::set_check_start_type(::OPMessage::CheckStartCarPositionDcrk value) {
  assert(::OPMessage::CheckStartCarPositionDcrk_IsValid(value));
  set_has_check_start_type();
  check_start_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.check_start_type)
}

// optional .OPMessage.CheckFinishCarPositionDcrk check_finish_type = 8;
inline bool ItemJudgeRuleDcrk::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemJudgeRuleDcrk::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemJudgeRuleDcrk::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
inline ::OPMessage::CheckFinishCarPositionDcrk ItemJudgeRuleDcrk::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionDcrk >(check_finish_type_);
}
inline void ItemJudgeRuleDcrk::set_check_finish_type(::OPMessage::CheckFinishCarPositionDcrk value) {
  assert(::OPMessage::CheckFinishCarPositionDcrk_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.check_finish_type)
}

// optional bool car_run_error_whether_check = 9 [default = true];
inline bool ItemJudgeRuleDcrk::has_car_run_error_whether_check() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_run_error_whether_check() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_run_error_whether_check() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemJudgeRuleDcrk::clear_car_run_error_whether_check() {
  car_run_error_whether_check_ = true;
  clear_has_car_run_error_whether_check();
}
inline bool ItemJudgeRuleDcrk::car_run_error_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_run_error_whether_check)
  return car_run_error_whether_check_;
}
inline void ItemJudgeRuleDcrk::set_car_run_error_whether_check(bool value) {
  set_has_car_run_error_whether_check();
  car_run_error_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_run_error_whether_check)
}

// optional string car_run_error_voice = 10;
inline bool ItemJudgeRuleDcrk::has_car_run_error_voice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_run_error_voice() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_run_error_voice() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemJudgeRuleDcrk::clear_car_run_error_voice() {
  car_run_error_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_error_voice();
}
inline const ::std::string& ItemJudgeRuleDcrk::car_run_error_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
  return car_run_error_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_car_run_error_voice(const ::std::string& value) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
}
inline void ItemJudgeRuleDcrk::set_car_run_error_voice(const char* value) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
}
inline void ItemJudgeRuleDcrk::set_car_run_error_voice(const char* value, size_t size) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
}
inline ::std::string* ItemJudgeRuleDcrk::mutable_car_run_error_voice() {
  set_has_car_run_error_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
  return car_run_error_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDcrk::release_car_run_error_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
  clear_has_car_run_error_voice();
  return car_run_error_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_allocated_car_run_error_voice(::std::string* car_run_error_voice) {
  if (car_run_error_voice != NULL) {
    set_has_car_run_error_voice();
  } else {
    clear_has_car_run_error_voice();
  }
  car_run_error_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_error_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
}

// optional int32 car_run_error_deduction = 11;
inline bool ItemJudgeRuleDcrk::has_car_run_error_deduction() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_run_error_deduction() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_run_error_deduction() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemJudgeRuleDcrk::clear_car_run_error_deduction() {
  car_run_error_deduction_ = 0;
  clear_has_car_run_error_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleDcrk::car_run_error_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_run_error_deduction)
  return car_run_error_deduction_;
}
inline void ItemJudgeRuleDcrk::set_car_run_error_deduction(::google::protobuf::int32 value) {
  set_has_car_run_error_deduction();
  car_run_error_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_run_error_deduction)
}

// optional string car_rk_check_right_voice = 12;
inline bool ItemJudgeRuleDcrk::has_car_rk_check_right_voice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_rk_check_right_voice() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_rk_check_right_voice() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemJudgeRuleDcrk::clear_car_rk_check_right_voice() {
  car_rk_check_right_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_rk_check_right_voice();
}
inline const ::std::string& ItemJudgeRuleDcrk::car_rk_check_right_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
  return car_rk_check_right_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_car_rk_check_right_voice(const ::std::string& value) {
  set_has_car_rk_check_right_voice();
  car_rk_check_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
}
inline void ItemJudgeRuleDcrk::set_car_rk_check_right_voice(const char* value) {
  set_has_car_rk_check_right_voice();
  car_rk_check_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
}
inline void ItemJudgeRuleDcrk::set_car_rk_check_right_voice(const char* value, size_t size) {
  set_has_car_rk_check_right_voice();
  car_rk_check_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
}
inline ::std::string* ItemJudgeRuleDcrk::mutable_car_rk_check_right_voice() {
  set_has_car_rk_check_right_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
  return car_rk_check_right_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDcrk::release_car_rk_check_right_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
  clear_has_car_rk_check_right_voice();
  return car_rk_check_right_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_allocated_car_rk_check_right_voice(::std::string* car_rk_check_right_voice) {
  if (car_rk_check_right_voice != NULL) {
    set_has_car_rk_check_right_voice();
  } else {
    clear_has_car_rk_check_right_voice();
  }
  car_rk_check_right_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_rk_check_right_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
}

// optional string car_rk_check_fail_voice = 13;
inline bool ItemJudgeRuleDcrk::has_car_rk_check_fail_voice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_rk_check_fail_voice() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_rk_check_fail_voice() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ItemJudgeRuleDcrk::clear_car_rk_check_fail_voice() {
  car_rk_check_fail_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_rk_check_fail_voice();
}
inline const ::std::string& ItemJudgeRuleDcrk::car_rk_check_fail_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
  return car_rk_check_fail_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_car_rk_check_fail_voice(const ::std::string& value) {
  set_has_car_rk_check_fail_voice();
  car_rk_check_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
}
inline void ItemJudgeRuleDcrk::set_car_rk_check_fail_voice(const char* value) {
  set_has_car_rk_check_fail_voice();
  car_rk_check_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
}
inline void ItemJudgeRuleDcrk::set_car_rk_check_fail_voice(const char* value, size_t size) {
  set_has_car_rk_check_fail_voice();
  car_rk_check_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
}
inline ::std::string* ItemJudgeRuleDcrk::mutable_car_rk_check_fail_voice() {
  set_has_car_rk_check_fail_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
  return car_rk_check_fail_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDcrk::release_car_rk_check_fail_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
  clear_has_car_rk_check_fail_voice();
  return car_rk_check_fail_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_allocated_car_rk_check_fail_voice(::std::string* car_rk_check_fail_voice) {
  if (car_rk_check_fail_voice != NULL) {
    set_has_car_rk_check_fail_voice();
  } else {
    clear_has_car_rk_check_fail_voice();
  }
  car_rk_check_fail_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_rk_check_fail_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
}

// optional int32 car_rk_check_fail_deduction = 14;
inline bool ItemJudgeRuleDcrk::has_car_rk_check_fail_deduction() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_rk_check_fail_deduction() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_rk_check_fail_deduction() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ItemJudgeRuleDcrk::clear_car_rk_check_fail_deduction() {
  car_rk_check_fail_deduction_ = 0;
  clear_has_car_rk_check_fail_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleDcrk::car_rk_check_fail_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_deduction)
  return car_rk_check_fail_deduction_;
}
inline void ItemJudgeRuleDcrk::set_car_rk_check_fail_deduction(::google::protobuf::int32 value) {
  set_has_car_rk_check_fail_deduction();
  car_rk_check_fail_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_deduction)
}

// optional .OPMessage.DcrkPressLine forwarding_pressline = 15;
inline bool ItemJudgeRuleDcrk::has_forwarding_pressline() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_forwarding_pressline() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ItemJudgeRuleDcrk::clear_has_forwarding_pressline() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ItemJudgeRuleDcrk::clear_forwarding_pressline() {
  if (forwarding_pressline_ != NULL) forwarding_pressline_->::OPMessage::DcrkPressLine::Clear();
  clear_has_forwarding_pressline();
}
inline const ::OPMessage::DcrkPressLine& ItemJudgeRuleDcrk::forwarding_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.forwarding_pressline)
  return forwarding_pressline_ != NULL ? *forwarding_pressline_ : *default_instance_->forwarding_pressline_;
}
inline ::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::mutable_forwarding_pressline() {
  set_has_forwarding_pressline();
  if (forwarding_pressline_ == NULL) {
    forwarding_pressline_ = new ::OPMessage::DcrkPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.forwarding_pressline)
  return forwarding_pressline_;
}
inline ::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::release_forwarding_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.forwarding_pressline)
  clear_has_forwarding_pressline();
  ::OPMessage::DcrkPressLine* temp = forwarding_pressline_;
  forwarding_pressline_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_forwarding_pressline(::OPMessage::DcrkPressLine* forwarding_pressline) {
  delete forwarding_pressline_;
  forwarding_pressline_ = forwarding_pressline;
  if (forwarding_pressline) {
    set_has_forwarding_pressline();
  } else {
    clear_has_forwarding_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.forwarding_pressline)
}

// optional .OPMessage.DcrkPressLine rking_1_pressline = 16;
inline bool ItemJudgeRuleDcrk::has_rking_1_pressline() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_rking_1_pressline() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ItemJudgeRuleDcrk::clear_has_rking_1_pressline() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ItemJudgeRuleDcrk::clear_rking_1_pressline() {
  if (rking_1_pressline_ != NULL) rking_1_pressline_->::OPMessage::DcrkPressLine::Clear();
  clear_has_rking_1_pressline();
}
inline const ::OPMessage::DcrkPressLine& ItemJudgeRuleDcrk::rking_1_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.rking_1_pressline)
  return rking_1_pressline_ != NULL ? *rking_1_pressline_ : *default_instance_->rking_1_pressline_;
}
inline ::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::mutable_rking_1_pressline() {
  set_has_rking_1_pressline();
  if (rking_1_pressline_ == NULL) {
    rking_1_pressline_ = new ::OPMessage::DcrkPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.rking_1_pressline)
  return rking_1_pressline_;
}
inline ::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::release_rking_1_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.rking_1_pressline)
  clear_has_rking_1_pressline();
  ::OPMessage::DcrkPressLine* temp = rking_1_pressline_;
  rking_1_pressline_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_rking_1_pressline(::OPMessage::DcrkPressLine* rking_1_pressline) {
  delete rking_1_pressline_;
  rking_1_pressline_ = rking_1_pressline;
  if (rking_1_pressline) {
    set_has_rking_1_pressline();
  } else {
    clear_has_rking_1_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.rking_1_pressline)
}

// optional .OPMessage.DcrkPressLine cking_1_pressline = 17;
inline bool ItemJudgeRuleDcrk::has_cking_1_pressline() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_cking_1_pressline() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ItemJudgeRuleDcrk::clear_has_cking_1_pressline() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ItemJudgeRuleDcrk::clear_cking_1_pressline() {
  if (cking_1_pressline_ != NULL) cking_1_pressline_->::OPMessage::DcrkPressLine::Clear();
  clear_has_cking_1_pressline();
}
inline const ::OPMessage::DcrkPressLine& ItemJudgeRuleDcrk::cking_1_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.cking_1_pressline)
  return cking_1_pressline_ != NULL ? *cking_1_pressline_ : *default_instance_->cking_1_pressline_;
}
inline ::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::mutable_cking_1_pressline() {
  set_has_cking_1_pressline();
  if (cking_1_pressline_ == NULL) {
    cking_1_pressline_ = new ::OPMessage::DcrkPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.cking_1_pressline)
  return cking_1_pressline_;
}
inline ::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::release_cking_1_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.cking_1_pressline)
  clear_has_cking_1_pressline();
  ::OPMessage::DcrkPressLine* temp = cking_1_pressline_;
  cking_1_pressline_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_cking_1_pressline(::OPMessage::DcrkPressLine* cking_1_pressline) {
  delete cking_1_pressline_;
  cking_1_pressline_ = cking_1_pressline;
  if (cking_1_pressline) {
    set_has_cking_1_pressline();
  } else {
    clear_has_cking_1_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.cking_1_pressline)
}

// optional .OPMessage.DcrkPressLine rking_2_pressline = 18;
inline bool ItemJudgeRuleDcrk::has_rking_2_pressline() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_rking_2_pressline() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ItemJudgeRuleDcrk::clear_has_rking_2_pressline() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ItemJudgeRuleDcrk::clear_rking_2_pressline() {
  if (rking_2_pressline_ != NULL) rking_2_pressline_->::OPMessage::DcrkPressLine::Clear();
  clear_has_rking_2_pressline();
}
inline const ::OPMessage::DcrkPressLine& ItemJudgeRuleDcrk::rking_2_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.rking_2_pressline)
  return rking_2_pressline_ != NULL ? *rking_2_pressline_ : *default_instance_->rking_2_pressline_;
}
inline ::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::mutable_rking_2_pressline() {
  set_has_rking_2_pressline();
  if (rking_2_pressline_ == NULL) {
    rking_2_pressline_ = new ::OPMessage::DcrkPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.rking_2_pressline)
  return rking_2_pressline_;
}
inline ::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::release_rking_2_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.rking_2_pressline)
  clear_has_rking_2_pressline();
  ::OPMessage::DcrkPressLine* temp = rking_2_pressline_;
  rking_2_pressline_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_rking_2_pressline(::OPMessage::DcrkPressLine* rking_2_pressline) {
  delete rking_2_pressline_;
  rking_2_pressline_ = rking_2_pressline;
  if (rking_2_pressline) {
    set_has_rking_2_pressline();
  } else {
    clear_has_rking_2_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.rking_2_pressline)
}

// optional .OPMessage.DcrkPressLine cking_2_pressline = 19;
inline bool ItemJudgeRuleDcrk::has_cking_2_pressline() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_cking_2_pressline() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ItemJudgeRuleDcrk::clear_has_cking_2_pressline() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ItemJudgeRuleDcrk::clear_cking_2_pressline() {
  if (cking_2_pressline_ != NULL) cking_2_pressline_->::OPMessage::DcrkPressLine::Clear();
  clear_has_cking_2_pressline();
}
inline const ::OPMessage::DcrkPressLine& ItemJudgeRuleDcrk::cking_2_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.cking_2_pressline)
  return cking_2_pressline_ != NULL ? *cking_2_pressline_ : *default_instance_->cking_2_pressline_;
}
inline ::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::mutable_cking_2_pressline() {
  set_has_cking_2_pressline();
  if (cking_2_pressline_ == NULL) {
    cking_2_pressline_ = new ::OPMessage::DcrkPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.cking_2_pressline)
  return cking_2_pressline_;
}
inline ::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::release_cking_2_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.cking_2_pressline)
  clear_has_cking_2_pressline();
  ::OPMessage::DcrkPressLine* temp = cking_2_pressline_;
  cking_2_pressline_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_cking_2_pressline(::OPMessage::DcrkPressLine* cking_2_pressline) {
  delete cking_2_pressline_;
  cking_2_pressline_ = cking_2_pressline;
  if (cking_2_pressline) {
    set_has_cking_2_pressline();
  } else {
    clear_has_cking_2_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.cking_2_pressline)
}

// optional string car_run_not_staff_command_voice = 20;
inline bool ItemJudgeRuleDcrk::has_car_run_not_staff_command_voice() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_run_not_staff_command_voice() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_run_not_staff_command_voice() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ItemJudgeRuleDcrk::clear_car_run_not_staff_command_voice() {
  car_run_not_staff_command_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_not_staff_command_voice();
}
inline const ::std::string& ItemJudgeRuleDcrk::car_run_not_staff_command_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
  return car_run_not_staff_command_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_car_run_not_staff_command_voice(const ::std::string& value) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
}
inline void ItemJudgeRuleDcrk::set_car_run_not_staff_command_voice(const char* value) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
}
inline void ItemJudgeRuleDcrk::set_car_run_not_staff_command_voice(const char* value, size_t size) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
}
inline ::std::string* ItemJudgeRuleDcrk::mutable_car_run_not_staff_command_voice() {
  set_has_car_run_not_staff_command_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
  return car_run_not_staff_command_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDcrk::release_car_run_not_staff_command_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
  clear_has_car_run_not_staff_command_voice();
  return car_run_not_staff_command_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_allocated_car_run_not_staff_command_voice(::std::string* car_run_not_staff_command_voice) {
  if (car_run_not_staff_command_voice != NULL) {
    set_has_car_run_not_staff_command_voice();
  } else {
    clear_has_car_run_not_staff_command_voice();
  }
  car_run_not_staff_command_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_not_staff_command_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
}

// optional int32 car_run_not_staff_command_deduction = 21;
inline bool ItemJudgeRuleDcrk::has_car_run_not_staff_command_deduction() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_run_not_staff_command_deduction() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_run_not_staff_command_deduction() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ItemJudgeRuleDcrk::clear_car_run_not_staff_command_deduction() {
  car_run_not_staff_command_deduction_ = 0;
  clear_has_car_run_not_staff_command_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleDcrk::car_run_not_staff_command_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_deduction)
  return car_run_not_staff_command_deduction_;
}
inline void ItemJudgeRuleDcrk::set_car_run_not_staff_command_deduction(::google::protobuf::int32 value) {
  set_has_car_run_not_staff_command_deduction();
  car_run_not_staff_command_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_deduction)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_cking_1_leftTurnLamp = 22;
inline bool ItemJudgeRuleDcrk::has_event_check_cking_1_leftturnlamp() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_event_check_cking_1_leftturnlamp() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ItemJudgeRuleDcrk::clear_has_event_check_cking_1_leftturnlamp() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ItemJudgeRuleDcrk::clear_event_check_cking_1_leftturnlamp() {
  if (event_check_cking_1_leftturnlamp_ != NULL) event_check_cking_1_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_cking_1_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDcrk::event_check_cking_1_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_leftTurnLamp)
  return event_check_cking_1_leftturnlamp_ != NULL ? *event_check_cking_1_leftturnlamp_ : *default_instance_->event_check_cking_1_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_cking_1_leftturnlamp() {
  set_has_event_check_cking_1_leftturnlamp();
  if (event_check_cking_1_leftturnlamp_ == NULL) {
    event_check_cking_1_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_leftTurnLamp)
  return event_check_cking_1_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::release_event_check_cking_1_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_leftTurnLamp)
  clear_has_event_check_cking_1_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_cking_1_leftturnlamp_;
  event_check_cking_1_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_event_check_cking_1_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_cking_1_leftturnlamp) {
  delete event_check_cking_1_leftturnlamp_;
  event_check_cking_1_leftturnlamp_ = event_check_cking_1_leftturnlamp;
  if (event_check_cking_1_leftturnlamp) {
    set_has_event_check_cking_1_leftturnlamp();
  } else {
    clear_has_event_check_cking_1_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_cking_2_rightTurnLamp = 23;
inline bool ItemJudgeRuleDcrk::has_event_check_cking_2_rightturnlamp() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_event_check_cking_2_rightturnlamp() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ItemJudgeRuleDcrk::clear_has_event_check_cking_2_rightturnlamp() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ItemJudgeRuleDcrk::clear_event_check_cking_2_rightturnlamp() {
  if (event_check_cking_2_rightturnlamp_ != NULL) event_check_cking_2_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_cking_2_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_cking_2_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_rightTurnLamp)
  return event_check_cking_2_rightturnlamp_ != NULL ? *event_check_cking_2_rightturnlamp_ : *default_instance_->event_check_cking_2_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_cking_2_rightturnlamp() {
  set_has_event_check_cking_2_rightturnlamp();
  if (event_check_cking_2_rightturnlamp_ == NULL) {
    event_check_cking_2_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_rightTurnLamp)
  return event_check_cking_2_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_cking_2_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_rightTurnLamp)
  clear_has_event_check_cking_2_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_cking_2_rightturnlamp_;
  event_check_cking_2_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_event_check_cking_2_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_cking_2_rightturnlamp) {
  delete event_check_cking_2_rightturnlamp_;
  event_check_cking_2_rightturnlamp_ = event_check_cking_2_rightturnlamp;
  if (event_check_cking_2_rightturnlamp) {
    set_has_event_check_cking_2_rightturnlamp();
  } else {
    clear_has_event_check_cking_2_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_rightTurnLamp)
}

// optional bool in_area_again = 24 [default = false];
inline bool ItemJudgeRuleDcrk::has_in_area_again() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_in_area_again() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ItemJudgeRuleDcrk::clear_has_in_area_again() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ItemJudgeRuleDcrk::clear_in_area_again() {
  in_area_again_ = false;
  clear_has_in_area_again();
}
inline bool ItemJudgeRuleDcrk::in_area_again() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.in_area_again)
  return in_area_again_;
}
inline void ItemJudgeRuleDcrk::set_in_area_again(bool value) {
  set_has_in_area_again();
  in_area_again_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.in_area_again)
}

// optional int32 car_rk_check_delay_time = 25 [default = 0];
inline bool ItemJudgeRuleDcrk::has_car_rk_check_delay_time() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_rk_check_delay_time() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_rk_check_delay_time() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ItemJudgeRuleDcrk::clear_car_rk_check_delay_time() {
  car_rk_check_delay_time_ = 0;
  clear_has_car_rk_check_delay_time();
}
inline ::google::protobuf::int32 ItemJudgeRuleDcrk::car_rk_check_delay_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rk_check_delay_time)
  return car_rk_check_delay_time_;
}
inline void ItemJudgeRuleDcrk::set_car_rk_check_delay_time(::google::protobuf::int32 value) {
  set_has_car_rk_check_delay_time();
  car_rk_check_delay_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rk_check_delay_time)
}

// optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 26;
inline bool ItemJudgeRuleDcrk::has_event_check_forwarding_rightturnlamp() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_event_check_forwarding_rightturnlamp() {
  _has_bits_[0] |= 0x02000000u;
}
inline void ItemJudgeRuleDcrk::clear_has_event_check_forwarding_rightturnlamp() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void ItemJudgeRuleDcrk::clear_event_check_forwarding_rightturnlamp() {
  if (event_check_forwarding_rightturnlamp_ != NULL) event_check_forwarding_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_forwarding_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_forwarding_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_forwarding_rightTurnLamp)
  return event_check_forwarding_rightturnlamp_ != NULL ? *event_check_forwarding_rightturnlamp_ : *default_instance_->event_check_forwarding_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_forwarding_rightturnlamp() {
  set_has_event_check_forwarding_rightturnlamp();
  if (event_check_forwarding_rightturnlamp_ == NULL) {
    event_check_forwarding_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_forwarding_rightTurnLamp)
  return event_check_forwarding_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_forwarding_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_forwarding_rightTurnLamp)
  clear_has_event_check_forwarding_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_forwarding_rightturnlamp_;
  event_check_forwarding_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_event_check_forwarding_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_forwarding_rightturnlamp) {
  delete event_check_forwarding_rightturnlamp_;
  event_check_forwarding_rightturnlamp_ = event_check_forwarding_rightturnlamp;
  if (event_check_forwarding_rightturnlamp) {
    set_has_event_check_forwarding_rightturnlamp();
  } else {
    clear_has_event_check_forwarding_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_forwarding_rightTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_cking_1_rightTurnLamp = 27;
inline bool ItemJudgeRuleDcrk::has_event_check_cking_1_rightturnlamp() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_event_check_cking_1_rightturnlamp() {
  _has_bits_[0] |= 0x04000000u;
}
inline void ItemJudgeRuleDcrk::clear_has_event_check_cking_1_rightturnlamp() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void ItemJudgeRuleDcrk::clear_event_check_cking_1_rightturnlamp() {
  if (event_check_cking_1_rightturnlamp_ != NULL) event_check_cking_1_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_cking_1_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_cking_1_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_rightTurnLamp)
  return event_check_cking_1_rightturnlamp_ != NULL ? *event_check_cking_1_rightturnlamp_ : *default_instance_->event_check_cking_1_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_cking_1_rightturnlamp() {
  set_has_event_check_cking_1_rightturnlamp();
  if (event_check_cking_1_rightturnlamp_ == NULL) {
    event_check_cking_1_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_rightTurnLamp)
  return event_check_cking_1_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_cking_1_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_rightTurnLamp)
  clear_has_event_check_cking_1_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_cking_1_rightturnlamp_;
  event_check_cking_1_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_event_check_cking_1_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_cking_1_rightturnlamp) {
  delete event_check_cking_1_rightturnlamp_;
  event_check_cking_1_rightturnlamp_ = event_check_cking_1_rightturnlamp;
  if (event_check_cking_1_rightturnlamp) {
    set_has_event_check_cking_1_rightturnlamp();
  } else {
    clear_has_event_check_cking_1_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_cking_2_leftTurnLamp = 28;
inline bool ItemJudgeRuleDcrk::has_event_check_cking_2_leftturnlamp() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_event_check_cking_2_leftturnlamp() {
  _has_bits_[0] |= 0x08000000u;
}
inline void ItemJudgeRuleDcrk::clear_has_event_check_cking_2_leftturnlamp() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void ItemJudgeRuleDcrk::clear_event_check_cking_2_leftturnlamp() {
  if (event_check_cking_2_leftturnlamp_ != NULL) event_check_cking_2_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_cking_2_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDcrk::event_check_cking_2_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_leftTurnLamp)
  return event_check_cking_2_leftturnlamp_ != NULL ? *event_check_cking_2_leftturnlamp_ : *default_instance_->event_check_cking_2_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_cking_2_leftturnlamp() {
  set_has_event_check_cking_2_leftturnlamp();
  if (event_check_cking_2_leftturnlamp_ == NULL) {
    event_check_cking_2_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_leftTurnLamp)
  return event_check_cking_2_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::release_event_check_cking_2_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_leftTurnLamp)
  clear_has_event_check_cking_2_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_cking_2_leftturnlamp_;
  event_check_cking_2_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_event_check_cking_2_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_cking_2_leftturnlamp) {
  delete event_check_cking_2_leftturnlamp_;
  event_check_cking_2_leftturnlamp_ = event_check_cking_2_leftturnlamp;
  if (event_check_cking_2_leftturnlamp) {
    set_has_event_check_cking_2_leftturnlamp();
  } else {
    clear_has_event_check_cking_2_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_leftTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_1_leftTurnLamp = 29;
inline bool ItemJudgeRuleDcrk::has_event_check_waitrk_1_leftturnlamp() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_event_check_waitrk_1_leftturnlamp() {
  _has_bits_[0] |= 0x10000000u;
}
inline void ItemJudgeRuleDcrk::clear_has_event_check_waitrk_1_leftturnlamp() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void ItemJudgeRuleDcrk::clear_event_check_waitrk_1_leftturnlamp() {
  if (event_check_waitrk_1_leftturnlamp_ != NULL) event_check_waitrk_1_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_waitrk_1_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDcrk::event_check_waitrk_1_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_leftTurnLamp)
  return event_check_waitrk_1_leftturnlamp_ != NULL ? *event_check_waitrk_1_leftturnlamp_ : *default_instance_->event_check_waitrk_1_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_waitrk_1_leftturnlamp() {
  set_has_event_check_waitrk_1_leftturnlamp();
  if (event_check_waitrk_1_leftturnlamp_ == NULL) {
    event_check_waitrk_1_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_leftTurnLamp)
  return event_check_waitrk_1_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::release_event_check_waitrk_1_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_leftTurnLamp)
  clear_has_event_check_waitrk_1_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_waitrk_1_leftturnlamp_;
  event_check_waitrk_1_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_event_check_waitrk_1_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_waitrk_1_leftturnlamp) {
  delete event_check_waitrk_1_leftturnlamp_;
  event_check_waitrk_1_leftturnlamp_ = event_check_waitrk_1_leftturnlamp;
  if (event_check_waitrk_1_leftturnlamp) {
    set_has_event_check_waitrk_1_leftturnlamp();
  } else {
    clear_has_event_check_waitrk_1_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_waitrk_1_rightTurnLamp = 30;
inline bool ItemJudgeRuleDcrk::has_event_check_waitrk_1_rightturnlamp() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_event_check_waitrk_1_rightturnlamp() {
  _has_bits_[0] |= 0x20000000u;
}
inline void ItemJudgeRuleDcrk::clear_has_event_check_waitrk_1_rightturnlamp() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void ItemJudgeRuleDcrk::clear_event_check_waitrk_1_rightturnlamp() {
  if (event_check_waitrk_1_rightturnlamp_ != NULL) event_check_waitrk_1_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_waitrk_1_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_waitrk_1_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_rightTurnLamp)
  return event_check_waitrk_1_rightturnlamp_ != NULL ? *event_check_waitrk_1_rightturnlamp_ : *default_instance_->event_check_waitrk_1_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_waitrk_1_rightturnlamp() {
  set_has_event_check_waitrk_1_rightturnlamp();
  if (event_check_waitrk_1_rightturnlamp_ == NULL) {
    event_check_waitrk_1_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_rightTurnLamp)
  return event_check_waitrk_1_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_waitrk_1_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_rightTurnLamp)
  clear_has_event_check_waitrk_1_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_waitrk_1_rightturnlamp_;
  event_check_waitrk_1_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_event_check_waitrk_1_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_waitrk_1_rightturnlamp) {
  delete event_check_waitrk_1_rightturnlamp_;
  event_check_waitrk_1_rightturnlamp_ = event_check_waitrk_1_rightturnlamp;
  if (event_check_waitrk_1_rightturnlamp) {
    set_has_event_check_waitrk_1_rightturnlamp();
  } else {
    clear_has_event_check_waitrk_1_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_rkend_1_leftTurnLamp = 31;
inline bool ItemJudgeRuleDcrk::has_event_check_rkend_1_leftturnlamp() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_event_check_rkend_1_leftturnlamp() {
  _has_bits_[0] |= 0x40000000u;
}
inline void ItemJudgeRuleDcrk::clear_has_event_check_rkend_1_leftturnlamp() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void ItemJudgeRuleDcrk::clear_event_check_rkend_1_leftturnlamp() {
  if (event_check_rkend_1_leftturnlamp_ != NULL) event_check_rkend_1_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_rkend_1_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDcrk::event_check_rkend_1_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_leftTurnLamp)
  return event_check_rkend_1_leftturnlamp_ != NULL ? *event_check_rkend_1_leftturnlamp_ : *default_instance_->event_check_rkend_1_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_rkend_1_leftturnlamp() {
  set_has_event_check_rkend_1_leftturnlamp();
  if (event_check_rkend_1_leftturnlamp_ == NULL) {
    event_check_rkend_1_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_leftTurnLamp)
  return event_check_rkend_1_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::release_event_check_rkend_1_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_leftTurnLamp)
  clear_has_event_check_rkend_1_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_rkend_1_leftturnlamp_;
  event_check_rkend_1_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_event_check_rkend_1_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_rkend_1_leftturnlamp) {
  delete event_check_rkend_1_leftturnlamp_;
  event_check_rkend_1_leftturnlamp_ = event_check_rkend_1_leftturnlamp;
  if (event_check_rkend_1_leftturnlamp) {
    set_has_event_check_rkend_1_leftturnlamp();
  } else {
    clear_has_event_check_rkend_1_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_rkend_1_rightTurnLamp = 32;
inline bool ItemJudgeRuleDcrk::has_event_check_rkend_1_rightturnlamp() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_event_check_rkend_1_rightturnlamp() {
  _has_bits_[0] |= 0x80000000u;
}
inline void ItemJudgeRuleDcrk::clear_has_event_check_rkend_1_rightturnlamp() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void ItemJudgeRuleDcrk::clear_event_check_rkend_1_rightturnlamp() {
  if (event_check_rkend_1_rightturnlamp_ != NULL) event_check_rkend_1_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_rkend_1_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_rkend_1_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_rightTurnLamp)
  return event_check_rkend_1_rightturnlamp_ != NULL ? *event_check_rkend_1_rightturnlamp_ : *default_instance_->event_check_rkend_1_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_rkend_1_rightturnlamp() {
  set_has_event_check_rkend_1_rightturnlamp();
  if (event_check_rkend_1_rightturnlamp_ == NULL) {
    event_check_rkend_1_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_rightTurnLamp)
  return event_check_rkend_1_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_rkend_1_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_rightTurnLamp)
  clear_has_event_check_rkend_1_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_rkend_1_rightturnlamp_;
  event_check_rkend_1_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_event_check_rkend_1_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rkend_1_rightturnlamp) {
  delete event_check_rkend_1_rightturnlamp_;
  event_check_rkend_1_rightturnlamp_ = event_check_rkend_1_rightturnlamp;
  if (event_check_rkend_1_rightturnlamp) {
    set_has_event_check_rkend_1_rightturnlamp();
  } else {
    clear_has_event_check_rkend_1_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_2_leftTurnLamp = 33;
inline bool ItemJudgeRuleDcrk::has_event_check_waitrk_2_leftturnlamp() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_event_check_waitrk_2_leftturnlamp() {
  _has_bits_[1] |= 0x00000001u;
}
inline void ItemJudgeRuleDcrk::clear_has_event_check_waitrk_2_leftturnlamp() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void ItemJudgeRuleDcrk::clear_event_check_waitrk_2_leftturnlamp() {
  if (event_check_waitrk_2_leftturnlamp_ != NULL) event_check_waitrk_2_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_waitrk_2_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDcrk::event_check_waitrk_2_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_leftTurnLamp)
  return event_check_waitrk_2_leftturnlamp_ != NULL ? *event_check_waitrk_2_leftturnlamp_ : *default_instance_->event_check_waitrk_2_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_waitrk_2_leftturnlamp() {
  set_has_event_check_waitrk_2_leftturnlamp();
  if (event_check_waitrk_2_leftturnlamp_ == NULL) {
    event_check_waitrk_2_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_leftTurnLamp)
  return event_check_waitrk_2_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::release_event_check_waitrk_2_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_leftTurnLamp)
  clear_has_event_check_waitrk_2_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_waitrk_2_leftturnlamp_;
  event_check_waitrk_2_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_event_check_waitrk_2_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_waitrk_2_leftturnlamp) {
  delete event_check_waitrk_2_leftturnlamp_;
  event_check_waitrk_2_leftturnlamp_ = event_check_waitrk_2_leftturnlamp;
  if (event_check_waitrk_2_leftturnlamp) {
    set_has_event_check_waitrk_2_leftturnlamp();
  } else {
    clear_has_event_check_waitrk_2_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_waitrk_2_rightTurnLamp = 34;
inline bool ItemJudgeRuleDcrk::has_event_check_waitrk_2_rightturnlamp() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_event_check_waitrk_2_rightturnlamp() {
  _has_bits_[1] |= 0x00000002u;
}
inline void ItemJudgeRuleDcrk::clear_has_event_check_waitrk_2_rightturnlamp() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void ItemJudgeRuleDcrk::clear_event_check_waitrk_2_rightturnlamp() {
  if (event_check_waitrk_2_rightturnlamp_ != NULL) event_check_waitrk_2_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_waitrk_2_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_waitrk_2_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_rightTurnLamp)
  return event_check_waitrk_2_rightturnlamp_ != NULL ? *event_check_waitrk_2_rightturnlamp_ : *default_instance_->event_check_waitrk_2_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_waitrk_2_rightturnlamp() {
  set_has_event_check_waitrk_2_rightturnlamp();
  if (event_check_waitrk_2_rightturnlamp_ == NULL) {
    event_check_waitrk_2_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_rightTurnLamp)
  return event_check_waitrk_2_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_waitrk_2_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_rightTurnLamp)
  clear_has_event_check_waitrk_2_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_waitrk_2_rightturnlamp_;
  event_check_waitrk_2_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_event_check_waitrk_2_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_waitrk_2_rightturnlamp) {
  delete event_check_waitrk_2_rightturnlamp_;
  event_check_waitrk_2_rightturnlamp_ = event_check_waitrk_2_rightturnlamp;
  if (event_check_waitrk_2_rightturnlamp) {
    set_has_event_check_waitrk_2_rightturnlamp();
  } else {
    clear_has_event_check_waitrk_2_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_rkend_2_leftTurnLamp = 35;
inline bool ItemJudgeRuleDcrk::has_event_check_rkend_2_leftturnlamp() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_event_check_rkend_2_leftturnlamp() {
  _has_bits_[1] |= 0x00000004u;
}
inline void ItemJudgeRuleDcrk::clear_has_event_check_rkend_2_leftturnlamp() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void ItemJudgeRuleDcrk::clear_event_check_rkend_2_leftturnlamp() {
  if (event_check_rkend_2_leftturnlamp_ != NULL) event_check_rkend_2_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_rkend_2_leftturnlamp();
}
inline const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDcrk::event_check_rkend_2_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_leftTurnLamp)
  return event_check_rkend_2_leftturnlamp_ != NULL ? *event_check_rkend_2_leftturnlamp_ : *default_instance_->event_check_rkend_2_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_rkend_2_leftturnlamp() {
  set_has_event_check_rkend_2_leftturnlamp();
  if (event_check_rkend_2_leftturnlamp_ == NULL) {
    event_check_rkend_2_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_leftTurnLamp)
  return event_check_rkend_2_leftturnlamp_;
}
inline ::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::release_event_check_rkend_2_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_leftTurnLamp)
  clear_has_event_check_rkend_2_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_rkend_2_leftturnlamp_;
  event_check_rkend_2_leftturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_event_check_rkend_2_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_rkend_2_leftturnlamp) {
  delete event_check_rkend_2_leftturnlamp_;
  event_check_rkend_2_leftturnlamp_ = event_check_rkend_2_leftturnlamp;
  if (event_check_rkend_2_leftturnlamp) {
    set_has_event_check_rkend_2_leftturnlamp();
  } else {
    clear_has_event_check_rkend_2_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_rkend_2_rightTurnLamp = 36;
inline bool ItemJudgeRuleDcrk::has_event_check_rkend_2_rightturnlamp() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_event_check_rkend_2_rightturnlamp() {
  _has_bits_[1] |= 0x00000008u;
}
inline void ItemJudgeRuleDcrk::clear_has_event_check_rkend_2_rightturnlamp() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void ItemJudgeRuleDcrk::clear_event_check_rkend_2_rightturnlamp() {
  if (event_check_rkend_2_rightturnlamp_ != NULL) event_check_rkend_2_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_rkend_2_rightturnlamp();
}
inline const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_rkend_2_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_rightTurnLamp)
  return event_check_rkend_2_rightturnlamp_ != NULL ? *event_check_rkend_2_rightturnlamp_ : *default_instance_->event_check_rkend_2_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_rkend_2_rightturnlamp() {
  set_has_event_check_rkend_2_rightturnlamp();
  if (event_check_rkend_2_rightturnlamp_ == NULL) {
    event_check_rkend_2_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_rightTurnLamp)
  return event_check_rkend_2_rightturnlamp_;
}
inline ::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_rkend_2_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_rightTurnLamp)
  clear_has_event_check_rkend_2_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_rkend_2_rightturnlamp_;
  event_check_rkend_2_rightturnlamp_ = NULL;
  return temp;
}
inline void ItemJudgeRuleDcrk::set_allocated_event_check_rkend_2_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rkend_2_rightturnlamp) {
  delete event_check_rkend_2_rightturnlamp_;
  event_check_rkend_2_rightturnlamp_ = event_check_rkend_2_rightturnlamp;
  if (event_check_rkend_2_rightturnlamp) {
    set_has_event_check_rkend_2_rightturnlamp();
  } else {
    clear_has_event_check_rkend_2_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_rightTurnLamp)
}

// optional bool car_rking_1_frontwheel_over_controlline_check = 37 [default = true];
inline bool ItemJudgeRuleDcrk::has_car_rking_1_frontwheel_over_controlline_check() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_rking_1_frontwheel_over_controlline_check() {
  _has_bits_[1] |= 0x00000010u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_rking_1_frontwheel_over_controlline_check() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void ItemJudgeRuleDcrk::clear_car_rking_1_frontwheel_over_controlline_check() {
  car_rking_1_frontwheel_over_controlline_check_ = true;
  clear_has_car_rking_1_frontwheel_over_controlline_check();
}
inline bool ItemJudgeRuleDcrk::car_rking_1_frontwheel_over_controlline_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_check)
  return car_rking_1_frontwheel_over_controlline_check_;
}
inline void ItemJudgeRuleDcrk::set_car_rking_1_frontwheel_over_controlline_check(bool value) {
  set_has_car_rking_1_frontwheel_over_controlline_check();
  car_rking_1_frontwheel_over_controlline_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_check)
}

// optional int32 car_rking_1_frontwheel_over_controlline_deduction = 38 [default = 100];
inline bool ItemJudgeRuleDcrk::has_car_rking_1_frontwheel_over_controlline_deduction() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_rking_1_frontwheel_over_controlline_deduction() {
  _has_bits_[1] |= 0x00000020u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_rking_1_frontwheel_over_controlline_deduction() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void ItemJudgeRuleDcrk::clear_car_rking_1_frontwheel_over_controlline_deduction() {
  car_rking_1_frontwheel_over_controlline_deduction_ = 100;
  clear_has_car_rking_1_frontwheel_over_controlline_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleDcrk::car_rking_1_frontwheel_over_controlline_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_deduction)
  return car_rking_1_frontwheel_over_controlline_deduction_;
}
inline void ItemJudgeRuleDcrk::set_car_rking_1_frontwheel_over_controlline_deduction(::google::protobuf::int32 value) {
  set_has_car_rking_1_frontwheel_over_controlline_deduction();
  car_rking_1_frontwheel_over_controlline_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_deduction)
}

// optional string car_rking_1_frontwheel_over_controlline_voice = 39;
inline bool ItemJudgeRuleDcrk::has_car_rking_1_frontwheel_over_controlline_voice() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_rking_1_frontwheel_over_controlline_voice() {
  _has_bits_[1] |= 0x00000040u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_rking_1_frontwheel_over_controlline_voice() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void ItemJudgeRuleDcrk::clear_car_rking_1_frontwheel_over_controlline_voice() {
  car_rking_1_frontwheel_over_controlline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_rking_1_frontwheel_over_controlline_voice();
}
inline const ::std::string& ItemJudgeRuleDcrk::car_rking_1_frontwheel_over_controlline_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
  return car_rking_1_frontwheel_over_controlline_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_car_rking_1_frontwheel_over_controlline_voice(const ::std::string& value) {
  set_has_car_rking_1_frontwheel_over_controlline_voice();
  car_rking_1_frontwheel_over_controlline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
}
inline void ItemJudgeRuleDcrk::set_car_rking_1_frontwheel_over_controlline_voice(const char* value) {
  set_has_car_rking_1_frontwheel_over_controlline_voice();
  car_rking_1_frontwheel_over_controlline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
}
inline void ItemJudgeRuleDcrk::set_car_rking_1_frontwheel_over_controlline_voice(const char* value, size_t size) {
  set_has_car_rking_1_frontwheel_over_controlline_voice();
  car_rking_1_frontwheel_over_controlline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
}
inline ::std::string* ItemJudgeRuleDcrk::mutable_car_rking_1_frontwheel_over_controlline_voice() {
  set_has_car_rking_1_frontwheel_over_controlline_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
  return car_rking_1_frontwheel_over_controlline_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDcrk::release_car_rking_1_frontwheel_over_controlline_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
  clear_has_car_rking_1_frontwheel_over_controlline_voice();
  return car_rking_1_frontwheel_over_controlline_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_allocated_car_rking_1_frontwheel_over_controlline_voice(::std::string* car_rking_1_frontwheel_over_controlline_voice) {
  if (car_rking_1_frontwheel_over_controlline_voice != NULL) {
    set_has_car_rking_1_frontwheel_over_controlline_voice();
  } else {
    clear_has_car_rking_1_frontwheel_over_controlline_voice();
  }
  car_rking_1_frontwheel_over_controlline_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_rking_1_frontwheel_over_controlline_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
}

// optional bool car_rking_2_frontwheel_over_controlline_check = 40 [default = true];
inline bool ItemJudgeRuleDcrk::has_car_rking_2_frontwheel_over_controlline_check() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_rking_2_frontwheel_over_controlline_check() {
  _has_bits_[1] |= 0x00000080u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_rking_2_frontwheel_over_controlline_check() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void ItemJudgeRuleDcrk::clear_car_rking_2_frontwheel_over_controlline_check() {
  car_rking_2_frontwheel_over_controlline_check_ = true;
  clear_has_car_rking_2_frontwheel_over_controlline_check();
}
inline bool ItemJudgeRuleDcrk::car_rking_2_frontwheel_over_controlline_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_check)
  return car_rking_2_frontwheel_over_controlline_check_;
}
inline void ItemJudgeRuleDcrk::set_car_rking_2_frontwheel_over_controlline_check(bool value) {
  set_has_car_rking_2_frontwheel_over_controlline_check();
  car_rking_2_frontwheel_over_controlline_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_check)
}

// optional int32 car_rking_2_frontwheel_over_controlline_deduction = 41 [default = 100];
inline bool ItemJudgeRuleDcrk::has_car_rking_2_frontwheel_over_controlline_deduction() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_rking_2_frontwheel_over_controlline_deduction() {
  _has_bits_[1] |= 0x00000100u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_rking_2_frontwheel_over_controlline_deduction() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void ItemJudgeRuleDcrk::clear_car_rking_2_frontwheel_over_controlline_deduction() {
  car_rking_2_frontwheel_over_controlline_deduction_ = 100;
  clear_has_car_rking_2_frontwheel_over_controlline_deduction();
}
inline ::google::protobuf::int32 ItemJudgeRuleDcrk::car_rking_2_frontwheel_over_controlline_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_deduction)
  return car_rking_2_frontwheel_over_controlline_deduction_;
}
inline void ItemJudgeRuleDcrk::set_car_rking_2_frontwheel_over_controlline_deduction(::google::protobuf::int32 value) {
  set_has_car_rking_2_frontwheel_over_controlline_deduction();
  car_rking_2_frontwheel_over_controlline_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_deduction)
}

// optional string car_rking_2_frontwheel_over_controlline_voice = 42;
inline bool ItemJudgeRuleDcrk::has_car_rking_2_frontwheel_over_controlline_voice() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void ItemJudgeRuleDcrk::set_has_car_rking_2_frontwheel_over_controlline_voice() {
  _has_bits_[1] |= 0x00000200u;
}
inline void ItemJudgeRuleDcrk::clear_has_car_rking_2_frontwheel_over_controlline_voice() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void ItemJudgeRuleDcrk::clear_car_rking_2_frontwheel_over_controlline_voice() {
  car_rking_2_frontwheel_over_controlline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_rking_2_frontwheel_over_controlline_voice();
}
inline const ::std::string& ItemJudgeRuleDcrk::car_rking_2_frontwheel_over_controlline_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
  return car_rking_2_frontwheel_over_controlline_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_car_rking_2_frontwheel_over_controlline_voice(const ::std::string& value) {
  set_has_car_rking_2_frontwheel_over_controlline_voice();
  car_rking_2_frontwheel_over_controlline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
}
inline void ItemJudgeRuleDcrk::set_car_rking_2_frontwheel_over_controlline_voice(const char* value) {
  set_has_car_rking_2_frontwheel_over_controlline_voice();
  car_rking_2_frontwheel_over_controlline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
}
inline void ItemJudgeRuleDcrk::set_car_rking_2_frontwheel_over_controlline_voice(const char* value, size_t size) {
  set_has_car_rking_2_frontwheel_over_controlline_voice();
  car_rking_2_frontwheel_over_controlline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
}
inline ::std::string* ItemJudgeRuleDcrk::mutable_car_rking_2_frontwheel_over_controlline_voice() {
  set_has_car_rking_2_frontwheel_over_controlline_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
  return car_rking_2_frontwheel_over_controlline_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemJudgeRuleDcrk::release_car_rking_2_frontwheel_over_controlline_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
  clear_has_car_rking_2_frontwheel_over_controlline_voice();
  return car_rking_2_frontwheel_over_controlline_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemJudgeRuleDcrk::set_allocated_car_rking_2_frontwheel_over_controlline_voice(::std::string* car_rking_2_frontwheel_over_controlline_voice) {
  if (car_rking_2_frontwheel_over_controlline_voice != NULL) {
    set_has_car_rking_2_frontwheel_over_controlline_voice();
  } else {
    clear_has_car_rking_2_frontwheel_over_controlline_voice();
  }
  car_rking_2_frontwheel_over_controlline_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_rking_2_frontwheel_over_controlline_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
}

// -------------------------------------------------------------------

// ItemsJudgeRules

// optional .OPMessage.GlobalJudgeRule item_global = 1;
inline bool ItemsJudgeRules::has_item_global() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemsJudgeRules::set_has_item_global() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemsJudgeRules::clear_has_item_global() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemsJudgeRules::clear_item_global() {
  if (item_global_ != NULL) item_global_->::OPMessage::GlobalJudgeRule::Clear();
  clear_has_item_global();
}
inline const ::OPMessage::GlobalJudgeRule& ItemsJudgeRules::item_global() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_global)
  return item_global_ != NULL ? *item_global_ : *default_instance_->item_global_;
}
inline ::OPMessage::GlobalJudgeRule* ItemsJudgeRules::mutable_item_global() {
  set_has_item_global();
  if (item_global_ == NULL) {
    item_global_ = new ::OPMessage::GlobalJudgeRule;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_global)
  return item_global_;
}
inline ::OPMessage::GlobalJudgeRule* ItemsJudgeRules::release_item_global() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_global)
  clear_has_item_global();
  ::OPMessage::GlobalJudgeRule* temp = item_global_;
  item_global_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_global(::OPMessage::GlobalJudgeRule* item_global) {
  delete item_global_;
  item_global_ = item_global;
  if (item_global) {
    set_has_item_global();
  } else {
    clear_has_item_global();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_global)
}

// optional .OPMessage.ItemJudgeRuleZero item_zero = 2;
inline bool ItemsJudgeRules::has_item_zero() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemsJudgeRules::set_has_item_zero() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemsJudgeRules::clear_has_item_zero() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemsJudgeRules::clear_item_zero() {
  if (item_zero_ != NULL) item_zero_->::OPMessage::ItemJudgeRuleZero::Clear();
  clear_has_item_zero();
}
inline const ::OPMessage::ItemJudgeRuleZero& ItemsJudgeRules::item_zero() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_zero)
  return item_zero_ != NULL ? *item_zero_ : *default_instance_->item_zero_;
}
inline ::OPMessage::ItemJudgeRuleZero* ItemsJudgeRules::mutable_item_zero() {
  set_has_item_zero();
  if (item_zero_ == NULL) {
    item_zero_ = new ::OPMessage::ItemJudgeRuleZero;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_zero)
  return item_zero_;
}
inline ::OPMessage::ItemJudgeRuleZero* ItemsJudgeRules::release_item_zero() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_zero)
  clear_has_item_zero();
  ::OPMessage::ItemJudgeRuleZero* temp = item_zero_;
  item_zero_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_zero(::OPMessage::ItemJudgeRuleZero* item_zero) {
  delete item_zero_;
  item_zero_ = item_zero;
  if (item_zero) {
    set_has_item_zero();
  } else {
    clear_has_item_zero();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_zero)
}

// optional .OPMessage.ItemJudgeRuleDk item_dk = 3;
inline bool ItemsJudgeRules::has_item_dk() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemsJudgeRules::set_has_item_dk() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemsJudgeRules::clear_has_item_dk() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemsJudgeRules::clear_item_dk() {
  if (item_dk_ != NULL) item_dk_->::OPMessage::ItemJudgeRuleDk::Clear();
  clear_has_item_dk();
}
inline const ::OPMessage::ItemJudgeRuleDk& ItemsJudgeRules::item_dk() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_dk)
  return item_dk_ != NULL ? *item_dk_ : *default_instance_->item_dk_;
}
inline ::OPMessage::ItemJudgeRuleDk* ItemsJudgeRules::mutable_item_dk() {
  set_has_item_dk();
  if (item_dk_ == NULL) {
    item_dk_ = new ::OPMessage::ItemJudgeRuleDk;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_dk)
  return item_dk_;
}
inline ::OPMessage::ItemJudgeRuleDk* ItemsJudgeRules::release_item_dk() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_dk)
  clear_has_item_dk();
  ::OPMessage::ItemJudgeRuleDk* temp = item_dk_;
  item_dk_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_dk(::OPMessage::ItemJudgeRuleDk* item_dk) {
  delete item_dk_;
  item_dk_ = item_dk;
  if (item_dk) {
    set_has_item_dk();
  } else {
    clear_has_item_dk();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_dk)
}

// optional .OPMessage.ItemJudgeRuleZjzw item_zjzw = 4;
inline bool ItemsJudgeRules::has_item_zjzw() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemsJudgeRules::set_has_item_zjzw() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemsJudgeRules::clear_has_item_zjzw() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemsJudgeRules::clear_item_zjzw() {
  if (item_zjzw_ != NULL) item_zjzw_->::OPMessage::ItemJudgeRuleZjzw::Clear();
  clear_has_item_zjzw();
}
inline const ::OPMessage::ItemJudgeRuleZjzw& ItemsJudgeRules::item_zjzw() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_zjzw)
  return item_zjzw_ != NULL ? *item_zjzw_ : *default_instance_->item_zjzw_;
}
inline ::OPMessage::ItemJudgeRuleZjzw* ItemsJudgeRules::mutable_item_zjzw() {
  set_has_item_zjzw();
  if (item_zjzw_ == NULL) {
    item_zjzw_ = new ::OPMessage::ItemJudgeRuleZjzw;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_zjzw)
  return item_zjzw_;
}
inline ::OPMessage::ItemJudgeRuleZjzw* ItemsJudgeRules::release_item_zjzw() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_zjzw)
  clear_has_item_zjzw();
  ::OPMessage::ItemJudgeRuleZjzw* temp = item_zjzw_;
  item_zjzw_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_zjzw(::OPMessage::ItemJudgeRuleZjzw* item_zjzw) {
  delete item_zjzw_;
  item_zjzw_ = item_zjzw;
  if (item_zjzw) {
    set_has_item_zjzw();
  } else {
    clear_has_item_zjzw();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_zjzw)
}

// optional .OPMessage.ItemJudgeRuleQxxs item_qxxs = 5;
inline bool ItemsJudgeRules::has_item_qxxs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemsJudgeRules::set_has_item_qxxs() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemsJudgeRules::clear_has_item_qxxs() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemsJudgeRules::clear_item_qxxs() {
  if (item_qxxs_ != NULL) item_qxxs_->::OPMessage::ItemJudgeRuleQxxs::Clear();
  clear_has_item_qxxs();
}
inline const ::OPMessage::ItemJudgeRuleQxxs& ItemsJudgeRules::item_qxxs() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_qxxs)
  return item_qxxs_ != NULL ? *item_qxxs_ : *default_instance_->item_qxxs_;
}
inline ::OPMessage::ItemJudgeRuleQxxs* ItemsJudgeRules::mutable_item_qxxs() {
  set_has_item_qxxs();
  if (item_qxxs_ == NULL) {
    item_qxxs_ = new ::OPMessage::ItemJudgeRuleQxxs;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_qxxs)
  return item_qxxs_;
}
inline ::OPMessage::ItemJudgeRuleQxxs* ItemsJudgeRules::release_item_qxxs() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_qxxs)
  clear_has_item_qxxs();
  ::OPMessage::ItemJudgeRuleQxxs* temp = item_qxxs_;
  item_qxxs_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_qxxs(::OPMessage::ItemJudgeRuleQxxs* item_qxxs) {
  delete item_qxxs_;
  item_qxxs_ = item_qxxs;
  if (item_qxxs) {
    set_has_item_qxxs();
  } else {
    clear_has_item_qxxs();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_qxxs)
}

// optional .OPMessage.ItemJudgeRuleCftc item_cftc = 6;
inline bool ItemsJudgeRules::has_item_cftc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ItemsJudgeRules::set_has_item_cftc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ItemsJudgeRules::clear_has_item_cftc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ItemsJudgeRules::clear_item_cftc() {
  if (item_cftc_ != NULL) item_cftc_->::OPMessage::ItemJudgeRuleCftc::Clear();
  clear_has_item_cftc();
}
inline const ::OPMessage::ItemJudgeRuleCftc& ItemsJudgeRules::item_cftc() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_cftc)
  return item_cftc_ != NULL ? *item_cftc_ : *default_instance_->item_cftc_;
}
inline ::OPMessage::ItemJudgeRuleCftc* ItemsJudgeRules::mutable_item_cftc() {
  set_has_item_cftc();
  if (item_cftc_ == NULL) {
    item_cftc_ = new ::OPMessage::ItemJudgeRuleCftc;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_cftc)
  return item_cftc_;
}
inline ::OPMessage::ItemJudgeRuleCftc* ItemsJudgeRules::release_item_cftc() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_cftc)
  clear_has_item_cftc();
  ::OPMessage::ItemJudgeRuleCftc* temp = item_cftc_;
  item_cftc_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_cftc(::OPMessage::ItemJudgeRuleCftc* item_cftc) {
  delete item_cftc_;
  item_cftc_ = item_cftc;
  if (item_cftc) {
    set_has_item_cftc();
  } else {
    clear_has_item_cftc();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_cftc)
}

// optional .OPMessage.ItemJudgeRuleSpqb item_spqb = 7;
inline bool ItemsJudgeRules::has_item_spqb() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ItemsJudgeRules::set_has_item_spqb() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ItemsJudgeRules::clear_has_item_spqb() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ItemsJudgeRules::clear_item_spqb() {
  if (item_spqb_ != NULL) item_spqb_->::OPMessage::ItemJudgeRuleSpqb::Clear();
  clear_has_item_spqb();
}
inline const ::OPMessage::ItemJudgeRuleSpqb& ItemsJudgeRules::item_spqb() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_spqb)
  return item_spqb_ != NULL ? *item_spqb_ : *default_instance_->item_spqb_;
}
inline ::OPMessage::ItemJudgeRuleSpqb* ItemsJudgeRules::mutable_item_spqb() {
  set_has_item_spqb();
  if (item_spqb_ == NULL) {
    item_spqb_ = new ::OPMessage::ItemJudgeRuleSpqb;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_spqb)
  return item_spqb_;
}
inline ::OPMessage::ItemJudgeRuleSpqb* ItemsJudgeRules::release_item_spqb() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_spqb)
  clear_has_item_spqb();
  ::OPMessage::ItemJudgeRuleSpqb* temp = item_spqb_;
  item_spqb_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_spqb(::OPMessage::ItemJudgeRuleSpqb* item_spqb) {
  delete item_spqb_;
  item_spqb_ = item_spqb;
  if (item_spqb) {
    set_has_item_spqb();
  } else {
    clear_has_item_spqb();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_spqb)
}

// optional .OPMessage.ItemJudgeRuleDcrk item_dcrk = 8;
inline bool ItemsJudgeRules::has_item_dcrk() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ItemsJudgeRules::set_has_item_dcrk() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ItemsJudgeRules::clear_has_item_dcrk() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ItemsJudgeRules::clear_item_dcrk() {
  if (item_dcrk_ != NULL) item_dcrk_->::OPMessage::ItemJudgeRuleDcrk::Clear();
  clear_has_item_dcrk();
}
inline const ::OPMessage::ItemJudgeRuleDcrk& ItemsJudgeRules::item_dcrk() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_dcrk)
  return item_dcrk_ != NULL ? *item_dcrk_ : *default_instance_->item_dcrk_;
}
inline ::OPMessage::ItemJudgeRuleDcrk* ItemsJudgeRules::mutable_item_dcrk() {
  set_has_item_dcrk();
  if (item_dcrk_ == NULL) {
    item_dcrk_ = new ::OPMessage::ItemJudgeRuleDcrk;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_dcrk)
  return item_dcrk_;
}
inline ::OPMessage::ItemJudgeRuleDcrk* ItemsJudgeRules::release_item_dcrk() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_dcrk)
  clear_has_item_dcrk();
  ::OPMessage::ItemJudgeRuleDcrk* temp = item_dcrk_;
  item_dcrk_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_dcrk(::OPMessage::ItemJudgeRuleDcrk* item_dcrk) {
  delete item_dcrk_;
  item_dcrk_ = item_dcrk;
  if (item_dcrk) {
    set_has_item_dcrk();
  } else {
    clear_has_item_dcrk();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_dcrk)
}

// optional .OPMessage.ItemJudgeRuleShangCheZhunBei item_shangchezhunbei = 9;
inline bool ItemsJudgeRules::has_item_shangchezhunbei() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ItemsJudgeRules::set_has_item_shangchezhunbei() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ItemsJudgeRules::clear_has_item_shangchezhunbei() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ItemsJudgeRules::clear_item_shangchezhunbei() {
  if (item_shangchezhunbei_ != NULL) item_shangchezhunbei_->::OPMessage::ItemJudgeRuleShangCheZhunBei::Clear();
  clear_has_item_shangchezhunbei();
}
inline const ::OPMessage::ItemJudgeRuleShangCheZhunBei& ItemsJudgeRules::item_shangchezhunbei() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_shangchezhunbei)
  return item_shangchezhunbei_ != NULL ? *item_shangchezhunbei_ : *default_instance_->item_shangchezhunbei_;
}
inline ::OPMessage::ItemJudgeRuleShangCheZhunBei* ItemsJudgeRules::mutable_item_shangchezhunbei() {
  set_has_item_shangchezhunbei();
  if (item_shangchezhunbei_ == NULL) {
    item_shangchezhunbei_ = new ::OPMessage::ItemJudgeRuleShangCheZhunBei;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_shangchezhunbei)
  return item_shangchezhunbei_;
}
inline ::OPMessage::ItemJudgeRuleShangCheZhunBei* ItemsJudgeRules::release_item_shangchezhunbei() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_shangchezhunbei)
  clear_has_item_shangchezhunbei();
  ::OPMessage::ItemJudgeRuleShangCheZhunBei* temp = item_shangchezhunbei_;
  item_shangchezhunbei_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_shangchezhunbei(::OPMessage::ItemJudgeRuleShangCheZhunBei* item_shangchezhunbei) {
  delete item_shangchezhunbei_;
  item_shangchezhunbei_ = item_shangchezhunbei;
  if (item_shangchezhunbei) {
    set_has_item_shangchezhunbei();
  } else {
    clear_has_item_shangchezhunbei();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_shangchezhunbei)
}

// optional .OPMessage.ItemJudgeRuleDengGuangMoNi item_dengguangmoni = 10;
inline bool ItemsJudgeRules::has_item_dengguangmoni() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ItemsJudgeRules::set_has_item_dengguangmoni() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ItemsJudgeRules::clear_has_item_dengguangmoni() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ItemsJudgeRules::clear_item_dengguangmoni() {
  if (item_dengguangmoni_ != NULL) item_dengguangmoni_->::OPMessage::ItemJudgeRuleDengGuangMoNi::Clear();
  clear_has_item_dengguangmoni();
}
inline const ::OPMessage::ItemJudgeRuleDengGuangMoNi& ItemsJudgeRules::item_dengguangmoni() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_dengguangmoni)
  return item_dengguangmoni_ != NULL ? *item_dengguangmoni_ : *default_instance_->item_dengguangmoni_;
}
inline ::OPMessage::ItemJudgeRuleDengGuangMoNi* ItemsJudgeRules::mutable_item_dengguangmoni() {
  set_has_item_dengguangmoni();
  if (item_dengguangmoni_ == NULL) {
    item_dengguangmoni_ = new ::OPMessage::ItemJudgeRuleDengGuangMoNi;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_dengguangmoni)
  return item_dengguangmoni_;
}
inline ::OPMessage::ItemJudgeRuleDengGuangMoNi* ItemsJudgeRules::release_item_dengguangmoni() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_dengguangmoni)
  clear_has_item_dengguangmoni();
  ::OPMessage::ItemJudgeRuleDengGuangMoNi* temp = item_dengguangmoni_;
  item_dengguangmoni_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_dengguangmoni(::OPMessage::ItemJudgeRuleDengGuangMoNi* item_dengguangmoni) {
  delete item_dengguangmoni_;
  item_dengguangmoni_ = item_dengguangmoni;
  if (item_dengguangmoni) {
    set_has_item_dengguangmoni();
  } else {
    clear_has_item_dengguangmoni();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_dengguangmoni)
}

// optional .OPMessage.ItemJudgeRuleQiBu item_qibu = 11;
inline bool ItemsJudgeRules::has_item_qibu() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ItemsJudgeRules::set_has_item_qibu() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ItemsJudgeRules::clear_has_item_qibu() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ItemsJudgeRules::clear_item_qibu() {
  if (item_qibu_ != NULL) item_qibu_->::OPMessage::ItemJudgeRuleQiBu::Clear();
  clear_has_item_qibu();
}
inline const ::OPMessage::ItemJudgeRuleQiBu& ItemsJudgeRules::item_qibu() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_qibu)
  return item_qibu_ != NULL ? *item_qibu_ : *default_instance_->item_qibu_;
}
inline ::OPMessage::ItemJudgeRuleQiBu* ItemsJudgeRules::mutable_item_qibu() {
  set_has_item_qibu();
  if (item_qibu_ == NULL) {
    item_qibu_ = new ::OPMessage::ItemJudgeRuleQiBu;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_qibu)
  return item_qibu_;
}
inline ::OPMessage::ItemJudgeRuleQiBu* ItemsJudgeRules::release_item_qibu() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_qibu)
  clear_has_item_qibu();
  ::OPMessage::ItemJudgeRuleQiBu* temp = item_qibu_;
  item_qibu_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_qibu(::OPMessage::ItemJudgeRuleQiBu* item_qibu) {
  delete item_qibu_;
  item_qibu_ = item_qibu;
  if (item_qibu) {
    set_has_item_qibu();
  } else {
    clear_has_item_qibu();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_qibu)
}

// optional .OPMessage.ItemJudgeRuleXueXiaoQuYu item_xuexiaoquyu = 12;
inline bool ItemsJudgeRules::has_item_xuexiaoquyu() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ItemsJudgeRules::set_has_item_xuexiaoquyu() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ItemsJudgeRules::clear_has_item_xuexiaoquyu() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ItemsJudgeRules::clear_item_xuexiaoquyu() {
  if (item_xuexiaoquyu_ != NULL) item_xuexiaoquyu_->::OPMessage::ItemJudgeRuleXueXiaoQuYu::Clear();
  clear_has_item_xuexiaoquyu();
}
inline const ::OPMessage::ItemJudgeRuleXueXiaoQuYu& ItemsJudgeRules::item_xuexiaoquyu() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_xuexiaoquyu)
  return item_xuexiaoquyu_ != NULL ? *item_xuexiaoquyu_ : *default_instance_->item_xuexiaoquyu_;
}
inline ::OPMessage::ItemJudgeRuleXueXiaoQuYu* ItemsJudgeRules::mutable_item_xuexiaoquyu() {
  set_has_item_xuexiaoquyu();
  if (item_xuexiaoquyu_ == NULL) {
    item_xuexiaoquyu_ = new ::OPMessage::ItemJudgeRuleXueXiaoQuYu;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_xuexiaoquyu)
  return item_xuexiaoquyu_;
}
inline ::OPMessage::ItemJudgeRuleXueXiaoQuYu* ItemsJudgeRules::release_item_xuexiaoquyu() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_xuexiaoquyu)
  clear_has_item_xuexiaoquyu();
  ::OPMessage::ItemJudgeRuleXueXiaoQuYu* temp = item_xuexiaoquyu_;
  item_xuexiaoquyu_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_xuexiaoquyu(::OPMessage::ItemJudgeRuleXueXiaoQuYu* item_xuexiaoquyu) {
  delete item_xuexiaoquyu_;
  item_xuexiaoquyu_ = item_xuexiaoquyu;
  if (item_xuexiaoquyu) {
    set_has_item_xuexiaoquyu();
  } else {
    clear_has_item_xuexiaoquyu();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_xuexiaoquyu)
}

// optional .OPMessage.ItemJudgeRuleLuKouZuoZhuan item_lukouzuozhuan = 13;
inline bool ItemsJudgeRules::has_item_lukouzuozhuan() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ItemsJudgeRules::set_has_item_lukouzuozhuan() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ItemsJudgeRules::clear_has_item_lukouzuozhuan() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ItemsJudgeRules::clear_item_lukouzuozhuan() {
  if (item_lukouzuozhuan_ != NULL) item_lukouzuozhuan_->::OPMessage::ItemJudgeRuleLuKouZuoZhuan::Clear();
  clear_has_item_lukouzuozhuan();
}
inline const ::OPMessage::ItemJudgeRuleLuKouZuoZhuan& ItemsJudgeRules::item_lukouzuozhuan() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_lukouzuozhuan)
  return item_lukouzuozhuan_ != NULL ? *item_lukouzuozhuan_ : *default_instance_->item_lukouzuozhuan_;
}
inline ::OPMessage::ItemJudgeRuleLuKouZuoZhuan* ItemsJudgeRules::mutable_item_lukouzuozhuan() {
  set_has_item_lukouzuozhuan();
  if (item_lukouzuozhuan_ == NULL) {
    item_lukouzuozhuan_ = new ::OPMessage::ItemJudgeRuleLuKouZuoZhuan;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_lukouzuozhuan)
  return item_lukouzuozhuan_;
}
inline ::OPMessage::ItemJudgeRuleLuKouZuoZhuan* ItemsJudgeRules::release_item_lukouzuozhuan() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_lukouzuozhuan)
  clear_has_item_lukouzuozhuan();
  ::OPMessage::ItemJudgeRuleLuKouZuoZhuan* temp = item_lukouzuozhuan_;
  item_lukouzuozhuan_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_lukouzuozhuan(::OPMessage::ItemJudgeRuleLuKouZuoZhuan* item_lukouzuozhuan) {
  delete item_lukouzuozhuan_;
  item_lukouzuozhuan_ = item_lukouzuozhuan;
  if (item_lukouzuozhuan) {
    set_has_item_lukouzuozhuan();
  } else {
    clear_has_item_lukouzuozhuan();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_lukouzuozhuan)
}

// optional .OPMessage.ItemJudgeRuleLuKouYouZhuan item_lukouyouzhuan = 14;
inline bool ItemsJudgeRules::has_item_lukouyouzhuan() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ItemsJudgeRules::set_has_item_lukouyouzhuan() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ItemsJudgeRules::clear_has_item_lukouyouzhuan() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ItemsJudgeRules::clear_item_lukouyouzhuan() {
  if (item_lukouyouzhuan_ != NULL) item_lukouyouzhuan_->::OPMessage::ItemJudgeRuleLuKouYouZhuan::Clear();
  clear_has_item_lukouyouzhuan();
}
inline const ::OPMessage::ItemJudgeRuleLuKouYouZhuan& ItemsJudgeRules::item_lukouyouzhuan() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_lukouyouzhuan)
  return item_lukouyouzhuan_ != NULL ? *item_lukouyouzhuan_ : *default_instance_->item_lukouyouzhuan_;
}
inline ::OPMessage::ItemJudgeRuleLuKouYouZhuan* ItemsJudgeRules::mutable_item_lukouyouzhuan() {
  set_has_item_lukouyouzhuan();
  if (item_lukouyouzhuan_ == NULL) {
    item_lukouyouzhuan_ = new ::OPMessage::ItemJudgeRuleLuKouYouZhuan;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_lukouyouzhuan)
  return item_lukouyouzhuan_;
}
inline ::OPMessage::ItemJudgeRuleLuKouYouZhuan* ItemsJudgeRules::release_item_lukouyouzhuan() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_lukouyouzhuan)
  clear_has_item_lukouyouzhuan();
  ::OPMessage::ItemJudgeRuleLuKouYouZhuan* temp = item_lukouyouzhuan_;
  item_lukouyouzhuan_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_lukouyouzhuan(::OPMessage::ItemJudgeRuleLuKouYouZhuan* item_lukouyouzhuan) {
  delete item_lukouyouzhuan_;
  item_lukouyouzhuan_ = item_lukouyouzhuan;
  if (item_lukouyouzhuan) {
    set_has_item_lukouyouzhuan();
  } else {
    clear_has_item_lukouyouzhuan();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_lukouyouzhuan)
}

// optional .OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou item_zhixiantongguolukou = 15;
inline bool ItemsJudgeRules::has_item_zhixiantongguolukou() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ItemsJudgeRules::set_has_item_zhixiantongguolukou() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ItemsJudgeRules::clear_has_item_zhixiantongguolukou() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ItemsJudgeRules::clear_item_zhixiantongguolukou() {
  if (item_zhixiantongguolukou_ != NULL) item_zhixiantongguolukou_->::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou::Clear();
  clear_has_item_zhixiantongguolukou();
}
inline const ::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou& ItemsJudgeRules::item_zhixiantongguolukou() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_zhixiantongguolukou)
  return item_zhixiantongguolukou_ != NULL ? *item_zhixiantongguolukou_ : *default_instance_->item_zhixiantongguolukou_;
}
inline ::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou* ItemsJudgeRules::mutable_item_zhixiantongguolukou() {
  set_has_item_zhixiantongguolukou();
  if (item_zhixiantongguolukou_ == NULL) {
    item_zhixiantongguolukou_ = new ::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_zhixiantongguolukou)
  return item_zhixiantongguolukou_;
}
inline ::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou* ItemsJudgeRules::release_item_zhixiantongguolukou() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_zhixiantongguolukou)
  clear_has_item_zhixiantongguolukou();
  ::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou* temp = item_zhixiantongguolukou_;
  item_zhixiantongguolukou_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_zhixiantongguolukou(::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou* item_zhixiantongguolukou) {
  delete item_zhixiantongguolukou_;
  item_zhixiantongguolukou_ = item_zhixiantongguolukou;
  if (item_zhixiantongguolukou) {
    set_has_item_zhixiantongguolukou();
  } else {
    clear_has_item_zhixiantongguolukou();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_zhixiantongguolukou)
}

// optional .OPMessage.ItemJudgeRuleGongGongQiCheZhan item_gonggongqichezhan = 16;
inline bool ItemsJudgeRules::has_item_gonggongqichezhan() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ItemsJudgeRules::set_has_item_gonggongqichezhan() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ItemsJudgeRules::clear_has_item_gonggongqichezhan() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ItemsJudgeRules::clear_item_gonggongqichezhan() {
  if (item_gonggongqichezhan_ != NULL) item_gonggongqichezhan_->::OPMessage::ItemJudgeRuleGongGongQiCheZhan::Clear();
  clear_has_item_gonggongqichezhan();
}
inline const ::OPMessage::ItemJudgeRuleGongGongQiCheZhan& ItemsJudgeRules::item_gonggongqichezhan() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_gonggongqichezhan)
  return item_gonggongqichezhan_ != NULL ? *item_gonggongqichezhan_ : *default_instance_->item_gonggongqichezhan_;
}
inline ::OPMessage::ItemJudgeRuleGongGongQiCheZhan* ItemsJudgeRules::mutable_item_gonggongqichezhan() {
  set_has_item_gonggongqichezhan();
  if (item_gonggongqichezhan_ == NULL) {
    item_gonggongqichezhan_ = new ::OPMessage::ItemJudgeRuleGongGongQiCheZhan;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_gonggongqichezhan)
  return item_gonggongqichezhan_;
}
inline ::OPMessage::ItemJudgeRuleGongGongQiCheZhan* ItemsJudgeRules::release_item_gonggongqichezhan() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_gonggongqichezhan)
  clear_has_item_gonggongqichezhan();
  ::OPMessage::ItemJudgeRuleGongGongQiCheZhan* temp = item_gonggongqichezhan_;
  item_gonggongqichezhan_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_gonggongqichezhan(::OPMessage::ItemJudgeRuleGongGongQiCheZhan* item_gonggongqichezhan) {
  delete item_gonggongqichezhan_;
  item_gonggongqichezhan_ = item_gonggongqichezhan;
  if (item_gonggongqichezhan) {
    set_has_item_gonggongqichezhan();
  } else {
    clear_has_item_gonggongqichezhan();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_gonggongqichezhan)
}

// optional .OPMessage.ItemJudgeRuleRenXingHengDao item_renxinghengdao = 17;
inline bool ItemsJudgeRules::has_item_renxinghengdao() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ItemsJudgeRules::set_has_item_renxinghengdao() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ItemsJudgeRules::clear_has_item_renxinghengdao() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ItemsJudgeRules::clear_item_renxinghengdao() {
  if (item_renxinghengdao_ != NULL) item_renxinghengdao_->::OPMessage::ItemJudgeRuleRenXingHengDao::Clear();
  clear_has_item_renxinghengdao();
}
inline const ::OPMessage::ItemJudgeRuleRenXingHengDao& ItemsJudgeRules::item_renxinghengdao() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_renxinghengdao)
  return item_renxinghengdao_ != NULL ? *item_renxinghengdao_ : *default_instance_->item_renxinghengdao_;
}
inline ::OPMessage::ItemJudgeRuleRenXingHengDao* ItemsJudgeRules::mutable_item_renxinghengdao() {
  set_has_item_renxinghengdao();
  if (item_renxinghengdao_ == NULL) {
    item_renxinghengdao_ = new ::OPMessage::ItemJudgeRuleRenXingHengDao;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_renxinghengdao)
  return item_renxinghengdao_;
}
inline ::OPMessage::ItemJudgeRuleRenXingHengDao* ItemsJudgeRules::release_item_renxinghengdao() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_renxinghengdao)
  clear_has_item_renxinghengdao();
  ::OPMessage::ItemJudgeRuleRenXingHengDao* temp = item_renxinghengdao_;
  item_renxinghengdao_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_renxinghengdao(::OPMessage::ItemJudgeRuleRenXingHengDao* item_renxinghengdao) {
  delete item_renxinghengdao_;
  item_renxinghengdao_ = item_renxinghengdao;
  if (item_renxinghengdao) {
    set_has_item_renxinghengdao();
  } else {
    clear_has_item_renxinghengdao();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_renxinghengdao)
}

// optional .OPMessage.ItemJudgeRuleZhiXianXingShi item_zhixianxingshi = 18;
inline bool ItemsJudgeRules::has_item_zhixianxingshi() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ItemsJudgeRules::set_has_item_zhixianxingshi() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ItemsJudgeRules::clear_has_item_zhixianxingshi() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ItemsJudgeRules::clear_item_zhixianxingshi() {
  if (item_zhixianxingshi_ != NULL) item_zhixianxingshi_->::OPMessage::ItemJudgeRuleZhiXianXingShi::Clear();
  clear_has_item_zhixianxingshi();
}
inline const ::OPMessage::ItemJudgeRuleZhiXianXingShi& ItemsJudgeRules::item_zhixianxingshi() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_zhixianxingshi)
  return item_zhixianxingshi_ != NULL ? *item_zhixianxingshi_ : *default_instance_->item_zhixianxingshi_;
}
inline ::OPMessage::ItemJudgeRuleZhiXianXingShi* ItemsJudgeRules::mutable_item_zhixianxingshi() {
  set_has_item_zhixianxingshi();
  if (item_zhixianxingshi_ == NULL) {
    item_zhixianxingshi_ = new ::OPMessage::ItemJudgeRuleZhiXianXingShi;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_zhixianxingshi)
  return item_zhixianxingshi_;
}
inline ::OPMessage::ItemJudgeRuleZhiXianXingShi* ItemsJudgeRules::release_item_zhixianxingshi() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_zhixianxingshi)
  clear_has_item_zhixianxingshi();
  ::OPMessage::ItemJudgeRuleZhiXianXingShi* temp = item_zhixianxingshi_;
  item_zhixianxingshi_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_zhixianxingshi(::OPMessage::ItemJudgeRuleZhiXianXingShi* item_zhixianxingshi) {
  delete item_zhixianxingshi_;
  item_zhixianxingshi_ = item_zhixianxingshi;
  if (item_zhixianxingshi) {
    set_has_item_zhixianxingshi();
  } else {
    clear_has_item_zhixianxingshi();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_zhixianxingshi)
}

// optional .OPMessage.ItemJudgeRuleJiaJianDang item_jiajiandang = 19;
inline bool ItemsJudgeRules::has_item_jiajiandang() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ItemsJudgeRules::set_has_item_jiajiandang() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ItemsJudgeRules::clear_has_item_jiajiandang() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ItemsJudgeRules::clear_item_jiajiandang() {
  if (item_jiajiandang_ != NULL) item_jiajiandang_->::OPMessage::ItemJudgeRuleJiaJianDang::Clear();
  clear_has_item_jiajiandang();
}
inline const ::OPMessage::ItemJudgeRuleJiaJianDang& ItemsJudgeRules::item_jiajiandang() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_jiajiandang)
  return item_jiajiandang_ != NULL ? *item_jiajiandang_ : *default_instance_->item_jiajiandang_;
}
inline ::OPMessage::ItemJudgeRuleJiaJianDang* ItemsJudgeRules::mutable_item_jiajiandang() {
  set_has_item_jiajiandang();
  if (item_jiajiandang_ == NULL) {
    item_jiajiandang_ = new ::OPMessage::ItemJudgeRuleJiaJianDang;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_jiajiandang)
  return item_jiajiandang_;
}
inline ::OPMessage::ItemJudgeRuleJiaJianDang* ItemsJudgeRules::release_item_jiajiandang() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_jiajiandang)
  clear_has_item_jiajiandang();
  ::OPMessage::ItemJudgeRuleJiaJianDang* temp = item_jiajiandang_;
  item_jiajiandang_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_jiajiandang(::OPMessage::ItemJudgeRuleJiaJianDang* item_jiajiandang) {
  delete item_jiajiandang_;
  item_jiajiandang_ = item_jiajiandang;
  if (item_jiajiandang) {
    set_has_item_jiajiandang();
  } else {
    clear_has_item_jiajiandang();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_jiajiandang)
}

// optional .OPMessage.ItemJudgeRuleDiaoTou item_diaotou = 20;
inline bool ItemsJudgeRules::has_item_diaotou() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ItemsJudgeRules::set_has_item_diaotou() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ItemsJudgeRules::clear_has_item_diaotou() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ItemsJudgeRules::clear_item_diaotou() {
  if (item_diaotou_ != NULL) item_diaotou_->::OPMessage::ItemJudgeRuleDiaoTou::Clear();
  clear_has_item_diaotou();
}
inline const ::OPMessage::ItemJudgeRuleDiaoTou& ItemsJudgeRules::item_diaotou() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_diaotou)
  return item_diaotou_ != NULL ? *item_diaotou_ : *default_instance_->item_diaotou_;
}
inline ::OPMessage::ItemJudgeRuleDiaoTou* ItemsJudgeRules::mutable_item_diaotou() {
  set_has_item_diaotou();
  if (item_diaotou_ == NULL) {
    item_diaotou_ = new ::OPMessage::ItemJudgeRuleDiaoTou;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_diaotou)
  return item_diaotou_;
}
inline ::OPMessage::ItemJudgeRuleDiaoTou* ItemsJudgeRules::release_item_diaotou() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_diaotou)
  clear_has_item_diaotou();
  ::OPMessage::ItemJudgeRuleDiaoTou* temp = item_diaotou_;
  item_diaotou_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_diaotou(::OPMessage::ItemJudgeRuleDiaoTou* item_diaotou) {
  delete item_diaotou_;
  item_diaotou_ = item_diaotou;
  if (item_diaotou) {
    set_has_item_diaotou();
  } else {
    clear_has_item_diaotou();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_diaotou)
}

// optional .OPMessage.ItemJudgeRuleBianGengCheDao item_biangengchedao = 21;
inline bool ItemsJudgeRules::has_item_biangengchedao() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ItemsJudgeRules::set_has_item_biangengchedao() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ItemsJudgeRules::clear_has_item_biangengchedao() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ItemsJudgeRules::clear_item_biangengchedao() {
  if (item_biangengchedao_ != NULL) item_biangengchedao_->::OPMessage::ItemJudgeRuleBianGengCheDao::Clear();
  clear_has_item_biangengchedao();
}
inline const ::OPMessage::ItemJudgeRuleBianGengCheDao& ItemsJudgeRules::item_biangengchedao() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_biangengchedao)
  return item_biangengchedao_ != NULL ? *item_biangengchedao_ : *default_instance_->item_biangengchedao_;
}
inline ::OPMessage::ItemJudgeRuleBianGengCheDao* ItemsJudgeRules::mutable_item_biangengchedao() {
  set_has_item_biangengchedao();
  if (item_biangengchedao_ == NULL) {
    item_biangengchedao_ = new ::OPMessage::ItemJudgeRuleBianGengCheDao;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_biangengchedao)
  return item_biangengchedao_;
}
inline ::OPMessage::ItemJudgeRuleBianGengCheDao* ItemsJudgeRules::release_item_biangengchedao() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_biangengchedao)
  clear_has_item_biangengchedao();
  ::OPMessage::ItemJudgeRuleBianGengCheDao* temp = item_biangengchedao_;
  item_biangengchedao_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_biangengchedao(::OPMessage::ItemJudgeRuleBianGengCheDao* item_biangengchedao) {
  delete item_biangengchedao_;
  item_biangengchedao_ = item_biangengchedao;
  if (item_biangengchedao) {
    set_has_item_biangengchedao();
  } else {
    clear_has_item_biangengchedao();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_biangengchedao)
}

// optional .OPMessage.ItemJudgeRuleChaoChe item_chaoche = 22;
inline bool ItemsJudgeRules::has_item_chaoche() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ItemsJudgeRules::set_has_item_chaoche() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ItemsJudgeRules::clear_has_item_chaoche() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ItemsJudgeRules::clear_item_chaoche() {
  if (item_chaoche_ != NULL) item_chaoche_->::OPMessage::ItemJudgeRuleChaoChe::Clear();
  clear_has_item_chaoche();
}
inline const ::OPMessage::ItemJudgeRuleChaoChe& ItemsJudgeRules::item_chaoche() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_chaoche)
  return item_chaoche_ != NULL ? *item_chaoche_ : *default_instance_->item_chaoche_;
}
inline ::OPMessage::ItemJudgeRuleChaoChe* ItemsJudgeRules::mutable_item_chaoche() {
  set_has_item_chaoche();
  if (item_chaoche_ == NULL) {
    item_chaoche_ = new ::OPMessage::ItemJudgeRuleChaoChe;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_chaoche)
  return item_chaoche_;
}
inline ::OPMessage::ItemJudgeRuleChaoChe* ItemsJudgeRules::release_item_chaoche() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_chaoche)
  clear_has_item_chaoche();
  ::OPMessage::ItemJudgeRuleChaoChe* temp = item_chaoche_;
  item_chaoche_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_chaoche(::OPMessage::ItemJudgeRuleChaoChe* item_chaoche) {
  delete item_chaoche_;
  item_chaoche_ = item_chaoche;
  if (item_chaoche) {
    set_has_item_chaoche();
  } else {
    clear_has_item_chaoche();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_chaoche)
}

// optional .OPMessage.ItemJudgeRuleHuiChe item_huiche = 23;
inline bool ItemsJudgeRules::has_item_huiche() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ItemsJudgeRules::set_has_item_huiche() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ItemsJudgeRules::clear_has_item_huiche() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ItemsJudgeRules::clear_item_huiche() {
  if (item_huiche_ != NULL) item_huiche_->::OPMessage::ItemJudgeRuleHuiChe::Clear();
  clear_has_item_huiche();
}
inline const ::OPMessage::ItemJudgeRuleHuiChe& ItemsJudgeRules::item_huiche() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_huiche)
  return item_huiche_ != NULL ? *item_huiche_ : *default_instance_->item_huiche_;
}
inline ::OPMessage::ItemJudgeRuleHuiChe* ItemsJudgeRules::mutable_item_huiche() {
  set_has_item_huiche();
  if (item_huiche_ == NULL) {
    item_huiche_ = new ::OPMessage::ItemJudgeRuleHuiChe;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_huiche)
  return item_huiche_;
}
inline ::OPMessage::ItemJudgeRuleHuiChe* ItemsJudgeRules::release_item_huiche() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_huiche)
  clear_has_item_huiche();
  ::OPMessage::ItemJudgeRuleHuiChe* temp = item_huiche_;
  item_huiche_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_huiche(::OPMessage::ItemJudgeRuleHuiChe* item_huiche) {
  delete item_huiche_;
  item_huiche_ = item_huiche;
  if (item_huiche) {
    set_has_item_huiche();
  } else {
    clear_has_item_huiche();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_huiche)
}

// optional .OPMessage.ItemJudgeRuleKaoBianTingChe item_kaobiantingche = 24;
inline bool ItemsJudgeRules::has_item_kaobiantingche() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ItemsJudgeRules::set_has_item_kaobiantingche() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ItemsJudgeRules::clear_has_item_kaobiantingche() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ItemsJudgeRules::clear_item_kaobiantingche() {
  if (item_kaobiantingche_ != NULL) item_kaobiantingche_->::OPMessage::ItemJudgeRuleKaoBianTingChe::Clear();
  clear_has_item_kaobiantingche();
}
inline const ::OPMessage::ItemJudgeRuleKaoBianTingChe& ItemsJudgeRules::item_kaobiantingche() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_kaobiantingche)
  return item_kaobiantingche_ != NULL ? *item_kaobiantingche_ : *default_instance_->item_kaobiantingche_;
}
inline ::OPMessage::ItemJudgeRuleKaoBianTingChe* ItemsJudgeRules::mutable_item_kaobiantingche() {
  set_has_item_kaobiantingche();
  if (item_kaobiantingche_ == NULL) {
    item_kaobiantingche_ = new ::OPMessage::ItemJudgeRuleKaoBianTingChe;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_kaobiantingche)
  return item_kaobiantingche_;
}
inline ::OPMessage::ItemJudgeRuleKaoBianTingChe* ItemsJudgeRules::release_item_kaobiantingche() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_kaobiantingche)
  clear_has_item_kaobiantingche();
  ::OPMessage::ItemJudgeRuleKaoBianTingChe* temp = item_kaobiantingche_;
  item_kaobiantingche_ = NULL;
  return temp;
}
inline void ItemsJudgeRules::set_allocated_item_kaobiantingche(::OPMessage::ItemJudgeRuleKaoBianTingChe* item_kaobiantingche) {
  delete item_kaobiantingche_;
  item_kaobiantingche_ = item_kaobiantingche;
  if (item_kaobiantingche) {
    set_has_item_kaobiantingche();
  } else {
    clear_has_item_kaobiantingche();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_kaobiantingche)
}

// -------------------------------------------------------------------

// CoreInfo

// optional .OPMessage.SoftwareStartInfo software_start_info = 1;
inline bool CoreInfo::has_software_start_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CoreInfo::set_has_software_start_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CoreInfo::clear_has_software_start_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CoreInfo::clear_software_start_info() {
  if (software_start_info_ != NULL) software_start_info_->::OPMessage::SoftwareStartInfo::Clear();
  clear_has_software_start_info();
}
inline const ::OPMessage::SoftwareStartInfo& CoreInfo::software_start_info() const {
  // @@protoc_insertion_point(field_get:OPMessage.CoreInfo.software_start_info)
  return software_start_info_ != NULL ? *software_start_info_ : *default_instance_->software_start_info_;
}
inline ::OPMessage::SoftwareStartInfo* CoreInfo::mutable_software_start_info() {
  set_has_software_start_info();
  if (software_start_info_ == NULL) {
    software_start_info_ = new ::OPMessage::SoftwareStartInfo;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.CoreInfo.software_start_info)
  return software_start_info_;
}
inline ::OPMessage::SoftwareStartInfo* CoreInfo::release_software_start_info() {
  // @@protoc_insertion_point(field_release:OPMessage.CoreInfo.software_start_info)
  clear_has_software_start_info();
  ::OPMessage::SoftwareStartInfo* temp = software_start_info_;
  software_start_info_ = NULL;
  return temp;
}
inline void CoreInfo::set_allocated_software_start_info(::OPMessage::SoftwareStartInfo* software_start_info) {
  delete software_start_info_;
  software_start_info_ = software_start_info;
  if (software_start_info) {
    set_has_software_start_info();
  } else {
    clear_has_software_start_info();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CoreInfo.software_start_info)
}

// optional .OPMessage.ConfigInfoBasic config_info_basic = 2;
inline bool CoreInfo::has_config_info_basic() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CoreInfo::set_has_config_info_basic() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CoreInfo::clear_has_config_info_basic() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CoreInfo::clear_config_info_basic() {
  if (config_info_basic_ != NULL) config_info_basic_->::OPMessage::ConfigInfoBasic::Clear();
  clear_has_config_info_basic();
}
inline const ::OPMessage::ConfigInfoBasic& CoreInfo::config_info_basic() const {
  // @@protoc_insertion_point(field_get:OPMessage.CoreInfo.config_info_basic)
  return config_info_basic_ != NULL ? *config_info_basic_ : *default_instance_->config_info_basic_;
}
inline ::OPMessage::ConfigInfoBasic* CoreInfo::mutable_config_info_basic() {
  set_has_config_info_basic();
  if (config_info_basic_ == NULL) {
    config_info_basic_ = new ::OPMessage::ConfigInfoBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.CoreInfo.config_info_basic)
  return config_info_basic_;
}
inline ::OPMessage::ConfigInfoBasic* CoreInfo::release_config_info_basic() {
  // @@protoc_insertion_point(field_release:OPMessage.CoreInfo.config_info_basic)
  clear_has_config_info_basic();
  ::OPMessage::ConfigInfoBasic* temp = config_info_basic_;
  config_info_basic_ = NULL;
  return temp;
}
inline void CoreInfo::set_allocated_config_info_basic(::OPMessage::ConfigInfoBasic* config_info_basic) {
  delete config_info_basic_;
  config_info_basic_ = config_info_basic;
  if (config_info_basic) {
    set_has_config_info_basic();
  } else {
    clear_has_config_info_basic();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CoreInfo.config_info_basic)
}

// optional .OPMessage.ItemsJudgeRules items_judge_rules = 3;
inline bool CoreInfo::has_items_judge_rules() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CoreInfo::set_has_items_judge_rules() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CoreInfo::clear_has_items_judge_rules() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CoreInfo::clear_items_judge_rules() {
  if (items_judge_rules_ != NULL) items_judge_rules_->::OPMessage::ItemsJudgeRules::Clear();
  clear_has_items_judge_rules();
}
inline const ::OPMessage::ItemsJudgeRules& CoreInfo::items_judge_rules() const {
  // @@protoc_insertion_point(field_get:OPMessage.CoreInfo.items_judge_rules)
  return items_judge_rules_ != NULL ? *items_judge_rules_ : *default_instance_->items_judge_rules_;
}
inline ::OPMessage::ItemsJudgeRules* CoreInfo::mutable_items_judge_rules() {
  set_has_items_judge_rules();
  if (items_judge_rules_ == NULL) {
    items_judge_rules_ = new ::OPMessage::ItemsJudgeRules;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.CoreInfo.items_judge_rules)
  return items_judge_rules_;
}
inline ::OPMessage::ItemsJudgeRules* CoreInfo::release_items_judge_rules() {
  // @@protoc_insertion_point(field_release:OPMessage.CoreInfo.items_judge_rules)
  clear_has_items_judge_rules();
  ::OPMessage::ItemsJudgeRules* temp = items_judge_rules_;
  items_judge_rules_ = NULL;
  return temp;
}
inline void CoreInfo::set_allocated_items_judge_rules(::OPMessage::ItemsJudgeRules* items_judge_rules) {
  delete items_judge_rules_;
  items_judge_rules_ = items_judge_rules;
  if (items_judge_rules) {
    set_has_items_judge_rules();
  } else {
    clear_has_items_judge_rules();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CoreInfo.items_judge_rules)
}

// optional .OPMessage.OtherConfigInfo other_config_info = 4;
inline bool CoreInfo::has_other_config_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CoreInfo::set_has_other_config_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CoreInfo::clear_has_other_config_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CoreInfo::clear_other_config_info() {
  if (other_config_info_ != NULL) other_config_info_->::OPMessage::OtherConfigInfo::Clear();
  clear_has_other_config_info();
}
inline const ::OPMessage::OtherConfigInfo& CoreInfo::other_config_info() const {
  // @@protoc_insertion_point(field_get:OPMessage.CoreInfo.other_config_info)
  return other_config_info_ != NULL ? *other_config_info_ : *default_instance_->other_config_info_;
}
inline ::OPMessage::OtherConfigInfo* CoreInfo::mutable_other_config_info() {
  set_has_other_config_info();
  if (other_config_info_ == NULL) {
    other_config_info_ = new ::OPMessage::OtherConfigInfo;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.CoreInfo.other_config_info)
  return other_config_info_;
}
inline ::OPMessage::OtherConfigInfo* CoreInfo::release_other_config_info() {
  // @@protoc_insertion_point(field_release:OPMessage.CoreInfo.other_config_info)
  clear_has_other_config_info();
  ::OPMessage::OtherConfigInfo* temp = other_config_info_;
  other_config_info_ = NULL;
  return temp;
}
inline void CoreInfo::set_allocated_other_config_info(::OPMessage::OtherConfigInfo* other_config_info) {
  delete other_config_info_;
  other_config_info_ = other_config_info;
  if (other_config_info) {
    set_has_other_config_info();
  } else {
    clear_has_other_config_info();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CoreInfo.other_config_info)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace OPMessage

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::OPMessage::enum_physic_sensor> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::enum_physic_sensor>() {
  return ::OPMessage::enum_physic_sensor_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::enum_judge_retake> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::enum_judge_retake>() {
  return ::OPMessage::enum_judge_retake_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::enum_judge_points> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::enum_judge_points>() {
  return ::OPMessage::enum_judge_points_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckStartTypeStart> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckStartTypeStart>() {
  return ::OPMessage::CheckStartTypeStart_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::enum_judge_dengguangmoni_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::enum_judge_dengguangmoni_type>() {
  return ::OPMessage::enum_judge_dengguangmoni_type_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionXueXiaoQuYu> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionXueXiaoQuYu>() {
  return ::OPMessage::CheckFinishCarPositionXueXiaoQuYu_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionLuKouZuoZhuan> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionLuKouZuoZhuan>() {
  return ::OPMessage::CheckFinishCarPositionLuKouZuoZhuan_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionLuKouYouZhuan> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionLuKouYouZhuan>() {
  return ::OPMessage::CheckFinishCarPositionLuKouYouZhuan_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou>() {
  return ::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionGongGongQiCheZhan> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionGongGongQiCheZhan>() {
  return ::OPMessage::CheckFinishCarPositionGongGongQiCheZhan_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionRenXingHengDao> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionRenXingHengDao>() {
  return ::OPMessage::CheckFinishCarPositionRenXingHengDao_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionZhiXianXingShi> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionZhiXianXingShi>() {
  return ::OPMessage::CheckFinishCarPositionZhiXianXingShi_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::AddToLimitedGear> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::AddToLimitedGear>() {
  return ::OPMessage::AddToLimitedGear_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::ReduceToLimitedGear> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::ReduceToLimitedGear>() {
  return ::OPMessage::ReduceToLimitedGear_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionDiaoTou> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionDiaoTou>() {
  return ::OPMessage::CheckFinishCarPositionDiaoTou_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionBianGengCheDao> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionBianGengCheDao>() {
  return ::OPMessage::CheckFinishCarPositionBianGengCheDao_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionChaoChe> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionChaoChe>() {
  return ::OPMessage::CheckFinishCarPositionChaoChe_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckStartCarPositionZjzw> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckStartCarPositionZjzw>() {
  return ::OPMessage::CheckStartCarPositionZjzw_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionZjzw> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionZjzw>() {
  return ::OPMessage::CheckFinishCarPositionZjzw_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckStartCarPositionQxxs> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckStartCarPositionQxxs>() {
  return ::OPMessage::CheckStartCarPositionQxxs_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionQxxs> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionQxxs>() {
  return ::OPMessage::CheckFinishCarPositionQxxs_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckStartCarPositionCftc> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckStartCarPositionCftc>() {
  return ::OPMessage::CheckStartCarPositionCftc_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionCftc> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionCftc>() {
  return ::OPMessage::CheckFinishCarPositionCftc_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckStartCarPositionSpqb> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckStartCarPositionSpqb>() {
  return ::OPMessage::CheckStartCarPositionSpqb_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionSpqb> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionSpqb>() {
  return ::OPMessage::CheckFinishCarPositionSpqb_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckStartCarPositionDcrk> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckStartCarPositionDcrk>() {
  return ::OPMessage::CheckStartCarPositionDcrk_descriptor();
}
template <> struct is_proto_enum< ::OPMessage::CheckFinishCarPositionDcrk> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPMessage::CheckFinishCarPositionDcrk>() {
  return ::OPMessage::CheckFinishCarPositionDcrk_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageJkConfig_2eproto__INCLUDED
