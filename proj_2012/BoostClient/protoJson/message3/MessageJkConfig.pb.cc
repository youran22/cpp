// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageJkConfig.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageJkConfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace OPMessage {

namespace {

const ::google::protobuf::Descriptor* SoftwareStartInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SoftwareStartInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* OtherConfigInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OtherConfigInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConfigPhysicSensor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfigPhysicSensor_reflection_ = NULL;
const ::google::protobuf::Descriptor* JudgeItemInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JudgeItemInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConfigInfoBasic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConfigInfoBasic_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicSafety_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicSafety_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicDoor_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicDoor_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicHorn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicHorn_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicFlameout_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicFlameout_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicFullLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicFullLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicDottedLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicDottedLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicLeftTurnLamp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicLeftTurnLamp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicRightTurnLamp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicRightTurnLamp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicCarStop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicCarStop_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicHandBrake_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicHandBrake_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicTimeout_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicTimeout_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicClutch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicClutch_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicRoundCar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicRoundCar_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicSlowDown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicSlowDown_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicFireUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicFireUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicSeat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicSeat_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicLeftMirror_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicLeftMirror_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicMiddleMirror_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicMiddleMirror_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicRightMirror_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicRightMirror_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeDistance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeDistance_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeTime_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeTime_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeSpeed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeSpeed_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeBasic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeBasic_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalJudgeRule_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalJudgeRule_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleZero_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleZero_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleDk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleDk_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleShangCheZhunBei_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleShangCheZhunBei_reflection_ = NULL;
const ::google::protobuf::Descriptor* BasicDengGuangMoNiItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BasicDengGuangMoNiItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleDengGuangMoNi_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleDengGuangMoNi_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleQiBu_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleQiBu_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleKaoBianTingChe_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleKaoBianTingChe_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleXueXiaoQuYu_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleXueXiaoQuYu_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleLuKouZuoZhuan_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleLuKouZuoZhuan_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleLuKouYouZhuan_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleLuKouYouZhuan_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleZhiXianTongGuoLuKou_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleZhiXianTongGuoLuKou_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleGongGongQiCheZhan_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleGongGongQiCheZhan_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleRenXingHengDao_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleRenXingHengDao_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleZhiXianXingShi_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleZhiXianXingShi_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleJiaJianDang_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleJiaJianDang_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleDiaoTou_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleDiaoTou_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleBianGengCheDao_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleBianGengCheDao_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleChaoChe_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleChaoChe_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleHuiChe_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleHuiChe_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleZjzw_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleZjzw_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleQxxs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleQxxs_reflection_ = NULL;
const ::google::protobuf::Descriptor* CftcPressLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CftcPressLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleCftc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleCftc_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleSpqb_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleSpqb_reflection_ = NULL;
const ::google::protobuf::Descriptor* DcrkPressLine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DcrkPressLine_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemJudgeRuleDcrk_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemJudgeRuleDcrk_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemsJudgeRules_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemsJudgeRules_reflection_ = NULL;
const ::google::protobuf::Descriptor* CoreInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CoreInfo_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* enum_physic_sensor_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* enum_judge_retake_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* enum_judge_points_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckStartTypeStart_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* enum_judge_dengguangmoni_type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionXueXiaoQuYu_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionLuKouZuoZhuan_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionLuKouYouZhuan_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionZhiXianTongGuoLuKou_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionGongGongQiCheZhan_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionRenXingHengDao_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionZhiXianXingShi_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AddToLimitedGear_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ReduceToLimitedGear_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionDiaoTou_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionBianGengCheDao_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionChaoChe_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckStartCarPositionZjzw_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionZjzw_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckStartCarPositionQxxs_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionQxxs_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckStartCarPositionCftc_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionCftc_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckStartCarPositionSpqb_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionSpqb_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckStartCarPositionDcrk_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionDcrk_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageJkConfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_MessageJkConfig_2eproto() {
  protobuf_AddDesc_MessageJkConfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageJkConfig.proto");
  GOOGLE_CHECK(file != NULL);
  SoftwareStartInfo_descriptor_ = file->message_type(0);
  static const int SoftwareStartInfo_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, app_start_sound_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, app_run_mode_xl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, app_run_mode_mn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, app_run_mode_ks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, app_run_server_monitor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, app_run_server_monitor_ip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, app_run_server_monitor_port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, whether_use_iccard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, app_sound_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, whether_use_second_idcard_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, secondid_verification_net_fail_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, secondid_verification_waiting_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, secondid_verification_round_started_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, secondid_verification_registration_unvalid_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, secondid_verification_registration_valid_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, secondid_verification_timeout_voice_),
  };
  SoftwareStartInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SoftwareStartInfo_descriptor_,
      SoftwareStartInfo::default_instance_,
      SoftwareStartInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(SoftwareStartInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SoftwareStartInfo, _internal_metadata_),
      -1);
  OtherConfigInfo_descriptor_ = file->message_type(1);
  static const int OtherConfigInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherConfigInfo, whether_use_gps_modify_local_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherConfigInfo, gps_valid_sound_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherConfigInfo, gps_invalid_sound_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherConfigInfo, whether_ks_mode_alarm_ring_),
  };
  OtherConfigInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OtherConfigInfo_descriptor_,
      OtherConfigInfo::default_instance_,
      OtherConfigInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherConfigInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(OtherConfigInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OtherConfigInfo, _internal_metadata_),
      -1);
  ConfigPhysicSensor_descriptor_ = file->message_type(2);
  static const int ConfigPhysicSensor_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigPhysicSensor, sensor_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigPhysicSensor, physic_bit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigPhysicSensor, physic_power_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigPhysicSensor, whether_use_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigPhysicSensor, physic_sensor_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigPhysicSensor, physic_sensor_description_),
  };
  ConfigPhysicSensor_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConfigPhysicSensor_descriptor_,
      ConfigPhysicSensor::default_instance_,
      ConfigPhysicSensor_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigPhysicSensor, _has_bits_[0]),
      -1,
      -1,
      sizeof(ConfigPhysicSensor),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigPhysicSensor, _internal_metadata_),
      -1);
  JudgeItemInfo_descriptor_ = file->message_type(3);
  static const int JudgeItemInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeItemInfo, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeItemInfo, item_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeItemInfo, item_name_),
  };
  JudgeItemInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JudgeItemInfo_descriptor_,
      JudgeItemInfo::default_instance_,
      JudgeItemInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeItemInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(JudgeItemInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JudgeItemInfo, _internal_metadata_),
      -1);
  ConfigInfoBasic_descriptor_ = file->message_type(4);
  static const int ConfigInfoBasic_offsets_[23] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, com_gps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, com_sensor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, com_printer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, com_printer_whether_use_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, com_printer_header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, com_printer_footer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, station_latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, station_longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, station_altitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, station_centerlontitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, align_frontantennahigh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, align_backantennahigh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, align_underpanhigh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, align_baseline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, align_pitch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, align_track_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, align_terminaldatahz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, align_minspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, judge_test_items_array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, judge_test_items_array3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, judge_manual_test_items_array_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, judge_item_whether_sequence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, phpsic_sensor_array_),
  };
  ConfigInfoBasic_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConfigInfoBasic_descriptor_,
      ConfigInfoBasic::default_instance_,
      ConfigInfoBasic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, _has_bits_[0]),
      -1,
      -1,
      sizeof(ConfigInfoBasic),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigInfoBasic, _internal_metadata_),
      -1);
  BasicSafety_descriptor_ = file->message_type(5);
  static const int BasicSafety_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSafety, safety_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSafety, safety_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSafety, safety_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSafety, safety_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSafety, safety_deduction_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSafety, safety_judge_number_),
  };
  BasicSafety_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicSafety_descriptor_,
      BasicSafety::default_instance_,
      BasicSafety_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSafety, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicSafety),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSafety, _internal_metadata_),
      -1);
  BasicDoor_descriptor_ = file->message_type(6);
  static const int BasicDoor_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDoor, door_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDoor, door_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDoor, door_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDoor, door_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDoor, door_deduction_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDoor, door_judge_number_),
  };
  BasicDoor_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicDoor_descriptor_,
      BasicDoor::default_instance_,
      BasicDoor_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDoor, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicDoor),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDoor, _internal_metadata_),
      -1);
  BasicHorn_descriptor_ = file->message_type(7);
  static const int BasicHorn_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHorn, horn_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHorn, horn_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHorn, horn_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHorn, horn_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHorn, horn_deduction_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHorn, horn_judge_number_),
  };
  BasicHorn_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicHorn_descriptor_,
      BasicHorn::default_instance_,
      BasicHorn_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHorn, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicHorn),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHorn, _internal_metadata_),
      -1);
  BasicFlameout_descriptor_ = file->message_type(8);
  static const int BasicFlameout_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFlameout, flameout_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFlameout, flameout_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFlameout, flameout_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFlameout, flameout_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFlameout, flameout_deduction_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFlameout, flameout_judge_number_),
  };
  BasicFlameout_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicFlameout_descriptor_,
      BasicFlameout::default_instance_,
      BasicFlameout_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFlameout, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicFlameout),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFlameout, _internal_metadata_),
      -1);
  BasicFullLine_descriptor_ = file->message_type(9);
  static const int BasicFullLine_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFullLine, full_line_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFullLine, full_line_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFullLine, full_line_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFullLine, full_line_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFullLine, full_line_deduction_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFullLine, full_line_judge_number_),
  };
  BasicFullLine_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicFullLine_descriptor_,
      BasicFullLine::default_instance_,
      BasicFullLine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFullLine, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicFullLine),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFullLine, _internal_metadata_),
      -1);
  BasicDottedLine_descriptor_ = file->message_type(10);
  static const int BasicDottedLine_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDottedLine, dotted_line_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDottedLine, dotted_line_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDottedLine, dotted_line_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDottedLine, dotted_line_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDottedLine, dotted_line_deduction_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDottedLine, dotted_line_judge_number_),
  };
  BasicDottedLine_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicDottedLine_descriptor_,
      BasicDottedLine::default_instance_,
      BasicDottedLine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDottedLine, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicDottedLine),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDottedLine, _internal_metadata_),
      -1);
  BasicLeftTurnLamp_descriptor_ = file->message_type(11);
  static const int BasicLeftTurnLamp_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftTurnLamp, leftturnlamp_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftTurnLamp, leftturnlamp_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftTurnLamp, leftturnlamp_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftTurnLamp, leftturnlamp_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftTurnLamp, leftturnlamp_deduction_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftTurnLamp, leftturnlamp_judge_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftTurnLamp, leftturnlamp_lasting_whole_course_),
  };
  BasicLeftTurnLamp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicLeftTurnLamp_descriptor_,
      BasicLeftTurnLamp::default_instance_,
      BasicLeftTurnLamp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftTurnLamp, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicLeftTurnLamp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftTurnLamp, _internal_metadata_),
      -1);
  BasicRightTurnLamp_descriptor_ = file->message_type(12);
  static const int BasicRightTurnLamp_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightTurnLamp, rightturnlamp_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightTurnLamp, rightturnlamp_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightTurnLamp, rightturnlamp_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightTurnLamp, rightturnlamp_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightTurnLamp, rightturnlamp_deduction_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightTurnLamp, rightturnlamp_judge_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightTurnLamp, rightturnlamp_lasting_whole_course_),
  };
  BasicRightTurnLamp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicRightTurnLamp_descriptor_,
      BasicRightTurnLamp::default_instance_,
      BasicRightTurnLamp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightTurnLamp, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicRightTurnLamp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightTurnLamp, _internal_metadata_),
      -1);
  BasicCarStop_descriptor_ = file->message_type(13);
  static const int BasicCarStop_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicCarStop, carstop_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicCarStop, carstop_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicCarStop, carstop_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicCarStop, carstop_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicCarStop, carstop_deduction_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicCarStop, carstop_judge_number_),
  };
  BasicCarStop_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicCarStop_descriptor_,
      BasicCarStop::default_instance_,
      BasicCarStop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicCarStop, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicCarStop),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicCarStop, _internal_metadata_),
      -1);
  BasicHandBrake_descriptor_ = file->message_type(14);
  static const int BasicHandBrake_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHandBrake, handbrake_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHandBrake, handbrake_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHandBrake, handbrake_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHandBrake, handbrake_distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHandBrake, handbrake_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHandBrake, handbrake_deduction_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHandBrake, handbrake_judge_number_),
  };
  BasicHandBrake_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicHandBrake_descriptor_,
      BasicHandBrake::default_instance_,
      BasicHandBrake_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHandBrake, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicHandBrake),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicHandBrake, _internal_metadata_),
      -1);
  BasicTimeout_descriptor_ = file->message_type(15);
  static const int BasicTimeout_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicTimeout, timeout_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicTimeout, timeout_milliseconds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicTimeout, timeout_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicTimeout, timeout_voice_),
  };
  BasicTimeout_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicTimeout_descriptor_,
      BasicTimeout::default_instance_,
      BasicTimeout_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicTimeout, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicTimeout),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicTimeout, _internal_metadata_),
      -1);
  BasicClutch_descriptor_ = file->message_type(16);
  static const int BasicClutch_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicClutch, clutch_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicClutch, clutch_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicClutch, clutch_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicClutch, clutch_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicClutch, clutch_deduction_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicClutch, clutch_judge_number_),
  };
  BasicClutch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicClutch_descriptor_,
      BasicClutch::default_instance_,
      BasicClutch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicClutch, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicClutch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicClutch, _internal_metadata_),
      -1);
  BasicRoundCar_descriptor_ = file->message_type(17);
  static const int BasicRoundCar_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRoundCar, roundcar_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRoundCar, roundcar_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRoundCar, roundcar_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRoundCar, roundcar_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRoundCar, roundcar_deduction_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRoundCar, roundcar_judge_number_),
  };
  BasicRoundCar_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicRoundCar_descriptor_,
      BasicRoundCar::default_instance_,
      BasicRoundCar_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRoundCar, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicRoundCar),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRoundCar, _internal_metadata_),
      -1);
  BasicSlowDown_descriptor_ = file->message_type(18);
  static const int BasicSlowDown_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSlowDown, slowdown_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSlowDown, slowdown_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSlowDown, slowdown_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSlowDown, slowdown_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSlowDown, slowdown_deduction_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSlowDown, slowdown_judge_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSlowDown, limit_speed_),
  };
  BasicSlowDown_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicSlowDown_descriptor_,
      BasicSlowDown::default_instance_,
      BasicSlowDown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSlowDown, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicSlowDown),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSlowDown, _internal_metadata_),
      -1);
  BasicFireUp_descriptor_ = file->message_type(19);
  static const int BasicFireUp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFireUp, fireup_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFireUp, fireup_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFireUp, fireup_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFireUp, fireup_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFireUp, slowdown_judge_number_),
  };
  BasicFireUp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicFireUp_descriptor_,
      BasicFireUp::default_instance_,
      BasicFireUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFireUp, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicFireUp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicFireUp, _internal_metadata_),
      -1);
  BasicSeat_descriptor_ = file->message_type(20);
  static const int BasicSeat_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSeat, seat_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSeat, seat_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSeat, seat_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSeat, seat_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSeat, slowdown_judge_number_),
  };
  BasicSeat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicSeat_descriptor_,
      BasicSeat::default_instance_,
      BasicSeat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSeat, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicSeat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicSeat, _internal_metadata_),
      -1);
  BasicLeftMirror_descriptor_ = file->message_type(21);
  static const int BasicLeftMirror_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftMirror, left_mirror_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftMirror, left_mirror_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftMirror, left_mirror_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftMirror, left_mirror_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftMirror, left_judge_number_),
  };
  BasicLeftMirror_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicLeftMirror_descriptor_,
      BasicLeftMirror::default_instance_,
      BasicLeftMirror_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftMirror, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicLeftMirror),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicLeftMirror, _internal_metadata_),
      -1);
  BasicMiddleMirror_descriptor_ = file->message_type(22);
  static const int BasicMiddleMirror_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicMiddleMirror, middle_mirror_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicMiddleMirror, middle_mirror_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicMiddleMirror, middle_mirror_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicMiddleMirror, middle_mirror_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicMiddleMirror, middle_judge_number_),
  };
  BasicMiddleMirror_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicMiddleMirror_descriptor_,
      BasicMiddleMirror::default_instance_,
      BasicMiddleMirror_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicMiddleMirror, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicMiddleMirror),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicMiddleMirror, _internal_metadata_),
      -1);
  BasicRightMirror_descriptor_ = file->message_type(23);
  static const int BasicRightMirror_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightMirror, right_mirror_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightMirror, right_mirror_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightMirror, right_mirror_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightMirror, right_mirror_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightMirror, right_judge_number_),
  };
  BasicRightMirror_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicRightMirror_descriptor_,
      BasicRightMirror::default_instance_,
      BasicRightMirror_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightMirror, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicRightMirror),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicRightMirror, _internal_metadata_),
      -1);
  ItemJudgeDistance_descriptor_ = file->message_type(24);
  static const int ItemJudgeDistance_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeDistance, item_distance_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeDistance, item_min_distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeDistance, item_max_distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeDistance, item_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeDistance, item_deduction_voice_),
  };
  ItemJudgeDistance_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeDistance_descriptor_,
      ItemJudgeDistance::default_instance_,
      ItemJudgeDistance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeDistance, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeDistance),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeDistance, _internal_metadata_),
      -1);
  ItemJudgeTime_descriptor_ = file->message_type(25);
  static const int ItemJudgeTime_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeTime, item_time_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeTime, item_min_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeTime, item_max_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeTime, item_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeTime, item_deduction_voice_),
  };
  ItemJudgeTime_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeTime_descriptor_,
      ItemJudgeTime::default_instance_,
      ItemJudgeTime_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeTime, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeTime),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeTime, _internal_metadata_),
      -1);
  ItemJudgeSpeed_descriptor_ = file->message_type(26);
  static const int ItemJudgeSpeed_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeSpeed, item_speed_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeSpeed, item_min_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeSpeed, item_max_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeSpeed, item_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeSpeed, item_deduction_voice_),
  };
  ItemJudgeSpeed_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeSpeed_descriptor_,
      ItemJudgeSpeed::default_instance_,
      ItemJudgeSpeed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeSpeed, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeSpeed),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeSpeed, _internal_metadata_),
      -1);
  ItemJudgeBasic_descriptor_ = file->message_type(27);
  static const int ItemJudgeBasic_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeBasic, basic_safety_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeBasic, basic_door_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeBasic, basic_flameout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeBasic, basic_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeBasic, basic_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeBasic, basic_carstop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeBasic, basic_handbrake_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeBasic, basic_timeout_),
  };
  ItemJudgeBasic_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeBasic_descriptor_,
      ItemJudgeBasic::default_instance_,
      ItemJudgeBasic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeBasic, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeBasic),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeBasic, _internal_metadata_),
      -1);
  GlobalJudgeRule_descriptor_ = file->message_type(28);
  static const int GlobalJudgeRule_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, run_mode_mn_again_dk_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, run_mode_ks_whether_have_second_chance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, round_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, item_finish_pass_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, item_finish_unpass_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, round_finish_pass_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, round_finish_unpass_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, retake_round_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, retake_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, retake_dk_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, basic_safety_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, basic_door_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, basic_flameout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, max_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, basic_full_line_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, basic_dotted_line_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, longtime_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, longtime_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, longtime_clutch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, min_distance_),
  };
  GlobalJudgeRule_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GlobalJudgeRule_descriptor_,
      GlobalJudgeRule::default_instance_,
      GlobalJudgeRule_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, _has_bits_[0]),
      -1,
      -1,
      sizeof(GlobalJudgeRule),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalJudgeRule, _internal_metadata_),
      -1);
  ItemJudgeRuleZero_descriptor_ = file->message_type(29);
  static const int ItemJudgeRuleZero_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZero, basic_event_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZero, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZero, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZero, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZero, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZero, judge_points_type_),
  };
  ItemJudgeRuleZero_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleZero_descriptor_,
      ItemJudgeRuleZero::default_instance_,
      ItemJudgeRuleZero_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZero, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleZero),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZero, _internal_metadata_),
      -1);
  ItemJudgeRuleDk_descriptor_ = file->message_type(30);
  static const int ItemJudgeRuleDk_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDk, basic_event_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDk, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDk, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDk, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDk, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDk, judge_points_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDk, check_start_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDk, event_check_leftturnlamp_),
  };
  ItemJudgeRuleDk_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleDk_descriptor_,
      ItemJudgeRuleDk::default_instance_,
      ItemJudgeRuleDk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDk, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleDk),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDk, _internal_metadata_),
      -1);
  ItemJudgeRuleShangCheZhunBei_descriptor_ = file->message_type(31);
  static const int ItemJudgeRuleShangCheZhunBei_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleShangCheZhunBei, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleShangCheZhunBei, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleShangCheZhunBei, basic_roundcar_),
  };
  ItemJudgeRuleShangCheZhunBei_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleShangCheZhunBei_descriptor_,
      ItemJudgeRuleShangCheZhunBei::default_instance_,
      ItemJudgeRuleShangCheZhunBei_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleShangCheZhunBei, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleShangCheZhunBei),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleShangCheZhunBei, _internal_metadata_),
      -1);
  BasicDengGuangMoNiItem_descriptor_ = file->message_type(32);
  static const int BasicDengGuangMoNiItem_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDengGuangMoNiItem, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDengGuangMoNiItem, is_participant_judge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDengGuangMoNiItem, is_must_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDengGuangMoNiItem, tip_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDengGuangMoNiItem, pass_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDengGuangMoNiItem, deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDengGuangMoNiItem, time_out_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDengGuangMoNiItem, deduction_voice_),
  };
  BasicDengGuangMoNiItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BasicDengGuangMoNiItem_descriptor_,
      BasicDengGuangMoNiItem::default_instance_,
      BasicDengGuangMoNiItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDengGuangMoNiItem, _has_bits_[0]),
      -1,
      -1,
      sizeof(BasicDengGuangMoNiItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BasicDengGuangMoNiItem, _internal_metadata_),
      -1);
  ItemJudgeRuleDengGuangMoNi_descriptor_ = file->message_type(33);
  static const int ItemJudgeRuleDengGuangMoNi_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, must_item_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, not_must_item_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, basic_night_no_lamp_poor_lighting_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, basic_night_no_lamp_poor_lighting_in_city_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, basic_night_close_with_car_same_direction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, basic_night_no_lamp_poor_lighting_in_suburban_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, basic_night_through_curve_ramp_bridge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, basic_fog_driving_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, basic_night_passing_in_narrow_road_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, basic_night_passing_nearly_150_other_car_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, basic_night_car_road_down_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, basic_night_through_no_traffic_signal_road_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, basic_simulation_test_done_close_all_light_),
  };
  ItemJudgeRuleDengGuangMoNi_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleDengGuangMoNi_descriptor_,
      ItemJudgeRuleDengGuangMoNi::default_instance_,
      ItemJudgeRuleDengGuangMoNi_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleDengGuangMoNi),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDengGuangMoNi, _internal_metadata_),
      -1);
  ItemJudgeRuleQiBu_descriptor_ = file->message_type(34);
  static const int ItemJudgeRuleQiBu_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, basic_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, basic_door_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, basic_horn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, basic_fireup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, basic_seat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, basic_left_mirror_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, basic_middle_mirror_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, basic_right_mirror_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, car_hl_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, car_hl_distance_more_30cm_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, car_hl_distance_more_30cm_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, car_hl_distance_less_30cm_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, car_hl_distance_less_30cm_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, car_handbrake_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, car_handbrake_more_distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, car_handbrake_more_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, car_handbrake_more_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, car_handbrake_less_distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, car_handbrake_less_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, car_handbrake_less_deduction_),
  };
  ItemJudgeRuleQiBu_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleQiBu_descriptor_,
      ItemJudgeRuleQiBu::default_instance_,
      ItemJudgeRuleQiBu_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleQiBu),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQiBu, _internal_metadata_),
      -1);
  ItemJudgeRuleKaoBianTingChe_descriptor_ = file->message_type(35);
  static const int ItemJudgeRuleKaoBianTingChe_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleKaoBianTingChe, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleKaoBianTingChe, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleKaoBianTingChe, basic_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleKaoBianTingChe, basic_flameout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleKaoBianTingChe, basic_door_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleKaoBianTingChe, limit_complete_distance_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleKaoBianTingChe, limit_complete_distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleKaoBianTingChe, limit_complete_distance_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleKaoBianTingChe, limit_complete_distance_deduction_),
  };
  ItemJudgeRuleKaoBianTingChe_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleKaoBianTingChe_descriptor_,
      ItemJudgeRuleKaoBianTingChe::default_instance_,
      ItemJudgeRuleKaoBianTingChe_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleKaoBianTingChe, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleKaoBianTingChe),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleKaoBianTingChe, _internal_metadata_),
      -1);
  ItemJudgeRuleXueXiaoQuYu_descriptor_ = file->message_type(36);
  static const int ItemJudgeRuleXueXiaoQuYu_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleXueXiaoQuYu, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleXueXiaoQuYu, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleXueXiaoQuYu, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleXueXiaoQuYu, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleXueXiaoQuYu, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleXueXiaoQuYu, basic_slowdown_),
  };
  ItemJudgeRuleXueXiaoQuYu_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleXueXiaoQuYu_descriptor_,
      ItemJudgeRuleXueXiaoQuYu::default_instance_,
      ItemJudgeRuleXueXiaoQuYu_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleXueXiaoQuYu, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleXueXiaoQuYu),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleXueXiaoQuYu, _internal_metadata_),
      -1);
  ItemJudgeRuleLuKouZuoZhuan_descriptor_ = file->message_type(37);
  static const int ItemJudgeRuleLuKouZuoZhuan_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouZuoZhuan, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouZuoZhuan, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouZuoZhuan, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouZuoZhuan, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouZuoZhuan, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouZuoZhuan, basic_slowdown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouZuoZhuan, item_leftturnlamp_),
  };
  ItemJudgeRuleLuKouZuoZhuan_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleLuKouZuoZhuan_descriptor_,
      ItemJudgeRuleLuKouZuoZhuan::default_instance_,
      ItemJudgeRuleLuKouZuoZhuan_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouZuoZhuan, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleLuKouZuoZhuan),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouZuoZhuan, _internal_metadata_),
      -1);
  ItemJudgeRuleLuKouYouZhuan_descriptor_ = file->message_type(38);
  static const int ItemJudgeRuleLuKouYouZhuan_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouYouZhuan, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouYouZhuan, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouYouZhuan, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouYouZhuan, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouYouZhuan, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouYouZhuan, basic_slowdown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouYouZhuan, item_rightturnlamp_),
  };
  ItemJudgeRuleLuKouYouZhuan_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleLuKouYouZhuan_descriptor_,
      ItemJudgeRuleLuKouYouZhuan::default_instance_,
      ItemJudgeRuleLuKouYouZhuan_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouYouZhuan, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleLuKouYouZhuan),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleLuKouYouZhuan, _internal_metadata_),
      -1);
  ItemJudgeRuleZhiXianTongGuoLuKou_descriptor_ = file->message_type(39);
  static const int ItemJudgeRuleZhiXianTongGuoLuKou_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianTongGuoLuKou, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianTongGuoLuKou, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianTongGuoLuKou, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianTongGuoLuKou, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianTongGuoLuKou, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianTongGuoLuKou, basic_slowdown_),
  };
  ItemJudgeRuleZhiXianTongGuoLuKou_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleZhiXianTongGuoLuKou_descriptor_,
      ItemJudgeRuleZhiXianTongGuoLuKou::default_instance_,
      ItemJudgeRuleZhiXianTongGuoLuKou_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianTongGuoLuKou, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleZhiXianTongGuoLuKou),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianTongGuoLuKou, _internal_metadata_),
      -1);
  ItemJudgeRuleGongGongQiCheZhan_descriptor_ = file->message_type(40);
  static const int ItemJudgeRuleGongGongQiCheZhan_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleGongGongQiCheZhan, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleGongGongQiCheZhan, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleGongGongQiCheZhan, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleGongGongQiCheZhan, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleGongGongQiCheZhan, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleGongGongQiCheZhan, basic_slowdown_),
  };
  ItemJudgeRuleGongGongQiCheZhan_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleGongGongQiCheZhan_descriptor_,
      ItemJudgeRuleGongGongQiCheZhan::default_instance_,
      ItemJudgeRuleGongGongQiCheZhan_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleGongGongQiCheZhan, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleGongGongQiCheZhan),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleGongGongQiCheZhan, _internal_metadata_),
      -1);
  ItemJudgeRuleRenXingHengDao_descriptor_ = file->message_type(41);
  static const int ItemJudgeRuleRenXingHengDao_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleRenXingHengDao, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleRenXingHengDao, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleRenXingHengDao, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleRenXingHengDao, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleRenXingHengDao, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleRenXingHengDao, basic_slowdown_),
  };
  ItemJudgeRuleRenXingHengDao_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleRenXingHengDao_descriptor_,
      ItemJudgeRuleRenXingHengDao::default_instance_,
      ItemJudgeRuleRenXingHengDao_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleRenXingHengDao, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleRenXingHengDao),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleRenXingHengDao, _internal_metadata_),
      -1);
  ItemJudgeRuleZhiXianXingShi_descriptor_ = file->message_type(42);
  static const int ItemJudgeRuleZhiXianXingShi_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, item_direction_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, item_direction_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, item_direction_angle_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, item_direction_lasting_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, item_direction_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, item_distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, item_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, item_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, check_finish_type_),
  };
  ItemJudgeRuleZhiXianXingShi_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleZhiXianXingShi_descriptor_,
      ItemJudgeRuleZhiXianXingShi::default_instance_,
      ItemJudgeRuleZhiXianXingShi_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleZhiXianXingShi),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZhiXianXingShi, _internal_metadata_),
      -1);
  ItemJudgeRuleJiaJianDang_descriptor_ = file->message_type(43);
  static const int ItemJudgeRuleJiaJianDang_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_jiajiandang_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_jiajiandang_add_gear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_jiajiandang_reduce_gear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_jiajiandang_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_jiajiandang_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_jiajiandang_one_gear_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_jiajiandang_two_gear_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_jiajiandang_three_gear_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_jiajiandang_four_gear_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_jiajiandang_five_gear_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, item_jiajiandang_six_gear_speed_),
  };
  ItemJudgeRuleJiaJianDang_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleJiaJianDang_descriptor_,
      ItemJudgeRuleJiaJianDang::default_instance_,
      ItemJudgeRuleJiaJianDang_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleJiaJianDang),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleJiaJianDang, _internal_metadata_),
      -1);
  ItemJudgeRuleDiaoTou_descriptor_ = file->message_type(44);
  static const int ItemJudgeRuleDiaoTou_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDiaoTou, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDiaoTou, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDiaoTou, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDiaoTou, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDiaoTou, item_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDiaoTou, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDiaoTou, basic_slowdown_),
  };
  ItemJudgeRuleDiaoTou_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleDiaoTou_descriptor_,
      ItemJudgeRuleDiaoTou::default_instance_,
      ItemJudgeRuleDiaoTou_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDiaoTou, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleDiaoTou),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDiaoTou, _internal_metadata_),
      -1);
  ItemJudgeRuleBianGengCheDao_descriptor_ = file->message_type(45);
  static const int ItemJudgeRuleBianGengCheDao_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, item_distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, item_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, item_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, item_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, item_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, item_whether_biangengchedao_one_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, item_whether_biangengchedao_two_),
  };
  ItemJudgeRuleBianGengCheDao_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleBianGengCheDao_descriptor_,
      ItemJudgeRuleBianGengCheDao::default_instance_,
      ItemJudgeRuleBianGengCheDao_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleBianGengCheDao),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleBianGengCheDao, _internal_metadata_),
      -1);
  ItemJudgeRuleChaoChe_descriptor_ = file->message_type(46);
  static const int ItemJudgeRuleChaoChe_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, item_distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, item_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, item_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, item_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, item_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, item_whether_chaoche_one_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, item_whether_chaoche_two_),
  };
  ItemJudgeRuleChaoChe_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleChaoChe_descriptor_,
      ItemJudgeRuleChaoChe::default_instance_,
      ItemJudgeRuleChaoChe_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleChaoChe),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleChaoChe, _internal_metadata_),
      -1);
  ItemJudgeRuleHuiChe_descriptor_ = file->message_type(47);
  static const int ItemJudgeRuleHuiChe_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleHuiChe, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleHuiChe, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleHuiChe, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleHuiChe, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleHuiChe, item_distance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleHuiChe, item_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleHuiChe, item_speed_),
  };
  ItemJudgeRuleHuiChe_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleHuiChe_descriptor_,
      ItemJudgeRuleHuiChe::default_instance_,
      ItemJudgeRuleHuiChe_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleHuiChe, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleHuiChe),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleHuiChe, _internal_metadata_),
      -1);
  ItemJudgeRuleZjzw_descriptor_ = file->message_type(48);
  static const int ItemJudgeRuleZjzw_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, basic_event_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, judge_points_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, check_start_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, car_pressline_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, car_pressline_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, car_pressline_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, in_area_again_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, event_check_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, event_check_rightturnlamp_),
  };
  ItemJudgeRuleZjzw_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleZjzw_descriptor_,
      ItemJudgeRuleZjzw::default_instance_,
      ItemJudgeRuleZjzw_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleZjzw),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleZjzw, _internal_metadata_),
      -1);
  ItemJudgeRuleQxxs_descriptor_ = file->message_type(49);
  static const int ItemJudgeRuleQxxs_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, basic_event_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, judge_points_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, check_start_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, car_pressline_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, car_pressline_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, car_pressline_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, in_area_again_),
  };
  ItemJudgeRuleQxxs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleQxxs_descriptor_,
      ItemJudgeRuleQxxs::default_instance_,
      ItemJudgeRuleQxxs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleQxxs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleQxxs, _internal_metadata_),
      -1);
  CftcPressLine_descriptor_ = file->message_type(50);
  static const int CftcPressLine_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, car_run_pressline_3_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, car_run_pressline_3_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, car_run_pressline_4_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, car_run_pressline_4_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, car_run_pressline_7_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, car_run_pressline_7_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, car_run_pressline_5_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, car_run_pressline_5_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, car_run_pressline_9_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, car_run_pressline_9_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, car_pressline_nums_mutex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, car_run_pressline_2_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, car_run_pressline_2_deduction_),
  };
  CftcPressLine_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CftcPressLine_descriptor_,
      CftcPressLine::default_instance_,
      CftcPressLine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, _has_bits_[0]),
      -1,
      -1,
      sizeof(CftcPressLine),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CftcPressLine, _internal_metadata_),
      -1);
  ItemJudgeRuleCftc_descriptor_ = file->message_type(51);
  static const int ItemJudgeRuleCftc_offsets_[31] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, basic_event_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, judge_points_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, check_start_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, car_run_error_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, car_run_error_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, car_run_error_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, car_rk_check_right_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, car_rk_check_fail_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, car_rk_check_fail_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, forwarding_pressline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, event_check_rking_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, rking_pressline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, event_check_cking_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, cking_pressline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, car_run_not_staff_command_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, car_run_not_staff_command_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, in_area_again_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, car_rk_check_delay_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, event_check_forwarding_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, event_check_waitrk_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, event_check_waitrk_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, event_check_rkend_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, event_check_rkend_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, carwheel_forwarding_pressline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, carwheel_rking_pressline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, carwheel_cking_pressline_),
  };
  ItemJudgeRuleCftc_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleCftc_descriptor_,
      ItemJudgeRuleCftc::default_instance_,
      ItemJudgeRuleCftc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleCftc),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleCftc, _internal_metadata_),
      -1);
  ItemJudgeRuleSpqb_descriptor_ = file->message_type(52);
  static const int ItemJudgeRuleSpqb_offsets_[40] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, basic_event_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, judge_points_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, check_start_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_run_error_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_run_error_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_run_error_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_dd_head_right_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_dd_head_more_50cm_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_dd_head_more_50cm_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_dd_head_not_more_50cm_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_dd_head_not_more_50cm_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_dd_carwheel_pressline_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_dd_carwheel_pressline_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_dd_right_line_more_30cm_less_50cm_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_dd_right_line_more_30cm_less_50cm_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_dd_right_line_more_50cm_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_dd_right_line_more_50cm_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_hl_distance_more_30cm_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_hl_distance_more_30cm_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_hl_distance_less_30cm_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_hl_distance_less_30cm_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_qb_timeout_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_qb_timeout_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_qb_timeout_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_pressline_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_pressline_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_pressline_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_run_not_staff_command_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, car_run_not_staff_command_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, event_check_cking_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, in_area_again_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, event_check_forwarding_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, event_check_waitqb_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, event_check_waitqb_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, event_check_waitqb_handbrake_),
  };
  ItemJudgeRuleSpqb_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleSpqb_descriptor_,
      ItemJudgeRuleSpqb::default_instance_,
      ItemJudgeRuleSpqb_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleSpqb),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleSpqb, _internal_metadata_),
      -1);
  DcrkPressLine_descriptor_ = file->message_type(53);
  static const int DcrkPressLine_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, car_run_pressline_3_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, car_run_pressline_3_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, car_run_pressline_4_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, car_run_pressline_4_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, car_run_pressline_8_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, car_run_pressline_8_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, car_run_pressline_7_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, car_run_pressline_7_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, car_run_pressline_5_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, car_run_pressline_5_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, car_run_pressline_6_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, car_run_pressline_6_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, car_pressline_nums_mutex_),
  };
  DcrkPressLine_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DcrkPressLine_descriptor_,
      DcrkPressLine::default_instance_,
      DcrkPressLine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, _has_bits_[0]),
      -1,
      -1,
      sizeof(DcrkPressLine),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DcrkPressLine, _internal_metadata_),
      -1);
  ItemJudgeRuleDcrk_descriptor_ = file->message_type(54);
  static const int ItemJudgeRuleDcrk_offsets_[42] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, basic_event_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, item_enter_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, item_leave_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, item_start_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, item_end_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, judge_points_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, check_start_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, check_finish_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_run_error_whether_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_run_error_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_run_error_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_rk_check_right_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_rk_check_fail_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_rk_check_fail_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, forwarding_pressline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, rking_1_pressline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, cking_1_pressline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, rking_2_pressline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, cking_2_pressline_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_run_not_staff_command_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_run_not_staff_command_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, event_check_cking_1_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, event_check_cking_2_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, in_area_again_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_rk_check_delay_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, event_check_forwarding_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, event_check_cking_1_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, event_check_cking_2_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, event_check_waitrk_1_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, event_check_waitrk_1_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, event_check_rkend_1_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, event_check_rkend_1_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, event_check_waitrk_2_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, event_check_waitrk_2_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, event_check_rkend_2_leftturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, event_check_rkend_2_rightturnlamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_rking_1_frontwheel_over_controlline_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_rking_1_frontwheel_over_controlline_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_rking_1_frontwheel_over_controlline_voice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_rking_2_frontwheel_over_controlline_check_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_rking_2_frontwheel_over_controlline_deduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, car_rking_2_frontwheel_over_controlline_voice_),
  };
  ItemJudgeRuleDcrk_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemJudgeRuleDcrk_descriptor_,
      ItemJudgeRuleDcrk::default_instance_,
      ItemJudgeRuleDcrk_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemJudgeRuleDcrk),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemJudgeRuleDcrk, _internal_metadata_),
      -1);
  ItemsJudgeRules_descriptor_ = file->message_type(55);
  static const int ItemsJudgeRules_offsets_[24] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_global_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_zero_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_dk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_zjzw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_qxxs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_cftc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_spqb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_dcrk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_shangchezhunbei_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_dengguangmoni_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_qibu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_xuexiaoquyu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_lukouzuozhuan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_lukouyouzhuan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_zhixiantongguolukou_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_gonggongqichezhan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_renxinghengdao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_zhixianxingshi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_jiajiandang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_diaotou_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_biangengchedao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_chaoche_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_huiche_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, item_kaobiantingche_),
  };
  ItemsJudgeRules_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemsJudgeRules_descriptor_,
      ItemsJudgeRules::default_instance_,
      ItemsJudgeRules_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, _has_bits_[0]),
      -1,
      -1,
      sizeof(ItemsJudgeRules),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemsJudgeRules, _internal_metadata_),
      -1);
  CoreInfo_descriptor_ = file->message_type(56);
  static const int CoreInfo_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoreInfo, software_start_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoreInfo, config_info_basic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoreInfo, items_judge_rules_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoreInfo, other_config_info_),
  };
  CoreInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CoreInfo_descriptor_,
      CoreInfo::default_instance_,
      CoreInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoreInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(CoreInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CoreInfo, _internal_metadata_),
      -1);
  enum_physic_sensor_descriptor_ = file->enum_type(0);
  enum_judge_retake_descriptor_ = file->enum_type(1);
  enum_judge_points_descriptor_ = file->enum_type(2);
  CheckStartTypeStart_descriptor_ = file->enum_type(3);
  enum_judge_dengguangmoni_type_descriptor_ = file->enum_type(4);
  CheckFinishCarPositionXueXiaoQuYu_descriptor_ = file->enum_type(5);
  CheckFinishCarPositionLuKouZuoZhuan_descriptor_ = file->enum_type(6);
  CheckFinishCarPositionLuKouYouZhuan_descriptor_ = file->enum_type(7);
  CheckFinishCarPositionZhiXianTongGuoLuKou_descriptor_ = file->enum_type(8);
  CheckFinishCarPositionGongGongQiCheZhan_descriptor_ = file->enum_type(9);
  CheckFinishCarPositionRenXingHengDao_descriptor_ = file->enum_type(10);
  CheckFinishCarPositionZhiXianXingShi_descriptor_ = file->enum_type(11);
  AddToLimitedGear_descriptor_ = file->enum_type(12);
  ReduceToLimitedGear_descriptor_ = file->enum_type(13);
  CheckFinishCarPositionDiaoTou_descriptor_ = file->enum_type(14);
  CheckFinishCarPositionBianGengCheDao_descriptor_ = file->enum_type(15);
  CheckFinishCarPositionChaoChe_descriptor_ = file->enum_type(16);
  CheckStartCarPositionZjzw_descriptor_ = file->enum_type(17);
  CheckFinishCarPositionZjzw_descriptor_ = file->enum_type(18);
  CheckStartCarPositionQxxs_descriptor_ = file->enum_type(19);
  CheckFinishCarPositionQxxs_descriptor_ = file->enum_type(20);
  CheckStartCarPositionCftc_descriptor_ = file->enum_type(21);
  CheckFinishCarPositionCftc_descriptor_ = file->enum_type(22);
  CheckStartCarPositionSpqb_descriptor_ = file->enum_type(23);
  CheckFinishCarPositionSpqb_descriptor_ = file->enum_type(24);
  CheckStartCarPositionDcrk_descriptor_ = file->enum_type(25);
  CheckFinishCarPositionDcrk_descriptor_ = file->enum_type(26);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageJkConfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SoftwareStartInfo_descriptor_, &SoftwareStartInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OtherConfigInfo_descriptor_, &OtherConfigInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConfigPhysicSensor_descriptor_, &ConfigPhysicSensor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JudgeItemInfo_descriptor_, &JudgeItemInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConfigInfoBasic_descriptor_, &ConfigInfoBasic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicSafety_descriptor_, &BasicSafety::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicDoor_descriptor_, &BasicDoor::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicHorn_descriptor_, &BasicHorn::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicFlameout_descriptor_, &BasicFlameout::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicFullLine_descriptor_, &BasicFullLine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicDottedLine_descriptor_, &BasicDottedLine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicLeftTurnLamp_descriptor_, &BasicLeftTurnLamp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicRightTurnLamp_descriptor_, &BasicRightTurnLamp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicCarStop_descriptor_, &BasicCarStop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicHandBrake_descriptor_, &BasicHandBrake::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicTimeout_descriptor_, &BasicTimeout::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicClutch_descriptor_, &BasicClutch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicRoundCar_descriptor_, &BasicRoundCar::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicSlowDown_descriptor_, &BasicSlowDown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicFireUp_descriptor_, &BasicFireUp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicSeat_descriptor_, &BasicSeat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicLeftMirror_descriptor_, &BasicLeftMirror::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicMiddleMirror_descriptor_, &BasicMiddleMirror::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicRightMirror_descriptor_, &BasicRightMirror::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeDistance_descriptor_, &ItemJudgeDistance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeTime_descriptor_, &ItemJudgeTime::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeSpeed_descriptor_, &ItemJudgeSpeed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeBasic_descriptor_, &ItemJudgeBasic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GlobalJudgeRule_descriptor_, &GlobalJudgeRule::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleZero_descriptor_, &ItemJudgeRuleZero::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleDk_descriptor_, &ItemJudgeRuleDk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleShangCheZhunBei_descriptor_, &ItemJudgeRuleShangCheZhunBei::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BasicDengGuangMoNiItem_descriptor_, &BasicDengGuangMoNiItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleDengGuangMoNi_descriptor_, &ItemJudgeRuleDengGuangMoNi::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleQiBu_descriptor_, &ItemJudgeRuleQiBu::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleKaoBianTingChe_descriptor_, &ItemJudgeRuleKaoBianTingChe::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleXueXiaoQuYu_descriptor_, &ItemJudgeRuleXueXiaoQuYu::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleLuKouZuoZhuan_descriptor_, &ItemJudgeRuleLuKouZuoZhuan::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleLuKouYouZhuan_descriptor_, &ItemJudgeRuleLuKouYouZhuan::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleZhiXianTongGuoLuKou_descriptor_, &ItemJudgeRuleZhiXianTongGuoLuKou::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleGongGongQiCheZhan_descriptor_, &ItemJudgeRuleGongGongQiCheZhan::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleRenXingHengDao_descriptor_, &ItemJudgeRuleRenXingHengDao::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleZhiXianXingShi_descriptor_, &ItemJudgeRuleZhiXianXingShi::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleJiaJianDang_descriptor_, &ItemJudgeRuleJiaJianDang::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleDiaoTou_descriptor_, &ItemJudgeRuleDiaoTou::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleBianGengCheDao_descriptor_, &ItemJudgeRuleBianGengCheDao::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleChaoChe_descriptor_, &ItemJudgeRuleChaoChe::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleHuiChe_descriptor_, &ItemJudgeRuleHuiChe::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleZjzw_descriptor_, &ItemJudgeRuleZjzw::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleQxxs_descriptor_, &ItemJudgeRuleQxxs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CftcPressLine_descriptor_, &CftcPressLine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleCftc_descriptor_, &ItemJudgeRuleCftc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleSpqb_descriptor_, &ItemJudgeRuleSpqb::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DcrkPressLine_descriptor_, &DcrkPressLine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemJudgeRuleDcrk_descriptor_, &ItemJudgeRuleDcrk::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemsJudgeRules_descriptor_, &ItemsJudgeRules::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CoreInfo_descriptor_, &CoreInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageJkConfig_2eproto() {
  delete SoftwareStartInfo::default_instance_;
  delete SoftwareStartInfo_reflection_;
  delete OtherConfigInfo::default_instance_;
  delete OtherConfigInfo_reflection_;
  delete ConfigPhysicSensor::default_instance_;
  delete ConfigPhysicSensor_reflection_;
  delete JudgeItemInfo::default_instance_;
  delete JudgeItemInfo_reflection_;
  delete ConfigInfoBasic::default_instance_;
  delete ConfigInfoBasic_reflection_;
  delete ConfigInfoBasic::_default_com_gps_;
  delete ConfigInfoBasic::_default_com_sensor_;
  delete ConfigInfoBasic::_default_com_printer_;
  delete BasicSafety::default_instance_;
  delete BasicSafety_reflection_;
  delete BasicDoor::default_instance_;
  delete BasicDoor_reflection_;
  delete BasicHorn::default_instance_;
  delete BasicHorn_reflection_;
  delete BasicFlameout::default_instance_;
  delete BasicFlameout_reflection_;
  delete BasicFullLine::default_instance_;
  delete BasicFullLine_reflection_;
  delete BasicDottedLine::default_instance_;
  delete BasicDottedLine_reflection_;
  delete BasicLeftTurnLamp::default_instance_;
  delete BasicLeftTurnLamp_reflection_;
  delete BasicRightTurnLamp::default_instance_;
  delete BasicRightTurnLamp_reflection_;
  delete BasicCarStop::default_instance_;
  delete BasicCarStop_reflection_;
  delete BasicHandBrake::default_instance_;
  delete BasicHandBrake_reflection_;
  delete BasicTimeout::default_instance_;
  delete BasicTimeout_reflection_;
  delete BasicClutch::default_instance_;
  delete BasicClutch_reflection_;
  delete BasicRoundCar::default_instance_;
  delete BasicRoundCar_reflection_;
  delete BasicSlowDown::default_instance_;
  delete BasicSlowDown_reflection_;
  delete BasicFireUp::default_instance_;
  delete BasicFireUp_reflection_;
  delete BasicSeat::default_instance_;
  delete BasicSeat_reflection_;
  delete BasicLeftMirror::default_instance_;
  delete BasicLeftMirror_reflection_;
  delete BasicMiddleMirror::default_instance_;
  delete BasicMiddleMirror_reflection_;
  delete BasicRightMirror::default_instance_;
  delete BasicRightMirror_reflection_;
  delete ItemJudgeDistance::default_instance_;
  delete ItemJudgeDistance_reflection_;
  delete ItemJudgeTime::default_instance_;
  delete ItemJudgeTime_reflection_;
  delete ItemJudgeSpeed::default_instance_;
  delete ItemJudgeSpeed_reflection_;
  delete ItemJudgeBasic::default_instance_;
  delete ItemJudgeBasic_reflection_;
  delete GlobalJudgeRule::default_instance_;
  delete GlobalJudgeRule_reflection_;
  delete ItemJudgeRuleZero::default_instance_;
  delete ItemJudgeRuleZero_reflection_;
  delete ItemJudgeRuleDk::default_instance_;
  delete ItemJudgeRuleDk_reflection_;
  delete ItemJudgeRuleShangCheZhunBei::default_instance_;
  delete ItemJudgeRuleShangCheZhunBei_reflection_;
  delete BasicDengGuangMoNiItem::default_instance_;
  delete BasicDengGuangMoNiItem_reflection_;
  delete ItemJudgeRuleDengGuangMoNi::default_instance_;
  delete ItemJudgeRuleDengGuangMoNi_reflection_;
  delete ItemJudgeRuleQiBu::default_instance_;
  delete ItemJudgeRuleQiBu_reflection_;
  delete ItemJudgeRuleKaoBianTingChe::default_instance_;
  delete ItemJudgeRuleKaoBianTingChe_reflection_;
  delete ItemJudgeRuleXueXiaoQuYu::default_instance_;
  delete ItemJudgeRuleXueXiaoQuYu_reflection_;
  delete ItemJudgeRuleLuKouZuoZhuan::default_instance_;
  delete ItemJudgeRuleLuKouZuoZhuan_reflection_;
  delete ItemJudgeRuleLuKouYouZhuan::default_instance_;
  delete ItemJudgeRuleLuKouYouZhuan_reflection_;
  delete ItemJudgeRuleZhiXianTongGuoLuKou::default_instance_;
  delete ItemJudgeRuleZhiXianTongGuoLuKou_reflection_;
  delete ItemJudgeRuleGongGongQiCheZhan::default_instance_;
  delete ItemJudgeRuleGongGongQiCheZhan_reflection_;
  delete ItemJudgeRuleRenXingHengDao::default_instance_;
  delete ItemJudgeRuleRenXingHengDao_reflection_;
  delete ItemJudgeRuleZhiXianXingShi::default_instance_;
  delete ItemJudgeRuleZhiXianXingShi_reflection_;
  delete ItemJudgeRuleJiaJianDang::default_instance_;
  delete ItemJudgeRuleJiaJianDang_reflection_;
  delete ItemJudgeRuleDiaoTou::default_instance_;
  delete ItemJudgeRuleDiaoTou_reflection_;
  delete ItemJudgeRuleBianGengCheDao::default_instance_;
  delete ItemJudgeRuleBianGengCheDao_reflection_;
  delete ItemJudgeRuleChaoChe::default_instance_;
  delete ItemJudgeRuleChaoChe_reflection_;
  delete ItemJudgeRuleHuiChe::default_instance_;
  delete ItemJudgeRuleHuiChe_reflection_;
  delete ItemJudgeRuleZjzw::default_instance_;
  delete ItemJudgeRuleZjzw_reflection_;
  delete ItemJudgeRuleQxxs::default_instance_;
  delete ItemJudgeRuleQxxs_reflection_;
  delete CftcPressLine::default_instance_;
  delete CftcPressLine_reflection_;
  delete ItemJudgeRuleCftc::default_instance_;
  delete ItemJudgeRuleCftc_reflection_;
  delete ItemJudgeRuleSpqb::default_instance_;
  delete ItemJudgeRuleSpqb_reflection_;
  delete DcrkPressLine::default_instance_;
  delete DcrkPressLine_reflection_;
  delete ItemJudgeRuleDcrk::default_instance_;
  delete ItemJudgeRuleDcrk_reflection_;
  delete ItemsJudgeRules::default_instance_;
  delete ItemsJudgeRules_reflection_;
  delete CoreInfo::default_instance_;
  delete CoreInfo_reflection_;
}

void protobuf_AddDesc_MessageJkConfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_MessageJkConfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025MessageJkConfig.proto\022\tOPMessage\"\343\004\n\021S"
    "oftwareStartInfo\022\027\n\017app_start_sound\030\001 \001("
    "\t\022\027\n\017app_run_mode_xl\030\002 \001(\010\022\027\n\017app_run_mo"
    "de_mn\030\003 \001(\010\022\027\n\017app_run_mode_ks\030\004 \001(\010\022\036\n\026"
    "app_run_server_monitor\030\005 \001(\010\022!\n\031app_run_"
    "server_monitor_ip\030\006 \001(\t\022#\n\033app_run_serve"
    "r_monitor_port\030\007 \001(\005\022\032\n\022whether_use_icca"
    "rd\030\010 \001(\010\022\026\n\016app_sound_rate\030\t \001(\005\022!\n\031whet"
    "her_use_second_idcard\030\n \001(\010\022,\n$secondid_"
    "verification_net_fail_voice\030\013 \001(\t\022+\n#sec"
    "ondid_verification_waiting_voice\030\014 \001(\t\0221"
    "\n)secondid_verification_round_started_vo"
    "ice\030\r \001(\t\0228\n0secondid_verification_regis"
    "tration_unvalid_voice\030\016 \001(\t\0226\n.secondid_"
    "verification_registration_valid_voice\030\017 "
    "\001(\t\022+\n#secondid_verification_timeout_voi"
    "ce\030\020 \001(\t\"\224\001\n\017OtherConfigInfo\022)\n!whether_"
    "use_gps_modify_local_time\030\001 \001(\010\022\027\n\017gps_v"
    "alid_sound\030\002 \001(\t\022\031\n\021gps_invalid_sound\030\003 "
    "\001(\t\022\"\n\032whether_ks_mode_alarm_ring\030\004 \001(\010\""
    "\306\001\n\022ConfigPhysicSensor\0222\n\013sensor_type\030\001 "
    "\001(\0162\035.OPMessage.enum_physic_sensor\022\022\n\nph"
    "ysic_bit\030\002 \001(\005\022\024\n\014physic_power\030\003 \001(\005\022\023\n\013"
    "whether_use\030\004 \001(\010\022\032\n\022physic_sensor_name\030"
    "\005 \001(\t\022!\n\031physic_sensor_description\030\006 \001(\t"
    "\"K\n\rJudgeItemInfo\022\017\n\007item_id\030\001 \001(\005\022\026\n\nit"
    "em_index\030\002 \001(\005:\002-1\022\021\n\titem_name\030\003 \001(\t\"\226\006"
    "\n\017ConfigInfoBasic\022\025\n\007com_gps\030\001 \001(\t:\004COM1"
    "\022\030\n\ncom_sensor\030\002 \001(\t:\004COM2\022\031\n\013com_printe"
    "r\030\003 \001(\t:\004COM3\022%\n\027com_printer_whether_use"
    "\030\004 \001(\010:\004true\022\032\n\022com_printer_header\030\005 \001(\t"
    "\022\032\n\022com_printer_footer\030\006 \001(\t\022\030\n\020station_"
    "latitude\030\007 \001(\001\022\031\n\021station_longitude\030\010 \001("
    "\001\022\030\n\020station_altitude\030\t \001(\001\022\037\n\027station_c"
    "enterLontitude\030\n \001(\001\022\036\n\026align_frontAnten"
    "naHigh\030\013 \001(\001\022\035\n\025align_backAntennaHigh\030\014 "
    "\001(\001\022\032\n\022align_underpanHigh\030\r \001(\001\022\026\n\016align"
    "_baseLine\030\016 \001(\001\022\023\n\013align_pitch\030\017 \001(\001\022\023\n\013"
    "align_track\030\020 \001(\001\022\034\n\024align_terminalDataH"
    "z\030\021 \001(\005\022\026\n\016align_minspeed\030\022 \001(\001\0228\n\026judge"
    "_test_items_array\030\023 \003(\0132\030.OPMessage.Judg"
    "eItemInfo\0229\n\027judge_test_items_array3\030\024 \003"
    "(\0132\030.OPMessage.JudgeItemInfo\022\?\n\035judge_ma"
    "nual_test_items_array\030\025 \003(\0132\030.OPMessage."
    "JudgeItemInfo\022#\n\033judge_item_whether_sequ"
    "ence\030\026 \001(\010\022:\n\023phpsic_sensor_array\030\027 \003(\0132"
    "\035.OPMessage.ConfigPhysicSensor\"\266\001\n\013Basic"
    "Safety\022\034\n\024safety_whether_check\030\001 \001(\010\022\030\n\020"
    "safety_deduction\030\002 \001(\005\022\024\n\014safety_voice\030\003"
    " \001(\t\022\033\n\023safety_lasting_time\030\004 \001(\005\022\037\n\027saf"
    "ety_deduction_number\030\005 \001(\005\022\033\n\023safety_jud"
    "ge_number\030\006 \001(\005\"\250\001\n\tBasicDoor\022\032\n\022door_wh"
    "ether_check\030\001 \001(\010\022\026\n\016door_deduction\030\002 \001("
    "\005\022\022\n\ndoor_voice\030\003 \001(\t\022\031\n\021door_lasting_ti"
    "me\030\004 \001(\005\022\035\n\025door_deduction_number\030\005 \001(\005\022"
    "\031\n\021door_judge_number\030\006 \001(\005\"\250\001\n\tBasicHorn"
    "\022\032\n\022horn_whether_check\030\001 \001(\010\022\026\n\016horn_ded"
    "uction\030\002 \001(\005\022\022\n\nhorn_voice\030\003 \001(\t\022\031\n\021horn"
    "_lasting_time\030\004 \001(\005\022\035\n\025horn_deduction_nu"
    "mber\030\005 \001(\005\022\031\n\021horn_judge_number\030\006 \001(\005\"\304\001"
    "\n\rBasicFlameout\022\036\n\026flameout_whether_chec"
    "k\030\001 \001(\010\022\032\n\022flameout_deduction\030\002 \001(\005\022\026\n\016f"
    "lameout_voice\030\003 \001(\t\022\035\n\025flameout_lasting_"
    "time\030\004 \001(\005\022!\n\031flameout_deduction_number\030"
    "\005 \001(\005\022\035\n\025flameout_judge_number\030\006 \001(\005\"\312\001\n"
    "\rBasicFullLine\022\037\n\027full_line_whether_chec"
    "k\030\001 \001(\010\022\033\n\023full_line_deduction\030\002 \001(\005\022\027\n\017"
    "full_line_voice\030\003 \001(\t\022\036\n\026full_line_lasti"
    "ng_time\030\004 \001(\005\022\"\n\032full_line_deduction_num"
    "ber\030\005 \001(\005\022\036\n\026full_line_judge_number\030\006 \001("
    "\005\"\330\001\n\017BasicDottedLine\022!\n\031dotted_line_whe"
    "ther_check\030\001 \001(\010\022\035\n\025dotted_line_deductio"
    "n\030\002 \001(\005\022\031\n\021dotted_line_voice\030\003 \001(\t\022 \n\030do"
    "tted_line_lasting_time\030\004 \001(\005\022$\n\034dotted_l"
    "ine_deduction_number\030\005 \001(\005\022 \n\030dotted_lin"
    "e_judge_number\030\006 \001(\005\"\222\002\n\021BasicLeftTurnLa"
    "mp\022\"\n\032leftTurnLamp_whether_check\030\001 \001(\010\022\036"
    "\n\026leftTurnLamp_deduction\030\002 \001(\005\022\032\n\022leftTu"
    "rnLamp_voice\030\003 \001(\t\022!\n\031leftTurnLamp_lasti"
    "ng_time\030\004 \001(\005\022%\n\035leftTurnLamp_deduction_"
    "number\030\005 \001(\005\022!\n\031leftTurnLamp_judge_numbe"
    "r\030\006 \001(\005\0220\n!leftTurnLamp_lasting_whole_co"
    "urse\030\007 \001(\010:\005false\"\232\002\n\022BasicRightTurnLamp"
    "\022#\n\033rightTurnLamp_whether_check\030\001 \001(\010\022\037\n"
    "\027rightTurnLamp_deduction\030\002 \001(\005\022\033\n\023rightT"
    "urnLamp_voice\030\003 \001(\t\022\"\n\032rightTurnLamp_las"
    "ting_time\030\004 \001(\005\022&\n\036rightTurnLamp_deducti"
    "on_number\030\005 \001(\005\022\"\n\032rightTurnLamp_judge_n"
    "umber\030\006 \001(\005\0221\n\"rightTurnLamp_lasting_who"
    "le_course\030\007 \001(\010:\005false\"\275\001\n\014BasicCarStop\022"
    "\035\n\025carStop_whether_check\030\001 \001(\010\022\031\n\021carSto"
    "p_deduction\030\002 \001(\005\022\025\n\rcarStop_voice\030\003 \001(\t"
    "\022\034\n\024carStop_lasting_time\030\004 \001(\005\022 \n\030carSto"
    "p_deduction_number\030\005 \001(\005\022\034\n\024carStop_judg"
    "e_number\030\006 \001(\005\"\347\001\n\016BasicHandBrake\022\037\n\027han"
    "dBrake_whether_check\030\001 \001(\010\022\033\n\023handBrake_"
    "deduction\030\002 \001(\005\022\027\n\017handBrake_voice\030\003 \001(\t"
    "\022\032\n\022handBrake_distance\030\004 \001(\005\022\036\n\026handBrak"
    "e_lasting_time\030\005 \001(\005\022\"\n\032handBrake_deduct"
    "ion_number\030\006 \001(\005\022\036\n\026handBrake_judge_numb"
    "er\030\007 \001(\005\"}\n\014BasicTimeout\022\035\n\025timeout_whet"
    "her_check\030\001 \001(\010\022\034\n\024timeout_milliseconds\030"
    "\002 \001(\005\022\031\n\021timeout_deduction\030\003 \001(\005\022\025\n\rtime"
    "out_voice\030\004 \001(\t\"\266\001\n\013BasicClutch\022\034\n\024clutc"
    "h_whether_check\030\001 \001(\010\022\030\n\020clutch_deductio"
    "n\030\002 \001(\005\022\024\n\014clutch_voice\030\003 \001(\t\022\033\n\023clutch_"
    "lasting_time\030\004 \001(\005\022\037\n\027clutch_deduction_n"
    "umber\030\005 \001(\005\022\033\n\023clutch_judge_number\030\006 \001(\005"
    "\"\304\001\n\rBasicRoundCar\022\036\n\026roundCar_whether_c"
    "heck\030\001 \001(\010\022\032\n\022roundCar_deduction\030\002 \001(\005\022\026"
    "\n\016roundCar_voice\030\003 \001(\t\022\035\n\025roundCar_lasti"
    "ng_time\030\004 \001(\005\022!\n\031roundCar_deduction_numb"
    "er\030\005 \001(\005\022\035\n\025roundCar_judge_number\030\006 \001(\005\""
    "\337\001\n\rBasicSlowDown\022$\n\026slowDown_whether_ch"
    "eck\030\001 \001(\010:\004true\022\032\n\022slowDown_deduction\030\002 "
    "\001(\005\022\026\n\016slowDown_voice\030\003 \001(\t\022\035\n\025slowDown_"
    "lasting_time\030\004 \001(\005\022!\n\031slowDown_deduction"
    "_number\030\005 \001(\005\022\035\n\025slowDown_judge_number\030\006"
    " \001(\005\022\023\n\013limit_speed\030\007 \001(\005\"\227\001\n\013BasicFireU"
    "p\022\034\n\024fireup_whether_check\030\001 \001(\010\022\030\n\020fireu"
    "p_deduction\030\002 \001(\005\022\024\n\014fireup_voice\030\003 \001(\t\022"
    "\033\n\023fireup_lasting_time\030\004 \001(\005\022\035\n\025slowDown"
    "_judge_number\030\005 \001(\005\"\215\001\n\tBasicSeat\022\032\n\022sea"
    "t_whether_check\030\001 \001(\010\022\026\n\016seat_deduction\030"
    "\002 \001(\005\022\022\n\nseat_voice\030\003 \001(\t\022\031\n\021seat_lastin"
    "g_time\030\004 \001(\005\022\035\n\025slowDown_judge_number\030\005 "
    "\001(\005\"\253\001\n\017BasicLeftMirror\022!\n\031left_mirror_w"
    "hether_check\030\001 \001(\010\022\035\n\025left_mirror_deduct"
    "ion\030\002 \001(\005\022\031\n\021left_mirror_voice\030\003 \001(\t\022 \n\030"
    "left_mirror_lasting_time\030\004 \001(\005\022\031\n\021left_j"
    "udge_number\030\005 \001(\005\"\267\001\n\021BasicMiddleMirror\022"
    "#\n\033middle_mirror_whether_check\030\001 \001(\010\022\037\n\027"
    "middle_mirror_deduction\030\002 \001(\005\022\033\n\023middle_"
    "mirror_voice\030\003 \001(\t\022\"\n\032middle_mirror_last"
    "ing_time\030\004 \001(\005\022\033\n\023middle_judge_number\030\005 "
    "\001(\005\"\261\001\n\020BasicRightMirror\022\"\n\032right_mirror"
    "_whether_check\030\001 \001(\010\022\036\n\026right_mirror_ded"
    "uction\030\002 \001(\005\022\032\n\022right_mirror_voice\030\003 \001(\t"
    "\022!\n\031right_mirror_lasting_time\030\004 \001(\005\022\032\n\022r"
    "ight_judge_number\030\005 \001(\005\"\234\001\n\021ItemJudgeDis"
    "tance\022\033\n\023item_distance_check\030\001 \001(\010\022\031\n\021it"
    "em_min_distance\030\002 \001(\005\022\031\n\021item_max_distan"
    "ce\030\003 \001(\005\022\026\n\016item_deduction\030\004 \001(\005\022\034\n\024item"
    "_deduction_voice\030\005 \001(\t\"\214\001\n\rItemJudgeTime"
    "\022\027\n\017item_time_check\030\001 \001(\010\022\025\n\ritem_min_ti"
    "me\030\002 \001(\005\022\025\n\ritem_max_time\030\003 \001(\005\022\026\n\016item_"
    "deduction\030\004 \001(\005\022\034\n\024item_deduction_voice\030"
    "\005 \001(\t\"\220\001\n\016ItemJudgeSpeed\022\030\n\020item_speed_c"
    "heck\030\001 \001(\010\022\026\n\016item_min_speed\030\002 \001(\005\022\026\n\016it"
    "em_max_speed\030\003 \001(\005\022\026\n\016item_deduction\030\004 \001"
    "(\005\022\034\n\024item_deduction_voice\030\005 \001(\t\"\244\003\n\016Ite"
    "mJudgeBasic\022,\n\014basic_safety\030\001 \001(\0132\026.OPMe"
    "ssage.BasicSafety\022(\n\nbasic_door\030\002 \001(\0132\024."
    "OPMessage.BasicDoor\0220\n\016basic_flameout\030\003 "
    "\001(\0132\030.OPMessage.BasicFlameout\0228\n\022basic_l"
    "eftTurnLamp\030\004 \001(\0132\034.OPMessage.BasicLeftT"
    "urnLamp\022:\n\023basic_rightTurnLamp\030\005 \001(\0132\035.O"
    "PMessage.BasicRightTurnLamp\022.\n\rbasic_car"
    "Stop\030\006 \001(\0132\027.OPMessage.BasicCarStop\0222\n\017b"
    "asic_handBrake\030\007 \001(\0132\031.OPMessage.BasicHa"
    "ndBrake\022.\n\rbasic_timeout\030\010 \001(\0132\027.OPMessa"
    "ge.BasicTimeout\"\313\006\n\017GlobalJudgeRule\022 \n\030r"
    "un_mode_mn_again_dk_end\030\001 \001(\010\022.\n&run_mod"
    "e_ks_whether_have_second_chance\030\002 \001(\010\022\031\n"
    "\021round_start_voice\030\003 \001(\t\022\036\n\026item_finish_"
    "pass_voice\030\004 \001(\t\022 \n\030item_finish_unpass_v"
    "oice\030\005 \001(\t\022\037\n\027round_finish_pass_voice\030\006 "
    "\001(\t\022!\n\031round_finish_unpass_voice\030\007 \001(\t\022 "
    "\n\030retake_round_start_voice\030\010 \001(\t\0221\n\013reta"
    "ke_type\030\t \001(\0162\034.OPMessage.enum_judge_ret"
    "ake\022\035\n\025retake_dk_enter_voice\030\n \001(\t\022,\n\014ba"
    "sic_safety\030\013 \001(\0132\026.OPMessage.BasicSafety"
    "\022(\n\nbasic_door\030\014 \001(\0132\024.OPMessage.BasicDo"
    "or\0220\n\016basic_flameout\030\r \001(\0132\030.OPMessage.B"
    "asicFlameout\022\025\n\tmax_speed\030\016 \001(\001:\00250\0221\n\017b"
    "asic_full_line\030\017 \001(\0132\030.OPMessage.BasicFu"
    "llLine\0225\n\021basic_dotted_line\030\020 \001(\0132\032.OPMe"
    "ssage.BasicDottedLine\022;\n\025longtime_leftTu"
    "rnLamp\030\021 \001(\0132\034.OPMessage.BasicLeftTurnLa"
    "mp\022=\n\026longtime_rightTurnLamp\030\022 \001(\0132\035.OPM"
    "essage.BasicRightTurnLamp\022/\n\017longtime_cl"
    "utch\030\023 \001(\0132\026.OPMessage.BasicClutch\022\031\n\014mi"
    "n_distance\030\024 \001(\001:\0032.8\"\370\001\n\021ItemJudgeRuleZ"
    "ero\0224\n\021basic_event_check\030\001 \001(\0132\031.OPMessa"
    "ge.ItemJudgeBasic\022\030\n\020item_enter_voice\030\002 "
    "\001(\t\022\030\n\020item_leave_voice\030\003 \001(\t\022\030\n\020item_st"
    "art_voice\030\004 \001(\t\022\026\n\016item_end_voice\030\005 \001(\t\022"
    "G\n\021judge_points_type\030\006 \001(\0162\034.OPMessage.e"
    "num_judge_points:\016points_car_all\"\360\002\n\017Ite"
    "mJudgeRuleDk\0224\n\021basic_event_check\030\001 \001(\0132"
    "\031.OPMessage.ItemJudgeBasic\022\030\n\020item_enter"
    "_voice\030\002 \001(\t\022\030\n\020item_leave_voice\030\003 \001(\t\022\030"
    "\n\020item_start_voice\030\004 \001(\t\022\026\n\016item_end_voi"
    "ce\030\005 \001(\t\022G\n\021judge_points_type\030\006 \001(\0162\034.OP"
    "Message.enum_judge_points:\016points_car_al"
    "l\0228\n\020check_start_type\030\007 \001(\0162\036.OPMessage."
    "CheckStartTypeStart\022>\n\030event_check_leftT"
    "urnLamp\030\010 \001(\0132\034.OPMessage.BasicLeftTurnL"
    "amp\"\202\001\n\034ItemJudgeRuleShangCheZhunBei\022\030\n\020"
    "item_start_voice\030\001 \001(\t\022\026\n\016item_end_voice"
    "\030\002 \001(\t\0220\n\016basic_roundcar\030\003 \001(\0132\030.OPMessa"
    "ge.BasicRoundCar\"\365\001\n\026BasicDengGuangMoNiI"
    "tem\0226\n\004type\030\001 \001(\0162(.OPMessage.enum_judge"
    "_dengguangmoni_type\022\"\n\024is_participant_ju"
    "dge\030\002 \001(\010:\004true\022\032\n\014is_must_type\030\003 \001(\010:\004t"
    "rue\022\021\n\ttip_voice\030\004 \001(\t\022\022\n\npass_voice\030\005 \001"
    "(\t\022\021\n\tdeduction\030\006 \001(\005\022\020\n\010time_out\030\007 \001(\005\022"
    "\027\n\017deduction_voice\030\010 \001(\t\"\200\010\n\032ItemJudgeRu"
    "leDengGuangMoNi\022\030\n\020item_start_voice\030\001 \001("
    "\t\022\026\n\016item_end_voice\030\002 \001(\t\022\027\n\017must_item_c"
    "ount\030\003 \001(\005\022\033\n\023not_must_item_count\030\004 \001(\005\022"
    "L\n!basic_night_no_lamp_poor_lighting\030\005 \001"
    "(\0132!.OPMessage.BasicDengGuangMoNiItem\022T\n"
    ")basic_night_no_lamp_poor_lighting_in_ci"
    "ty\030\006 \001(\0132!.OPMessage.BasicDengGuangMoNiI"
    "tem\022T\n)basic_night_close_with_car_same_d"
    "irection\030\007 \001(\0132!.OPMessage.BasicDengGuan"
    "gMoNiItem\022X\n-basic_night_no_lamp_poor_li"
    "ghting_in_suburban\030\010 \001(\0132!.OPMessage.Bas"
    "icDengGuangMoNiItem\022P\n%basic_night_throu"
    "gh_curve_ramp_bridge\030\t \001(\0132!.OPMessage.B"
    "asicDengGuangMoNiItem\022<\n\021basic_fog_drivi"
    "ng\030\n \001(\0132!.OPMessage.BasicDengGuangMoNiI"
    "tem\022M\n\"basic_night_passing_in_narrow_roa"
    "d\030\013 \001(\0132!.OPMessage.BasicDengGuangMoNiIt"
    "em\022S\n(basic_night_passing_nearly_150_oth"
    "er_car\030\014 \001(\0132!.OPMessage.BasicDengGuangM"
    "oNiItem\022D\n\031basic_night_car_road_down\030\r \001"
    "(\0132!.OPMessage.BasicDengGuangMoNiItem\022U\n"
    "*basic_night_through_no_traffic_signal_r"
    "oad\030\016 \001(\0132!.OPMessage.BasicDengGuangMoNi"
    "Item\022U\n*basic_simulation_test_done_close"
    "_all_light\030\017 \001(\0132!.OPMessage.BasicDengGu"
    "angMoNiItem\"\253\007\n\021ItemJudgeRuleQiBu\022\030\n\020ite"
    "m_start_voice\030\001 \001(\t\022\026\n\016item_end_voice\030\002 "
    "\001(\t\0228\n\022basic_leftturnlamp\030\003 \001(\0132\034.OPMess"
    "age.BasicLeftTurnLamp\022(\n\nbasic_door\030\004 \001("
    "\0132\024.OPMessage.BasicDoor\022(\n\nbasic_horn\030\005 "
    "\001(\0132\024.OPMessage.BasicHorn\022,\n\014basic_fireu"
    "p\030\006 \001(\0132\026.OPMessage.BasicFireUp\022(\n\nbasic"
    "_seat\030\007 \001(\0132\024.OPMessage.BasicSeat\0225\n\021bas"
    "ic_left_mirror\030\010 \001(\0132\032.OPMessage.BasicLe"
    "ftMirror\0229\n\023basic_middle_mirror\030\t \001(\0132\034."
    "OPMessage.BasicMiddleMirror\0227\n\022basic_rig"
    "ht_mirror\030\n \001(\0132\033.OPMessage.BasicRightMi"
    "rror\022\"\n\024car_hl_whether_check\030\013 \001(\010:\004true"
    "\022\'\n\037car_hl_distance_more_30cm_voice\030\014 \001("
    "\t\022+\n#car_hl_distance_more_30cm_deduction"
    "\030\r \001(\005\022\'\n\037car_hl_distance_less_30cm_voic"
    "e\030\016 \001(\t\022+\n#car_hl_distance_less_30cm_ded"
    "uction\030\017 \001(\005\022)\n\033car_handbrake_whether_ch"
    "eck\030\020 \001(\010:\004true\022#\n\033car_handbrake_more_di"
    "stance\030\021 \001(\005\022 \n\030car_handbrake_more_voice"
    "\030\022 \001(\t\022$\n\034car_handbrake_more_deduction\030\023"
    " \001(\005\022#\n\033car_handbrake_less_distance\030\024 \001("
    "\005\022 \n\030car_handbrake_less_voice\030\025 \001(\t\022$\n\034c"
    "ar_handbrake_less_deduction\030\026 \001(\005\"\217\003\n\033It"
    "emJudgeRuleKaoBianTingChe\022\030\n\020item_start_"
    "voice\030\001 \001(\t\022\026\n\016item_end_voice\030\002 \001(\t\022:\n\023b"
    "asic_rightturnlamp\030\003 \001(\0132\035.OPMessage.Bas"
    "icRightTurnLamp\0220\n\016basic_flameout\030\004 \001(\0132"
    "\030.OPMessage.BasicFlameout\022(\n\nbasic_door\030"
    "\005 \001(\0132\024.OPMessage.BasicDoor\0223\n%limit_com"
    "plete_distance_whether_check\030\006 \001(\010:\004true"
    "\022\037\n\027limit_complete_distance\030\007 \001(\005\022%\n\035lim"
    "it_complete_distance_voice\030\010 \001(\t\022)\n!limi"
    "t_complete_distance_deduction\030\t \001(\005\"\373\001\n\030"
    "ItemJudgeRuleXueXiaoQuYu\022\030\n\020item_enter_v"
    "oice\030\001 \001(\t\022\030\n\020item_leave_voice\030\002 \001(\t\022\030\n\020"
    "item_start_voice\030\003 \001(\t\022\026\n\016item_end_voice"
    "\030\004 \001(\t\022G\n\021check_finish_type\030\005 \001(\0162,.OPMe"
    "ssage.CheckFinishCarPositionXueXiaoQuYu\022"
    "0\n\016basic_slowdown\030\006 \001(\0132\030.OPMessage.Basi"
    "cSlowDown\"\270\002\n\032ItemJudgeRuleLuKouZuoZhuan"
    "\022\030\n\020item_enter_voice\030\001 \001(\t\022\030\n\020item_leave"
    "_voice\030\002 \001(\t\022\030\n\020item_start_voice\030\003 \001(\t\022\026"
    "\n\016item_end_voice\030\004 \001(\t\022I\n\021check_finish_t"
    "ype\030\005 \001(\0162..OPMessage.CheckFinishCarPosi"
    "tionLuKouZuoZhuan\0220\n\016basic_slowdown\030\006 \001("
    "\0132\030.OPMessage.BasicSlowDown\0227\n\021item_left"
    "turnlamp\030\007 \001(\0132\034.OPMessage.BasicLeftTurn"
    "Lamp\"\272\002\n\032ItemJudgeRuleLuKouYouZhuan\022\030\n\020i"
    "tem_enter_voice\030\001 \001(\t\022\030\n\020item_leave_voic"
    "e\030\002 \001(\t\022\030\n\020item_start_voice\030\003 \001(\t\022\026\n\016ite"
    "m_end_voice\030\004 \001(\t\022I\n\021check_finish_type\030\005"
    " \001(\0162..OPMessage.CheckFinishCarPositionL"
    "uKouYouZhuan\0220\n\016basic_slowdown\030\006 \001(\0132\030.O"
    "PMessage.BasicSlowDown\0229\n\022item_rightturn"
    "lamp\030\007 \001(\0132\035.OPMessage.BasicRightTurnLam"
    "p\"\213\002\n ItemJudgeRuleZhiXianTongGuoLuKou\022\030"
    "\n\020item_enter_voice\030\001 \001(\t\022\030\n\020item_leave_v"
    "oice\030\002 \001(\t\022\030\n\020item_start_voice\030\003 \001(\t\022\026\n\016"
    "item_end_voice\030\004 \001(\t\022O\n\021check_finish_typ"
    "e\030\005 \001(\01624.OPMessage.CheckFinishCarPositi"
    "onZhiXianTongGuoLuKou\0220\n\016basic_slowdown\030"
    "\006 \001(\0132\030.OPMessage.BasicSlowDown\"\207\002\n\036Item"
    "JudgeRuleGongGongQiCheZhan\022\030\n\020item_enter"
    "_voice\030\001 \001(\t\022\030\n\020item_leave_voice\030\002 \001(\t\022\030"
    "\n\020item_start_voice\030\003 \001(\t\022\026\n\016item_end_voi"
    "ce\030\004 \001(\t\022M\n\021check_finish_type\030\005 \001(\01622.OP"
    "Message.CheckFinishCarPositionGongGongQi"
    "CheZhan\0220\n\016basic_slowdown\030\006 \001(\0132\030.OPMess"
    "age.BasicSlowDown\"\201\002\n\033ItemJudgeRuleRenXi"
    "ngHengDao\022\030\n\020item_enter_voice\030\001 \001(\t\022\030\n\020i"
    "tem_leave_voice\030\002 \001(\t\022\030\n\020item_start_voic"
    "e\030\003 \001(\t\022\026\n\016item_end_voice\030\004 \001(\t\022J\n\021check"
    "_finish_type\030\005 \001(\0162/.OPMessage.CheckFini"
    "shCarPositionRenXingHengDao\0220\n\016basic_slo"
    "wdown\030\006 \001(\0132\030.OPMessage.BasicSlowDown\"\207\004"
    "\n\033ItemJudgeRuleZhiXianXingShi\022\030\n\020item_en"
    "ter_voice\030\001 \001(\t\022\030\n\020item_leave_voice\030\002 \001("
    "\t\022\030\n\020item_start_voice\030\003 \001(\t\022\026\n\016item_end_"
    "voice\030\004 \001(\t\022\034\n\024item_direction_check\030\005 \001("
    "\010\022 \n\030item_direction_deduction\030\006 \001(\005\022\"\n\032i"
    "tem_direction_angle_limit\030\007 \001(\005\022#\n\033item_"
    "direction_lasting_time\030\010 \001(\005\022\034\n\024item_dir"
    "ection_voice\030\t \001(\t\0223\n\ritem_distance\030\n \001("
    "\0132\034.OPMessage.ItemJudgeDistance\022+\n\titem_"
    "time\030\013 \001(\0132\030.OPMessage.ItemJudgeTime\022-\n\n"
    "item_speed\030\014 \001(\0132\031.OPMessage.ItemJudgeSp"
    "eed\022J\n\021check_finish_type\030\r \001(\0162/.OPMessa"
    "ge.CheckFinishCarPositionZhiXianXingShi\""
    "\366\006\n\030ItemJudgeRuleJiaJianDang\022\030\n\020item_ent"
    "er_voice\030\001 \001(\t\022\030\n\020item_leave_voice\030\002 \001(\t"
    "\022\030\n\020item_start_voice\030\003 \001(\t\022\026\n\016item_end_v"
    "oice\030\004 \001(\t\0223\n\ritem_distance\030\005 \001(\0132\034.OPMe"
    "ssage.ItemJudgeDistance\022+\n\titem_time\030\006 \001"
    "(\0132\030.OPMessage.ItemJudgeTime\022,\n\036item_jia"
    "jiandang_whether_check\030\007 \001(\010:\004true\022>\n\031it"
    "em_jiajiandang_add_gear\030\010 \001(\0162\033.OPMessag"
    "e.AddToLimitedGear\022D\n\034item_jiajiandang_r"
    "educe_gear\030\t \001(\0162\036.OPMessage.ReduceToLim"
    "itedGear\022\"\n\032item_jiajiandang_deduction\030\n"
    " \001(\005\022\036\n\026item_jiajiandang_voice\030\013 \001(\t\022B\n\037"
    "item_jiajiandang_one_gear_speed\030\014 \001(\0132\031."
    "OPMessage.ItemJudgeSpeed\022B\n\037item_jiajian"
    "dang_two_gear_speed\030\r \001(\0132\031.OPMessage.It"
    "emJudgeSpeed\022D\n!item_jiajiandang_three_g"
    "ear_speed\030\016 \001(\0132\031.OPMessage.ItemJudgeSpe"
    "ed\022C\n item_jiajiandang_four_gear_speed\030\017"
    " \001(\0132\031.OPMessage.ItemJudgeSpeed\022C\n item_"
    "jiajiandang_five_gear_speed\030\020 \001(\0132\031.OPMe"
    "ssage.ItemJudgeSpeed\022B\n\037item_jiajiandang"
    "_six_gear_speed\030\021 \001(\0132\031.OPMessage.ItemJu"
    "dgeSpeed\"\254\002\n\024ItemJudgeRuleDiaoTou\022\030\n\020ite"
    "m_enter_voice\030\001 \001(\t\022\030\n\020item_leave_voice\030"
    "\002 \001(\t\022\030\n\020item_start_voice\030\003 \001(\t\022\026\n\016item_"
    "end_voice\030\004 \001(\t\0227\n\021item_leftturnlamp\030\005 \001"
    "(\0132\034.OPMessage.BasicLeftTurnLamp\022C\n\021chec"
    "k_finish_type\030\006 \001(\0162(.OPMessage.CheckFin"
    "ishCarPositionDiaoTou\0220\n\016basic_slowdown\030"
    "\007 \001(\0132\030.OPMessage.BasicSlowDown\"\246\004\n\033Item"
    "JudgeRuleBianGengCheDao\022\030\n\020item_enter_vo"
    "ice\030\001 \001(\t\022\030\n\020item_leave_voice\030\002 \001(\t\022\030\n\020i"
    "tem_start_voice\030\003 \001(\t\022\026\n\016item_end_voice\030"
    "\004 \001(\t\0223\n\ritem_distance\030\005 \001(\0132\034.OPMessage"
    ".ItemJudgeDistance\022+\n\titem_time\030\006 \001(\0132\030."
    "OPMessage.ItemJudgeTime\022-\n\nitem_speed\030\007 "
    "\001(\0132\031.OPMessage.ItemJudgeSpeed\0227\n\021item_l"
    "eftturnlamp\030\010 \001(\0132\034.OPMessage.BasicLeftT"
    "urnLamp\0229\n\022item_rightturnlamp\030\t \001(\0132\035.OP"
    "Message.BasicRightTurnLamp\022J\n\021check_fini"
    "sh_type\030\n \001(\0162/.OPMessage.CheckFinishCar"
    "PositionBianGengCheDao\022\'\n\037item_whether_b"
    "iangengchedao_one\030\013 \001(\010\022\'\n\037item_whether_"
    "biangengchedao_two\030\014 \001(\010\"\212\004\n\024ItemJudgeRu"
    "leChaoChe\022\030\n\020item_enter_voice\030\001 \001(\t\022\030\n\020i"
    "tem_leave_voice\030\002 \001(\t\022\030\n\020item_start_voic"
    "e\030\003 \001(\t\022\026\n\016item_end_voice\030\004 \001(\t\0223\n\ritem_"
    "distance\030\005 \001(\0132\034.OPMessage.ItemJudgeDist"
    "ance\022+\n\titem_time\030\006 \001(\0132\030.OPMessage.Item"
    "JudgeTime\022-\n\nitem_speed\030\007 \001(\0132\031.OPMessag"
    "e.ItemJudgeSpeed\0227\n\021item_leftturnlamp\030\010 "
    "\001(\0132\034.OPMessage.BasicLeftTurnLamp\0229\n\022ite"
    "m_rightturnlamp\030\t \001(\0132\035.OPMessage.BasicR"
    "ightTurnLamp\022C\n\021check_finish_type\030\n \001(\0162"
    "(.OPMessage.CheckFinishCarPositionChaoCh"
    "e\022 \n\030item_whether_chaoche_one\030\013 \001(\010\022 \n\030i"
    "tem_whether_chaoche_two\030\014 \001(\010\"\214\002\n\023ItemJu"
    "dgeRuleHuiChe\022\030\n\020item_enter_voice\030\001 \001(\t\022"
    "\030\n\020item_leave_voice\030\002 \001(\t\022\030\n\020item_start_"
    "voice\030\003 \001(\t\022\026\n\016item_end_voice\030\004 \001(\t\0223\n\ri"
    "tem_distance\030\005 \001(\0132\034.OPMessage.ItemJudge"
    "Distance\022+\n\titem_time\030\006 \001(\0132\030.OPMessage."
    "ItemJudgeTime\022-\n\nitem_speed\030\007 \001(\0132\031.OPMe"
    "ssage.ItemJudgeSpeed\"\210\005\n\021ItemJudgeRuleZj"
    "zw\0224\n\021basic_event_check\030\001 \001(\0132\031.OPMessag"
    "e.ItemJudgeBasic\022\030\n\020item_enter_voice\030\002 \001"
    "(\t\022\030\n\020item_leave_voice\030\003 \001(\t\022\030\n\020item_sta"
    "rt_voice\030\004 \001(\t\022\026\n\016item_end_voice\030\005 \001(\t\022G"
    "\n\021judge_points_type\030\006 \001(\0162\034.OPMessage.en"
    "um_judge_points:\016points_car_all\022>\n\020check"
    "_start_type\030\007 \001(\0162$.OPMessage.CheckStart"
    "CarPositionZjzw\022@\n\021check_finish_type\030\010 \001"
    "(\0162%.OPMessage.CheckFinishCarPositionZjz"
    "w\022)\n\033car_PressLine_whether_check\030\t \001(\010:\004"
    "true\022$\n\027car_PressLine_deduction\030\n \001(\005:\0031"
    "00\022\033\n\023car_PressLine_voice\030\013 \001(\t\022\034\n\rin_ar"
    "ea_again\030\014 \001(\010:\005false\022>\n\030event_check_lef"
    "tTurnLamp\030\r \001(\0132\034.OPMessage.BasicLeftTur"
    "nLamp\022@\n\031event_check_rightTurnLamp\030\016 \001(\013"
    "2\035.OPMessage.BasicRightTurnLamp\"\206\004\n\021Item"
    "JudgeRuleQxxs\0224\n\021basic_event_check\030\001 \001(\013"
    "2\031.OPMessage.ItemJudgeBasic\022\030\n\020item_ente"
    "r_voice\030\002 \001(\t\022\030\n\020item_leave_voice\030\003 \001(\t\022"
    "\030\n\020item_start_voice\030\004 \001(\t\022\026\n\016item_end_vo"
    "ice\030\005 \001(\t\022G\n\021judge_points_type\030\006 \001(\0162\034.O"
    "PMessage.enum_judge_points:\016points_car_a"
    "ll\022>\n\020check_start_type\030\007 \001(\0162$.OPMessage"
    ".CheckStartCarPositionQxxs\022@\n\021check_fini"
    "sh_type\030\010 \001(\0162%.OPMessage.CheckFinishCar"
    "PositionQxxs\022)\n\033car_PressLine_whether_ch"
    "eck\030\t \001(\010:\004true\022$\n\027car_PressLine_deducti"
    "on\030\n \001(\005:\003100\022\033\n\023car_PressLine_voice\030\013 \001"
    "(\t\022\034\n\rin_area_again\030\014 \001(\010:\005false\"\355\003\n\rCft"
    "cPressLine\022!\n\031car_run_pressline_3_voice\030"
    "\001 \001(\t\022%\n\035car_run_pressline_3_deduction\030\002"
    " \001(\005\022!\n\031car_run_pressline_4_voice\030\003 \001(\t\022"
    "%\n\035car_run_pressline_4_deduction\030\004 \001(\005\022!"
    "\n\031car_run_pressline_7_voice\030\005 \001(\t\022%\n\035car"
    "_run_pressline_7_deduction\030\006 \001(\005\022!\n\031car_"
    "run_pressline_5_voice\030\007 \001(\t\022%\n\035car_run_p"
    "ressline_5_deduction\030\010 \001(\005\022!\n\031car_run_pr"
    "essline_9_voice\030\t \001(\t\022%\n\035car_run_pressli"
    "ne_9_deduction\030\n \001(\005\022 \n\030car_pressline_nu"
    "ms_mutex\030\013 \003(\005\022!\n\031car_run_pressline_2_vo"
    "ice\030\014 \001(\t\022%\n\035car_run_pressline_2_deducti"
    "on\030\r \001(\005\"\263\014\n\021ItemJudgeRuleCftc\0224\n\021basic_"
    "event_check\030\001 \001(\0132\031.OPMessage.ItemJudgeB"
    "asic\022\030\n\020item_enter_voice\030\002 \001(\t\022\030\n\020item_l"
    "eave_voice\030\003 \001(\t\022\030\n\020item_start_voice\030\004 \001"
    "(\t\022\026\n\016item_end_voice\030\005 \001(\t\022G\n\021judge_poin"
    "ts_type\030\006 \001(\0162\034.OPMessage.enum_judge_poi"
    "nts:\016points_car_all\022>\n\020check_start_type\030"
    "\007 \001(\0162$.OPMessage.CheckStartCarPositionC"
    "ftc\022@\n\021check_finish_type\030\010 \001(\0162%.OPMessa"
    "ge.CheckFinishCarPositionCftc\022)\n\033car_run"
    "_error_whether_check\030\t \001(\010:\004true\022\033\n\023car_"
    "run_error_voice\030\n \001(\t\022\037\n\027car_run_error_d"
    "eduction\030\013 \001(\005\022 \n\030car_rk_check_right_voi"
    "ce\030\014 \001(\t\022\037\n\027car_rk_check_fail_voice\030\r \001("
    "\t\022#\n\033car_rk_check_fail_deduction\030\016 \001(\005\0226"
    "\n\024forwarding_pressline\030\017 \001(\0132\030.OPMessage"
    ".CftcPressLine\022F\n\037event_check_rking_righ"
    "tTurnLamp\030\020 \001(\0132\035.OPMessage.BasicRightTu"
    "rnLamp\0221\n\017rking_pressline\030\021 \001(\0132\030.OPMess"
    "age.CftcPressLine\022D\n\036event_check_cking_l"
    "eftTurnLamp\030\022 \001(\0132\034.OPMessage.BasicLeftT"
    "urnLamp\0221\n\017cking_pressline\030\023 \001(\0132\030.OPMes"
    "sage.CftcPressLine\022\'\n\037car_run_not_staff_"
    "command_voice\030\024 \001(\t\022+\n#car_run_not_staff"
    "_command_deduction\030\025 \001(\005\022\034\n\rin_area_agai"
    "n\030\026 \001(\010:\005false\022\"\n\027car_rk_check_delay_tim"
    "e\030\027 \001(\005:\0010\022K\n$event_check_forwarding_rig"
    "htTurnLamp\030\030 \001(\0132\035.OPMessage.BasicRightT"
    "urnLamp\022E\n\037event_check_waitrk_leftTurnLa"
    "mp\030\031 \001(\0132\034.OPMessage.BasicLeftTurnLamp\022G"
    "\n event_check_waitrk_rightTurnLamp\030\032 \001(\013"
    "2\035.OPMessage.BasicRightTurnLamp\022D\n\036event"
    "_check_rkend_leftTurnLamp\030\033 \001(\0132\034.OPMess"
    "age.BasicLeftTurnLamp\022F\n\037event_check_rke"
    "nd_rightTurnLamp\030\034 \001(\0132\035.OPMessage.Basic"
    "RightTurnLamp\022\?\n\035carwheel_forwarding_pre"
    "ssline\030\035 \001(\0132\030.OPMessage.CftcPressLine\022:"
    "\n\030carwheel_rking_pressline\030\036 \001(\0132\030.OPMes"
    "sage.CftcPressLine\022:\n\030carwheel_cking_pre"
    "ssline\030\037 \001(\0132\030.OPMessage.CftcPressLine\"\231"
    "\016\n\021ItemJudgeRuleSpqb\0224\n\021basic_event_chec"
    "k\030\001 \001(\0132\031.OPMessage.ItemJudgeBasic\022\030\n\020it"
    "em_enter_voice\030\002 \001(\t\022\030\n\020item_leave_voice"
    "\030\003 \001(\t\022\030\n\020item_start_voice\030\004 \001(\t\022\026\n\016item"
    "_end_voice\030\005 \001(\t\022G\n\021judge_points_type\030\006 "
    "\001(\0162\034.OPMessage.enum_judge_points:\016point"
    "s_car_all\022>\n\020check_start_type\030\007 \001(\0162$.OP"
    "Message.CheckStartCarPositionSpqb\022@\n\021che"
    "ck_finish_type\030\010 \001(\0162%.OPMessage.CheckFi"
    "nishCarPositionSpqb\022)\n\033car_run_error_whe"
    "ther_check\030\t \001(\010:\004true\022\033\n\023car_run_error_"
    "voice\030\n \001(\t\022\037\n\027car_run_error_deduction\030\013"
    " \001(\005\022\037\n\027car_dd_head_right_voice\030\014 \001(\t\022#\n"
    "\033car_dd_head_more_50cm_voice\030\r \001(\t\022\'\n\037ca"
    "r_dd_head_more_50cm_deduction\030\016 \001(\005\022\'\n\037c"
    "ar_dd_head_not_more_50cm_voice\030\017 \001(\t\022+\n#"
    "car_dd_head_not_more_50cm_deduction\030\020 \001("
    "\005\0220\n#car_dd_carWheel_PressLine_deduction"
    "\030\021 \001(\005:\003100\022\'\n\037car_dd_carWheel_PressLine"
    "_voice\030\022 \001(\t\0223\n+car_dd_right_line_more_3"
    "0cm_less_50cm_voice\030\023 \001(\t\0227\n/car_dd_righ"
    "t_line_more_30cm_less_50cm_deduction\030\024 \001"
    "(\005\022)\n!car_dd_right_line_more_50cm_voice\030"
    "\025 \001(\t\022-\n%car_dd_right_line_more_50cm_ded"
    "uction\030\026 \001(\005\022\'\n\037car_hl_distance_more_30c"
    "m_voice\030\027 \001(\t\022+\n#car_hl_distance_more_30"
    "cm_deduction\030\030 \001(\005\022\'\n\037car_hl_distance_le"
    "ss_30cm_voice\030\031 \001(\t\022+\n#car_hl_distance_l"
    "ess_30cm_deduction\030\032 \001(\005\022\032\n\022car_qb_timeo"
    "ut_num\030\033 \001(\005\022\034\n\024car_qb_timeout_voice\030\034 \001"
    "(\t\022 \n\030car_qb_timeout_deduction\030\035 \001(\005\022)\n\033"
    "car_PressLine_whether_check\030\036 \001(\010:\004true\022"
    "$\n\027car_PressLine_deduction\030\037 \001(\005:\003100\022\033\n"
    "\023car_PressLine_voice\030  \001(\t\022\'\n\037car_run_no"
    "t_staff_command_voice\030! \001(\t\022+\n#car_run_n"
    "ot_staff_command_deduction\030\" \001(\005\022D\n\036even"
    "t_check_cking_leftTurnLamp\030# \001(\0132\034.OPMes"
    "sage.BasicLeftTurnLamp\022\034\n\rin_area_again\030"
    "$ \001(\010:\005false\022K\n$event_check_forwarding_r"
    "ightTurnLamp\030% \001(\0132\035.OPMessage.BasicRigh"
    "tTurnLamp\022E\n\037event_check_waitqb_leftTurn"
    "Lamp\030& \001(\0132\034.OPMessage.BasicLeftTurnLamp"
    "\022G\n event_check_waitqb_rightTurnLamp\030\' \001"
    "(\0132\035.OPMessage.BasicRightTurnLamp\022\?\n\034eve"
    "nt_check_waitqb_handBrake\030( \001(\0132\031.OPMess"
    "age.BasicHandBrake\"\355\003\n\rDcrkPressLine\022!\n\031"
    "car_run_pressline_3_voice\030\001 \001(\t\022%\n\035car_r"
    "un_pressline_3_deduction\030\002 \001(\005\022!\n\031car_ru"
    "n_pressline_4_voice\030\003 \001(\t\022%\n\035car_run_pre"
    "ssline_4_deduction\030\004 \001(\005\022!\n\031car_run_pres"
    "sline_8_voice\030\005 \001(\t\022%\n\035car_run_pressline"
    "_8_deduction\030\006 \001(\005\022!\n\031car_run_pressline_"
    "7_voice\030\007 \001(\t\022%\n\035car_run_pressline_7_ded"
    "uction\030\010 \001(\005\022!\n\031car_run_pressline_5_voic"
    "e\030\t \001(\t\022%\n\035car_run_pressline_5_deduction"
    "\030\n \001(\005\022!\n\031car_run_pressline_6_voice\030\013 \001("
    "\t\022%\n\035car_run_pressline_6_deduction\030\014 \001(\005"
    "\022 \n\030car_pressline_nums_mutex\030\r \003(\005\"\224\022\n\021I"
    "temJudgeRuleDcrk\0224\n\021basic_event_check\030\001 "
    "\001(\0132\031.OPMessage.ItemJudgeBasic\022\030\n\020item_e"
    "nter_voice\030\002 \001(\t\022\030\n\020item_leave_voice\030\003 \001"
    "(\t\022\030\n\020item_start_voice\030\004 \001(\t\022\026\n\016item_end"
    "_voice\030\005 \001(\t\022G\n\021judge_points_type\030\006 \001(\0162"
    "\034.OPMessage.enum_judge_points:\016points_ca"
    "r_all\022>\n\020check_start_type\030\007 \001(\0162$.OPMess"
    "age.CheckStartCarPositionDcrk\022@\n\021check_f"
    "inish_type\030\010 \001(\0162%.OPMessage.CheckFinish"
    "CarPositionDcrk\022)\n\033car_run_error_whether"
    "_check\030\t \001(\010:\004true\022\033\n\023car_run_error_voic"
    "e\030\n \001(\t\022\037\n\027car_run_error_deduction\030\013 \001(\005"
    "\022 \n\030car_rk_check_right_voice\030\014 \001(\t\022\037\n\027ca"
    "r_rk_check_fail_voice\030\r \001(\t\022#\n\033car_rk_ch"
    "eck_fail_deduction\030\016 \001(\005\0226\n\024forwarding_p"
    "ressline\030\017 \001(\0132\030.OPMessage.DcrkPressLine"
    "\0223\n\021rking_1_pressline\030\020 \001(\0132\030.OPMessage."
    "DcrkPressLine\0223\n\021cking_1_pressline\030\021 \001(\013"
    "2\030.OPMessage.DcrkPressLine\0223\n\021rking_2_pr"
    "essline\030\022 \001(\0132\030.OPMessage.DcrkPressLine\022"
    "3\n\021cking_2_pressline\030\023 \001(\0132\030.OPMessage.D"
    "crkPressLine\022\'\n\037car_run_not_staff_comman"
    "d_voice\030\024 \001(\t\022+\n#car_run_not_staff_comma"
    "nd_deduction\030\025 \001(\005\022F\n event_check_cking_"
    "1_leftTurnLamp\030\026 \001(\0132\034.OPMessage.BasicLe"
    "ftTurnLamp\022H\n!event_check_cking_2_rightT"
    "urnLamp\030\027 \001(\0132\035.OPMessage.BasicRightTurn"
    "Lamp\022\034\n\rin_area_again\030\030 \001(\010:\005false\022\"\n\027ca"
    "r_rk_check_delay_time\030\031 \001(\005:\0010\022K\n$event_"
    "check_forwarding_rightTurnLamp\030\032 \001(\0132\035.O"
    "PMessage.BasicRightTurnLamp\022H\n!event_che"
    "ck_cking_1_rightTurnLamp\030\033 \001(\0132\035.OPMessa"
    "ge.BasicRightTurnLamp\022F\n event_check_cki"
    "ng_2_leftTurnLamp\030\034 \001(\0132\034.OPMessage.Basi"
    "cLeftTurnLamp\022G\n!event_check_waitrk_1_le"
    "ftTurnLamp\030\035 \001(\0132\034.OPMessage.BasicLeftTu"
    "rnLamp\022I\n\"event_check_waitrk_1_rightTurn"
    "Lamp\030\036 \001(\0132\035.OPMessage.BasicRightTurnLam"
    "p\022F\n event_check_rkend_1_leftTurnLamp\030\037 "
    "\001(\0132\034.OPMessage.BasicLeftTurnLamp\022H\n!eve"
    "nt_check_rkend_1_rightTurnLamp\030  \001(\0132\035.O"
    "PMessage.BasicRightTurnLamp\022G\n!event_che"
    "ck_waitrk_2_leftTurnLamp\030! \001(\0132\034.OPMessa"
    "ge.BasicLeftTurnLamp\022I\n\"event_check_wait"
    "rk_2_rightTurnLamp\030\" \001(\0132\035.OPMessage.Bas"
    "icRightTurnLamp\022F\n event_check_rkend_2_l"
    "eftTurnLamp\030# \001(\0132\034.OPMessage.BasicLeftT"
    "urnLamp\022H\n!event_check_rkend_2_rightTurn"
    "Lamp\030$ \001(\0132\035.OPMessage.BasicRightTurnLam"
    "p\022;\n-car_rking_1_frontwheel_over_control"
    "line_check\030% \001(\010:\004true\022>\n1car_rking_1_fr"
    "ontwheel_over_controlline_deduction\030& \001("
    "\005:\003100\0225\n-car_rking_1_frontwheel_over_co"
    "ntrolline_voice\030\' \001(\t\022;\n-car_rking_2_fro"
    "ntwheel_over_controlline_check\030( \001(\010:\004tr"
    "ue\022>\n1car_rking_2_frontwheel_over_contro"
    "lline_deduction\030) \001(\005:\003100\0225\n-car_rking_"
    "2_frontwheel_over_controlline_voice\030* \001("
    "\t\"\245\013\n\017ItemsJudgeRules\022/\n\013item_global\030\001 \001"
    "(\0132\032.OPMessage.GlobalJudgeRule\022/\n\titem_z"
    "ero\030\002 \001(\0132\034.OPMessage.ItemJudgeRuleZero\022"
    "+\n\007item_dk\030\003 \001(\0132\032.OPMessage.ItemJudgeRu"
    "leDk\022/\n\titem_zjzw\030\004 \001(\0132\034.OPMessage.Item"
    "JudgeRuleZjzw\022/\n\titem_qxxs\030\005 \001(\0132\034.OPMes"
    "sage.ItemJudgeRuleQxxs\022/\n\titem_cftc\030\006 \001("
    "\0132\034.OPMessage.ItemJudgeRuleCftc\022/\n\titem_"
    "spqb\030\007 \001(\0132\034.OPMessage.ItemJudgeRuleSpqb"
    "\022/\n\titem_dcrk\030\010 \001(\0132\034.OPMessage.ItemJudg"
    "eRuleDcrk\022E\n\024item_shangchezhunbei\030\t \001(\0132"
    "\'.OPMessage.ItemJudgeRuleShangCheZhunBei"
    "\022A\n\022item_dengguangmoni\030\n \001(\0132%.OPMessage"
    ".ItemJudgeRuleDengGuangMoNi\022/\n\titem_qibu"
    "\030\013 \001(\0132\034.OPMessage.ItemJudgeRuleQiBu\022=\n\020"
    "item_xuexiaoquyu\030\014 \001(\0132#.OPMessage.ItemJ"
    "udgeRuleXueXiaoQuYu\022A\n\022item_lukouzuozhua"
    "n\030\r \001(\0132%.OPMessage.ItemJudgeRuleLuKouZu"
    "oZhuan\022A\n\022item_lukouyouzhuan\030\016 \001(\0132%.OPM"
    "essage.ItemJudgeRuleLuKouYouZhuan\022M\n\030ite"
    "m_zhixiantongguolukou\030\017 \001(\0132+.OPMessage."
    "ItemJudgeRuleZhiXianTongGuoLuKou\022I\n\026item"
    "_gonggongqichezhan\030\020 \001(\0132).OPMessage.Ite"
    "mJudgeRuleGongGongQiCheZhan\022C\n\023item_renx"
    "inghengdao\030\021 \001(\0132&.OPMessage.ItemJudgeRu"
    "leRenXingHengDao\022C\n\023item_zhixianxingshi\030"
    "\022 \001(\0132&.OPMessage.ItemJudgeRuleZhiXianXi"
    "ngShi\022=\n\020item_jiajiandang\030\023 \001(\0132#.OPMess"
    "age.ItemJudgeRuleJiaJianDang\0225\n\014item_dia"
    "otou\030\024 \001(\0132\037.OPMessage.ItemJudgeRuleDiao"
    "Tou\022C\n\023item_biangengchedao\030\025 \001(\0132&.OPMes"
    "sage.ItemJudgeRuleBianGengCheDao\0225\n\014item"
    "_chaoche\030\026 \001(\0132\037.OPMessage.ItemJudgeRule"
    "ChaoChe\0223\n\013item_huiche\030\027 \001(\0132\036.OPMessage"
    ".ItemJudgeRuleHuiChe\022C\n\023item_kaobianting"
    "che\030\030 \001(\0132&.OPMessage.ItemJudgeRuleKaoBi"
    "anTingChe\"\352\001\n\010CoreInfo\0229\n\023software_start"
    "_info\030\001 \001(\0132\034.OPMessage.SoftwareStartInf"
    "o\0225\n\021config_info_basic\030\002 \001(\0132\032.OPMessage"
    ".ConfigInfoBasic\0225\n\021items_judge_rules\030\003 "
    "\001(\0132\032.OPMessage.ItemsJudgeRules\0225\n\021other"
    "_config_info\030\004 \001(\0132\032.OPMessage.OtherConf"
    "igInfo*\351\003\n\022enum_physic_sensor\022\017\n\013PS_Flam"
    "eOut\020\000\022\014\n\010PS_Brake\020\001\022\017\n\013PS_LeftTurn\020\002\022\020\n"
    "\014PS_RightTurn\020\003\022\020\n\014PS_HandBrake\020\004\022\021\n\rPS_"
    "SafetyBelt\020\005\022\013\n\007PS_Door\020\006\022\013\n\007PS_Horn\020\007\022\025"
    "\n\021PS_AuxiliaryBrake\020\010\022\r\n\tPS_Clutch\020\t\022\016\n\n"
    "PS_FarLamp\020\n\022\017\n\013PS_NearLamp\020\013\022\016\n\nPS_FogL"
    "amp\020\014\022\017\n\013PS_WarnLamp\020\r\022\023\n\017PS_PositionLam"
    "p\020\016\022\017\n\013PS_AirBrake\020\017\022\r\n\tPS_Fireup\020\020\022\016\n\nP"
    "S_ManNear\020\021\022\020\n\014PS_ManOnSeat\020\022\022\021\n\rPS_Left"
    "Mirror\020\023\022\023\n\017PS_MiddleMirror\020\024\022\022\n\016PS_Righ"
    "tMirror\020\025\022\013\n\007PS_Seat\020\026\022\021\n\rPS_LfRoundCar\020"
    "\027\022\021\n\rPS_RfRoundCar\020\030\022\021\n\rPS_LbRoundCar\020\031\022"
    "\021\n\rPS_RbRoundCar\020\032*I\n\021enum_judge_retake\022"
    "\032\n\026retake_start_next_item\020\000\022\030\n\024retake_st"
    "art_item_dk\020\001*T\n\021enum_judge_points\022\022\n\016po"
    "ints_car_all\020\000\022\024\n\020points_call_body\020\001\022\025\n\021"
    "points_call_wheel\020\002*\205\001\n\023CheckStartTypeSt"
    "art\022\"\n\036Start_Stop_500ms_Forward_500ms\020\000\022"
    "&\n\"Start_LeftRightLamp_Light_So_goout\020\001\022"
    "\"\n\036Start_Skip_Dk_Manual_Operation\020\002*\254\003\n\035"
    "enum_judge_dengguangmoni_type\022\037\n\033night_n"
    "o_lamp_poor_lighting\020\000\022\'\n#night_no_lamp_"
    "poor_lighting_in_city\020\001\022\'\n#night_close_w"
    "ith_car_same_direction\020\002\022+\n\'night_no_lam"
    "p_poor_lighting_in_suburban\020\003\022#\n\037night_t"
    "hrough_curve_ramp_bridge\020\004\022\017\n\013fog_drivin"
    "g\020\005\022 \n\034night_passing_in_narrow_road\020\006\022&\n"
    "\"night_passing_nearly_150_other_car\020\007\022\027\n"
    "\023night_car_road_down\020\010\022(\n$night_through_"
    "no_traffic_signal_road\020\t\022(\n$simulation_t"
    "est_done_close_all_light\020\n*\263\001\n!CheckFini"
    "shCarPositionXueXiaoQuYu\022+\n\'XueXiaoQuYu_"
    "Car_Forward_Car_All_In_Zero\020\000\0220\n,XueXiao"
    "QuYu_Car_Forward_Car_Head_HasPts_Four\020\001\022"
    "/\n+XueXiaoQuYu_Car_Forward_Car_End_HasPt"
    "s_Four\020\002*\273\001\n#CheckFinishCarPositionLuKou"
    "ZuoZhuan\022-\n)LuKouZuoZhuan_Car_Forward_Ca"
    "r_All_In_Zero\020\000\0222\n.LuKouZuoZhuan_Car_For"
    "ward_Car_Head_HasPts_Four\020\001\0221\n-LuKouZuoZ"
    "huan_Car_Forward_Car_End_HasPts_Four\020\002*\273"
    "\001\n#CheckFinishCarPositionLuKouYouZhuan\022-"
    "\n)LuKouYouZhuan_Car_Forward_Car_All_In_Z"
    "ero\020\000\0222\n.LuKouYouZhuan_Car_Forward_Car_H"
    "ead_HasPts_Four\020\001\0221\n-LuKouYouZhuan_Car_F"
    "orward_Car_End_HasPts_Four\020\002*\323\001\n)CheckFi"
    "nishCarPositionZhiXianTongGuoLuKou\0223\n/Zh"
    "iXianTongGuoLuKou_Car_Forward_Car_All_In"
    "_Zero\020\000\0228\n4ZhiXianTongGuoLuKou_Car_Forwa"
    "rd_Car_Head_HasPts_Four\020\001\0227\n3ZhiXianTong"
    "GuoLuKou_Car_Forward_Car_End_HasPts_Four"
    "\020\002*\313\001\n\'CheckFinishCarPositionGongGongQiC"
    "heZhan\0221\n-GongGongQiCheZhan_Car_Forward_"
    "Car_All_In_Zero\020\000\0226\n2GongGongQiCheZhan_C"
    "ar_Forward_Car_Head_HasPts_Four\020\001\0225\n1Gon"
    "gGongQiCheZhan_Car_Forward_Car_End_HasPt"
    "s_Four\020\002*\277\001\n$CheckFinishCarPositionRenXi"
    "ngHengDao\022.\n*RenXingHengDao_Car_Forward_"
    "Car_All_In_Zero\020\000\0223\n/RenXingHengDao_Car_"
    "Forward_Car_Head_HasPts_Four\020\001\0222\n.RenXin"
    "gHengDao_Car_Forward_Car_End_HasPts_Four"
    "\020\002*\277\001\n$CheckFinishCarPositionZhiXianXing"
    "Shi\022.\n*ZhiXianXingShi_Car_Forward_Car_Al"
    "l_In_Zero\020\000\0223\n/ZhiXianXingShi_Car_Forwar"
    "d_Car_Head_HasPts_Four\020\001\0222\n.ZhiXianXingS"
    "hi_Car_Forward_Car_End_HasPts_Four\020\002*\224\001\n"
    "\020AddToLimitedGear\022\023\n\017Add_To_One_Gear\020\000\022\023"
    "\n\017Add_To_Two_Gear\020\001\022\025\n\021Add_To_Three_Gear"
    "\020\002\022\024\n\020Add_To_Four_Gear\020\003\022\024\n\020Add_To_Five_"
    "Gear\020\004\022\023\n\017Add_To_Six_Gear\020\005*\251\001\n\023ReduceTo"
    "LimitedGear\022\026\n\022Reduce_To_One_Gear\020\000\022\026\n\022R"
    "educe_To_Two_Gear\020\001\022\030\n\024Reduce_To_Three_G"
    "ear\020\002\022\027\n\023Reduce_To_Four_Gear\020\003\022\027\n\023Reduce"
    "_To_Five_Gear\020\004\022\026\n\022Reduce_To_Six_Gear\020\005*"
    "\243\001\n\035CheckFinishCarPositionDiaoTou\022\'\n#Dia"
    "oTou_Car_Forward_Car_All_In_Zero\020\000\022,\n(Di"
    "aoTou_Car_Forward_Car_Head_HasPts_Four\020\001"
    "\022+\n\'DiaoTou_Car_Forward_Car_End_HasPts_F"
    "our\020\002*\277\001\n$CheckFinishCarPositionBianGeng"
    "CheDao\022.\n*BianGengCheDao_Car_Forward_Car"
    "_All_In_Zero\020\000\0223\n/BianGengCheDao_Car_For"
    "ward_Car_Head_HasPts_Four\020\001\0222\n.BianGengC"
    "heDao_Car_Forward_Car_End_HasPts_Four\020\002*"
    "\243\001\n\035CheckFinishCarPositionChaoChe\022\'\n#Cha"
    "oChe_Car_Forward_Car_All_In_Zero\020\000\022,\n(Ch"
    "aoChe_Car_Forward_Car_Head_HasPts_Four\020\001"
    "\022+\n\'ChaoChe_Car_Forward_Car_End_HasPts_F"
    "our\020\002*p\n\031CheckStartCarPositionZjzw\022&\n\"Zj"
    "zw_Car_Forward_Car_HasPts_In_One\020\000\022+\n\'Zj"
    "zw_Car_Forward_Car_HasPts_In_One_Five\020\001*"
    "\231\001\n\032CheckFinishCarPositionZjzw\022(\n$Zjzw_C"
    "ar_Forward_Car_All_In_Zero_Two\020\000\022(\n$Zjzw"
    "_Car_Forward_Car_Head_HasPts_Two\020\001\022\'\n#Zj"
    "zw_Car_Forward_Car_End_HasPts_Two\020\002*p\n\031C"
    "heckStartCarPositionQxxs\022&\n\"Qxxs_Car_For"
    "ward_Car_HasPts_In_One\020\000\022+\n\'Qxxs_Car_For"
    "ward_Car_HasPts_In_One_Five\020\001*\231\001\n\032CheckF"
    "inishCarPositionQxxs\022(\n$Qxxs_Car_Forward"
    "_Car_All_In_Zero_Two\020\000\022(\n$Qxxs_Car_Forwa"
    "rd_Car_Head_HasPts_Two\020\001\022\'\n#Qxxs_Car_For"
    "ward_Car_End_HasPts_Two\020\002*\357\001\n\031CheckStart"
    "CarPositionCftc\022&\n\"Cftc_Car_Forward_Car_"
    "HasPts_In_One\020\000\022\036\n\032Cftc_Car_Stop_In_Two_"
    "Eight\020\001\022\"\n\036Cftc_Car_Back_Car_In_Two_Eigh"
    "t\020\002\022\035\n\031Cftc_Car_Head_In_Two_Back\020\003\022&\n\"Cf"
    "tc_Car_Forward_Car_HasPts_In_Two\020\004\022\037\n\033Cf"
    "tc_Car_Back_Car_Leave_Two\020\005*\247\002\n\032CheckFin"
    "ishCarPositionCftc\022%\n!Cftc_Car_Forward_C"
    "ar_HasPts_Eight\020\000\022!\n\035Cftc_Car_Forward_Wh"
    "en_Car_End\020\001\022\036\n\032Cftc_Car_Stop_When_Car_E"
    "nd\020\002\022(\n$Cftc_Car_Forward_Car_All_In_Zero"
    "_Two\020\003\022(\n$Cftc_Car_Forward_Car_Head_HasP"
    "ts_Two\020\004\022\'\n#Cftc_Car_Forward_Car_End_Has"
    "Pts_Two\020\005\022\"\n\036Cftc_Car_Forward_Car_Leave_"
    "Six\020\006*C\n\031CheckStartCarPositionSpqb\022&\n\"Sp"
    "qb_Car_Forward_Car_HasPts_In_One\020\000*\276\001\n\032C"
    "heckFinishCarPositionSpqb\022#\n\037Spqb_Car_Fo"
    "rward_When_Car_CKing\020\000\022(\n$Spqb_Car_Forwa"
    "rd_Car_All_In_Zero_Two\020\001\022(\n$Spqb_Car_For"
    "ward_Car_Head_HasPts_Two\020\002\022\'\n#Spqb_Car_F"
    "orward_Car_End_HasPts_Two\020\003*\315\001\n\031CheckSta"
    "rtCarPositionDcrk\022&\n\"Dcrk_Car_Forward_Ca"
    "r_HasPts_In_One\020\000\022 \n\034Dcrk_Car_Back_Car_I"
    "n_Two_Ten\020\001\022\035\n\031Dcrk_Car_Head_In_Two_Back"
    "\020\002\022&\n\"Dcrk_Car_Forward_Car_HasPts_In_Two"
    "\020\003\022\037\n\033Dcrk_Car_Back_Car_Leave_Two\020\004*\231\001\n\032"
    "CheckFinishCarPositionDcrk\022(\n$Dcrk_Car_F"
    "orward_Car_All_In_Zero_Two\020\000\022(\n$Dcrk_Car"
    "_Forward_Car_Head_HasPts_Two\020\001\022\'\n#Dcrk_C"
    "ar_Forward_Car_End_HasPts_Two\020\002", 30151);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageJkConfig.proto", &protobuf_RegisterTypes);
  SoftwareStartInfo::default_instance_ = new SoftwareStartInfo();
  OtherConfigInfo::default_instance_ = new OtherConfigInfo();
  ConfigPhysicSensor::default_instance_ = new ConfigPhysicSensor();
  JudgeItemInfo::default_instance_ = new JudgeItemInfo();
  ConfigInfoBasic::_default_com_gps_ =
      new ::std::string("COM1", 4);
  ConfigInfoBasic::_default_com_sensor_ =
      new ::std::string("COM2", 4);
  ConfigInfoBasic::_default_com_printer_ =
      new ::std::string("COM3", 4);
  ConfigInfoBasic::default_instance_ = new ConfigInfoBasic();
  BasicSafety::default_instance_ = new BasicSafety();
  BasicDoor::default_instance_ = new BasicDoor();
  BasicHorn::default_instance_ = new BasicHorn();
  BasicFlameout::default_instance_ = new BasicFlameout();
  BasicFullLine::default_instance_ = new BasicFullLine();
  BasicDottedLine::default_instance_ = new BasicDottedLine();
  BasicLeftTurnLamp::default_instance_ = new BasicLeftTurnLamp();
  BasicRightTurnLamp::default_instance_ = new BasicRightTurnLamp();
  BasicCarStop::default_instance_ = new BasicCarStop();
  BasicHandBrake::default_instance_ = new BasicHandBrake();
  BasicTimeout::default_instance_ = new BasicTimeout();
  BasicClutch::default_instance_ = new BasicClutch();
  BasicRoundCar::default_instance_ = new BasicRoundCar();
  BasicSlowDown::default_instance_ = new BasicSlowDown();
  BasicFireUp::default_instance_ = new BasicFireUp();
  BasicSeat::default_instance_ = new BasicSeat();
  BasicLeftMirror::default_instance_ = new BasicLeftMirror();
  BasicMiddleMirror::default_instance_ = new BasicMiddleMirror();
  BasicRightMirror::default_instance_ = new BasicRightMirror();
  ItemJudgeDistance::default_instance_ = new ItemJudgeDistance();
  ItemJudgeTime::default_instance_ = new ItemJudgeTime();
  ItemJudgeSpeed::default_instance_ = new ItemJudgeSpeed();
  ItemJudgeBasic::default_instance_ = new ItemJudgeBasic();
  GlobalJudgeRule::default_instance_ = new GlobalJudgeRule();
  ItemJudgeRuleZero::default_instance_ = new ItemJudgeRuleZero();
  ItemJudgeRuleDk::default_instance_ = new ItemJudgeRuleDk();
  ItemJudgeRuleShangCheZhunBei::default_instance_ = new ItemJudgeRuleShangCheZhunBei();
  BasicDengGuangMoNiItem::default_instance_ = new BasicDengGuangMoNiItem();
  ItemJudgeRuleDengGuangMoNi::default_instance_ = new ItemJudgeRuleDengGuangMoNi();
  ItemJudgeRuleQiBu::default_instance_ = new ItemJudgeRuleQiBu();
  ItemJudgeRuleKaoBianTingChe::default_instance_ = new ItemJudgeRuleKaoBianTingChe();
  ItemJudgeRuleXueXiaoQuYu::default_instance_ = new ItemJudgeRuleXueXiaoQuYu();
  ItemJudgeRuleLuKouZuoZhuan::default_instance_ = new ItemJudgeRuleLuKouZuoZhuan();
  ItemJudgeRuleLuKouYouZhuan::default_instance_ = new ItemJudgeRuleLuKouYouZhuan();
  ItemJudgeRuleZhiXianTongGuoLuKou::default_instance_ = new ItemJudgeRuleZhiXianTongGuoLuKou();
  ItemJudgeRuleGongGongQiCheZhan::default_instance_ = new ItemJudgeRuleGongGongQiCheZhan();
  ItemJudgeRuleRenXingHengDao::default_instance_ = new ItemJudgeRuleRenXingHengDao();
  ItemJudgeRuleZhiXianXingShi::default_instance_ = new ItemJudgeRuleZhiXianXingShi();
  ItemJudgeRuleJiaJianDang::default_instance_ = new ItemJudgeRuleJiaJianDang();
  ItemJudgeRuleDiaoTou::default_instance_ = new ItemJudgeRuleDiaoTou();
  ItemJudgeRuleBianGengCheDao::default_instance_ = new ItemJudgeRuleBianGengCheDao();
  ItemJudgeRuleChaoChe::default_instance_ = new ItemJudgeRuleChaoChe();
  ItemJudgeRuleHuiChe::default_instance_ = new ItemJudgeRuleHuiChe();
  ItemJudgeRuleZjzw::default_instance_ = new ItemJudgeRuleZjzw();
  ItemJudgeRuleQxxs::default_instance_ = new ItemJudgeRuleQxxs();
  CftcPressLine::default_instance_ = new CftcPressLine();
  ItemJudgeRuleCftc::default_instance_ = new ItemJudgeRuleCftc();
  ItemJudgeRuleSpqb::default_instance_ = new ItemJudgeRuleSpqb();
  DcrkPressLine::default_instance_ = new DcrkPressLine();
  ItemJudgeRuleDcrk::default_instance_ = new ItemJudgeRuleDcrk();
  ItemsJudgeRules::default_instance_ = new ItemsJudgeRules();
  CoreInfo::default_instance_ = new CoreInfo();
  SoftwareStartInfo::default_instance_->InitAsDefaultInstance();
  OtherConfigInfo::default_instance_->InitAsDefaultInstance();
  ConfigPhysicSensor::default_instance_->InitAsDefaultInstance();
  JudgeItemInfo::default_instance_->InitAsDefaultInstance();
  ConfigInfoBasic::default_instance_->InitAsDefaultInstance();
  BasicSafety::default_instance_->InitAsDefaultInstance();
  BasicDoor::default_instance_->InitAsDefaultInstance();
  BasicHorn::default_instance_->InitAsDefaultInstance();
  BasicFlameout::default_instance_->InitAsDefaultInstance();
  BasicFullLine::default_instance_->InitAsDefaultInstance();
  BasicDottedLine::default_instance_->InitAsDefaultInstance();
  BasicLeftTurnLamp::default_instance_->InitAsDefaultInstance();
  BasicRightTurnLamp::default_instance_->InitAsDefaultInstance();
  BasicCarStop::default_instance_->InitAsDefaultInstance();
  BasicHandBrake::default_instance_->InitAsDefaultInstance();
  BasicTimeout::default_instance_->InitAsDefaultInstance();
  BasicClutch::default_instance_->InitAsDefaultInstance();
  BasicRoundCar::default_instance_->InitAsDefaultInstance();
  BasicSlowDown::default_instance_->InitAsDefaultInstance();
  BasicFireUp::default_instance_->InitAsDefaultInstance();
  BasicSeat::default_instance_->InitAsDefaultInstance();
  BasicLeftMirror::default_instance_->InitAsDefaultInstance();
  BasicMiddleMirror::default_instance_->InitAsDefaultInstance();
  BasicRightMirror::default_instance_->InitAsDefaultInstance();
  ItemJudgeDistance::default_instance_->InitAsDefaultInstance();
  ItemJudgeTime::default_instance_->InitAsDefaultInstance();
  ItemJudgeSpeed::default_instance_->InitAsDefaultInstance();
  ItemJudgeBasic::default_instance_->InitAsDefaultInstance();
  GlobalJudgeRule::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleZero::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleDk::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleShangCheZhunBei::default_instance_->InitAsDefaultInstance();
  BasicDengGuangMoNiItem::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleDengGuangMoNi::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleQiBu::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleKaoBianTingChe::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleXueXiaoQuYu::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleLuKouZuoZhuan::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleLuKouYouZhuan::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleZhiXianTongGuoLuKou::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleGongGongQiCheZhan::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleRenXingHengDao::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleZhiXianXingShi::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleJiaJianDang::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleDiaoTou::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleBianGengCheDao::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleChaoChe::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleHuiChe::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleZjzw::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleQxxs::default_instance_->InitAsDefaultInstance();
  CftcPressLine::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleCftc::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleSpqb::default_instance_->InitAsDefaultInstance();
  DcrkPressLine::default_instance_->InitAsDefaultInstance();
  ItemJudgeRuleDcrk::default_instance_->InitAsDefaultInstance();
  ItemsJudgeRules::default_instance_->InitAsDefaultInstance();
  CoreInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageJkConfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageJkConfig_2eproto {
  StaticDescriptorInitializer_MessageJkConfig_2eproto() {
    protobuf_AddDesc_MessageJkConfig_2eproto();
  }
} static_descriptor_initializer_MessageJkConfig_2eproto_;
const ::google::protobuf::EnumDescriptor* enum_physic_sensor_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return enum_physic_sensor_descriptor_;
}
bool enum_physic_sensor_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* enum_judge_retake_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return enum_judge_retake_descriptor_;
}
bool enum_judge_retake_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* enum_judge_points_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return enum_judge_points_descriptor_;
}
bool enum_judge_points_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckStartTypeStart_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckStartTypeStart_descriptor_;
}
bool CheckStartTypeStart_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* enum_judge_dengguangmoni_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return enum_judge_dengguangmoni_type_descriptor_;
}
bool enum_judge_dengguangmoni_type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionXueXiaoQuYu_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionXueXiaoQuYu_descriptor_;
}
bool CheckFinishCarPositionXueXiaoQuYu_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionLuKouZuoZhuan_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionLuKouZuoZhuan_descriptor_;
}
bool CheckFinishCarPositionLuKouZuoZhuan_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionLuKouYouZhuan_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionLuKouYouZhuan_descriptor_;
}
bool CheckFinishCarPositionLuKouYouZhuan_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionZhiXianTongGuoLuKou_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionZhiXianTongGuoLuKou_descriptor_;
}
bool CheckFinishCarPositionZhiXianTongGuoLuKou_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionGongGongQiCheZhan_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionGongGongQiCheZhan_descriptor_;
}
bool CheckFinishCarPositionGongGongQiCheZhan_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionRenXingHengDao_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionRenXingHengDao_descriptor_;
}
bool CheckFinishCarPositionRenXingHengDao_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionZhiXianXingShi_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionZhiXianXingShi_descriptor_;
}
bool CheckFinishCarPositionZhiXianXingShi_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AddToLimitedGear_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddToLimitedGear_descriptor_;
}
bool AddToLimitedGear_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ReduceToLimitedGear_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReduceToLimitedGear_descriptor_;
}
bool ReduceToLimitedGear_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionDiaoTou_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionDiaoTou_descriptor_;
}
bool CheckFinishCarPositionDiaoTou_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionBianGengCheDao_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionBianGengCheDao_descriptor_;
}
bool CheckFinishCarPositionBianGengCheDao_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionChaoChe_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionChaoChe_descriptor_;
}
bool CheckFinishCarPositionChaoChe_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckStartCarPositionZjzw_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckStartCarPositionZjzw_descriptor_;
}
bool CheckStartCarPositionZjzw_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionZjzw_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionZjzw_descriptor_;
}
bool CheckFinishCarPositionZjzw_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckStartCarPositionQxxs_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckStartCarPositionQxxs_descriptor_;
}
bool CheckStartCarPositionQxxs_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionQxxs_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionQxxs_descriptor_;
}
bool CheckFinishCarPositionQxxs_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckStartCarPositionCftc_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckStartCarPositionCftc_descriptor_;
}
bool CheckStartCarPositionCftc_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionCftc_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionCftc_descriptor_;
}
bool CheckFinishCarPositionCftc_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckStartCarPositionSpqb_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckStartCarPositionSpqb_descriptor_;
}
bool CheckStartCarPositionSpqb_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionSpqb_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionSpqb_descriptor_;
}
bool CheckFinishCarPositionSpqb_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckStartCarPositionDcrk_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckStartCarPositionDcrk_descriptor_;
}
bool CheckStartCarPositionDcrk_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CheckFinishCarPositionDcrk_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckFinishCarPositionDcrk_descriptor_;
}
bool CheckFinishCarPositionDcrk_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SoftwareStartInfo::kAppStartSoundFieldNumber;
const int SoftwareStartInfo::kAppRunModeXlFieldNumber;
const int SoftwareStartInfo::kAppRunModeMnFieldNumber;
const int SoftwareStartInfo::kAppRunModeKsFieldNumber;
const int SoftwareStartInfo::kAppRunServerMonitorFieldNumber;
const int SoftwareStartInfo::kAppRunServerMonitorIpFieldNumber;
const int SoftwareStartInfo::kAppRunServerMonitorPortFieldNumber;
const int SoftwareStartInfo::kWhetherUseIccardFieldNumber;
const int SoftwareStartInfo::kAppSoundRateFieldNumber;
const int SoftwareStartInfo::kWhetherUseSecondIdcardFieldNumber;
const int SoftwareStartInfo::kSecondidVerificationNetFailVoiceFieldNumber;
const int SoftwareStartInfo::kSecondidVerificationWaitingVoiceFieldNumber;
const int SoftwareStartInfo::kSecondidVerificationRoundStartedVoiceFieldNumber;
const int SoftwareStartInfo::kSecondidVerificationRegistrationUnvalidVoiceFieldNumber;
const int SoftwareStartInfo::kSecondidVerificationRegistrationValidVoiceFieldNumber;
const int SoftwareStartInfo::kSecondidVerificationTimeoutVoiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SoftwareStartInfo::SoftwareStartInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.SoftwareStartInfo)
}

void SoftwareStartInfo::InitAsDefaultInstance() {
}

SoftwareStartInfo::SoftwareStartInfo(const SoftwareStartInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.SoftwareStartInfo)
}

void SoftwareStartInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  app_start_sound_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_run_mode_xl_ = false;
  app_run_mode_mn_ = false;
  app_run_mode_ks_ = false;
  app_run_server_monitor_ = false;
  app_run_server_monitor_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_run_server_monitor_port_ = 0;
  whether_use_iccard_ = false;
  app_sound_rate_ = 0;
  whether_use_second_idcard_ = false;
  secondid_verification_net_fail_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secondid_verification_waiting_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secondid_verification_round_started_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secondid_verification_registration_unvalid_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secondid_verification_registration_valid_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secondid_verification_timeout_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SoftwareStartInfo::~SoftwareStartInfo() {
  // @@protoc_insertion_point(destructor:OPMessage.SoftwareStartInfo)
  SharedDtor();
}

void SoftwareStartInfo::SharedDtor() {
  app_start_sound_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_run_server_monitor_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secondid_verification_net_fail_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secondid_verification_waiting_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secondid_verification_round_started_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secondid_verification_registration_unvalid_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secondid_verification_registration_valid_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secondid_verification_timeout_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SoftwareStartInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SoftwareStartInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SoftwareStartInfo_descriptor_;
}

const SoftwareStartInfo& SoftwareStartInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

SoftwareStartInfo* SoftwareStartInfo::default_instance_ = NULL;

SoftwareStartInfo* SoftwareStartInfo::New(::google::protobuf::Arena* arena) const {
  SoftwareStartInfo* n = new SoftwareStartInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SoftwareStartInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.SoftwareStartInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SoftwareStartInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SoftwareStartInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(app_run_mode_xl_, app_run_server_monitor_port_);
    if (has_app_start_sound()) {
      app_start_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_app_run_server_monitor_ip()) {
      app_run_server_monitor_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    whether_use_iccard_ = false;
  }
  if (_has_bits_[8 / 32] & 65280u) {
    app_sound_rate_ = 0;
    whether_use_second_idcard_ = false;
    if (has_secondid_verification_net_fail_voice()) {
      secondid_verification_net_fail_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_secondid_verification_waiting_voice()) {
      secondid_verification_waiting_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_secondid_verification_round_started_voice()) {
      secondid_verification_round_started_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_secondid_verification_registration_unvalid_voice()) {
      secondid_verification_registration_unvalid_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_secondid_verification_registration_valid_voice()) {
      secondid_verification_registration_valid_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_secondid_verification_timeout_voice()) {
      secondid_verification_timeout_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SoftwareStartInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.SoftwareStartInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app_start_sound = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_start_sound()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app_start_sound().data(), this->app_start_sound().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.SoftwareStartInfo.app_start_sound");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_app_run_mode_xl;
        break;
      }

      // optional bool app_run_mode_xl = 2;
      case 2: {
        if (tag == 16) {
         parse_app_run_mode_xl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &app_run_mode_xl_)));
          set_has_app_run_mode_xl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_app_run_mode_mn;
        break;
      }

      // optional bool app_run_mode_mn = 3;
      case 3: {
        if (tag == 24) {
         parse_app_run_mode_mn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &app_run_mode_mn_)));
          set_has_app_run_mode_mn();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_app_run_mode_ks;
        break;
      }

      // optional bool app_run_mode_ks = 4;
      case 4: {
        if (tag == 32) {
         parse_app_run_mode_ks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &app_run_mode_ks_)));
          set_has_app_run_mode_ks();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_app_run_server_monitor;
        break;
      }

      // optional bool app_run_server_monitor = 5;
      case 5: {
        if (tag == 40) {
         parse_app_run_server_monitor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &app_run_server_monitor_)));
          set_has_app_run_server_monitor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_app_run_server_monitor_ip;
        break;
      }

      // optional string app_run_server_monitor_ip = 6;
      case 6: {
        if (tag == 50) {
         parse_app_run_server_monitor_ip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_run_server_monitor_ip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app_run_server_monitor_ip().data(), this->app_run_server_monitor_ip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.SoftwareStartInfo.app_run_server_monitor_ip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_app_run_server_monitor_port;
        break;
      }

      // optional int32 app_run_server_monitor_port = 7;
      case 7: {
        if (tag == 56) {
         parse_app_run_server_monitor_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &app_run_server_monitor_port_)));
          set_has_app_run_server_monitor_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_whether_use_iccard;
        break;
      }

      // optional bool whether_use_iccard = 8;
      case 8: {
        if (tag == 64) {
         parse_whether_use_iccard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &whether_use_iccard_)));
          set_has_whether_use_iccard();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_app_sound_rate;
        break;
      }

      // optional int32 app_sound_rate = 9;
      case 9: {
        if (tag == 72) {
         parse_app_sound_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &app_sound_rate_)));
          set_has_app_sound_rate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_whether_use_second_idcard;
        break;
      }

      // optional bool whether_use_second_idcard = 10;
      case 10: {
        if (tag == 80) {
         parse_whether_use_second_idcard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &whether_use_second_idcard_)));
          set_has_whether_use_second_idcard();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_secondid_verification_net_fail_voice;
        break;
      }

      // optional string secondid_verification_net_fail_voice = 11;
      case 11: {
        if (tag == 90) {
         parse_secondid_verification_net_fail_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secondid_verification_net_fail_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->secondid_verification_net_fail_voice().data(), this->secondid_verification_net_fail_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_secondid_verification_waiting_voice;
        break;
      }

      // optional string secondid_verification_waiting_voice = 12;
      case 12: {
        if (tag == 98) {
         parse_secondid_verification_waiting_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secondid_verification_waiting_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->secondid_verification_waiting_voice().data(), this->secondid_verification_waiting_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_secondid_verification_round_started_voice;
        break;
      }

      // optional string secondid_verification_round_started_voice = 13;
      case 13: {
        if (tag == 106) {
         parse_secondid_verification_round_started_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secondid_verification_round_started_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->secondid_verification_round_started_voice().data(), this->secondid_verification_round_started_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_secondid_verification_registration_unvalid_voice;
        break;
      }

      // optional string secondid_verification_registration_unvalid_voice = 14;
      case 14: {
        if (tag == 114) {
         parse_secondid_verification_registration_unvalid_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secondid_verification_registration_unvalid_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->secondid_verification_registration_unvalid_voice().data(), this->secondid_verification_registration_unvalid_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_secondid_verification_registration_valid_voice;
        break;
      }

      // optional string secondid_verification_registration_valid_voice = 15;
      case 15: {
        if (tag == 122) {
         parse_secondid_verification_registration_valid_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secondid_verification_registration_valid_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->secondid_verification_registration_valid_voice().data(), this->secondid_verification_registration_valid_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_secondid_verification_timeout_voice;
        break;
      }

      // optional string secondid_verification_timeout_voice = 16;
      case 16: {
        if (tag == 130) {
         parse_secondid_verification_timeout_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_secondid_verification_timeout_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->secondid_verification_timeout_voice().data(), this->secondid_verification_timeout_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.SoftwareStartInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.SoftwareStartInfo)
  return false;
#undef DO_
}

void SoftwareStartInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.SoftwareStartInfo)
  // optional string app_start_sound = 1;
  if (has_app_start_sound()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_start_sound().data(), this->app_start_sound().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.app_start_sound");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_start_sound(), output);
  }

  // optional bool app_run_mode_xl = 2;
  if (has_app_run_mode_xl()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->app_run_mode_xl(), output);
  }

  // optional bool app_run_mode_mn = 3;
  if (has_app_run_mode_mn()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->app_run_mode_mn(), output);
  }

  // optional bool app_run_mode_ks = 4;
  if (has_app_run_mode_ks()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->app_run_mode_ks(), output);
  }

  // optional bool app_run_server_monitor = 5;
  if (has_app_run_server_monitor()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->app_run_server_monitor(), output);
  }

  // optional string app_run_server_monitor_ip = 6;
  if (has_app_run_server_monitor_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_run_server_monitor_ip().data(), this->app_run_server_monitor_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.app_run_server_monitor_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->app_run_server_monitor_ip(), output);
  }

  // optional int32 app_run_server_monitor_port = 7;
  if (has_app_run_server_monitor_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->app_run_server_monitor_port(), output);
  }

  // optional bool whether_use_iccard = 8;
  if (has_whether_use_iccard()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->whether_use_iccard(), output);
  }

  // optional int32 app_sound_rate = 9;
  if (has_app_sound_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->app_sound_rate(), output);
  }

  // optional bool whether_use_second_idcard = 10;
  if (has_whether_use_second_idcard()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->whether_use_second_idcard(), output);
  }

  // optional string secondid_verification_net_fail_voice = 11;
  if (has_secondid_verification_net_fail_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondid_verification_net_fail_voice().data(), this->secondid_verification_net_fail_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->secondid_verification_net_fail_voice(), output);
  }

  // optional string secondid_verification_waiting_voice = 12;
  if (has_secondid_verification_waiting_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondid_verification_waiting_voice().data(), this->secondid_verification_waiting_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->secondid_verification_waiting_voice(), output);
  }

  // optional string secondid_verification_round_started_voice = 13;
  if (has_secondid_verification_round_started_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondid_verification_round_started_voice().data(), this->secondid_verification_round_started_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->secondid_verification_round_started_voice(), output);
  }

  // optional string secondid_verification_registration_unvalid_voice = 14;
  if (has_secondid_verification_registration_unvalid_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondid_verification_registration_unvalid_voice().data(), this->secondid_verification_registration_unvalid_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->secondid_verification_registration_unvalid_voice(), output);
  }

  // optional string secondid_verification_registration_valid_voice = 15;
  if (has_secondid_verification_registration_valid_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondid_verification_registration_valid_voice().data(), this->secondid_verification_registration_valid_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->secondid_verification_registration_valid_voice(), output);
  }

  // optional string secondid_verification_timeout_voice = 16;
  if (has_secondid_verification_timeout_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondid_verification_timeout_voice().data(), this->secondid_verification_timeout_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->secondid_verification_timeout_voice(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.SoftwareStartInfo)
}

::google::protobuf::uint8* SoftwareStartInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.SoftwareStartInfo)
  // optional string app_start_sound = 1;
  if (has_app_start_sound()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_start_sound().data(), this->app_start_sound().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.app_start_sound");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_start_sound(), target);
  }

  // optional bool app_run_mode_xl = 2;
  if (has_app_run_mode_xl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->app_run_mode_xl(), target);
  }

  // optional bool app_run_mode_mn = 3;
  if (has_app_run_mode_mn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->app_run_mode_mn(), target);
  }

  // optional bool app_run_mode_ks = 4;
  if (has_app_run_mode_ks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->app_run_mode_ks(), target);
  }

  // optional bool app_run_server_monitor = 5;
  if (has_app_run_server_monitor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->app_run_server_monitor(), target);
  }

  // optional string app_run_server_monitor_ip = 6;
  if (has_app_run_server_monitor_ip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_run_server_monitor_ip().data(), this->app_run_server_monitor_ip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.app_run_server_monitor_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->app_run_server_monitor_ip(), target);
  }

  // optional int32 app_run_server_monitor_port = 7;
  if (has_app_run_server_monitor_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->app_run_server_monitor_port(), target);
  }

  // optional bool whether_use_iccard = 8;
  if (has_whether_use_iccard()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->whether_use_iccard(), target);
  }

  // optional int32 app_sound_rate = 9;
  if (has_app_sound_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->app_sound_rate(), target);
  }

  // optional bool whether_use_second_idcard = 10;
  if (has_whether_use_second_idcard()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->whether_use_second_idcard(), target);
  }

  // optional string secondid_verification_net_fail_voice = 11;
  if (has_secondid_verification_net_fail_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondid_verification_net_fail_voice().data(), this->secondid_verification_net_fail_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->secondid_verification_net_fail_voice(), target);
  }

  // optional string secondid_verification_waiting_voice = 12;
  if (has_secondid_verification_waiting_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondid_verification_waiting_voice().data(), this->secondid_verification_waiting_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->secondid_verification_waiting_voice(), target);
  }

  // optional string secondid_verification_round_started_voice = 13;
  if (has_secondid_verification_round_started_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondid_verification_round_started_voice().data(), this->secondid_verification_round_started_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->secondid_verification_round_started_voice(), target);
  }

  // optional string secondid_verification_registration_unvalid_voice = 14;
  if (has_secondid_verification_registration_unvalid_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondid_verification_registration_unvalid_voice().data(), this->secondid_verification_registration_unvalid_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->secondid_verification_registration_unvalid_voice(), target);
  }

  // optional string secondid_verification_registration_valid_voice = 15;
  if (has_secondid_verification_registration_valid_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondid_verification_registration_valid_voice().data(), this->secondid_verification_registration_valid_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->secondid_verification_registration_valid_voice(), target);
  }

  // optional string secondid_verification_timeout_voice = 16;
  if (has_secondid_verification_timeout_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->secondid_verification_timeout_voice().data(), this->secondid_verification_timeout_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->secondid_verification_timeout_voice(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.SoftwareStartInfo)
  return target;
}

int SoftwareStartInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.SoftwareStartInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string app_start_sound = 1;
    if (has_app_start_sound()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app_start_sound());
    }

    // optional bool app_run_mode_xl = 2;
    if (has_app_run_mode_xl()) {
      total_size += 1 + 1;
    }

    // optional bool app_run_mode_mn = 3;
    if (has_app_run_mode_mn()) {
      total_size += 1 + 1;
    }

    // optional bool app_run_mode_ks = 4;
    if (has_app_run_mode_ks()) {
      total_size += 1 + 1;
    }

    // optional bool app_run_server_monitor = 5;
    if (has_app_run_server_monitor()) {
      total_size += 1 + 1;
    }

    // optional string app_run_server_monitor_ip = 6;
    if (has_app_run_server_monitor_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app_run_server_monitor_ip());
    }

    // optional int32 app_run_server_monitor_port = 7;
    if (has_app_run_server_monitor_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->app_run_server_monitor_port());
    }

    // optional bool whether_use_iccard = 8;
    if (has_whether_use_iccard()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 app_sound_rate = 9;
    if (has_app_sound_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->app_sound_rate());
    }

    // optional bool whether_use_second_idcard = 10;
    if (has_whether_use_second_idcard()) {
      total_size += 1 + 1;
    }

    // optional string secondid_verification_net_fail_voice = 11;
    if (has_secondid_verification_net_fail_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secondid_verification_net_fail_voice());
    }

    // optional string secondid_verification_waiting_voice = 12;
    if (has_secondid_verification_waiting_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secondid_verification_waiting_voice());
    }

    // optional string secondid_verification_round_started_voice = 13;
    if (has_secondid_verification_round_started_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secondid_verification_round_started_voice());
    }

    // optional string secondid_verification_registration_unvalid_voice = 14;
    if (has_secondid_verification_registration_unvalid_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secondid_verification_registration_unvalid_voice());
    }

    // optional string secondid_verification_registration_valid_voice = 15;
    if (has_secondid_verification_registration_valid_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secondid_verification_registration_valid_voice());
    }

    // optional string secondid_verification_timeout_voice = 16;
    if (has_secondid_verification_timeout_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->secondid_verification_timeout_voice());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SoftwareStartInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.SoftwareStartInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SoftwareStartInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SoftwareStartInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.SoftwareStartInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.SoftwareStartInfo)
    MergeFrom(*source);
  }
}

void SoftwareStartInfo::MergeFrom(const SoftwareStartInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.SoftwareStartInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_app_start_sound()) {
      set_has_app_start_sound();
      app_start_sound_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_start_sound_);
    }
    if (from.has_app_run_mode_xl()) {
      set_app_run_mode_xl(from.app_run_mode_xl());
    }
    if (from.has_app_run_mode_mn()) {
      set_app_run_mode_mn(from.app_run_mode_mn());
    }
    if (from.has_app_run_mode_ks()) {
      set_app_run_mode_ks(from.app_run_mode_ks());
    }
    if (from.has_app_run_server_monitor()) {
      set_app_run_server_monitor(from.app_run_server_monitor());
    }
    if (from.has_app_run_server_monitor_ip()) {
      set_has_app_run_server_monitor_ip();
      app_run_server_monitor_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_run_server_monitor_ip_);
    }
    if (from.has_app_run_server_monitor_port()) {
      set_app_run_server_monitor_port(from.app_run_server_monitor_port());
    }
    if (from.has_whether_use_iccard()) {
      set_whether_use_iccard(from.whether_use_iccard());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_app_sound_rate()) {
      set_app_sound_rate(from.app_sound_rate());
    }
    if (from.has_whether_use_second_idcard()) {
      set_whether_use_second_idcard(from.whether_use_second_idcard());
    }
    if (from.has_secondid_verification_net_fail_voice()) {
      set_has_secondid_verification_net_fail_voice();
      secondid_verification_net_fail_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secondid_verification_net_fail_voice_);
    }
    if (from.has_secondid_verification_waiting_voice()) {
      set_has_secondid_verification_waiting_voice();
      secondid_verification_waiting_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secondid_verification_waiting_voice_);
    }
    if (from.has_secondid_verification_round_started_voice()) {
      set_has_secondid_verification_round_started_voice();
      secondid_verification_round_started_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secondid_verification_round_started_voice_);
    }
    if (from.has_secondid_verification_registration_unvalid_voice()) {
      set_has_secondid_verification_registration_unvalid_voice();
      secondid_verification_registration_unvalid_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secondid_verification_registration_unvalid_voice_);
    }
    if (from.has_secondid_verification_registration_valid_voice()) {
      set_has_secondid_verification_registration_valid_voice();
      secondid_verification_registration_valid_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secondid_verification_registration_valid_voice_);
    }
    if (from.has_secondid_verification_timeout_voice()) {
      set_has_secondid_verification_timeout_voice();
      secondid_verification_timeout_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secondid_verification_timeout_voice_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SoftwareStartInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.SoftwareStartInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SoftwareStartInfo::CopyFrom(const SoftwareStartInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.SoftwareStartInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoftwareStartInfo::IsInitialized() const {

  return true;
}

void SoftwareStartInfo::Swap(SoftwareStartInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SoftwareStartInfo::InternalSwap(SoftwareStartInfo* other) {
  app_start_sound_.Swap(&other->app_start_sound_);
  std::swap(app_run_mode_xl_, other->app_run_mode_xl_);
  std::swap(app_run_mode_mn_, other->app_run_mode_mn_);
  std::swap(app_run_mode_ks_, other->app_run_mode_ks_);
  std::swap(app_run_server_monitor_, other->app_run_server_monitor_);
  app_run_server_monitor_ip_.Swap(&other->app_run_server_monitor_ip_);
  std::swap(app_run_server_monitor_port_, other->app_run_server_monitor_port_);
  std::swap(whether_use_iccard_, other->whether_use_iccard_);
  std::swap(app_sound_rate_, other->app_sound_rate_);
  std::swap(whether_use_second_idcard_, other->whether_use_second_idcard_);
  secondid_verification_net_fail_voice_.Swap(&other->secondid_verification_net_fail_voice_);
  secondid_verification_waiting_voice_.Swap(&other->secondid_verification_waiting_voice_);
  secondid_verification_round_started_voice_.Swap(&other->secondid_verification_round_started_voice_);
  secondid_verification_registration_unvalid_voice_.Swap(&other->secondid_verification_registration_unvalid_voice_);
  secondid_verification_registration_valid_voice_.Swap(&other->secondid_verification_registration_valid_voice_);
  secondid_verification_timeout_voice_.Swap(&other->secondid_verification_timeout_voice_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SoftwareStartInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SoftwareStartInfo_descriptor_;
  metadata.reflection = SoftwareStartInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SoftwareStartInfo

// optional string app_start_sound = 1;
bool SoftwareStartInfo::has_app_start_sound() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SoftwareStartInfo::set_has_app_start_sound() {
  _has_bits_[0] |= 0x00000001u;
}
void SoftwareStartInfo::clear_has_app_start_sound() {
  _has_bits_[0] &= ~0x00000001u;
}
void SoftwareStartInfo::clear_app_start_sound() {
  app_start_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_start_sound();
}
 const ::std::string& SoftwareStartInfo::app_start_sound() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_start_sound)
  return app_start_sound_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_app_start_sound(const ::std::string& value) {
  set_has_app_start_sound();
  app_start_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_start_sound)
}
 void SoftwareStartInfo::set_app_start_sound(const char* value) {
  set_has_app_start_sound();
  app_start_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.app_start_sound)
}
 void SoftwareStartInfo::set_app_start_sound(const char* value, size_t size) {
  set_has_app_start_sound();
  app_start_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.app_start_sound)
}
 ::std::string* SoftwareStartInfo::mutable_app_start_sound() {
  set_has_app_start_sound();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.app_start_sound)
  return app_start_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SoftwareStartInfo::release_app_start_sound() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.app_start_sound)
  clear_has_app_start_sound();
  return app_start_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_allocated_app_start_sound(::std::string* app_start_sound) {
  if (app_start_sound != NULL) {
    set_has_app_start_sound();
  } else {
    clear_has_app_start_sound();
  }
  app_start_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_start_sound);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.app_start_sound)
}

// optional bool app_run_mode_xl = 2;
bool SoftwareStartInfo::has_app_run_mode_xl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SoftwareStartInfo::set_has_app_run_mode_xl() {
  _has_bits_[0] |= 0x00000002u;
}
void SoftwareStartInfo::clear_has_app_run_mode_xl() {
  _has_bits_[0] &= ~0x00000002u;
}
void SoftwareStartInfo::clear_app_run_mode_xl() {
  app_run_mode_xl_ = false;
  clear_has_app_run_mode_xl();
}
 bool SoftwareStartInfo::app_run_mode_xl() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_run_mode_xl)
  return app_run_mode_xl_;
}
 void SoftwareStartInfo::set_app_run_mode_xl(bool value) {
  set_has_app_run_mode_xl();
  app_run_mode_xl_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_run_mode_xl)
}

// optional bool app_run_mode_mn = 3;
bool SoftwareStartInfo::has_app_run_mode_mn() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SoftwareStartInfo::set_has_app_run_mode_mn() {
  _has_bits_[0] |= 0x00000004u;
}
void SoftwareStartInfo::clear_has_app_run_mode_mn() {
  _has_bits_[0] &= ~0x00000004u;
}
void SoftwareStartInfo::clear_app_run_mode_mn() {
  app_run_mode_mn_ = false;
  clear_has_app_run_mode_mn();
}
 bool SoftwareStartInfo::app_run_mode_mn() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_run_mode_mn)
  return app_run_mode_mn_;
}
 void SoftwareStartInfo::set_app_run_mode_mn(bool value) {
  set_has_app_run_mode_mn();
  app_run_mode_mn_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_run_mode_mn)
}

// optional bool app_run_mode_ks = 4;
bool SoftwareStartInfo::has_app_run_mode_ks() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SoftwareStartInfo::set_has_app_run_mode_ks() {
  _has_bits_[0] |= 0x00000008u;
}
void SoftwareStartInfo::clear_has_app_run_mode_ks() {
  _has_bits_[0] &= ~0x00000008u;
}
void SoftwareStartInfo::clear_app_run_mode_ks() {
  app_run_mode_ks_ = false;
  clear_has_app_run_mode_ks();
}
 bool SoftwareStartInfo::app_run_mode_ks() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_run_mode_ks)
  return app_run_mode_ks_;
}
 void SoftwareStartInfo::set_app_run_mode_ks(bool value) {
  set_has_app_run_mode_ks();
  app_run_mode_ks_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_run_mode_ks)
}

// optional bool app_run_server_monitor = 5;
bool SoftwareStartInfo::has_app_run_server_monitor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SoftwareStartInfo::set_has_app_run_server_monitor() {
  _has_bits_[0] |= 0x00000010u;
}
void SoftwareStartInfo::clear_has_app_run_server_monitor() {
  _has_bits_[0] &= ~0x00000010u;
}
void SoftwareStartInfo::clear_app_run_server_monitor() {
  app_run_server_monitor_ = false;
  clear_has_app_run_server_monitor();
}
 bool SoftwareStartInfo::app_run_server_monitor() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_run_server_monitor)
  return app_run_server_monitor_;
}
 void SoftwareStartInfo::set_app_run_server_monitor(bool value) {
  set_has_app_run_server_monitor();
  app_run_server_monitor_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_run_server_monitor)
}

// optional string app_run_server_monitor_ip = 6;
bool SoftwareStartInfo::has_app_run_server_monitor_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SoftwareStartInfo::set_has_app_run_server_monitor_ip() {
  _has_bits_[0] |= 0x00000020u;
}
void SoftwareStartInfo::clear_has_app_run_server_monitor_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
void SoftwareStartInfo::clear_app_run_server_monitor_ip() {
  app_run_server_monitor_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_run_server_monitor_ip();
}
 const ::std::string& SoftwareStartInfo::app_run_server_monitor_ip() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
  return app_run_server_monitor_ip_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_app_run_server_monitor_ip(const ::std::string& value) {
  set_has_app_run_server_monitor_ip();
  app_run_server_monitor_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
}
 void SoftwareStartInfo::set_app_run_server_monitor_ip(const char* value) {
  set_has_app_run_server_monitor_ip();
  app_run_server_monitor_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
}
 void SoftwareStartInfo::set_app_run_server_monitor_ip(const char* value, size_t size) {
  set_has_app_run_server_monitor_ip();
  app_run_server_monitor_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
}
 ::std::string* SoftwareStartInfo::mutable_app_run_server_monitor_ip() {
  set_has_app_run_server_monitor_ip();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
  return app_run_server_monitor_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SoftwareStartInfo::release_app_run_server_monitor_ip() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
  clear_has_app_run_server_monitor_ip();
  return app_run_server_monitor_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_allocated_app_run_server_monitor_ip(::std::string* app_run_server_monitor_ip) {
  if (app_run_server_monitor_ip != NULL) {
    set_has_app_run_server_monitor_ip();
  } else {
    clear_has_app_run_server_monitor_ip();
  }
  app_run_server_monitor_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_run_server_monitor_ip);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.app_run_server_monitor_ip)
}

// optional int32 app_run_server_monitor_port = 7;
bool SoftwareStartInfo::has_app_run_server_monitor_port() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SoftwareStartInfo::set_has_app_run_server_monitor_port() {
  _has_bits_[0] |= 0x00000040u;
}
void SoftwareStartInfo::clear_has_app_run_server_monitor_port() {
  _has_bits_[0] &= ~0x00000040u;
}
void SoftwareStartInfo::clear_app_run_server_monitor_port() {
  app_run_server_monitor_port_ = 0;
  clear_has_app_run_server_monitor_port();
}
 ::google::protobuf::int32 SoftwareStartInfo::app_run_server_monitor_port() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_run_server_monitor_port)
  return app_run_server_monitor_port_;
}
 void SoftwareStartInfo::set_app_run_server_monitor_port(::google::protobuf::int32 value) {
  set_has_app_run_server_monitor_port();
  app_run_server_monitor_port_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_run_server_monitor_port)
}

// optional bool whether_use_iccard = 8;
bool SoftwareStartInfo::has_whether_use_iccard() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SoftwareStartInfo::set_has_whether_use_iccard() {
  _has_bits_[0] |= 0x00000080u;
}
void SoftwareStartInfo::clear_has_whether_use_iccard() {
  _has_bits_[0] &= ~0x00000080u;
}
void SoftwareStartInfo::clear_whether_use_iccard() {
  whether_use_iccard_ = false;
  clear_has_whether_use_iccard();
}
 bool SoftwareStartInfo::whether_use_iccard() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.whether_use_iccard)
  return whether_use_iccard_;
}
 void SoftwareStartInfo::set_whether_use_iccard(bool value) {
  set_has_whether_use_iccard();
  whether_use_iccard_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.whether_use_iccard)
}

// optional int32 app_sound_rate = 9;
bool SoftwareStartInfo::has_app_sound_rate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SoftwareStartInfo::set_has_app_sound_rate() {
  _has_bits_[0] |= 0x00000100u;
}
void SoftwareStartInfo::clear_has_app_sound_rate() {
  _has_bits_[0] &= ~0x00000100u;
}
void SoftwareStartInfo::clear_app_sound_rate() {
  app_sound_rate_ = 0;
  clear_has_app_sound_rate();
}
 ::google::protobuf::int32 SoftwareStartInfo::app_sound_rate() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.app_sound_rate)
  return app_sound_rate_;
}
 void SoftwareStartInfo::set_app_sound_rate(::google::protobuf::int32 value) {
  set_has_app_sound_rate();
  app_sound_rate_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.app_sound_rate)
}

// optional bool whether_use_second_idcard = 10;
bool SoftwareStartInfo::has_whether_use_second_idcard() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void SoftwareStartInfo::set_has_whether_use_second_idcard() {
  _has_bits_[0] |= 0x00000200u;
}
void SoftwareStartInfo::clear_has_whether_use_second_idcard() {
  _has_bits_[0] &= ~0x00000200u;
}
void SoftwareStartInfo::clear_whether_use_second_idcard() {
  whether_use_second_idcard_ = false;
  clear_has_whether_use_second_idcard();
}
 bool SoftwareStartInfo::whether_use_second_idcard() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.whether_use_second_idcard)
  return whether_use_second_idcard_;
}
 void SoftwareStartInfo::set_whether_use_second_idcard(bool value) {
  set_has_whether_use_second_idcard();
  whether_use_second_idcard_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.whether_use_second_idcard)
}

// optional string secondid_verification_net_fail_voice = 11;
bool SoftwareStartInfo::has_secondid_verification_net_fail_voice() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void SoftwareStartInfo::set_has_secondid_verification_net_fail_voice() {
  _has_bits_[0] |= 0x00000400u;
}
void SoftwareStartInfo::clear_has_secondid_verification_net_fail_voice() {
  _has_bits_[0] &= ~0x00000400u;
}
void SoftwareStartInfo::clear_secondid_verification_net_fail_voice() {
  secondid_verification_net_fail_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secondid_verification_net_fail_voice();
}
 const ::std::string& SoftwareStartInfo::secondid_verification_net_fail_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
  return secondid_verification_net_fail_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_secondid_verification_net_fail_voice(const ::std::string& value) {
  set_has_secondid_verification_net_fail_voice();
  secondid_verification_net_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
}
 void SoftwareStartInfo::set_secondid_verification_net_fail_voice(const char* value) {
  set_has_secondid_verification_net_fail_voice();
  secondid_verification_net_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
}
 void SoftwareStartInfo::set_secondid_verification_net_fail_voice(const char* value, size_t size) {
  set_has_secondid_verification_net_fail_voice();
  secondid_verification_net_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
}
 ::std::string* SoftwareStartInfo::mutable_secondid_verification_net_fail_voice() {
  set_has_secondid_verification_net_fail_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
  return secondid_verification_net_fail_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SoftwareStartInfo::release_secondid_verification_net_fail_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
  clear_has_secondid_verification_net_fail_voice();
  return secondid_verification_net_fail_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_allocated_secondid_verification_net_fail_voice(::std::string* secondid_verification_net_fail_voice) {
  if (secondid_verification_net_fail_voice != NULL) {
    set_has_secondid_verification_net_fail_voice();
  } else {
    clear_has_secondid_verification_net_fail_voice();
  }
  secondid_verification_net_fail_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondid_verification_net_fail_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.secondid_verification_net_fail_voice)
}

// optional string secondid_verification_waiting_voice = 12;
bool SoftwareStartInfo::has_secondid_verification_waiting_voice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void SoftwareStartInfo::set_has_secondid_verification_waiting_voice() {
  _has_bits_[0] |= 0x00000800u;
}
void SoftwareStartInfo::clear_has_secondid_verification_waiting_voice() {
  _has_bits_[0] &= ~0x00000800u;
}
void SoftwareStartInfo::clear_secondid_verification_waiting_voice() {
  secondid_verification_waiting_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secondid_verification_waiting_voice();
}
 const ::std::string& SoftwareStartInfo::secondid_verification_waiting_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
  return secondid_verification_waiting_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_secondid_verification_waiting_voice(const ::std::string& value) {
  set_has_secondid_verification_waiting_voice();
  secondid_verification_waiting_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
}
 void SoftwareStartInfo::set_secondid_verification_waiting_voice(const char* value) {
  set_has_secondid_verification_waiting_voice();
  secondid_verification_waiting_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
}
 void SoftwareStartInfo::set_secondid_verification_waiting_voice(const char* value, size_t size) {
  set_has_secondid_verification_waiting_voice();
  secondid_verification_waiting_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
}
 ::std::string* SoftwareStartInfo::mutable_secondid_verification_waiting_voice() {
  set_has_secondid_verification_waiting_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
  return secondid_verification_waiting_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SoftwareStartInfo::release_secondid_verification_waiting_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
  clear_has_secondid_verification_waiting_voice();
  return secondid_verification_waiting_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_allocated_secondid_verification_waiting_voice(::std::string* secondid_verification_waiting_voice) {
  if (secondid_verification_waiting_voice != NULL) {
    set_has_secondid_verification_waiting_voice();
  } else {
    clear_has_secondid_verification_waiting_voice();
  }
  secondid_verification_waiting_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondid_verification_waiting_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.secondid_verification_waiting_voice)
}

// optional string secondid_verification_round_started_voice = 13;
bool SoftwareStartInfo::has_secondid_verification_round_started_voice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void SoftwareStartInfo::set_has_secondid_verification_round_started_voice() {
  _has_bits_[0] |= 0x00001000u;
}
void SoftwareStartInfo::clear_has_secondid_verification_round_started_voice() {
  _has_bits_[0] &= ~0x00001000u;
}
void SoftwareStartInfo::clear_secondid_verification_round_started_voice() {
  secondid_verification_round_started_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secondid_verification_round_started_voice();
}
 const ::std::string& SoftwareStartInfo::secondid_verification_round_started_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
  return secondid_verification_round_started_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_secondid_verification_round_started_voice(const ::std::string& value) {
  set_has_secondid_verification_round_started_voice();
  secondid_verification_round_started_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
}
 void SoftwareStartInfo::set_secondid_verification_round_started_voice(const char* value) {
  set_has_secondid_verification_round_started_voice();
  secondid_verification_round_started_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
}
 void SoftwareStartInfo::set_secondid_verification_round_started_voice(const char* value, size_t size) {
  set_has_secondid_verification_round_started_voice();
  secondid_verification_round_started_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
}
 ::std::string* SoftwareStartInfo::mutable_secondid_verification_round_started_voice() {
  set_has_secondid_verification_round_started_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
  return secondid_verification_round_started_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SoftwareStartInfo::release_secondid_verification_round_started_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
  clear_has_secondid_verification_round_started_voice();
  return secondid_verification_round_started_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_allocated_secondid_verification_round_started_voice(::std::string* secondid_verification_round_started_voice) {
  if (secondid_verification_round_started_voice != NULL) {
    set_has_secondid_verification_round_started_voice();
  } else {
    clear_has_secondid_verification_round_started_voice();
  }
  secondid_verification_round_started_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondid_verification_round_started_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.secondid_verification_round_started_voice)
}

// optional string secondid_verification_registration_unvalid_voice = 14;
bool SoftwareStartInfo::has_secondid_verification_registration_unvalid_voice() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void SoftwareStartInfo::set_has_secondid_verification_registration_unvalid_voice() {
  _has_bits_[0] |= 0x00002000u;
}
void SoftwareStartInfo::clear_has_secondid_verification_registration_unvalid_voice() {
  _has_bits_[0] &= ~0x00002000u;
}
void SoftwareStartInfo::clear_secondid_verification_registration_unvalid_voice() {
  secondid_verification_registration_unvalid_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secondid_verification_registration_unvalid_voice();
}
 const ::std::string& SoftwareStartInfo::secondid_verification_registration_unvalid_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
  return secondid_verification_registration_unvalid_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_secondid_verification_registration_unvalid_voice(const ::std::string& value) {
  set_has_secondid_verification_registration_unvalid_voice();
  secondid_verification_registration_unvalid_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
}
 void SoftwareStartInfo::set_secondid_verification_registration_unvalid_voice(const char* value) {
  set_has_secondid_verification_registration_unvalid_voice();
  secondid_verification_registration_unvalid_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
}
 void SoftwareStartInfo::set_secondid_verification_registration_unvalid_voice(const char* value, size_t size) {
  set_has_secondid_verification_registration_unvalid_voice();
  secondid_verification_registration_unvalid_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
}
 ::std::string* SoftwareStartInfo::mutable_secondid_verification_registration_unvalid_voice() {
  set_has_secondid_verification_registration_unvalid_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
  return secondid_verification_registration_unvalid_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SoftwareStartInfo::release_secondid_verification_registration_unvalid_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
  clear_has_secondid_verification_registration_unvalid_voice();
  return secondid_verification_registration_unvalid_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_allocated_secondid_verification_registration_unvalid_voice(::std::string* secondid_verification_registration_unvalid_voice) {
  if (secondid_verification_registration_unvalid_voice != NULL) {
    set_has_secondid_verification_registration_unvalid_voice();
  } else {
    clear_has_secondid_verification_registration_unvalid_voice();
  }
  secondid_verification_registration_unvalid_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondid_verification_registration_unvalid_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.secondid_verification_registration_unvalid_voice)
}

// optional string secondid_verification_registration_valid_voice = 15;
bool SoftwareStartInfo::has_secondid_verification_registration_valid_voice() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void SoftwareStartInfo::set_has_secondid_verification_registration_valid_voice() {
  _has_bits_[0] |= 0x00004000u;
}
void SoftwareStartInfo::clear_has_secondid_verification_registration_valid_voice() {
  _has_bits_[0] &= ~0x00004000u;
}
void SoftwareStartInfo::clear_secondid_verification_registration_valid_voice() {
  secondid_verification_registration_valid_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secondid_verification_registration_valid_voice();
}
 const ::std::string& SoftwareStartInfo::secondid_verification_registration_valid_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
  return secondid_verification_registration_valid_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_secondid_verification_registration_valid_voice(const ::std::string& value) {
  set_has_secondid_verification_registration_valid_voice();
  secondid_verification_registration_valid_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
}
 void SoftwareStartInfo::set_secondid_verification_registration_valid_voice(const char* value) {
  set_has_secondid_verification_registration_valid_voice();
  secondid_verification_registration_valid_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
}
 void SoftwareStartInfo::set_secondid_verification_registration_valid_voice(const char* value, size_t size) {
  set_has_secondid_verification_registration_valid_voice();
  secondid_verification_registration_valid_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
}
 ::std::string* SoftwareStartInfo::mutable_secondid_verification_registration_valid_voice() {
  set_has_secondid_verification_registration_valid_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
  return secondid_verification_registration_valid_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SoftwareStartInfo::release_secondid_verification_registration_valid_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
  clear_has_secondid_verification_registration_valid_voice();
  return secondid_verification_registration_valid_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_allocated_secondid_verification_registration_valid_voice(::std::string* secondid_verification_registration_valid_voice) {
  if (secondid_verification_registration_valid_voice != NULL) {
    set_has_secondid_verification_registration_valid_voice();
  } else {
    clear_has_secondid_verification_registration_valid_voice();
  }
  secondid_verification_registration_valid_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondid_verification_registration_valid_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.secondid_verification_registration_valid_voice)
}

// optional string secondid_verification_timeout_voice = 16;
bool SoftwareStartInfo::has_secondid_verification_timeout_voice() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void SoftwareStartInfo::set_has_secondid_verification_timeout_voice() {
  _has_bits_[0] |= 0x00008000u;
}
void SoftwareStartInfo::clear_has_secondid_verification_timeout_voice() {
  _has_bits_[0] &= ~0x00008000u;
}
void SoftwareStartInfo::clear_secondid_verification_timeout_voice() {
  secondid_verification_timeout_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_secondid_verification_timeout_voice();
}
 const ::std::string& SoftwareStartInfo::secondid_verification_timeout_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
  return secondid_verification_timeout_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_secondid_verification_timeout_voice(const ::std::string& value) {
  set_has_secondid_verification_timeout_voice();
  secondid_verification_timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
}
 void SoftwareStartInfo::set_secondid_verification_timeout_voice(const char* value) {
  set_has_secondid_verification_timeout_voice();
  secondid_verification_timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
}
 void SoftwareStartInfo::set_secondid_verification_timeout_voice(const char* value, size_t size) {
  set_has_secondid_verification_timeout_voice();
  secondid_verification_timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
}
 ::std::string* SoftwareStartInfo::mutable_secondid_verification_timeout_voice() {
  set_has_secondid_verification_timeout_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
  return secondid_verification_timeout_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SoftwareStartInfo::release_secondid_verification_timeout_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
  clear_has_secondid_verification_timeout_voice();
  return secondid_verification_timeout_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SoftwareStartInfo::set_allocated_secondid_verification_timeout_voice(::std::string* secondid_verification_timeout_voice) {
  if (secondid_verification_timeout_voice != NULL) {
    set_has_secondid_verification_timeout_voice();
  } else {
    clear_has_secondid_verification_timeout_voice();
  }
  secondid_verification_timeout_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondid_verification_timeout_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.SoftwareStartInfo.secondid_verification_timeout_voice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OtherConfigInfo::kWhetherUseGpsModifyLocalTimeFieldNumber;
const int OtherConfigInfo::kGpsValidSoundFieldNumber;
const int OtherConfigInfo::kGpsInvalidSoundFieldNumber;
const int OtherConfigInfo::kWhetherKsModeAlarmRingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OtherConfigInfo::OtherConfigInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.OtherConfigInfo)
}

void OtherConfigInfo::InitAsDefaultInstance() {
}

OtherConfigInfo::OtherConfigInfo(const OtherConfigInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.OtherConfigInfo)
}

void OtherConfigInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  whether_use_gps_modify_local_time_ = false;
  gps_valid_sound_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gps_invalid_sound_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  whether_ks_mode_alarm_ring_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OtherConfigInfo::~OtherConfigInfo() {
  // @@protoc_insertion_point(destructor:OPMessage.OtherConfigInfo)
  SharedDtor();
}

void OtherConfigInfo::SharedDtor() {
  gps_valid_sound_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gps_invalid_sound_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void OtherConfigInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OtherConfigInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OtherConfigInfo_descriptor_;
}

const OtherConfigInfo& OtherConfigInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

OtherConfigInfo* OtherConfigInfo::default_instance_ = NULL;

OtherConfigInfo* OtherConfigInfo::New(::google::protobuf::Arena* arena) const {
  OtherConfigInfo* n = new OtherConfigInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OtherConfigInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.OtherConfigInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OtherConfigInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OtherConfigInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(whether_use_gps_modify_local_time_, whether_ks_mode_alarm_ring_);
    if (has_gps_valid_sound()) {
      gps_valid_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_gps_invalid_sound()) {
      gps_invalid_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OtherConfigInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.OtherConfigInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool whether_use_gps_modify_local_time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &whether_use_gps_modify_local_time_)));
          set_has_whether_use_gps_modify_local_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_gps_valid_sound;
        break;
      }

      // optional string gps_valid_sound = 2;
      case 2: {
        if (tag == 18) {
         parse_gps_valid_sound:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gps_valid_sound()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gps_valid_sound().data(), this->gps_valid_sound().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.OtherConfigInfo.gps_valid_sound");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gps_invalid_sound;
        break;
      }

      // optional string gps_invalid_sound = 3;
      case 3: {
        if (tag == 26) {
         parse_gps_invalid_sound:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gps_invalid_sound()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gps_invalid_sound().data(), this->gps_invalid_sound().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.OtherConfigInfo.gps_invalid_sound");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_whether_ks_mode_alarm_ring;
        break;
      }

      // optional bool whether_ks_mode_alarm_ring = 4;
      case 4: {
        if (tag == 32) {
         parse_whether_ks_mode_alarm_ring:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &whether_ks_mode_alarm_ring_)));
          set_has_whether_ks_mode_alarm_ring();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.OtherConfigInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.OtherConfigInfo)
  return false;
#undef DO_
}

void OtherConfigInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.OtherConfigInfo)
  // optional bool whether_use_gps_modify_local_time = 1;
  if (has_whether_use_gps_modify_local_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->whether_use_gps_modify_local_time(), output);
  }

  // optional string gps_valid_sound = 2;
  if (has_gps_valid_sound()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gps_valid_sound().data(), this->gps_valid_sound().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.OtherConfigInfo.gps_valid_sound");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gps_valid_sound(), output);
  }

  // optional string gps_invalid_sound = 3;
  if (has_gps_invalid_sound()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gps_invalid_sound().data(), this->gps_invalid_sound().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.OtherConfigInfo.gps_invalid_sound");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gps_invalid_sound(), output);
  }

  // optional bool whether_ks_mode_alarm_ring = 4;
  if (has_whether_ks_mode_alarm_ring()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->whether_ks_mode_alarm_ring(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.OtherConfigInfo)
}

::google::protobuf::uint8* OtherConfigInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.OtherConfigInfo)
  // optional bool whether_use_gps_modify_local_time = 1;
  if (has_whether_use_gps_modify_local_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->whether_use_gps_modify_local_time(), target);
  }

  // optional string gps_valid_sound = 2;
  if (has_gps_valid_sound()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gps_valid_sound().data(), this->gps_valid_sound().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.OtherConfigInfo.gps_valid_sound");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gps_valid_sound(), target);
  }

  // optional string gps_invalid_sound = 3;
  if (has_gps_invalid_sound()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gps_invalid_sound().data(), this->gps_invalid_sound().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.OtherConfigInfo.gps_invalid_sound");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gps_invalid_sound(), target);
  }

  // optional bool whether_ks_mode_alarm_ring = 4;
  if (has_whether_ks_mode_alarm_ring()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->whether_ks_mode_alarm_ring(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.OtherConfigInfo)
  return target;
}

int OtherConfigInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.OtherConfigInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional bool whether_use_gps_modify_local_time = 1;
    if (has_whether_use_gps_modify_local_time()) {
      total_size += 1 + 1;
    }

    // optional string gps_valid_sound = 2;
    if (has_gps_valid_sound()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gps_valid_sound());
    }

    // optional string gps_invalid_sound = 3;
    if (has_gps_invalid_sound()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gps_invalid_sound());
    }

    // optional bool whether_ks_mode_alarm_ring = 4;
    if (has_whether_ks_mode_alarm_ring()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OtherConfigInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.OtherConfigInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const OtherConfigInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OtherConfigInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.OtherConfigInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.OtherConfigInfo)
    MergeFrom(*source);
  }
}

void OtherConfigInfo::MergeFrom(const OtherConfigInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.OtherConfigInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_whether_use_gps_modify_local_time()) {
      set_whether_use_gps_modify_local_time(from.whether_use_gps_modify_local_time());
    }
    if (from.has_gps_valid_sound()) {
      set_has_gps_valid_sound();
      gps_valid_sound_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gps_valid_sound_);
    }
    if (from.has_gps_invalid_sound()) {
      set_has_gps_invalid_sound();
      gps_invalid_sound_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gps_invalid_sound_);
    }
    if (from.has_whether_ks_mode_alarm_ring()) {
      set_whether_ks_mode_alarm_ring(from.whether_ks_mode_alarm_ring());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void OtherConfigInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.OtherConfigInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OtherConfigInfo::CopyFrom(const OtherConfigInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.OtherConfigInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OtherConfigInfo::IsInitialized() const {

  return true;
}

void OtherConfigInfo::Swap(OtherConfigInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OtherConfigInfo::InternalSwap(OtherConfigInfo* other) {
  std::swap(whether_use_gps_modify_local_time_, other->whether_use_gps_modify_local_time_);
  gps_valid_sound_.Swap(&other->gps_valid_sound_);
  gps_invalid_sound_.Swap(&other->gps_invalid_sound_);
  std::swap(whether_ks_mode_alarm_ring_, other->whether_ks_mode_alarm_ring_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OtherConfigInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OtherConfigInfo_descriptor_;
  metadata.reflection = OtherConfigInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OtherConfigInfo

// optional bool whether_use_gps_modify_local_time = 1;
bool OtherConfigInfo::has_whether_use_gps_modify_local_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OtherConfigInfo::set_has_whether_use_gps_modify_local_time() {
  _has_bits_[0] |= 0x00000001u;
}
void OtherConfigInfo::clear_has_whether_use_gps_modify_local_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void OtherConfigInfo::clear_whether_use_gps_modify_local_time() {
  whether_use_gps_modify_local_time_ = false;
  clear_has_whether_use_gps_modify_local_time();
}
 bool OtherConfigInfo::whether_use_gps_modify_local_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.OtherConfigInfo.whether_use_gps_modify_local_time)
  return whether_use_gps_modify_local_time_;
}
 void OtherConfigInfo::set_whether_use_gps_modify_local_time(bool value) {
  set_has_whether_use_gps_modify_local_time();
  whether_use_gps_modify_local_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.OtherConfigInfo.whether_use_gps_modify_local_time)
}

// optional string gps_valid_sound = 2;
bool OtherConfigInfo::has_gps_valid_sound() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OtherConfigInfo::set_has_gps_valid_sound() {
  _has_bits_[0] |= 0x00000002u;
}
void OtherConfigInfo::clear_has_gps_valid_sound() {
  _has_bits_[0] &= ~0x00000002u;
}
void OtherConfigInfo::clear_gps_valid_sound() {
  gps_valid_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gps_valid_sound();
}
 const ::std::string& OtherConfigInfo::gps_valid_sound() const {
  // @@protoc_insertion_point(field_get:OPMessage.OtherConfigInfo.gps_valid_sound)
  return gps_valid_sound_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OtherConfigInfo::set_gps_valid_sound(const ::std::string& value) {
  set_has_gps_valid_sound();
  gps_valid_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.OtherConfigInfo.gps_valid_sound)
}
 void OtherConfigInfo::set_gps_valid_sound(const char* value) {
  set_has_gps_valid_sound();
  gps_valid_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.OtherConfigInfo.gps_valid_sound)
}
 void OtherConfigInfo::set_gps_valid_sound(const char* value, size_t size) {
  set_has_gps_valid_sound();
  gps_valid_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.OtherConfigInfo.gps_valid_sound)
}
 ::std::string* OtherConfigInfo::mutable_gps_valid_sound() {
  set_has_gps_valid_sound();
  // @@protoc_insertion_point(field_mutable:OPMessage.OtherConfigInfo.gps_valid_sound)
  return gps_valid_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OtherConfigInfo::release_gps_valid_sound() {
  // @@protoc_insertion_point(field_release:OPMessage.OtherConfigInfo.gps_valid_sound)
  clear_has_gps_valid_sound();
  return gps_valid_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OtherConfigInfo::set_allocated_gps_valid_sound(::std::string* gps_valid_sound) {
  if (gps_valid_sound != NULL) {
    set_has_gps_valid_sound();
  } else {
    clear_has_gps_valid_sound();
  }
  gps_valid_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gps_valid_sound);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.OtherConfigInfo.gps_valid_sound)
}

// optional string gps_invalid_sound = 3;
bool OtherConfigInfo::has_gps_invalid_sound() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OtherConfigInfo::set_has_gps_invalid_sound() {
  _has_bits_[0] |= 0x00000004u;
}
void OtherConfigInfo::clear_has_gps_invalid_sound() {
  _has_bits_[0] &= ~0x00000004u;
}
void OtherConfigInfo::clear_gps_invalid_sound() {
  gps_invalid_sound_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gps_invalid_sound();
}
 const ::std::string& OtherConfigInfo::gps_invalid_sound() const {
  // @@protoc_insertion_point(field_get:OPMessage.OtherConfigInfo.gps_invalid_sound)
  return gps_invalid_sound_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OtherConfigInfo::set_gps_invalid_sound(const ::std::string& value) {
  set_has_gps_invalid_sound();
  gps_invalid_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.OtherConfigInfo.gps_invalid_sound)
}
 void OtherConfigInfo::set_gps_invalid_sound(const char* value) {
  set_has_gps_invalid_sound();
  gps_invalid_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.OtherConfigInfo.gps_invalid_sound)
}
 void OtherConfigInfo::set_gps_invalid_sound(const char* value, size_t size) {
  set_has_gps_invalid_sound();
  gps_invalid_sound_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.OtherConfigInfo.gps_invalid_sound)
}
 ::std::string* OtherConfigInfo::mutable_gps_invalid_sound() {
  set_has_gps_invalid_sound();
  // @@protoc_insertion_point(field_mutable:OPMessage.OtherConfigInfo.gps_invalid_sound)
  return gps_invalid_sound_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OtherConfigInfo::release_gps_invalid_sound() {
  // @@protoc_insertion_point(field_release:OPMessage.OtherConfigInfo.gps_invalid_sound)
  clear_has_gps_invalid_sound();
  return gps_invalid_sound_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OtherConfigInfo::set_allocated_gps_invalid_sound(::std::string* gps_invalid_sound) {
  if (gps_invalid_sound != NULL) {
    set_has_gps_invalid_sound();
  } else {
    clear_has_gps_invalid_sound();
  }
  gps_invalid_sound_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gps_invalid_sound);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.OtherConfigInfo.gps_invalid_sound)
}

// optional bool whether_ks_mode_alarm_ring = 4;
bool OtherConfigInfo::has_whether_ks_mode_alarm_ring() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OtherConfigInfo::set_has_whether_ks_mode_alarm_ring() {
  _has_bits_[0] |= 0x00000008u;
}
void OtherConfigInfo::clear_has_whether_ks_mode_alarm_ring() {
  _has_bits_[0] &= ~0x00000008u;
}
void OtherConfigInfo::clear_whether_ks_mode_alarm_ring() {
  whether_ks_mode_alarm_ring_ = false;
  clear_has_whether_ks_mode_alarm_ring();
}
 bool OtherConfigInfo::whether_ks_mode_alarm_ring() const {
  // @@protoc_insertion_point(field_get:OPMessage.OtherConfigInfo.whether_ks_mode_alarm_ring)
  return whether_ks_mode_alarm_ring_;
}
 void OtherConfigInfo::set_whether_ks_mode_alarm_ring(bool value) {
  set_has_whether_ks_mode_alarm_ring();
  whether_ks_mode_alarm_ring_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.OtherConfigInfo.whether_ks_mode_alarm_ring)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigPhysicSensor::kSensorTypeFieldNumber;
const int ConfigPhysicSensor::kPhysicBitFieldNumber;
const int ConfigPhysicSensor::kPhysicPowerFieldNumber;
const int ConfigPhysicSensor::kWhetherUseFieldNumber;
const int ConfigPhysicSensor::kPhysicSensorNameFieldNumber;
const int ConfigPhysicSensor::kPhysicSensorDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigPhysicSensor::ConfigPhysicSensor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ConfigPhysicSensor)
}

void ConfigPhysicSensor::InitAsDefaultInstance() {
}

ConfigPhysicSensor::ConfigPhysicSensor(const ConfigPhysicSensor& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ConfigPhysicSensor)
}

void ConfigPhysicSensor::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sensor_type_ = 0;
  physic_bit_ = 0;
  physic_power_ = 0;
  whether_use_ = false;
  physic_sensor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  physic_sensor_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConfigPhysicSensor::~ConfigPhysicSensor() {
  // @@protoc_insertion_point(destructor:OPMessage.ConfigPhysicSensor)
  SharedDtor();
}

void ConfigPhysicSensor::SharedDtor() {
  physic_sensor_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  physic_sensor_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ConfigPhysicSensor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigPhysicSensor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfigPhysicSensor_descriptor_;
}

const ConfigPhysicSensor& ConfigPhysicSensor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ConfigPhysicSensor* ConfigPhysicSensor::default_instance_ = NULL;

ConfigPhysicSensor* ConfigPhysicSensor::New(::google::protobuf::Arena* arena) const {
  ConfigPhysicSensor* n = new ConfigPhysicSensor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigPhysicSensor::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ConfigPhysicSensor)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ConfigPhysicSensor, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ConfigPhysicSensor*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(sensor_type_, whether_use_);
    if (has_physic_sensor_name()) {
      physic_sensor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_physic_sensor_description()) {
      physic_sensor_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ConfigPhysicSensor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ConfigPhysicSensor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OPMessage.enum_physic_sensor sensor_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::enum_physic_sensor_IsValid(value)) {
            set_sensor_type(static_cast< ::OPMessage::enum_physic_sensor >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_physic_bit;
        break;
      }

      // optional int32 physic_bit = 2;
      case 2: {
        if (tag == 16) {
         parse_physic_bit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &physic_bit_)));
          set_has_physic_bit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_physic_power;
        break;
      }

      // optional int32 physic_power = 3;
      case 3: {
        if (tag == 24) {
         parse_physic_power:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &physic_power_)));
          set_has_physic_power();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_whether_use;
        break;
      }

      // optional bool whether_use = 4;
      case 4: {
        if (tag == 32) {
         parse_whether_use:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &whether_use_)));
          set_has_whether_use();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_physic_sensor_name;
        break;
      }

      // optional string physic_sensor_name = 5;
      case 5: {
        if (tag == 42) {
         parse_physic_sensor_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_physic_sensor_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->physic_sensor_name().data(), this->physic_sensor_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ConfigPhysicSensor.physic_sensor_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_physic_sensor_description;
        break;
      }

      // optional string physic_sensor_description = 6;
      case 6: {
        if (tag == 50) {
         parse_physic_sensor_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_physic_sensor_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->physic_sensor_description().data(), this->physic_sensor_description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ConfigPhysicSensor.physic_sensor_description");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ConfigPhysicSensor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ConfigPhysicSensor)
  return false;
#undef DO_
}

void ConfigPhysicSensor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ConfigPhysicSensor)
  // optional .OPMessage.enum_physic_sensor sensor_type = 1;
  if (has_sensor_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->sensor_type(), output);
  }

  // optional int32 physic_bit = 2;
  if (has_physic_bit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->physic_bit(), output);
  }

  // optional int32 physic_power = 3;
  if (has_physic_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->physic_power(), output);
  }

  // optional bool whether_use = 4;
  if (has_whether_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->whether_use(), output);
  }

  // optional string physic_sensor_name = 5;
  if (has_physic_sensor_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->physic_sensor_name().data(), this->physic_sensor_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigPhysicSensor.physic_sensor_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->physic_sensor_name(), output);
  }

  // optional string physic_sensor_description = 6;
  if (has_physic_sensor_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->physic_sensor_description().data(), this->physic_sensor_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigPhysicSensor.physic_sensor_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->physic_sensor_description(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ConfigPhysicSensor)
}

::google::protobuf::uint8* ConfigPhysicSensor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ConfigPhysicSensor)
  // optional .OPMessage.enum_physic_sensor sensor_type = 1;
  if (has_sensor_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->sensor_type(), target);
  }

  // optional int32 physic_bit = 2;
  if (has_physic_bit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->physic_bit(), target);
  }

  // optional int32 physic_power = 3;
  if (has_physic_power()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->physic_power(), target);
  }

  // optional bool whether_use = 4;
  if (has_whether_use()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->whether_use(), target);
  }

  // optional string physic_sensor_name = 5;
  if (has_physic_sensor_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->physic_sensor_name().data(), this->physic_sensor_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigPhysicSensor.physic_sensor_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->physic_sensor_name(), target);
  }

  // optional string physic_sensor_description = 6;
  if (has_physic_sensor_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->physic_sensor_description().data(), this->physic_sensor_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigPhysicSensor.physic_sensor_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->physic_sensor_description(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ConfigPhysicSensor)
  return target;
}

int ConfigPhysicSensor::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ConfigPhysicSensor)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional .OPMessage.enum_physic_sensor sensor_type = 1;
    if (has_sensor_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sensor_type());
    }

    // optional int32 physic_bit = 2;
    if (has_physic_bit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->physic_bit());
    }

    // optional int32 physic_power = 3;
    if (has_physic_power()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->physic_power());
    }

    // optional bool whether_use = 4;
    if (has_whether_use()) {
      total_size += 1 + 1;
    }

    // optional string physic_sensor_name = 5;
    if (has_physic_sensor_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->physic_sensor_name());
    }

    // optional string physic_sensor_description = 6;
    if (has_physic_sensor_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->physic_sensor_description());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigPhysicSensor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ConfigPhysicSensor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ConfigPhysicSensor* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigPhysicSensor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ConfigPhysicSensor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ConfigPhysicSensor)
    MergeFrom(*source);
  }
}

void ConfigPhysicSensor::MergeFrom(const ConfigPhysicSensor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ConfigPhysicSensor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sensor_type()) {
      set_sensor_type(from.sensor_type());
    }
    if (from.has_physic_bit()) {
      set_physic_bit(from.physic_bit());
    }
    if (from.has_physic_power()) {
      set_physic_power(from.physic_power());
    }
    if (from.has_whether_use()) {
      set_whether_use(from.whether_use());
    }
    if (from.has_physic_sensor_name()) {
      set_has_physic_sensor_name();
      physic_sensor_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.physic_sensor_name_);
    }
    if (from.has_physic_sensor_description()) {
      set_has_physic_sensor_description();
      physic_sensor_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.physic_sensor_description_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ConfigPhysicSensor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ConfigPhysicSensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigPhysicSensor::CopyFrom(const ConfigPhysicSensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ConfigPhysicSensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigPhysicSensor::IsInitialized() const {

  return true;
}

void ConfigPhysicSensor::Swap(ConfigPhysicSensor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigPhysicSensor::InternalSwap(ConfigPhysicSensor* other) {
  std::swap(sensor_type_, other->sensor_type_);
  std::swap(physic_bit_, other->physic_bit_);
  std::swap(physic_power_, other->physic_power_);
  std::swap(whether_use_, other->whether_use_);
  physic_sensor_name_.Swap(&other->physic_sensor_name_);
  physic_sensor_description_.Swap(&other->physic_sensor_description_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigPhysicSensor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfigPhysicSensor_descriptor_;
  metadata.reflection = ConfigPhysicSensor_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigPhysicSensor

// optional .OPMessage.enum_physic_sensor sensor_type = 1;
bool ConfigPhysicSensor::has_sensor_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ConfigPhysicSensor::set_has_sensor_type() {
  _has_bits_[0] |= 0x00000001u;
}
void ConfigPhysicSensor::clear_has_sensor_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void ConfigPhysicSensor::clear_sensor_type() {
  sensor_type_ = 0;
  clear_has_sensor_type();
}
 ::OPMessage::enum_physic_sensor ConfigPhysicSensor::sensor_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigPhysicSensor.sensor_type)
  return static_cast< ::OPMessage::enum_physic_sensor >(sensor_type_);
}
 void ConfigPhysicSensor::set_sensor_type(::OPMessage::enum_physic_sensor value) {
  assert(::OPMessage::enum_physic_sensor_IsValid(value));
  set_has_sensor_type();
  sensor_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigPhysicSensor.sensor_type)
}

// optional int32 physic_bit = 2;
bool ConfigPhysicSensor::has_physic_bit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ConfigPhysicSensor::set_has_physic_bit() {
  _has_bits_[0] |= 0x00000002u;
}
void ConfigPhysicSensor::clear_has_physic_bit() {
  _has_bits_[0] &= ~0x00000002u;
}
void ConfigPhysicSensor::clear_physic_bit() {
  physic_bit_ = 0;
  clear_has_physic_bit();
}
 ::google::protobuf::int32 ConfigPhysicSensor::physic_bit() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigPhysicSensor.physic_bit)
  return physic_bit_;
}
 void ConfigPhysicSensor::set_physic_bit(::google::protobuf::int32 value) {
  set_has_physic_bit();
  physic_bit_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigPhysicSensor.physic_bit)
}

// optional int32 physic_power = 3;
bool ConfigPhysicSensor::has_physic_power() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ConfigPhysicSensor::set_has_physic_power() {
  _has_bits_[0] |= 0x00000004u;
}
void ConfigPhysicSensor::clear_has_physic_power() {
  _has_bits_[0] &= ~0x00000004u;
}
void ConfigPhysicSensor::clear_physic_power() {
  physic_power_ = 0;
  clear_has_physic_power();
}
 ::google::protobuf::int32 ConfigPhysicSensor::physic_power() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigPhysicSensor.physic_power)
  return physic_power_;
}
 void ConfigPhysicSensor::set_physic_power(::google::protobuf::int32 value) {
  set_has_physic_power();
  physic_power_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigPhysicSensor.physic_power)
}

// optional bool whether_use = 4;
bool ConfigPhysicSensor::has_whether_use() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ConfigPhysicSensor::set_has_whether_use() {
  _has_bits_[0] |= 0x00000008u;
}
void ConfigPhysicSensor::clear_has_whether_use() {
  _has_bits_[0] &= ~0x00000008u;
}
void ConfigPhysicSensor::clear_whether_use() {
  whether_use_ = false;
  clear_has_whether_use();
}
 bool ConfigPhysicSensor::whether_use() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigPhysicSensor.whether_use)
  return whether_use_;
}
 void ConfigPhysicSensor::set_whether_use(bool value) {
  set_has_whether_use();
  whether_use_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigPhysicSensor.whether_use)
}

// optional string physic_sensor_name = 5;
bool ConfigPhysicSensor::has_physic_sensor_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ConfigPhysicSensor::set_has_physic_sensor_name() {
  _has_bits_[0] |= 0x00000010u;
}
void ConfigPhysicSensor::clear_has_physic_sensor_name() {
  _has_bits_[0] &= ~0x00000010u;
}
void ConfigPhysicSensor::clear_physic_sensor_name() {
  physic_sensor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_physic_sensor_name();
}
 const ::std::string& ConfigPhysicSensor::physic_sensor_name() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigPhysicSensor.physic_sensor_name)
  return physic_sensor_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigPhysicSensor::set_physic_sensor_name(const ::std::string& value) {
  set_has_physic_sensor_name();
  physic_sensor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigPhysicSensor.physic_sensor_name)
}
 void ConfigPhysicSensor::set_physic_sensor_name(const char* value) {
  set_has_physic_sensor_name();
  physic_sensor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigPhysicSensor.physic_sensor_name)
}
 void ConfigPhysicSensor::set_physic_sensor_name(const char* value, size_t size) {
  set_has_physic_sensor_name();
  physic_sensor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigPhysicSensor.physic_sensor_name)
}
 ::std::string* ConfigPhysicSensor::mutable_physic_sensor_name() {
  set_has_physic_sensor_name();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigPhysicSensor.physic_sensor_name)
  return physic_sensor_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ConfigPhysicSensor::release_physic_sensor_name() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigPhysicSensor.physic_sensor_name)
  clear_has_physic_sensor_name();
  return physic_sensor_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigPhysicSensor::set_allocated_physic_sensor_name(::std::string* physic_sensor_name) {
  if (physic_sensor_name != NULL) {
    set_has_physic_sensor_name();
  } else {
    clear_has_physic_sensor_name();
  }
  physic_sensor_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), physic_sensor_name);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigPhysicSensor.physic_sensor_name)
}

// optional string physic_sensor_description = 6;
bool ConfigPhysicSensor::has_physic_sensor_description() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ConfigPhysicSensor::set_has_physic_sensor_description() {
  _has_bits_[0] |= 0x00000020u;
}
void ConfigPhysicSensor::clear_has_physic_sensor_description() {
  _has_bits_[0] &= ~0x00000020u;
}
void ConfigPhysicSensor::clear_physic_sensor_description() {
  physic_sensor_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_physic_sensor_description();
}
 const ::std::string& ConfigPhysicSensor::physic_sensor_description() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigPhysicSensor.physic_sensor_description)
  return physic_sensor_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigPhysicSensor::set_physic_sensor_description(const ::std::string& value) {
  set_has_physic_sensor_description();
  physic_sensor_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigPhysicSensor.physic_sensor_description)
}
 void ConfigPhysicSensor::set_physic_sensor_description(const char* value) {
  set_has_physic_sensor_description();
  physic_sensor_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigPhysicSensor.physic_sensor_description)
}
 void ConfigPhysicSensor::set_physic_sensor_description(const char* value, size_t size) {
  set_has_physic_sensor_description();
  physic_sensor_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigPhysicSensor.physic_sensor_description)
}
 ::std::string* ConfigPhysicSensor::mutable_physic_sensor_description() {
  set_has_physic_sensor_description();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigPhysicSensor.physic_sensor_description)
  return physic_sensor_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ConfigPhysicSensor::release_physic_sensor_description() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigPhysicSensor.physic_sensor_description)
  clear_has_physic_sensor_description();
  return physic_sensor_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigPhysicSensor::set_allocated_physic_sensor_description(::std::string* physic_sensor_description) {
  if (physic_sensor_description != NULL) {
    set_has_physic_sensor_description();
  } else {
    clear_has_physic_sensor_description();
  }
  physic_sensor_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), physic_sensor_description);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigPhysicSensor.physic_sensor_description)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JudgeItemInfo::kItemIdFieldNumber;
const int JudgeItemInfo::kItemIndexFieldNumber;
const int JudgeItemInfo::kItemNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JudgeItemInfo::JudgeItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.JudgeItemInfo)
}

void JudgeItemInfo::InitAsDefaultInstance() {
}

JudgeItemInfo::JudgeItemInfo(const JudgeItemInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.JudgeItemInfo)
}

void JudgeItemInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_id_ = 0;
  item_index_ = -1;
  item_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JudgeItemInfo::~JudgeItemInfo() {
  // @@protoc_insertion_point(destructor:OPMessage.JudgeItemInfo)
  SharedDtor();
}

void JudgeItemInfo::SharedDtor() {
  item_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void JudgeItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JudgeItemInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JudgeItemInfo_descriptor_;
}

const JudgeItemInfo& JudgeItemInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

JudgeItemInfo* JudgeItemInfo::default_instance_ = NULL;

JudgeItemInfo* JudgeItemInfo::New(::google::protobuf::Arena* arena) const {
  JudgeItemInfo* n = new JudgeItemInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JudgeItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.JudgeItemInfo)
  if (_has_bits_[0 / 32] & 7u) {
    item_id_ = 0;
    item_index_ = -1;
    if (has_item_name()) {
      item_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool JudgeItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.JudgeItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_index;
        break;
      }

      // optional int32 item_index = 2 [default = -1];
      case 2: {
        if (tag == 16) {
         parse_item_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_index_)));
          set_has_item_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_name;
        break;
      }

      // optional string item_name = 3;
      case 3: {
        if (tag == 26) {
         parse_item_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_name().data(), this->item_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.JudgeItemInfo.item_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.JudgeItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.JudgeItemInfo)
  return false;
#undef DO_
}

void JudgeItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.JudgeItemInfo)
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }

  // optional int32 item_index = 2 [default = -1];
  if (has_item_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_index(), output);
  }

  // optional string item_name = 3;
  if (has_item_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_name().data(), this->item_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.JudgeItemInfo.item_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.JudgeItemInfo)
}

::google::protobuf::uint8* JudgeItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.JudgeItemInfo)
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }

  // optional int32 item_index = 2 [default = -1];
  if (has_item_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_index(), target);
  }

  // optional string item_name = 3;
  if (has_item_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_name().data(), this->item_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.JudgeItemInfo.item_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.JudgeItemInfo)
  return target;
}

int JudgeItemInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.JudgeItemInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }

    // optional int32 item_index = 2 [default = -1];
    if (has_item_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_index());
    }

    // optional string item_name = 3;
    if (has_item_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_name());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JudgeItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.JudgeItemInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const JudgeItemInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const JudgeItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.JudgeItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.JudgeItemInfo)
    MergeFrom(*source);
  }
}

void JudgeItemInfo::MergeFrom(const JudgeItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.JudgeItemInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_index()) {
      set_item_index(from.item_index());
    }
    if (from.has_item_name()) {
      set_has_item_name();
      item_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void JudgeItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.JudgeItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JudgeItemInfo::CopyFrom(const JudgeItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.JudgeItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JudgeItemInfo::IsInitialized() const {

  return true;
}

void JudgeItemInfo::Swap(JudgeItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JudgeItemInfo::InternalSwap(JudgeItemInfo* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(item_index_, other->item_index_);
  item_name_.Swap(&other->item_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JudgeItemInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JudgeItemInfo_descriptor_;
  metadata.reflection = JudgeItemInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JudgeItemInfo

// optional int32 item_id = 1;
bool JudgeItemInfo::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JudgeItemInfo::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void JudgeItemInfo::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void JudgeItemInfo::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
 ::google::protobuf::int32 JudgeItemInfo::item_id() const {
  // @@protoc_insertion_point(field_get:OPMessage.JudgeItemInfo.item_id)
  return item_id_;
}
 void JudgeItemInfo::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.JudgeItemInfo.item_id)
}

// optional int32 item_index = 2 [default = -1];
bool JudgeItemInfo::has_item_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void JudgeItemInfo::set_has_item_index() {
  _has_bits_[0] |= 0x00000002u;
}
void JudgeItemInfo::clear_has_item_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void JudgeItemInfo::clear_item_index() {
  item_index_ = -1;
  clear_has_item_index();
}
 ::google::protobuf::int32 JudgeItemInfo::item_index() const {
  // @@protoc_insertion_point(field_get:OPMessage.JudgeItemInfo.item_index)
  return item_index_;
}
 void JudgeItemInfo::set_item_index(::google::protobuf::int32 value) {
  set_has_item_index();
  item_index_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.JudgeItemInfo.item_index)
}

// optional string item_name = 3;
bool JudgeItemInfo::has_item_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void JudgeItemInfo::set_has_item_name() {
  _has_bits_[0] |= 0x00000004u;
}
void JudgeItemInfo::clear_has_item_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void JudgeItemInfo::clear_item_name() {
  item_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_name();
}
 const ::std::string& JudgeItemInfo::item_name() const {
  // @@protoc_insertion_point(field_get:OPMessage.JudgeItemInfo.item_name)
  return item_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JudgeItemInfo::set_item_name(const ::std::string& value) {
  set_has_item_name();
  item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.JudgeItemInfo.item_name)
}
 void JudgeItemInfo::set_item_name(const char* value) {
  set_has_item_name();
  item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.JudgeItemInfo.item_name)
}
 void JudgeItemInfo::set_item_name(const char* value, size_t size) {
  set_has_item_name();
  item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.JudgeItemInfo.item_name)
}
 ::std::string* JudgeItemInfo::mutable_item_name() {
  set_has_item_name();
  // @@protoc_insertion_point(field_mutable:OPMessage.JudgeItemInfo.item_name)
  return item_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* JudgeItemInfo::release_item_name() {
  // @@protoc_insertion_point(field_release:OPMessage.JudgeItemInfo.item_name)
  clear_has_item_name();
  return item_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JudgeItemInfo::set_allocated_item_name(::std::string* item_name) {
  if (item_name != NULL) {
    set_has_item_name();
  } else {
    clear_has_item_name();
  }
  item_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_name);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.JudgeItemInfo.item_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

::std::string* ConfigInfoBasic::_default_com_gps_ = NULL;
::std::string* ConfigInfoBasic::_default_com_sensor_ = NULL;
::std::string* ConfigInfoBasic::_default_com_printer_ = NULL;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigInfoBasic::kComGpsFieldNumber;
const int ConfigInfoBasic::kComSensorFieldNumber;
const int ConfigInfoBasic::kComPrinterFieldNumber;
const int ConfigInfoBasic::kComPrinterWhetherUseFieldNumber;
const int ConfigInfoBasic::kComPrinterHeaderFieldNumber;
const int ConfigInfoBasic::kComPrinterFooterFieldNumber;
const int ConfigInfoBasic::kStationLatitudeFieldNumber;
const int ConfigInfoBasic::kStationLongitudeFieldNumber;
const int ConfigInfoBasic::kStationAltitudeFieldNumber;
const int ConfigInfoBasic::kStationCenterLontitudeFieldNumber;
const int ConfigInfoBasic::kAlignFrontAntennaHighFieldNumber;
const int ConfigInfoBasic::kAlignBackAntennaHighFieldNumber;
const int ConfigInfoBasic::kAlignUnderpanHighFieldNumber;
const int ConfigInfoBasic::kAlignBaseLineFieldNumber;
const int ConfigInfoBasic::kAlignPitchFieldNumber;
const int ConfigInfoBasic::kAlignTrackFieldNumber;
const int ConfigInfoBasic::kAlignTerminalDataHzFieldNumber;
const int ConfigInfoBasic::kAlignMinspeedFieldNumber;
const int ConfigInfoBasic::kJudgeTestItemsArrayFieldNumber;
const int ConfigInfoBasic::kJudgeTestItemsArray3FieldNumber;
const int ConfigInfoBasic::kJudgeManualTestItemsArrayFieldNumber;
const int ConfigInfoBasic::kJudgeItemWhetherSequenceFieldNumber;
const int ConfigInfoBasic::kPhpsicSensorArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigInfoBasic::ConfigInfoBasic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ConfigInfoBasic)
}

void ConfigInfoBasic::InitAsDefaultInstance() {
}

ConfigInfoBasic::ConfigInfoBasic(const ConfigInfoBasic& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ConfigInfoBasic)
}

void ConfigInfoBasic::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  com_gps_.UnsafeSetDefault(_default_com_gps_);
  com_sensor_.UnsafeSetDefault(_default_com_sensor_);
  com_printer_.UnsafeSetDefault(_default_com_printer_);
  com_printer_whether_use_ = true;
  com_printer_header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  com_printer_footer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  station_latitude_ = 0;
  station_longitude_ = 0;
  station_altitude_ = 0;
  station_centerlontitude_ = 0;
  align_frontantennahigh_ = 0;
  align_backantennahigh_ = 0;
  align_underpanhigh_ = 0;
  align_baseline_ = 0;
  align_pitch_ = 0;
  align_track_ = 0;
  align_terminaldatahz_ = 0;
  align_minspeed_ = 0;
  judge_item_whether_sequence_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConfigInfoBasic::~ConfigInfoBasic() {
  // @@protoc_insertion_point(destructor:OPMessage.ConfigInfoBasic)
  SharedDtor();
}

void ConfigInfoBasic::SharedDtor() {
  com_gps_.DestroyNoArena(_default_com_gps_);
  com_sensor_.DestroyNoArena(_default_com_sensor_);
  com_printer_.DestroyNoArena(_default_com_printer_);
  com_printer_header_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  com_printer_footer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ConfigInfoBasic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigInfoBasic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConfigInfoBasic_descriptor_;
}

const ConfigInfoBasic& ConfigInfoBasic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ConfigInfoBasic* ConfigInfoBasic::default_instance_ = NULL;

ConfigInfoBasic* ConfigInfoBasic::New(::google::protobuf::Arena* arena) const {
  ConfigInfoBasic* n = new ConfigInfoBasic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigInfoBasic::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ConfigInfoBasic)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ConfigInfoBasic, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ConfigInfoBasic*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(station_latitude_, station_longitude_);
    if (has_com_gps()) {
      com_gps_.ClearToDefaultNoArena(_default_com_gps_);
    }
    if (has_com_sensor()) {
      com_sensor_.ClearToDefaultNoArena(_default_com_sensor_);
    }
    if (has_com_printer()) {
      com_printer_.ClearToDefaultNoArena(_default_com_printer_);
    }
    com_printer_whether_use_ = true;
    if (has_com_printer_header()) {
      com_printer_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_com_printer_footer()) {
      com_printer_footer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(station_altitude_, align_baseline_);
    ZR_(align_pitch_, align_track_);
  }
  if (_has_bits_[16 / 32] & 2293760u) {
    ZR_(judge_item_whether_sequence_, align_terminaldatahz_);
    align_minspeed_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  judge_test_items_array_.Clear();
  judge_test_items_array3_.Clear();
  judge_manual_test_items_array_.Clear();
  phpsic_sensor_array_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ConfigInfoBasic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ConfigInfoBasic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string com_gps = 1 [default = "COM1"];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_com_gps()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->com_gps().data(), this->com_gps().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ConfigInfoBasic.com_gps");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_com_sensor;
        break;
      }

      // optional string com_sensor = 2 [default = "COM2"];
      case 2: {
        if (tag == 18) {
         parse_com_sensor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_com_sensor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->com_sensor().data(), this->com_sensor().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ConfigInfoBasic.com_sensor");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_com_printer;
        break;
      }

      // optional string com_printer = 3 [default = "COM3"];
      case 3: {
        if (tag == 26) {
         parse_com_printer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_com_printer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->com_printer().data(), this->com_printer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ConfigInfoBasic.com_printer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_com_printer_whether_use;
        break;
      }

      // optional bool com_printer_whether_use = 4 [default = true];
      case 4: {
        if (tag == 32) {
         parse_com_printer_whether_use:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &com_printer_whether_use_)));
          set_has_com_printer_whether_use();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_com_printer_header;
        break;
      }

      // optional string com_printer_header = 5;
      case 5: {
        if (tag == 42) {
         parse_com_printer_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_com_printer_header()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->com_printer_header().data(), this->com_printer_header().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ConfigInfoBasic.com_printer_header");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_com_printer_footer;
        break;
      }

      // optional string com_printer_footer = 6;
      case 6: {
        if (tag == 50) {
         parse_com_printer_footer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_com_printer_footer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->com_printer_footer().data(), this->com_printer_footer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ConfigInfoBasic.com_printer_footer");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_station_latitude;
        break;
      }

      // optional double station_latitude = 7;
      case 7: {
        if (tag == 57) {
         parse_station_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &station_latitude_)));
          set_has_station_latitude();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_station_longitude;
        break;
      }

      // optional double station_longitude = 8;
      case 8: {
        if (tag == 65) {
         parse_station_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &station_longitude_)));
          set_has_station_longitude();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(73)) goto parse_station_altitude;
        break;
      }

      // optional double station_altitude = 9;
      case 9: {
        if (tag == 73) {
         parse_station_altitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &station_altitude_)));
          set_has_station_altitude();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_station_centerLontitude;
        break;
      }

      // optional double station_centerLontitude = 10;
      case 10: {
        if (tag == 81) {
         parse_station_centerLontitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &station_centerlontitude_)));
          set_has_station_centerlontitude();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_align_frontAntennaHigh;
        break;
      }

      // optional double align_frontAntennaHigh = 11;
      case 11: {
        if (tag == 89) {
         parse_align_frontAntennaHigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &align_frontantennahigh_)));
          set_has_align_frontantennahigh();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_align_backAntennaHigh;
        break;
      }

      // optional double align_backAntennaHigh = 12;
      case 12: {
        if (tag == 97) {
         parse_align_backAntennaHigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &align_backantennahigh_)));
          set_has_align_backantennahigh();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_align_underpanHigh;
        break;
      }

      // optional double align_underpanHigh = 13;
      case 13: {
        if (tag == 105) {
         parse_align_underpanHigh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &align_underpanhigh_)));
          set_has_align_underpanhigh();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_align_baseLine;
        break;
      }

      // optional double align_baseLine = 14;
      case 14: {
        if (tag == 113) {
         parse_align_baseLine:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &align_baseline_)));
          set_has_align_baseline();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_align_pitch;
        break;
      }

      // optional double align_pitch = 15;
      case 15: {
        if (tag == 121) {
         parse_align_pitch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &align_pitch_)));
          set_has_align_pitch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_align_track;
        break;
      }

      // optional double align_track = 16;
      case 16: {
        if (tag == 129) {
         parse_align_track:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &align_track_)));
          set_has_align_track();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_align_terminalDataHz;
        break;
      }

      // optional int32 align_terminalDataHz = 17;
      case 17: {
        if (tag == 136) {
         parse_align_terminalDataHz:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &align_terminaldatahz_)));
          set_has_align_terminaldatahz();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_align_minspeed;
        break;
      }

      // optional double align_minspeed = 18;
      case 18: {
        if (tag == 145) {
         parse_align_minspeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &align_minspeed_)));
          set_has_align_minspeed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_judge_test_items_array;
        break;
      }

      // repeated .OPMessage.JudgeItemInfo judge_test_items_array = 19;
      case 19: {
        if (tag == 154) {
         parse_judge_test_items_array:
          DO_(input->IncrementRecursionDepth());
         parse_loop_judge_test_items_array:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_judge_test_items_array()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_loop_judge_test_items_array;
        if (input->ExpectTag(162)) goto parse_loop_judge_test_items_array3;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .OPMessage.JudgeItemInfo judge_test_items_array3 = 20;
      case 20: {
        if (tag == 162) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_judge_test_items_array3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_judge_test_items_array3()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_loop_judge_test_items_array3;
        if (input->ExpectTag(170)) goto parse_loop_judge_manual_test_items_array;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .OPMessage.JudgeItemInfo judge_manual_test_items_array = 21;
      case 21: {
        if (tag == 170) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_judge_manual_test_items_array:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_judge_manual_test_items_array()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_loop_judge_manual_test_items_array;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(176)) goto parse_judge_item_whether_sequence;
        break;
      }

      // optional bool judge_item_whether_sequence = 22;
      case 22: {
        if (tag == 176) {
         parse_judge_item_whether_sequence:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &judge_item_whether_sequence_)));
          set_has_judge_item_whether_sequence();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_phpsic_sensor_array;
        break;
      }

      // repeated .OPMessage.ConfigPhysicSensor phpsic_sensor_array = 23;
      case 23: {
        if (tag == 186) {
         parse_phpsic_sensor_array:
          DO_(input->IncrementRecursionDepth());
         parse_loop_phpsic_sensor_array:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_phpsic_sensor_array()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_loop_phpsic_sensor_array;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ConfigInfoBasic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ConfigInfoBasic)
  return false;
#undef DO_
}

void ConfigInfoBasic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ConfigInfoBasic)
  // optional string com_gps = 1 [default = "COM1"];
  if (has_com_gps()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->com_gps().data(), this->com_gps().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigInfoBasic.com_gps");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->com_gps(), output);
  }

  // optional string com_sensor = 2 [default = "COM2"];
  if (has_com_sensor()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->com_sensor().data(), this->com_sensor().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigInfoBasic.com_sensor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->com_sensor(), output);
  }

  // optional string com_printer = 3 [default = "COM3"];
  if (has_com_printer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->com_printer().data(), this->com_printer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigInfoBasic.com_printer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->com_printer(), output);
  }

  // optional bool com_printer_whether_use = 4 [default = true];
  if (has_com_printer_whether_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->com_printer_whether_use(), output);
  }

  // optional string com_printer_header = 5;
  if (has_com_printer_header()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->com_printer_header().data(), this->com_printer_header().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigInfoBasic.com_printer_header");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->com_printer_header(), output);
  }

  // optional string com_printer_footer = 6;
  if (has_com_printer_footer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->com_printer_footer().data(), this->com_printer_footer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigInfoBasic.com_printer_footer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->com_printer_footer(), output);
  }

  // optional double station_latitude = 7;
  if (has_station_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->station_latitude(), output);
  }

  // optional double station_longitude = 8;
  if (has_station_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->station_longitude(), output);
  }

  // optional double station_altitude = 9;
  if (has_station_altitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->station_altitude(), output);
  }

  // optional double station_centerLontitude = 10;
  if (has_station_centerlontitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->station_centerlontitude(), output);
  }

  // optional double align_frontAntennaHigh = 11;
  if (has_align_frontantennahigh()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->align_frontantennahigh(), output);
  }

  // optional double align_backAntennaHigh = 12;
  if (has_align_backantennahigh()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->align_backantennahigh(), output);
  }

  // optional double align_underpanHigh = 13;
  if (has_align_underpanhigh()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->align_underpanhigh(), output);
  }

  // optional double align_baseLine = 14;
  if (has_align_baseline()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->align_baseline(), output);
  }

  // optional double align_pitch = 15;
  if (has_align_pitch()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->align_pitch(), output);
  }

  // optional double align_track = 16;
  if (has_align_track()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->align_track(), output);
  }

  // optional int32 align_terminalDataHz = 17;
  if (has_align_terminaldatahz()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->align_terminaldatahz(), output);
  }

  // optional double align_minspeed = 18;
  if (has_align_minspeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->align_minspeed(), output);
  }

  // repeated .OPMessage.JudgeItemInfo judge_test_items_array = 19;
  for (unsigned int i = 0, n = this->judge_test_items_array_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->judge_test_items_array(i), output);
  }

  // repeated .OPMessage.JudgeItemInfo judge_test_items_array3 = 20;
  for (unsigned int i = 0, n = this->judge_test_items_array3_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->judge_test_items_array3(i), output);
  }

  // repeated .OPMessage.JudgeItemInfo judge_manual_test_items_array = 21;
  for (unsigned int i = 0, n = this->judge_manual_test_items_array_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->judge_manual_test_items_array(i), output);
  }

  // optional bool judge_item_whether_sequence = 22;
  if (has_judge_item_whether_sequence()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->judge_item_whether_sequence(), output);
  }

  // repeated .OPMessage.ConfigPhysicSensor phpsic_sensor_array = 23;
  for (unsigned int i = 0, n = this->phpsic_sensor_array_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->phpsic_sensor_array(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ConfigInfoBasic)
}

::google::protobuf::uint8* ConfigInfoBasic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ConfigInfoBasic)
  // optional string com_gps = 1 [default = "COM1"];
  if (has_com_gps()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->com_gps().data(), this->com_gps().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigInfoBasic.com_gps");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->com_gps(), target);
  }

  // optional string com_sensor = 2 [default = "COM2"];
  if (has_com_sensor()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->com_sensor().data(), this->com_sensor().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigInfoBasic.com_sensor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->com_sensor(), target);
  }

  // optional string com_printer = 3 [default = "COM3"];
  if (has_com_printer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->com_printer().data(), this->com_printer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigInfoBasic.com_printer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->com_printer(), target);
  }

  // optional bool com_printer_whether_use = 4 [default = true];
  if (has_com_printer_whether_use()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->com_printer_whether_use(), target);
  }

  // optional string com_printer_header = 5;
  if (has_com_printer_header()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->com_printer_header().data(), this->com_printer_header().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigInfoBasic.com_printer_header");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->com_printer_header(), target);
  }

  // optional string com_printer_footer = 6;
  if (has_com_printer_footer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->com_printer_footer().data(), this->com_printer_footer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ConfigInfoBasic.com_printer_footer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->com_printer_footer(), target);
  }

  // optional double station_latitude = 7;
  if (has_station_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->station_latitude(), target);
  }

  // optional double station_longitude = 8;
  if (has_station_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->station_longitude(), target);
  }

  // optional double station_altitude = 9;
  if (has_station_altitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->station_altitude(), target);
  }

  // optional double station_centerLontitude = 10;
  if (has_station_centerlontitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->station_centerlontitude(), target);
  }

  // optional double align_frontAntennaHigh = 11;
  if (has_align_frontantennahigh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->align_frontantennahigh(), target);
  }

  // optional double align_backAntennaHigh = 12;
  if (has_align_backantennahigh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->align_backantennahigh(), target);
  }

  // optional double align_underpanHigh = 13;
  if (has_align_underpanhigh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->align_underpanhigh(), target);
  }

  // optional double align_baseLine = 14;
  if (has_align_baseline()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->align_baseline(), target);
  }

  // optional double align_pitch = 15;
  if (has_align_pitch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->align_pitch(), target);
  }

  // optional double align_track = 16;
  if (has_align_track()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->align_track(), target);
  }

  // optional int32 align_terminalDataHz = 17;
  if (has_align_terminaldatahz()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->align_terminaldatahz(), target);
  }

  // optional double align_minspeed = 18;
  if (has_align_minspeed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->align_minspeed(), target);
  }

  // repeated .OPMessage.JudgeItemInfo judge_test_items_array = 19;
  for (unsigned int i = 0, n = this->judge_test_items_array_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, this->judge_test_items_array(i), false, target);
  }

  // repeated .OPMessage.JudgeItemInfo judge_test_items_array3 = 20;
  for (unsigned int i = 0, n = this->judge_test_items_array3_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, this->judge_test_items_array3(i), false, target);
  }

  // repeated .OPMessage.JudgeItemInfo judge_manual_test_items_array = 21;
  for (unsigned int i = 0, n = this->judge_manual_test_items_array_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, this->judge_manual_test_items_array(i), false, target);
  }

  // optional bool judge_item_whether_sequence = 22;
  if (has_judge_item_whether_sequence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->judge_item_whether_sequence(), target);
  }

  // repeated .OPMessage.ConfigPhysicSensor phpsic_sensor_array = 23;
  for (unsigned int i = 0, n = this->phpsic_sensor_array_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, this->phpsic_sensor_array(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ConfigInfoBasic)
  return target;
}

int ConfigInfoBasic::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ConfigInfoBasic)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string com_gps = 1 [default = "COM1"];
    if (has_com_gps()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->com_gps());
    }

    // optional string com_sensor = 2 [default = "COM2"];
    if (has_com_sensor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->com_sensor());
    }

    // optional string com_printer = 3 [default = "COM3"];
    if (has_com_printer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->com_printer());
    }

    // optional bool com_printer_whether_use = 4 [default = true];
    if (has_com_printer_whether_use()) {
      total_size += 1 + 1;
    }

    // optional string com_printer_header = 5;
    if (has_com_printer_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->com_printer_header());
    }

    // optional string com_printer_footer = 6;
    if (has_com_printer_footer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->com_printer_footer());
    }

    // optional double station_latitude = 7;
    if (has_station_latitude()) {
      total_size += 1 + 8;
    }

    // optional double station_longitude = 8;
    if (has_station_longitude()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional double station_altitude = 9;
    if (has_station_altitude()) {
      total_size += 1 + 8;
    }

    // optional double station_centerLontitude = 10;
    if (has_station_centerlontitude()) {
      total_size += 1 + 8;
    }

    // optional double align_frontAntennaHigh = 11;
    if (has_align_frontantennahigh()) {
      total_size += 1 + 8;
    }

    // optional double align_backAntennaHigh = 12;
    if (has_align_backantennahigh()) {
      total_size += 1 + 8;
    }

    // optional double align_underpanHigh = 13;
    if (has_align_underpanhigh()) {
      total_size += 1 + 8;
    }

    // optional double align_baseLine = 14;
    if (has_align_baseline()) {
      total_size += 1 + 8;
    }

    // optional double align_pitch = 15;
    if (has_align_pitch()) {
      total_size += 1 + 8;
    }

    // optional double align_track = 16;
    if (has_align_track()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[16 / 32] & 2293760u) {
    // optional int32 align_terminalDataHz = 17;
    if (has_align_terminaldatahz()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->align_terminaldatahz());
    }

    // optional double align_minspeed = 18;
    if (has_align_minspeed()) {
      total_size += 2 + 8;
    }

    // optional bool judge_item_whether_sequence = 22;
    if (has_judge_item_whether_sequence()) {
      total_size += 2 + 1;
    }

  }
  // repeated .OPMessage.JudgeItemInfo judge_test_items_array = 19;
  total_size += 2 * this->judge_test_items_array_size();
  for (int i = 0; i < this->judge_test_items_array_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->judge_test_items_array(i));
  }

  // repeated .OPMessage.JudgeItemInfo judge_test_items_array3 = 20;
  total_size += 2 * this->judge_test_items_array3_size();
  for (int i = 0; i < this->judge_test_items_array3_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->judge_test_items_array3(i));
  }

  // repeated .OPMessage.JudgeItemInfo judge_manual_test_items_array = 21;
  total_size += 2 * this->judge_manual_test_items_array_size();
  for (int i = 0; i < this->judge_manual_test_items_array_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->judge_manual_test_items_array(i));
  }

  // repeated .OPMessage.ConfigPhysicSensor phpsic_sensor_array = 23;
  total_size += 2 * this->phpsic_sensor_array_size();
  for (int i = 0; i < this->phpsic_sensor_array_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->phpsic_sensor_array(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigInfoBasic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ConfigInfoBasic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ConfigInfoBasic* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigInfoBasic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ConfigInfoBasic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ConfigInfoBasic)
    MergeFrom(*source);
  }
}

void ConfigInfoBasic::MergeFrom(const ConfigInfoBasic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ConfigInfoBasic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  judge_test_items_array_.MergeFrom(from.judge_test_items_array_);
  judge_test_items_array3_.MergeFrom(from.judge_test_items_array3_);
  judge_manual_test_items_array_.MergeFrom(from.judge_manual_test_items_array_);
  phpsic_sensor_array_.MergeFrom(from.phpsic_sensor_array_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_com_gps()) {
      set_has_com_gps();
      com_gps_.AssignWithDefault(_default_com_gps_, from.com_gps_);
    }
    if (from.has_com_sensor()) {
      set_has_com_sensor();
      com_sensor_.AssignWithDefault(_default_com_sensor_, from.com_sensor_);
    }
    if (from.has_com_printer()) {
      set_has_com_printer();
      com_printer_.AssignWithDefault(_default_com_printer_, from.com_printer_);
    }
    if (from.has_com_printer_whether_use()) {
      set_com_printer_whether_use(from.com_printer_whether_use());
    }
    if (from.has_com_printer_header()) {
      set_has_com_printer_header();
      com_printer_header_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.com_printer_header_);
    }
    if (from.has_com_printer_footer()) {
      set_has_com_printer_footer();
      com_printer_footer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.com_printer_footer_);
    }
    if (from.has_station_latitude()) {
      set_station_latitude(from.station_latitude());
    }
    if (from.has_station_longitude()) {
      set_station_longitude(from.station_longitude());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_station_altitude()) {
      set_station_altitude(from.station_altitude());
    }
    if (from.has_station_centerlontitude()) {
      set_station_centerlontitude(from.station_centerlontitude());
    }
    if (from.has_align_frontantennahigh()) {
      set_align_frontantennahigh(from.align_frontantennahigh());
    }
    if (from.has_align_backantennahigh()) {
      set_align_backantennahigh(from.align_backantennahigh());
    }
    if (from.has_align_underpanhigh()) {
      set_align_underpanhigh(from.align_underpanhigh());
    }
    if (from.has_align_baseline()) {
      set_align_baseline(from.align_baseline());
    }
    if (from.has_align_pitch()) {
      set_align_pitch(from.align_pitch());
    }
    if (from.has_align_track()) {
      set_align_track(from.align_track());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_align_terminaldatahz()) {
      set_align_terminaldatahz(from.align_terminaldatahz());
    }
    if (from.has_align_minspeed()) {
      set_align_minspeed(from.align_minspeed());
    }
    if (from.has_judge_item_whether_sequence()) {
      set_judge_item_whether_sequence(from.judge_item_whether_sequence());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ConfigInfoBasic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ConfigInfoBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigInfoBasic::CopyFrom(const ConfigInfoBasic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ConfigInfoBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigInfoBasic::IsInitialized() const {

  return true;
}

void ConfigInfoBasic::Swap(ConfigInfoBasic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigInfoBasic::InternalSwap(ConfigInfoBasic* other) {
  com_gps_.Swap(&other->com_gps_);
  com_sensor_.Swap(&other->com_sensor_);
  com_printer_.Swap(&other->com_printer_);
  std::swap(com_printer_whether_use_, other->com_printer_whether_use_);
  com_printer_header_.Swap(&other->com_printer_header_);
  com_printer_footer_.Swap(&other->com_printer_footer_);
  std::swap(station_latitude_, other->station_latitude_);
  std::swap(station_longitude_, other->station_longitude_);
  std::swap(station_altitude_, other->station_altitude_);
  std::swap(station_centerlontitude_, other->station_centerlontitude_);
  std::swap(align_frontantennahigh_, other->align_frontantennahigh_);
  std::swap(align_backantennahigh_, other->align_backantennahigh_);
  std::swap(align_underpanhigh_, other->align_underpanhigh_);
  std::swap(align_baseline_, other->align_baseline_);
  std::swap(align_pitch_, other->align_pitch_);
  std::swap(align_track_, other->align_track_);
  std::swap(align_terminaldatahz_, other->align_terminaldatahz_);
  std::swap(align_minspeed_, other->align_minspeed_);
  judge_test_items_array_.UnsafeArenaSwap(&other->judge_test_items_array_);
  judge_test_items_array3_.UnsafeArenaSwap(&other->judge_test_items_array3_);
  judge_manual_test_items_array_.UnsafeArenaSwap(&other->judge_manual_test_items_array_);
  std::swap(judge_item_whether_sequence_, other->judge_item_whether_sequence_);
  phpsic_sensor_array_.UnsafeArenaSwap(&other->phpsic_sensor_array_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigInfoBasic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConfigInfoBasic_descriptor_;
  metadata.reflection = ConfigInfoBasic_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigInfoBasic

// optional string com_gps = 1 [default = "COM1"];
bool ConfigInfoBasic::has_com_gps() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ConfigInfoBasic::set_has_com_gps() {
  _has_bits_[0] |= 0x00000001u;
}
void ConfigInfoBasic::clear_has_com_gps() {
  _has_bits_[0] &= ~0x00000001u;
}
void ConfigInfoBasic::clear_com_gps() {
  com_gps_.ClearToDefaultNoArena(_default_com_gps_);
  clear_has_com_gps();
}
 const ::std::string& ConfigInfoBasic::com_gps() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.com_gps)
  return com_gps_.GetNoArena(_default_com_gps_);
}
 void ConfigInfoBasic::set_com_gps(const ::std::string& value) {
  set_has_com_gps();
  com_gps_.SetNoArena(_default_com_gps_, value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.com_gps)
}
 void ConfigInfoBasic::set_com_gps(const char* value) {
  set_has_com_gps();
  com_gps_.SetNoArena(_default_com_gps_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigInfoBasic.com_gps)
}
 void ConfigInfoBasic::set_com_gps(const char* value, size_t size) {
  set_has_com_gps();
  com_gps_.SetNoArena(_default_com_gps_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigInfoBasic.com_gps)
}
 ::std::string* ConfigInfoBasic::mutable_com_gps() {
  set_has_com_gps();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.com_gps)
  return com_gps_.MutableNoArena(_default_com_gps_);
}
 ::std::string* ConfigInfoBasic::release_com_gps() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigInfoBasic.com_gps)
  clear_has_com_gps();
  return com_gps_.ReleaseNoArena(_default_com_gps_);
}
 void ConfigInfoBasic::set_allocated_com_gps(::std::string* com_gps) {
  if (com_gps != NULL) {
    set_has_com_gps();
  } else {
    clear_has_com_gps();
  }
  com_gps_.SetAllocatedNoArena(_default_com_gps_, com_gps);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigInfoBasic.com_gps)
}

// optional string com_sensor = 2 [default = "COM2"];
bool ConfigInfoBasic::has_com_sensor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ConfigInfoBasic::set_has_com_sensor() {
  _has_bits_[0] |= 0x00000002u;
}
void ConfigInfoBasic::clear_has_com_sensor() {
  _has_bits_[0] &= ~0x00000002u;
}
void ConfigInfoBasic::clear_com_sensor() {
  com_sensor_.ClearToDefaultNoArena(_default_com_sensor_);
  clear_has_com_sensor();
}
 const ::std::string& ConfigInfoBasic::com_sensor() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.com_sensor)
  return com_sensor_.GetNoArena(_default_com_sensor_);
}
 void ConfigInfoBasic::set_com_sensor(const ::std::string& value) {
  set_has_com_sensor();
  com_sensor_.SetNoArena(_default_com_sensor_, value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.com_sensor)
}
 void ConfigInfoBasic::set_com_sensor(const char* value) {
  set_has_com_sensor();
  com_sensor_.SetNoArena(_default_com_sensor_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigInfoBasic.com_sensor)
}
 void ConfigInfoBasic::set_com_sensor(const char* value, size_t size) {
  set_has_com_sensor();
  com_sensor_.SetNoArena(_default_com_sensor_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigInfoBasic.com_sensor)
}
 ::std::string* ConfigInfoBasic::mutable_com_sensor() {
  set_has_com_sensor();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.com_sensor)
  return com_sensor_.MutableNoArena(_default_com_sensor_);
}
 ::std::string* ConfigInfoBasic::release_com_sensor() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigInfoBasic.com_sensor)
  clear_has_com_sensor();
  return com_sensor_.ReleaseNoArena(_default_com_sensor_);
}
 void ConfigInfoBasic::set_allocated_com_sensor(::std::string* com_sensor) {
  if (com_sensor != NULL) {
    set_has_com_sensor();
  } else {
    clear_has_com_sensor();
  }
  com_sensor_.SetAllocatedNoArena(_default_com_sensor_, com_sensor);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigInfoBasic.com_sensor)
}

// optional string com_printer = 3 [default = "COM3"];
bool ConfigInfoBasic::has_com_printer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ConfigInfoBasic::set_has_com_printer() {
  _has_bits_[0] |= 0x00000004u;
}
void ConfigInfoBasic::clear_has_com_printer() {
  _has_bits_[0] &= ~0x00000004u;
}
void ConfigInfoBasic::clear_com_printer() {
  com_printer_.ClearToDefaultNoArena(_default_com_printer_);
  clear_has_com_printer();
}
 const ::std::string& ConfigInfoBasic::com_printer() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.com_printer)
  return com_printer_.GetNoArena(_default_com_printer_);
}
 void ConfigInfoBasic::set_com_printer(const ::std::string& value) {
  set_has_com_printer();
  com_printer_.SetNoArena(_default_com_printer_, value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.com_printer)
}
 void ConfigInfoBasic::set_com_printer(const char* value) {
  set_has_com_printer();
  com_printer_.SetNoArena(_default_com_printer_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigInfoBasic.com_printer)
}
 void ConfigInfoBasic::set_com_printer(const char* value, size_t size) {
  set_has_com_printer();
  com_printer_.SetNoArena(_default_com_printer_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigInfoBasic.com_printer)
}
 ::std::string* ConfigInfoBasic::mutable_com_printer() {
  set_has_com_printer();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.com_printer)
  return com_printer_.MutableNoArena(_default_com_printer_);
}
 ::std::string* ConfigInfoBasic::release_com_printer() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigInfoBasic.com_printer)
  clear_has_com_printer();
  return com_printer_.ReleaseNoArena(_default_com_printer_);
}
 void ConfigInfoBasic::set_allocated_com_printer(::std::string* com_printer) {
  if (com_printer != NULL) {
    set_has_com_printer();
  } else {
    clear_has_com_printer();
  }
  com_printer_.SetAllocatedNoArena(_default_com_printer_, com_printer);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigInfoBasic.com_printer)
}

// optional bool com_printer_whether_use = 4 [default = true];
bool ConfigInfoBasic::has_com_printer_whether_use() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ConfigInfoBasic::set_has_com_printer_whether_use() {
  _has_bits_[0] |= 0x00000008u;
}
void ConfigInfoBasic::clear_has_com_printer_whether_use() {
  _has_bits_[0] &= ~0x00000008u;
}
void ConfigInfoBasic::clear_com_printer_whether_use() {
  com_printer_whether_use_ = true;
  clear_has_com_printer_whether_use();
}
 bool ConfigInfoBasic::com_printer_whether_use() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.com_printer_whether_use)
  return com_printer_whether_use_;
}
 void ConfigInfoBasic::set_com_printer_whether_use(bool value) {
  set_has_com_printer_whether_use();
  com_printer_whether_use_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.com_printer_whether_use)
}

// optional string com_printer_header = 5;
bool ConfigInfoBasic::has_com_printer_header() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ConfigInfoBasic::set_has_com_printer_header() {
  _has_bits_[0] |= 0x00000010u;
}
void ConfigInfoBasic::clear_has_com_printer_header() {
  _has_bits_[0] &= ~0x00000010u;
}
void ConfigInfoBasic::clear_com_printer_header() {
  com_printer_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_com_printer_header();
}
 const ::std::string& ConfigInfoBasic::com_printer_header() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.com_printer_header)
  return com_printer_header_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigInfoBasic::set_com_printer_header(const ::std::string& value) {
  set_has_com_printer_header();
  com_printer_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.com_printer_header)
}
 void ConfigInfoBasic::set_com_printer_header(const char* value) {
  set_has_com_printer_header();
  com_printer_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigInfoBasic.com_printer_header)
}
 void ConfigInfoBasic::set_com_printer_header(const char* value, size_t size) {
  set_has_com_printer_header();
  com_printer_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigInfoBasic.com_printer_header)
}
 ::std::string* ConfigInfoBasic::mutable_com_printer_header() {
  set_has_com_printer_header();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.com_printer_header)
  return com_printer_header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ConfigInfoBasic::release_com_printer_header() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigInfoBasic.com_printer_header)
  clear_has_com_printer_header();
  return com_printer_header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigInfoBasic::set_allocated_com_printer_header(::std::string* com_printer_header) {
  if (com_printer_header != NULL) {
    set_has_com_printer_header();
  } else {
    clear_has_com_printer_header();
  }
  com_printer_header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), com_printer_header);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigInfoBasic.com_printer_header)
}

// optional string com_printer_footer = 6;
bool ConfigInfoBasic::has_com_printer_footer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ConfigInfoBasic::set_has_com_printer_footer() {
  _has_bits_[0] |= 0x00000020u;
}
void ConfigInfoBasic::clear_has_com_printer_footer() {
  _has_bits_[0] &= ~0x00000020u;
}
void ConfigInfoBasic::clear_com_printer_footer() {
  com_printer_footer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_com_printer_footer();
}
 const ::std::string& ConfigInfoBasic::com_printer_footer() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.com_printer_footer)
  return com_printer_footer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigInfoBasic::set_com_printer_footer(const ::std::string& value) {
  set_has_com_printer_footer();
  com_printer_footer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.com_printer_footer)
}
 void ConfigInfoBasic::set_com_printer_footer(const char* value) {
  set_has_com_printer_footer();
  com_printer_footer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ConfigInfoBasic.com_printer_footer)
}
 void ConfigInfoBasic::set_com_printer_footer(const char* value, size_t size) {
  set_has_com_printer_footer();
  com_printer_footer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ConfigInfoBasic.com_printer_footer)
}
 ::std::string* ConfigInfoBasic::mutable_com_printer_footer() {
  set_has_com_printer_footer();
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.com_printer_footer)
  return com_printer_footer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ConfigInfoBasic::release_com_printer_footer() {
  // @@protoc_insertion_point(field_release:OPMessage.ConfigInfoBasic.com_printer_footer)
  clear_has_com_printer_footer();
  return com_printer_footer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConfigInfoBasic::set_allocated_com_printer_footer(::std::string* com_printer_footer) {
  if (com_printer_footer != NULL) {
    set_has_com_printer_footer();
  } else {
    clear_has_com_printer_footer();
  }
  com_printer_footer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), com_printer_footer);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ConfigInfoBasic.com_printer_footer)
}

// optional double station_latitude = 7;
bool ConfigInfoBasic::has_station_latitude() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ConfigInfoBasic::set_has_station_latitude() {
  _has_bits_[0] |= 0x00000040u;
}
void ConfigInfoBasic::clear_has_station_latitude() {
  _has_bits_[0] &= ~0x00000040u;
}
void ConfigInfoBasic::clear_station_latitude() {
  station_latitude_ = 0;
  clear_has_station_latitude();
}
 double ConfigInfoBasic::station_latitude() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.station_latitude)
  return station_latitude_;
}
 void ConfigInfoBasic::set_station_latitude(double value) {
  set_has_station_latitude();
  station_latitude_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.station_latitude)
}

// optional double station_longitude = 8;
bool ConfigInfoBasic::has_station_longitude() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ConfigInfoBasic::set_has_station_longitude() {
  _has_bits_[0] |= 0x00000080u;
}
void ConfigInfoBasic::clear_has_station_longitude() {
  _has_bits_[0] &= ~0x00000080u;
}
void ConfigInfoBasic::clear_station_longitude() {
  station_longitude_ = 0;
  clear_has_station_longitude();
}
 double ConfigInfoBasic::station_longitude() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.station_longitude)
  return station_longitude_;
}
 void ConfigInfoBasic::set_station_longitude(double value) {
  set_has_station_longitude();
  station_longitude_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.station_longitude)
}

// optional double station_altitude = 9;
bool ConfigInfoBasic::has_station_altitude() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ConfigInfoBasic::set_has_station_altitude() {
  _has_bits_[0] |= 0x00000100u;
}
void ConfigInfoBasic::clear_has_station_altitude() {
  _has_bits_[0] &= ~0x00000100u;
}
void ConfigInfoBasic::clear_station_altitude() {
  station_altitude_ = 0;
  clear_has_station_altitude();
}
 double ConfigInfoBasic::station_altitude() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.station_altitude)
  return station_altitude_;
}
 void ConfigInfoBasic::set_station_altitude(double value) {
  set_has_station_altitude();
  station_altitude_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.station_altitude)
}

// optional double station_centerLontitude = 10;
bool ConfigInfoBasic::has_station_centerlontitude() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ConfigInfoBasic::set_has_station_centerlontitude() {
  _has_bits_[0] |= 0x00000200u;
}
void ConfigInfoBasic::clear_has_station_centerlontitude() {
  _has_bits_[0] &= ~0x00000200u;
}
void ConfigInfoBasic::clear_station_centerlontitude() {
  station_centerlontitude_ = 0;
  clear_has_station_centerlontitude();
}
 double ConfigInfoBasic::station_centerlontitude() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.station_centerLontitude)
  return station_centerlontitude_;
}
 void ConfigInfoBasic::set_station_centerlontitude(double value) {
  set_has_station_centerlontitude();
  station_centerlontitude_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.station_centerLontitude)
}

// optional double align_frontAntennaHigh = 11;
bool ConfigInfoBasic::has_align_frontantennahigh() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ConfigInfoBasic::set_has_align_frontantennahigh() {
  _has_bits_[0] |= 0x00000400u;
}
void ConfigInfoBasic::clear_has_align_frontantennahigh() {
  _has_bits_[0] &= ~0x00000400u;
}
void ConfigInfoBasic::clear_align_frontantennahigh() {
  align_frontantennahigh_ = 0;
  clear_has_align_frontantennahigh();
}
 double ConfigInfoBasic::align_frontantennahigh() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_frontAntennaHigh)
  return align_frontantennahigh_;
}
 void ConfigInfoBasic::set_align_frontantennahigh(double value) {
  set_has_align_frontantennahigh();
  align_frontantennahigh_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_frontAntennaHigh)
}

// optional double align_backAntennaHigh = 12;
bool ConfigInfoBasic::has_align_backantennahigh() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ConfigInfoBasic::set_has_align_backantennahigh() {
  _has_bits_[0] |= 0x00000800u;
}
void ConfigInfoBasic::clear_has_align_backantennahigh() {
  _has_bits_[0] &= ~0x00000800u;
}
void ConfigInfoBasic::clear_align_backantennahigh() {
  align_backantennahigh_ = 0;
  clear_has_align_backantennahigh();
}
 double ConfigInfoBasic::align_backantennahigh() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_backAntennaHigh)
  return align_backantennahigh_;
}
 void ConfigInfoBasic::set_align_backantennahigh(double value) {
  set_has_align_backantennahigh();
  align_backantennahigh_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_backAntennaHigh)
}

// optional double align_underpanHigh = 13;
bool ConfigInfoBasic::has_align_underpanhigh() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ConfigInfoBasic::set_has_align_underpanhigh() {
  _has_bits_[0] |= 0x00001000u;
}
void ConfigInfoBasic::clear_has_align_underpanhigh() {
  _has_bits_[0] &= ~0x00001000u;
}
void ConfigInfoBasic::clear_align_underpanhigh() {
  align_underpanhigh_ = 0;
  clear_has_align_underpanhigh();
}
 double ConfigInfoBasic::align_underpanhigh() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_underpanHigh)
  return align_underpanhigh_;
}
 void ConfigInfoBasic::set_align_underpanhigh(double value) {
  set_has_align_underpanhigh();
  align_underpanhigh_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_underpanHigh)
}

// optional double align_baseLine = 14;
bool ConfigInfoBasic::has_align_baseline() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ConfigInfoBasic::set_has_align_baseline() {
  _has_bits_[0] |= 0x00002000u;
}
void ConfigInfoBasic::clear_has_align_baseline() {
  _has_bits_[0] &= ~0x00002000u;
}
void ConfigInfoBasic::clear_align_baseline() {
  align_baseline_ = 0;
  clear_has_align_baseline();
}
 double ConfigInfoBasic::align_baseline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_baseLine)
  return align_baseline_;
}
 void ConfigInfoBasic::set_align_baseline(double value) {
  set_has_align_baseline();
  align_baseline_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_baseLine)
}

// optional double align_pitch = 15;
bool ConfigInfoBasic::has_align_pitch() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void ConfigInfoBasic::set_has_align_pitch() {
  _has_bits_[0] |= 0x00004000u;
}
void ConfigInfoBasic::clear_has_align_pitch() {
  _has_bits_[0] &= ~0x00004000u;
}
void ConfigInfoBasic::clear_align_pitch() {
  align_pitch_ = 0;
  clear_has_align_pitch();
}
 double ConfigInfoBasic::align_pitch() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_pitch)
  return align_pitch_;
}
 void ConfigInfoBasic::set_align_pitch(double value) {
  set_has_align_pitch();
  align_pitch_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_pitch)
}

// optional double align_track = 16;
bool ConfigInfoBasic::has_align_track() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void ConfigInfoBasic::set_has_align_track() {
  _has_bits_[0] |= 0x00008000u;
}
void ConfigInfoBasic::clear_has_align_track() {
  _has_bits_[0] &= ~0x00008000u;
}
void ConfigInfoBasic::clear_align_track() {
  align_track_ = 0;
  clear_has_align_track();
}
 double ConfigInfoBasic::align_track() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_track)
  return align_track_;
}
 void ConfigInfoBasic::set_align_track(double value) {
  set_has_align_track();
  align_track_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_track)
}

// optional int32 align_terminalDataHz = 17;
bool ConfigInfoBasic::has_align_terminaldatahz() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void ConfigInfoBasic::set_has_align_terminaldatahz() {
  _has_bits_[0] |= 0x00010000u;
}
void ConfigInfoBasic::clear_has_align_terminaldatahz() {
  _has_bits_[0] &= ~0x00010000u;
}
void ConfigInfoBasic::clear_align_terminaldatahz() {
  align_terminaldatahz_ = 0;
  clear_has_align_terminaldatahz();
}
 ::google::protobuf::int32 ConfigInfoBasic::align_terminaldatahz() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_terminalDataHz)
  return align_terminaldatahz_;
}
 void ConfigInfoBasic::set_align_terminaldatahz(::google::protobuf::int32 value) {
  set_has_align_terminaldatahz();
  align_terminaldatahz_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_terminalDataHz)
}

// optional double align_minspeed = 18;
bool ConfigInfoBasic::has_align_minspeed() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void ConfigInfoBasic::set_has_align_minspeed() {
  _has_bits_[0] |= 0x00020000u;
}
void ConfigInfoBasic::clear_has_align_minspeed() {
  _has_bits_[0] &= ~0x00020000u;
}
void ConfigInfoBasic::clear_align_minspeed() {
  align_minspeed_ = 0;
  clear_has_align_minspeed();
}
 double ConfigInfoBasic::align_minspeed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.align_minspeed)
  return align_minspeed_;
}
 void ConfigInfoBasic::set_align_minspeed(double value) {
  set_has_align_minspeed();
  align_minspeed_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.align_minspeed)
}

// repeated .OPMessage.JudgeItemInfo judge_test_items_array = 19;
int ConfigInfoBasic::judge_test_items_array_size() const {
  return judge_test_items_array_.size();
}
void ConfigInfoBasic::clear_judge_test_items_array() {
  judge_test_items_array_.Clear();
}
const ::OPMessage::JudgeItemInfo& ConfigInfoBasic::judge_test_items_array(int index) const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.judge_test_items_array)
  return judge_test_items_array_.Get(index);
}
::OPMessage::JudgeItemInfo* ConfigInfoBasic::mutable_judge_test_items_array(int index) {
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.judge_test_items_array)
  return judge_test_items_array_.Mutable(index);
}
::OPMessage::JudgeItemInfo* ConfigInfoBasic::add_judge_test_items_array() {
  // @@protoc_insertion_point(field_add:OPMessage.ConfigInfoBasic.judge_test_items_array)
  return judge_test_items_array_.Add();
}
::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >*
ConfigInfoBasic::mutable_judge_test_items_array() {
  // @@protoc_insertion_point(field_mutable_list:OPMessage.ConfigInfoBasic.judge_test_items_array)
  return &judge_test_items_array_;
}
const ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >&
ConfigInfoBasic::judge_test_items_array() const {
  // @@protoc_insertion_point(field_list:OPMessage.ConfigInfoBasic.judge_test_items_array)
  return judge_test_items_array_;
}

// repeated .OPMessage.JudgeItemInfo judge_test_items_array3 = 20;
int ConfigInfoBasic::judge_test_items_array3_size() const {
  return judge_test_items_array3_.size();
}
void ConfigInfoBasic::clear_judge_test_items_array3() {
  judge_test_items_array3_.Clear();
}
const ::OPMessage::JudgeItemInfo& ConfigInfoBasic::judge_test_items_array3(int index) const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.judge_test_items_array3)
  return judge_test_items_array3_.Get(index);
}
::OPMessage::JudgeItemInfo* ConfigInfoBasic::mutable_judge_test_items_array3(int index) {
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.judge_test_items_array3)
  return judge_test_items_array3_.Mutable(index);
}
::OPMessage::JudgeItemInfo* ConfigInfoBasic::add_judge_test_items_array3() {
  // @@protoc_insertion_point(field_add:OPMessage.ConfigInfoBasic.judge_test_items_array3)
  return judge_test_items_array3_.Add();
}
::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >*
ConfigInfoBasic::mutable_judge_test_items_array3() {
  // @@protoc_insertion_point(field_mutable_list:OPMessage.ConfigInfoBasic.judge_test_items_array3)
  return &judge_test_items_array3_;
}
const ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >&
ConfigInfoBasic::judge_test_items_array3() const {
  // @@protoc_insertion_point(field_list:OPMessage.ConfigInfoBasic.judge_test_items_array3)
  return judge_test_items_array3_;
}

// repeated .OPMessage.JudgeItemInfo judge_manual_test_items_array = 21;
int ConfigInfoBasic::judge_manual_test_items_array_size() const {
  return judge_manual_test_items_array_.size();
}
void ConfigInfoBasic::clear_judge_manual_test_items_array() {
  judge_manual_test_items_array_.Clear();
}
const ::OPMessage::JudgeItemInfo& ConfigInfoBasic::judge_manual_test_items_array(int index) const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.judge_manual_test_items_array)
  return judge_manual_test_items_array_.Get(index);
}
::OPMessage::JudgeItemInfo* ConfigInfoBasic::mutable_judge_manual_test_items_array(int index) {
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.judge_manual_test_items_array)
  return judge_manual_test_items_array_.Mutable(index);
}
::OPMessage::JudgeItemInfo* ConfigInfoBasic::add_judge_manual_test_items_array() {
  // @@protoc_insertion_point(field_add:OPMessage.ConfigInfoBasic.judge_manual_test_items_array)
  return judge_manual_test_items_array_.Add();
}
::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >*
ConfigInfoBasic::mutable_judge_manual_test_items_array() {
  // @@protoc_insertion_point(field_mutable_list:OPMessage.ConfigInfoBasic.judge_manual_test_items_array)
  return &judge_manual_test_items_array_;
}
const ::google::protobuf::RepeatedPtrField< ::OPMessage::JudgeItemInfo >&
ConfigInfoBasic::judge_manual_test_items_array() const {
  // @@protoc_insertion_point(field_list:OPMessage.ConfigInfoBasic.judge_manual_test_items_array)
  return judge_manual_test_items_array_;
}

// optional bool judge_item_whether_sequence = 22;
bool ConfigInfoBasic::has_judge_item_whether_sequence() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void ConfigInfoBasic::set_has_judge_item_whether_sequence() {
  _has_bits_[0] |= 0x00200000u;
}
void ConfigInfoBasic::clear_has_judge_item_whether_sequence() {
  _has_bits_[0] &= ~0x00200000u;
}
void ConfigInfoBasic::clear_judge_item_whether_sequence() {
  judge_item_whether_sequence_ = false;
  clear_has_judge_item_whether_sequence();
}
 bool ConfigInfoBasic::judge_item_whether_sequence() const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.judge_item_whether_sequence)
  return judge_item_whether_sequence_;
}
 void ConfigInfoBasic::set_judge_item_whether_sequence(bool value) {
  set_has_judge_item_whether_sequence();
  judge_item_whether_sequence_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ConfigInfoBasic.judge_item_whether_sequence)
}

// repeated .OPMessage.ConfigPhysicSensor phpsic_sensor_array = 23;
int ConfigInfoBasic::phpsic_sensor_array_size() const {
  return phpsic_sensor_array_.size();
}
void ConfigInfoBasic::clear_phpsic_sensor_array() {
  phpsic_sensor_array_.Clear();
}
const ::OPMessage::ConfigPhysicSensor& ConfigInfoBasic::phpsic_sensor_array(int index) const {
  // @@protoc_insertion_point(field_get:OPMessage.ConfigInfoBasic.phpsic_sensor_array)
  return phpsic_sensor_array_.Get(index);
}
::OPMessage::ConfigPhysicSensor* ConfigInfoBasic::mutable_phpsic_sensor_array(int index) {
  // @@protoc_insertion_point(field_mutable:OPMessage.ConfigInfoBasic.phpsic_sensor_array)
  return phpsic_sensor_array_.Mutable(index);
}
::OPMessage::ConfigPhysicSensor* ConfigInfoBasic::add_phpsic_sensor_array() {
  // @@protoc_insertion_point(field_add:OPMessage.ConfigInfoBasic.phpsic_sensor_array)
  return phpsic_sensor_array_.Add();
}
::google::protobuf::RepeatedPtrField< ::OPMessage::ConfigPhysicSensor >*
ConfigInfoBasic::mutable_phpsic_sensor_array() {
  // @@protoc_insertion_point(field_mutable_list:OPMessage.ConfigInfoBasic.phpsic_sensor_array)
  return &phpsic_sensor_array_;
}
const ::google::protobuf::RepeatedPtrField< ::OPMessage::ConfigPhysicSensor >&
ConfigInfoBasic::phpsic_sensor_array() const {
  // @@protoc_insertion_point(field_list:OPMessage.ConfigInfoBasic.phpsic_sensor_array)
  return phpsic_sensor_array_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicSafety::kSafetyWhetherCheckFieldNumber;
const int BasicSafety::kSafetyDeductionFieldNumber;
const int BasicSafety::kSafetyVoiceFieldNumber;
const int BasicSafety::kSafetyLastingTimeFieldNumber;
const int BasicSafety::kSafetyDeductionNumberFieldNumber;
const int BasicSafety::kSafetyJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicSafety::BasicSafety()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicSafety)
}

void BasicSafety::InitAsDefaultInstance() {
}

BasicSafety::BasicSafety(const BasicSafety& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicSafety)
}

void BasicSafety::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  safety_whether_check_ = false;
  safety_deduction_ = 0;
  safety_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safety_lasting_time_ = 0;
  safety_deduction_number_ = 0;
  safety_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicSafety::~BasicSafety() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicSafety)
  SharedDtor();
}

void BasicSafety::SharedDtor() {
  safety_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicSafety::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicSafety::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicSafety_descriptor_;
}

const BasicSafety& BasicSafety::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicSafety* BasicSafety::default_instance_ = NULL;

BasicSafety* BasicSafety::New(::google::protobuf::Arena* arena) const {
  BasicSafety* n = new BasicSafety;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicSafety::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicSafety)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicSafety, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicSafety*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(safety_whether_check_, safety_deduction_);
    ZR_(safety_lasting_time_, safety_judge_number_);
    if (has_safety_voice()) {
      safety_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicSafety::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicSafety)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool safety_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &safety_whether_check_)));
          set_has_safety_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_safety_deduction;
        break;
      }

      // optional int32 safety_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_safety_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &safety_deduction_)));
          set_has_safety_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_safety_voice;
        break;
      }

      // optional string safety_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_safety_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_safety_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->safety_voice().data(), this->safety_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicSafety.safety_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_safety_lasting_time;
        break;
      }

      // optional int32 safety_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_safety_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &safety_lasting_time_)));
          set_has_safety_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_safety_deduction_number;
        break;
      }

      // optional int32 safety_deduction_number = 5;
      case 5: {
        if (tag == 40) {
         parse_safety_deduction_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &safety_deduction_number_)));
          set_has_safety_deduction_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_safety_judge_number;
        break;
      }

      // optional int32 safety_judge_number = 6;
      case 6: {
        if (tag == 48) {
         parse_safety_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &safety_judge_number_)));
          set_has_safety_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicSafety)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicSafety)
  return false;
#undef DO_
}

void BasicSafety::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicSafety)
  // optional bool safety_whether_check = 1;
  if (has_safety_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->safety_whether_check(), output);
  }

  // optional int32 safety_deduction = 2;
  if (has_safety_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->safety_deduction(), output);
  }

  // optional string safety_voice = 3;
  if (has_safety_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->safety_voice().data(), this->safety_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicSafety.safety_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->safety_voice(), output);
  }

  // optional int32 safety_lasting_time = 4;
  if (has_safety_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->safety_lasting_time(), output);
  }

  // optional int32 safety_deduction_number = 5;
  if (has_safety_deduction_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->safety_deduction_number(), output);
  }

  // optional int32 safety_judge_number = 6;
  if (has_safety_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->safety_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicSafety)
}

::google::protobuf::uint8* BasicSafety::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicSafety)
  // optional bool safety_whether_check = 1;
  if (has_safety_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->safety_whether_check(), target);
  }

  // optional int32 safety_deduction = 2;
  if (has_safety_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->safety_deduction(), target);
  }

  // optional string safety_voice = 3;
  if (has_safety_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->safety_voice().data(), this->safety_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicSafety.safety_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->safety_voice(), target);
  }

  // optional int32 safety_lasting_time = 4;
  if (has_safety_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->safety_lasting_time(), target);
  }

  // optional int32 safety_deduction_number = 5;
  if (has_safety_deduction_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->safety_deduction_number(), target);
  }

  // optional int32 safety_judge_number = 6;
  if (has_safety_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->safety_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicSafety)
  return target;
}

int BasicSafety::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicSafety)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional bool safety_whether_check = 1;
    if (has_safety_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 safety_deduction = 2;
    if (has_safety_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->safety_deduction());
    }

    // optional string safety_voice = 3;
    if (has_safety_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->safety_voice());
    }

    // optional int32 safety_lasting_time = 4;
    if (has_safety_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->safety_lasting_time());
    }

    // optional int32 safety_deduction_number = 5;
    if (has_safety_deduction_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->safety_deduction_number());
    }

    // optional int32 safety_judge_number = 6;
    if (has_safety_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->safety_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicSafety::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicSafety)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicSafety* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicSafety>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicSafety)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicSafety)
    MergeFrom(*source);
  }
}

void BasicSafety::MergeFrom(const BasicSafety& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicSafety)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_safety_whether_check()) {
      set_safety_whether_check(from.safety_whether_check());
    }
    if (from.has_safety_deduction()) {
      set_safety_deduction(from.safety_deduction());
    }
    if (from.has_safety_voice()) {
      set_has_safety_voice();
      safety_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.safety_voice_);
    }
    if (from.has_safety_lasting_time()) {
      set_safety_lasting_time(from.safety_lasting_time());
    }
    if (from.has_safety_deduction_number()) {
      set_safety_deduction_number(from.safety_deduction_number());
    }
    if (from.has_safety_judge_number()) {
      set_safety_judge_number(from.safety_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicSafety::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicSafety)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicSafety::CopyFrom(const BasicSafety& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicSafety)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicSafety::IsInitialized() const {

  return true;
}

void BasicSafety::Swap(BasicSafety* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicSafety::InternalSwap(BasicSafety* other) {
  std::swap(safety_whether_check_, other->safety_whether_check_);
  std::swap(safety_deduction_, other->safety_deduction_);
  safety_voice_.Swap(&other->safety_voice_);
  std::swap(safety_lasting_time_, other->safety_lasting_time_);
  std::swap(safety_deduction_number_, other->safety_deduction_number_);
  std::swap(safety_judge_number_, other->safety_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicSafety::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicSafety_descriptor_;
  metadata.reflection = BasicSafety_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicSafety

// optional bool safety_whether_check = 1;
bool BasicSafety::has_safety_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicSafety::set_has_safety_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicSafety::clear_has_safety_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicSafety::clear_safety_whether_check() {
  safety_whether_check_ = false;
  clear_has_safety_whether_check();
}
 bool BasicSafety::safety_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSafety.safety_whether_check)
  return safety_whether_check_;
}
 void BasicSafety::set_safety_whether_check(bool value) {
  set_has_safety_whether_check();
  safety_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSafety.safety_whether_check)
}

// optional int32 safety_deduction = 2;
bool BasicSafety::has_safety_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicSafety::set_has_safety_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicSafety::clear_has_safety_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicSafety::clear_safety_deduction() {
  safety_deduction_ = 0;
  clear_has_safety_deduction();
}
 ::google::protobuf::int32 BasicSafety::safety_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSafety.safety_deduction)
  return safety_deduction_;
}
 void BasicSafety::set_safety_deduction(::google::protobuf::int32 value) {
  set_has_safety_deduction();
  safety_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSafety.safety_deduction)
}

// optional string safety_voice = 3;
bool BasicSafety::has_safety_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicSafety::set_has_safety_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicSafety::clear_has_safety_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicSafety::clear_safety_voice() {
  safety_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_safety_voice();
}
 const ::std::string& BasicSafety::safety_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSafety.safety_voice)
  return safety_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicSafety::set_safety_voice(const ::std::string& value) {
  set_has_safety_voice();
  safety_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicSafety.safety_voice)
}
 void BasicSafety::set_safety_voice(const char* value) {
  set_has_safety_voice();
  safety_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicSafety.safety_voice)
}
 void BasicSafety::set_safety_voice(const char* value, size_t size) {
  set_has_safety_voice();
  safety_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicSafety.safety_voice)
}
 ::std::string* BasicSafety::mutable_safety_voice() {
  set_has_safety_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicSafety.safety_voice)
  return safety_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicSafety::release_safety_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicSafety.safety_voice)
  clear_has_safety_voice();
  return safety_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicSafety::set_allocated_safety_voice(::std::string* safety_voice) {
  if (safety_voice != NULL) {
    set_has_safety_voice();
  } else {
    clear_has_safety_voice();
  }
  safety_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), safety_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicSafety.safety_voice)
}

// optional int32 safety_lasting_time = 4;
bool BasicSafety::has_safety_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicSafety::set_has_safety_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicSafety::clear_has_safety_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicSafety::clear_safety_lasting_time() {
  safety_lasting_time_ = 0;
  clear_has_safety_lasting_time();
}
 ::google::protobuf::int32 BasicSafety::safety_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSafety.safety_lasting_time)
  return safety_lasting_time_;
}
 void BasicSafety::set_safety_lasting_time(::google::protobuf::int32 value) {
  set_has_safety_lasting_time();
  safety_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSafety.safety_lasting_time)
}

// optional int32 safety_deduction_number = 5;
bool BasicSafety::has_safety_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicSafety::set_has_safety_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicSafety::clear_has_safety_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicSafety::clear_safety_deduction_number() {
  safety_deduction_number_ = 0;
  clear_has_safety_deduction_number();
}
 ::google::protobuf::int32 BasicSafety::safety_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSafety.safety_deduction_number)
  return safety_deduction_number_;
}
 void BasicSafety::set_safety_deduction_number(::google::protobuf::int32 value) {
  set_has_safety_deduction_number();
  safety_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSafety.safety_deduction_number)
}

// optional int32 safety_judge_number = 6;
bool BasicSafety::has_safety_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicSafety::set_has_safety_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicSafety::clear_has_safety_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicSafety::clear_safety_judge_number() {
  safety_judge_number_ = 0;
  clear_has_safety_judge_number();
}
 ::google::protobuf::int32 BasicSafety::safety_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSafety.safety_judge_number)
  return safety_judge_number_;
}
 void BasicSafety::set_safety_judge_number(::google::protobuf::int32 value) {
  set_has_safety_judge_number();
  safety_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSafety.safety_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicDoor::kDoorWhetherCheckFieldNumber;
const int BasicDoor::kDoorDeductionFieldNumber;
const int BasicDoor::kDoorVoiceFieldNumber;
const int BasicDoor::kDoorLastingTimeFieldNumber;
const int BasicDoor::kDoorDeductionNumberFieldNumber;
const int BasicDoor::kDoorJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicDoor::BasicDoor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicDoor)
}

void BasicDoor::InitAsDefaultInstance() {
}

BasicDoor::BasicDoor(const BasicDoor& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicDoor)
}

void BasicDoor::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  door_whether_check_ = false;
  door_deduction_ = 0;
  door_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  door_lasting_time_ = 0;
  door_deduction_number_ = 0;
  door_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicDoor::~BasicDoor() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicDoor)
  SharedDtor();
}

void BasicDoor::SharedDtor() {
  door_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicDoor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicDoor::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicDoor_descriptor_;
}

const BasicDoor& BasicDoor::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicDoor* BasicDoor::default_instance_ = NULL;

BasicDoor* BasicDoor::New(::google::protobuf::Arena* arena) const {
  BasicDoor* n = new BasicDoor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicDoor::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicDoor)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicDoor, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicDoor*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(door_whether_check_, door_deduction_);
    ZR_(door_lasting_time_, door_judge_number_);
    if (has_door_voice()) {
      door_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicDoor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicDoor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool door_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &door_whether_check_)));
          set_has_door_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_door_deduction;
        break;
      }

      // optional int32 door_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_door_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &door_deduction_)));
          set_has_door_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_door_voice;
        break;
      }

      // optional string door_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_door_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_door_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->door_voice().data(), this->door_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicDoor.door_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_door_lasting_time;
        break;
      }

      // optional int32 door_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_door_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &door_lasting_time_)));
          set_has_door_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_door_deduction_number;
        break;
      }

      // optional int32 door_deduction_number = 5;
      case 5: {
        if (tag == 40) {
         parse_door_deduction_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &door_deduction_number_)));
          set_has_door_deduction_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_door_judge_number;
        break;
      }

      // optional int32 door_judge_number = 6;
      case 6: {
        if (tag == 48) {
         parse_door_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &door_judge_number_)));
          set_has_door_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicDoor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicDoor)
  return false;
#undef DO_
}

void BasicDoor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicDoor)
  // optional bool door_whether_check = 1;
  if (has_door_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->door_whether_check(), output);
  }

  // optional int32 door_deduction = 2;
  if (has_door_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->door_deduction(), output);
  }

  // optional string door_voice = 3;
  if (has_door_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->door_voice().data(), this->door_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicDoor.door_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->door_voice(), output);
  }

  // optional int32 door_lasting_time = 4;
  if (has_door_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->door_lasting_time(), output);
  }

  // optional int32 door_deduction_number = 5;
  if (has_door_deduction_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->door_deduction_number(), output);
  }

  // optional int32 door_judge_number = 6;
  if (has_door_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->door_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicDoor)
}

::google::protobuf::uint8* BasicDoor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicDoor)
  // optional bool door_whether_check = 1;
  if (has_door_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->door_whether_check(), target);
  }

  // optional int32 door_deduction = 2;
  if (has_door_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->door_deduction(), target);
  }

  // optional string door_voice = 3;
  if (has_door_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->door_voice().data(), this->door_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicDoor.door_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->door_voice(), target);
  }

  // optional int32 door_lasting_time = 4;
  if (has_door_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->door_lasting_time(), target);
  }

  // optional int32 door_deduction_number = 5;
  if (has_door_deduction_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->door_deduction_number(), target);
  }

  // optional int32 door_judge_number = 6;
  if (has_door_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->door_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicDoor)
  return target;
}

int BasicDoor::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicDoor)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional bool door_whether_check = 1;
    if (has_door_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 door_deduction = 2;
    if (has_door_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->door_deduction());
    }

    // optional string door_voice = 3;
    if (has_door_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->door_voice());
    }

    // optional int32 door_lasting_time = 4;
    if (has_door_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->door_lasting_time());
    }

    // optional int32 door_deduction_number = 5;
    if (has_door_deduction_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->door_deduction_number());
    }

    // optional int32 door_judge_number = 6;
    if (has_door_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->door_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicDoor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicDoor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicDoor* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicDoor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicDoor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicDoor)
    MergeFrom(*source);
  }
}

void BasicDoor::MergeFrom(const BasicDoor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicDoor)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_door_whether_check()) {
      set_door_whether_check(from.door_whether_check());
    }
    if (from.has_door_deduction()) {
      set_door_deduction(from.door_deduction());
    }
    if (from.has_door_voice()) {
      set_has_door_voice();
      door_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.door_voice_);
    }
    if (from.has_door_lasting_time()) {
      set_door_lasting_time(from.door_lasting_time());
    }
    if (from.has_door_deduction_number()) {
      set_door_deduction_number(from.door_deduction_number());
    }
    if (from.has_door_judge_number()) {
      set_door_judge_number(from.door_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicDoor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicDoor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicDoor::CopyFrom(const BasicDoor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicDoor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicDoor::IsInitialized() const {

  return true;
}

void BasicDoor::Swap(BasicDoor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicDoor::InternalSwap(BasicDoor* other) {
  std::swap(door_whether_check_, other->door_whether_check_);
  std::swap(door_deduction_, other->door_deduction_);
  door_voice_.Swap(&other->door_voice_);
  std::swap(door_lasting_time_, other->door_lasting_time_);
  std::swap(door_deduction_number_, other->door_deduction_number_);
  std::swap(door_judge_number_, other->door_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicDoor::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicDoor_descriptor_;
  metadata.reflection = BasicDoor_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicDoor

// optional bool door_whether_check = 1;
bool BasicDoor::has_door_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicDoor::set_has_door_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicDoor::clear_has_door_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicDoor::clear_door_whether_check() {
  door_whether_check_ = false;
  clear_has_door_whether_check();
}
 bool BasicDoor::door_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDoor.door_whether_check)
  return door_whether_check_;
}
 void BasicDoor::set_door_whether_check(bool value) {
  set_has_door_whether_check();
  door_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDoor.door_whether_check)
}

// optional int32 door_deduction = 2;
bool BasicDoor::has_door_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicDoor::set_has_door_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicDoor::clear_has_door_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicDoor::clear_door_deduction() {
  door_deduction_ = 0;
  clear_has_door_deduction();
}
 ::google::protobuf::int32 BasicDoor::door_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDoor.door_deduction)
  return door_deduction_;
}
 void BasicDoor::set_door_deduction(::google::protobuf::int32 value) {
  set_has_door_deduction();
  door_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDoor.door_deduction)
}

// optional string door_voice = 3;
bool BasicDoor::has_door_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicDoor::set_has_door_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicDoor::clear_has_door_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicDoor::clear_door_voice() {
  door_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_door_voice();
}
 const ::std::string& BasicDoor::door_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDoor.door_voice)
  return door_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicDoor::set_door_voice(const ::std::string& value) {
  set_has_door_voice();
  door_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicDoor.door_voice)
}
 void BasicDoor::set_door_voice(const char* value) {
  set_has_door_voice();
  door_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicDoor.door_voice)
}
 void BasicDoor::set_door_voice(const char* value, size_t size) {
  set_has_door_voice();
  door_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicDoor.door_voice)
}
 ::std::string* BasicDoor::mutable_door_voice() {
  set_has_door_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicDoor.door_voice)
  return door_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicDoor::release_door_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicDoor.door_voice)
  clear_has_door_voice();
  return door_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicDoor::set_allocated_door_voice(::std::string* door_voice) {
  if (door_voice != NULL) {
    set_has_door_voice();
  } else {
    clear_has_door_voice();
  }
  door_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), door_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicDoor.door_voice)
}

// optional int32 door_lasting_time = 4;
bool BasicDoor::has_door_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicDoor::set_has_door_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicDoor::clear_has_door_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicDoor::clear_door_lasting_time() {
  door_lasting_time_ = 0;
  clear_has_door_lasting_time();
}
 ::google::protobuf::int32 BasicDoor::door_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDoor.door_lasting_time)
  return door_lasting_time_;
}
 void BasicDoor::set_door_lasting_time(::google::protobuf::int32 value) {
  set_has_door_lasting_time();
  door_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDoor.door_lasting_time)
}

// optional int32 door_deduction_number = 5;
bool BasicDoor::has_door_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicDoor::set_has_door_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicDoor::clear_has_door_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicDoor::clear_door_deduction_number() {
  door_deduction_number_ = 0;
  clear_has_door_deduction_number();
}
 ::google::protobuf::int32 BasicDoor::door_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDoor.door_deduction_number)
  return door_deduction_number_;
}
 void BasicDoor::set_door_deduction_number(::google::protobuf::int32 value) {
  set_has_door_deduction_number();
  door_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDoor.door_deduction_number)
}

// optional int32 door_judge_number = 6;
bool BasicDoor::has_door_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicDoor::set_has_door_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicDoor::clear_has_door_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicDoor::clear_door_judge_number() {
  door_judge_number_ = 0;
  clear_has_door_judge_number();
}
 ::google::protobuf::int32 BasicDoor::door_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDoor.door_judge_number)
  return door_judge_number_;
}
 void BasicDoor::set_door_judge_number(::google::protobuf::int32 value) {
  set_has_door_judge_number();
  door_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDoor.door_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicHorn::kHornWhetherCheckFieldNumber;
const int BasicHorn::kHornDeductionFieldNumber;
const int BasicHorn::kHornVoiceFieldNumber;
const int BasicHorn::kHornLastingTimeFieldNumber;
const int BasicHorn::kHornDeductionNumberFieldNumber;
const int BasicHorn::kHornJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicHorn::BasicHorn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicHorn)
}

void BasicHorn::InitAsDefaultInstance() {
}

BasicHorn::BasicHorn(const BasicHorn& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicHorn)
}

void BasicHorn::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  horn_whether_check_ = false;
  horn_deduction_ = 0;
  horn_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  horn_lasting_time_ = 0;
  horn_deduction_number_ = 0;
  horn_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicHorn::~BasicHorn() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicHorn)
  SharedDtor();
}

void BasicHorn::SharedDtor() {
  horn_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicHorn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicHorn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicHorn_descriptor_;
}

const BasicHorn& BasicHorn::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicHorn* BasicHorn::default_instance_ = NULL;

BasicHorn* BasicHorn::New(::google::protobuf::Arena* arena) const {
  BasicHorn* n = new BasicHorn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicHorn::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicHorn)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicHorn, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicHorn*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(horn_whether_check_, horn_deduction_);
    ZR_(horn_lasting_time_, horn_judge_number_);
    if (has_horn_voice()) {
      horn_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicHorn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicHorn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool horn_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &horn_whether_check_)));
          set_has_horn_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_horn_deduction;
        break;
      }

      // optional int32 horn_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_horn_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &horn_deduction_)));
          set_has_horn_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_horn_voice;
        break;
      }

      // optional string horn_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_horn_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_horn_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->horn_voice().data(), this->horn_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicHorn.horn_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_horn_lasting_time;
        break;
      }

      // optional int32 horn_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_horn_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &horn_lasting_time_)));
          set_has_horn_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_horn_deduction_number;
        break;
      }

      // optional int32 horn_deduction_number = 5;
      case 5: {
        if (tag == 40) {
         parse_horn_deduction_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &horn_deduction_number_)));
          set_has_horn_deduction_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_horn_judge_number;
        break;
      }

      // optional int32 horn_judge_number = 6;
      case 6: {
        if (tag == 48) {
         parse_horn_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &horn_judge_number_)));
          set_has_horn_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicHorn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicHorn)
  return false;
#undef DO_
}

void BasicHorn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicHorn)
  // optional bool horn_whether_check = 1;
  if (has_horn_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->horn_whether_check(), output);
  }

  // optional int32 horn_deduction = 2;
  if (has_horn_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->horn_deduction(), output);
  }

  // optional string horn_voice = 3;
  if (has_horn_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->horn_voice().data(), this->horn_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicHorn.horn_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->horn_voice(), output);
  }

  // optional int32 horn_lasting_time = 4;
  if (has_horn_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->horn_lasting_time(), output);
  }

  // optional int32 horn_deduction_number = 5;
  if (has_horn_deduction_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->horn_deduction_number(), output);
  }

  // optional int32 horn_judge_number = 6;
  if (has_horn_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->horn_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicHorn)
}

::google::protobuf::uint8* BasicHorn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicHorn)
  // optional bool horn_whether_check = 1;
  if (has_horn_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->horn_whether_check(), target);
  }

  // optional int32 horn_deduction = 2;
  if (has_horn_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->horn_deduction(), target);
  }

  // optional string horn_voice = 3;
  if (has_horn_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->horn_voice().data(), this->horn_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicHorn.horn_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->horn_voice(), target);
  }

  // optional int32 horn_lasting_time = 4;
  if (has_horn_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->horn_lasting_time(), target);
  }

  // optional int32 horn_deduction_number = 5;
  if (has_horn_deduction_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->horn_deduction_number(), target);
  }

  // optional int32 horn_judge_number = 6;
  if (has_horn_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->horn_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicHorn)
  return target;
}

int BasicHorn::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicHorn)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional bool horn_whether_check = 1;
    if (has_horn_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 horn_deduction = 2;
    if (has_horn_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->horn_deduction());
    }

    // optional string horn_voice = 3;
    if (has_horn_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->horn_voice());
    }

    // optional int32 horn_lasting_time = 4;
    if (has_horn_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->horn_lasting_time());
    }

    // optional int32 horn_deduction_number = 5;
    if (has_horn_deduction_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->horn_deduction_number());
    }

    // optional int32 horn_judge_number = 6;
    if (has_horn_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->horn_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicHorn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicHorn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicHorn* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicHorn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicHorn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicHorn)
    MergeFrom(*source);
  }
}

void BasicHorn::MergeFrom(const BasicHorn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicHorn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_horn_whether_check()) {
      set_horn_whether_check(from.horn_whether_check());
    }
    if (from.has_horn_deduction()) {
      set_horn_deduction(from.horn_deduction());
    }
    if (from.has_horn_voice()) {
      set_has_horn_voice();
      horn_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.horn_voice_);
    }
    if (from.has_horn_lasting_time()) {
      set_horn_lasting_time(from.horn_lasting_time());
    }
    if (from.has_horn_deduction_number()) {
      set_horn_deduction_number(from.horn_deduction_number());
    }
    if (from.has_horn_judge_number()) {
      set_horn_judge_number(from.horn_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicHorn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicHorn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicHorn::CopyFrom(const BasicHorn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicHorn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicHorn::IsInitialized() const {

  return true;
}

void BasicHorn::Swap(BasicHorn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicHorn::InternalSwap(BasicHorn* other) {
  std::swap(horn_whether_check_, other->horn_whether_check_);
  std::swap(horn_deduction_, other->horn_deduction_);
  horn_voice_.Swap(&other->horn_voice_);
  std::swap(horn_lasting_time_, other->horn_lasting_time_);
  std::swap(horn_deduction_number_, other->horn_deduction_number_);
  std::swap(horn_judge_number_, other->horn_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicHorn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicHorn_descriptor_;
  metadata.reflection = BasicHorn_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicHorn

// optional bool horn_whether_check = 1;
bool BasicHorn::has_horn_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicHorn::set_has_horn_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicHorn::clear_has_horn_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicHorn::clear_horn_whether_check() {
  horn_whether_check_ = false;
  clear_has_horn_whether_check();
}
 bool BasicHorn::horn_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHorn.horn_whether_check)
  return horn_whether_check_;
}
 void BasicHorn::set_horn_whether_check(bool value) {
  set_has_horn_whether_check();
  horn_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHorn.horn_whether_check)
}

// optional int32 horn_deduction = 2;
bool BasicHorn::has_horn_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicHorn::set_has_horn_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicHorn::clear_has_horn_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicHorn::clear_horn_deduction() {
  horn_deduction_ = 0;
  clear_has_horn_deduction();
}
 ::google::protobuf::int32 BasicHorn::horn_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHorn.horn_deduction)
  return horn_deduction_;
}
 void BasicHorn::set_horn_deduction(::google::protobuf::int32 value) {
  set_has_horn_deduction();
  horn_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHorn.horn_deduction)
}

// optional string horn_voice = 3;
bool BasicHorn::has_horn_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicHorn::set_has_horn_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicHorn::clear_has_horn_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicHorn::clear_horn_voice() {
  horn_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_horn_voice();
}
 const ::std::string& BasicHorn::horn_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHorn.horn_voice)
  return horn_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicHorn::set_horn_voice(const ::std::string& value) {
  set_has_horn_voice();
  horn_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicHorn.horn_voice)
}
 void BasicHorn::set_horn_voice(const char* value) {
  set_has_horn_voice();
  horn_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicHorn.horn_voice)
}
 void BasicHorn::set_horn_voice(const char* value, size_t size) {
  set_has_horn_voice();
  horn_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicHorn.horn_voice)
}
 ::std::string* BasicHorn::mutable_horn_voice() {
  set_has_horn_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicHorn.horn_voice)
  return horn_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicHorn::release_horn_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicHorn.horn_voice)
  clear_has_horn_voice();
  return horn_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicHorn::set_allocated_horn_voice(::std::string* horn_voice) {
  if (horn_voice != NULL) {
    set_has_horn_voice();
  } else {
    clear_has_horn_voice();
  }
  horn_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), horn_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicHorn.horn_voice)
}

// optional int32 horn_lasting_time = 4;
bool BasicHorn::has_horn_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicHorn::set_has_horn_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicHorn::clear_has_horn_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicHorn::clear_horn_lasting_time() {
  horn_lasting_time_ = 0;
  clear_has_horn_lasting_time();
}
 ::google::protobuf::int32 BasicHorn::horn_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHorn.horn_lasting_time)
  return horn_lasting_time_;
}
 void BasicHorn::set_horn_lasting_time(::google::protobuf::int32 value) {
  set_has_horn_lasting_time();
  horn_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHorn.horn_lasting_time)
}

// optional int32 horn_deduction_number = 5;
bool BasicHorn::has_horn_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicHorn::set_has_horn_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicHorn::clear_has_horn_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicHorn::clear_horn_deduction_number() {
  horn_deduction_number_ = 0;
  clear_has_horn_deduction_number();
}
 ::google::protobuf::int32 BasicHorn::horn_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHorn.horn_deduction_number)
  return horn_deduction_number_;
}
 void BasicHorn::set_horn_deduction_number(::google::protobuf::int32 value) {
  set_has_horn_deduction_number();
  horn_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHorn.horn_deduction_number)
}

// optional int32 horn_judge_number = 6;
bool BasicHorn::has_horn_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicHorn::set_has_horn_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicHorn::clear_has_horn_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicHorn::clear_horn_judge_number() {
  horn_judge_number_ = 0;
  clear_has_horn_judge_number();
}
 ::google::protobuf::int32 BasicHorn::horn_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHorn.horn_judge_number)
  return horn_judge_number_;
}
 void BasicHorn::set_horn_judge_number(::google::protobuf::int32 value) {
  set_has_horn_judge_number();
  horn_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHorn.horn_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicFlameout::kFlameoutWhetherCheckFieldNumber;
const int BasicFlameout::kFlameoutDeductionFieldNumber;
const int BasicFlameout::kFlameoutVoiceFieldNumber;
const int BasicFlameout::kFlameoutLastingTimeFieldNumber;
const int BasicFlameout::kFlameoutDeductionNumberFieldNumber;
const int BasicFlameout::kFlameoutJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicFlameout::BasicFlameout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicFlameout)
}

void BasicFlameout::InitAsDefaultInstance() {
}

BasicFlameout::BasicFlameout(const BasicFlameout& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicFlameout)
}

void BasicFlameout::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  flameout_whether_check_ = false;
  flameout_deduction_ = 0;
  flameout_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flameout_lasting_time_ = 0;
  flameout_deduction_number_ = 0;
  flameout_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicFlameout::~BasicFlameout() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicFlameout)
  SharedDtor();
}

void BasicFlameout::SharedDtor() {
  flameout_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicFlameout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicFlameout::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicFlameout_descriptor_;
}

const BasicFlameout& BasicFlameout::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicFlameout* BasicFlameout::default_instance_ = NULL;

BasicFlameout* BasicFlameout::New(::google::protobuf::Arena* arena) const {
  BasicFlameout* n = new BasicFlameout;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicFlameout::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicFlameout)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicFlameout, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicFlameout*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(flameout_whether_check_, flameout_deduction_);
    ZR_(flameout_lasting_time_, flameout_judge_number_);
    if (has_flameout_voice()) {
      flameout_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicFlameout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicFlameout)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool flameout_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flameout_whether_check_)));
          set_has_flameout_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_flameout_deduction;
        break;
      }

      // optional int32 flameout_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_flameout_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flameout_deduction_)));
          set_has_flameout_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_flameout_voice;
        break;
      }

      // optional string flameout_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_flameout_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_flameout_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->flameout_voice().data(), this->flameout_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicFlameout.flameout_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_flameout_lasting_time;
        break;
      }

      // optional int32 flameout_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_flameout_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flameout_lasting_time_)));
          set_has_flameout_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_flameout_deduction_number;
        break;
      }

      // optional int32 flameout_deduction_number = 5;
      case 5: {
        if (tag == 40) {
         parse_flameout_deduction_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flameout_deduction_number_)));
          set_has_flameout_deduction_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_flameout_judge_number;
        break;
      }

      // optional int32 flameout_judge_number = 6;
      case 6: {
        if (tag == 48) {
         parse_flameout_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flameout_judge_number_)));
          set_has_flameout_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicFlameout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicFlameout)
  return false;
#undef DO_
}

void BasicFlameout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicFlameout)
  // optional bool flameout_whether_check = 1;
  if (has_flameout_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->flameout_whether_check(), output);
  }

  // optional int32 flameout_deduction = 2;
  if (has_flameout_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->flameout_deduction(), output);
  }

  // optional string flameout_voice = 3;
  if (has_flameout_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->flameout_voice().data(), this->flameout_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicFlameout.flameout_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->flameout_voice(), output);
  }

  // optional int32 flameout_lasting_time = 4;
  if (has_flameout_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->flameout_lasting_time(), output);
  }

  // optional int32 flameout_deduction_number = 5;
  if (has_flameout_deduction_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->flameout_deduction_number(), output);
  }

  // optional int32 flameout_judge_number = 6;
  if (has_flameout_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->flameout_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicFlameout)
}

::google::protobuf::uint8* BasicFlameout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicFlameout)
  // optional bool flameout_whether_check = 1;
  if (has_flameout_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->flameout_whether_check(), target);
  }

  // optional int32 flameout_deduction = 2;
  if (has_flameout_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->flameout_deduction(), target);
  }

  // optional string flameout_voice = 3;
  if (has_flameout_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->flameout_voice().data(), this->flameout_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicFlameout.flameout_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->flameout_voice(), target);
  }

  // optional int32 flameout_lasting_time = 4;
  if (has_flameout_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->flameout_lasting_time(), target);
  }

  // optional int32 flameout_deduction_number = 5;
  if (has_flameout_deduction_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->flameout_deduction_number(), target);
  }

  // optional int32 flameout_judge_number = 6;
  if (has_flameout_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->flameout_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicFlameout)
  return target;
}

int BasicFlameout::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicFlameout)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional bool flameout_whether_check = 1;
    if (has_flameout_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 flameout_deduction = 2;
    if (has_flameout_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flameout_deduction());
    }

    // optional string flameout_voice = 3;
    if (has_flameout_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->flameout_voice());
    }

    // optional int32 flameout_lasting_time = 4;
    if (has_flameout_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flameout_lasting_time());
    }

    // optional int32 flameout_deduction_number = 5;
    if (has_flameout_deduction_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flameout_deduction_number());
    }

    // optional int32 flameout_judge_number = 6;
    if (has_flameout_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flameout_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicFlameout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicFlameout)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicFlameout* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicFlameout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicFlameout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicFlameout)
    MergeFrom(*source);
  }
}

void BasicFlameout::MergeFrom(const BasicFlameout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicFlameout)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flameout_whether_check()) {
      set_flameout_whether_check(from.flameout_whether_check());
    }
    if (from.has_flameout_deduction()) {
      set_flameout_deduction(from.flameout_deduction());
    }
    if (from.has_flameout_voice()) {
      set_has_flameout_voice();
      flameout_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flameout_voice_);
    }
    if (from.has_flameout_lasting_time()) {
      set_flameout_lasting_time(from.flameout_lasting_time());
    }
    if (from.has_flameout_deduction_number()) {
      set_flameout_deduction_number(from.flameout_deduction_number());
    }
    if (from.has_flameout_judge_number()) {
      set_flameout_judge_number(from.flameout_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicFlameout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicFlameout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicFlameout::CopyFrom(const BasicFlameout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicFlameout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicFlameout::IsInitialized() const {

  return true;
}

void BasicFlameout::Swap(BasicFlameout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicFlameout::InternalSwap(BasicFlameout* other) {
  std::swap(flameout_whether_check_, other->flameout_whether_check_);
  std::swap(flameout_deduction_, other->flameout_deduction_);
  flameout_voice_.Swap(&other->flameout_voice_);
  std::swap(flameout_lasting_time_, other->flameout_lasting_time_);
  std::swap(flameout_deduction_number_, other->flameout_deduction_number_);
  std::swap(flameout_judge_number_, other->flameout_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicFlameout::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicFlameout_descriptor_;
  metadata.reflection = BasicFlameout_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicFlameout

// optional bool flameout_whether_check = 1;
bool BasicFlameout::has_flameout_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicFlameout::set_has_flameout_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicFlameout::clear_has_flameout_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicFlameout::clear_flameout_whether_check() {
  flameout_whether_check_ = false;
  clear_has_flameout_whether_check();
}
 bool BasicFlameout::flameout_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFlameout.flameout_whether_check)
  return flameout_whether_check_;
}
 void BasicFlameout::set_flameout_whether_check(bool value) {
  set_has_flameout_whether_check();
  flameout_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFlameout.flameout_whether_check)
}

// optional int32 flameout_deduction = 2;
bool BasicFlameout::has_flameout_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicFlameout::set_has_flameout_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicFlameout::clear_has_flameout_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicFlameout::clear_flameout_deduction() {
  flameout_deduction_ = 0;
  clear_has_flameout_deduction();
}
 ::google::protobuf::int32 BasicFlameout::flameout_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFlameout.flameout_deduction)
  return flameout_deduction_;
}
 void BasicFlameout::set_flameout_deduction(::google::protobuf::int32 value) {
  set_has_flameout_deduction();
  flameout_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFlameout.flameout_deduction)
}

// optional string flameout_voice = 3;
bool BasicFlameout::has_flameout_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicFlameout::set_has_flameout_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicFlameout::clear_has_flameout_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicFlameout::clear_flameout_voice() {
  flameout_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_flameout_voice();
}
 const ::std::string& BasicFlameout::flameout_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFlameout.flameout_voice)
  return flameout_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicFlameout::set_flameout_voice(const ::std::string& value) {
  set_has_flameout_voice();
  flameout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicFlameout.flameout_voice)
}
 void BasicFlameout::set_flameout_voice(const char* value) {
  set_has_flameout_voice();
  flameout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicFlameout.flameout_voice)
}
 void BasicFlameout::set_flameout_voice(const char* value, size_t size) {
  set_has_flameout_voice();
  flameout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicFlameout.flameout_voice)
}
 ::std::string* BasicFlameout::mutable_flameout_voice() {
  set_has_flameout_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicFlameout.flameout_voice)
  return flameout_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicFlameout::release_flameout_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicFlameout.flameout_voice)
  clear_has_flameout_voice();
  return flameout_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicFlameout::set_allocated_flameout_voice(::std::string* flameout_voice) {
  if (flameout_voice != NULL) {
    set_has_flameout_voice();
  } else {
    clear_has_flameout_voice();
  }
  flameout_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), flameout_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicFlameout.flameout_voice)
}

// optional int32 flameout_lasting_time = 4;
bool BasicFlameout::has_flameout_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicFlameout::set_has_flameout_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicFlameout::clear_has_flameout_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicFlameout::clear_flameout_lasting_time() {
  flameout_lasting_time_ = 0;
  clear_has_flameout_lasting_time();
}
 ::google::protobuf::int32 BasicFlameout::flameout_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFlameout.flameout_lasting_time)
  return flameout_lasting_time_;
}
 void BasicFlameout::set_flameout_lasting_time(::google::protobuf::int32 value) {
  set_has_flameout_lasting_time();
  flameout_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFlameout.flameout_lasting_time)
}

// optional int32 flameout_deduction_number = 5;
bool BasicFlameout::has_flameout_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicFlameout::set_has_flameout_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicFlameout::clear_has_flameout_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicFlameout::clear_flameout_deduction_number() {
  flameout_deduction_number_ = 0;
  clear_has_flameout_deduction_number();
}
 ::google::protobuf::int32 BasicFlameout::flameout_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFlameout.flameout_deduction_number)
  return flameout_deduction_number_;
}
 void BasicFlameout::set_flameout_deduction_number(::google::protobuf::int32 value) {
  set_has_flameout_deduction_number();
  flameout_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFlameout.flameout_deduction_number)
}

// optional int32 flameout_judge_number = 6;
bool BasicFlameout::has_flameout_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicFlameout::set_has_flameout_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicFlameout::clear_has_flameout_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicFlameout::clear_flameout_judge_number() {
  flameout_judge_number_ = 0;
  clear_has_flameout_judge_number();
}
 ::google::protobuf::int32 BasicFlameout::flameout_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFlameout.flameout_judge_number)
  return flameout_judge_number_;
}
 void BasicFlameout::set_flameout_judge_number(::google::protobuf::int32 value) {
  set_has_flameout_judge_number();
  flameout_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFlameout.flameout_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicFullLine::kFullLineWhetherCheckFieldNumber;
const int BasicFullLine::kFullLineDeductionFieldNumber;
const int BasicFullLine::kFullLineVoiceFieldNumber;
const int BasicFullLine::kFullLineLastingTimeFieldNumber;
const int BasicFullLine::kFullLineDeductionNumberFieldNumber;
const int BasicFullLine::kFullLineJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicFullLine::BasicFullLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicFullLine)
}

void BasicFullLine::InitAsDefaultInstance() {
}

BasicFullLine::BasicFullLine(const BasicFullLine& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicFullLine)
}

void BasicFullLine::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  full_line_whether_check_ = false;
  full_line_deduction_ = 0;
  full_line_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  full_line_lasting_time_ = 0;
  full_line_deduction_number_ = 0;
  full_line_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicFullLine::~BasicFullLine() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicFullLine)
  SharedDtor();
}

void BasicFullLine::SharedDtor() {
  full_line_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicFullLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicFullLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicFullLine_descriptor_;
}

const BasicFullLine& BasicFullLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicFullLine* BasicFullLine::default_instance_ = NULL;

BasicFullLine* BasicFullLine::New(::google::protobuf::Arena* arena) const {
  BasicFullLine* n = new BasicFullLine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicFullLine::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicFullLine)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicFullLine, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicFullLine*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(full_line_whether_check_, full_line_deduction_);
    ZR_(full_line_lasting_time_, full_line_judge_number_);
    if (has_full_line_voice()) {
      full_line_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicFullLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicFullLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool full_line_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &full_line_whether_check_)));
          set_has_full_line_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_full_line_deduction;
        break;
      }

      // optional int32 full_line_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_full_line_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &full_line_deduction_)));
          set_has_full_line_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_full_line_voice;
        break;
      }

      // optional string full_line_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_full_line_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_full_line_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->full_line_voice().data(), this->full_line_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicFullLine.full_line_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_full_line_lasting_time;
        break;
      }

      // optional int32 full_line_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_full_line_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &full_line_lasting_time_)));
          set_has_full_line_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_full_line_deduction_number;
        break;
      }

      // optional int32 full_line_deduction_number = 5;
      case 5: {
        if (tag == 40) {
         parse_full_line_deduction_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &full_line_deduction_number_)));
          set_has_full_line_deduction_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_full_line_judge_number;
        break;
      }

      // optional int32 full_line_judge_number = 6;
      case 6: {
        if (tag == 48) {
         parse_full_line_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &full_line_judge_number_)));
          set_has_full_line_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicFullLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicFullLine)
  return false;
#undef DO_
}

void BasicFullLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicFullLine)
  // optional bool full_line_whether_check = 1;
  if (has_full_line_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->full_line_whether_check(), output);
  }

  // optional int32 full_line_deduction = 2;
  if (has_full_line_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->full_line_deduction(), output);
  }

  // optional string full_line_voice = 3;
  if (has_full_line_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->full_line_voice().data(), this->full_line_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicFullLine.full_line_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->full_line_voice(), output);
  }

  // optional int32 full_line_lasting_time = 4;
  if (has_full_line_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->full_line_lasting_time(), output);
  }

  // optional int32 full_line_deduction_number = 5;
  if (has_full_line_deduction_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->full_line_deduction_number(), output);
  }

  // optional int32 full_line_judge_number = 6;
  if (has_full_line_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->full_line_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicFullLine)
}

::google::protobuf::uint8* BasicFullLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicFullLine)
  // optional bool full_line_whether_check = 1;
  if (has_full_line_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->full_line_whether_check(), target);
  }

  // optional int32 full_line_deduction = 2;
  if (has_full_line_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->full_line_deduction(), target);
  }

  // optional string full_line_voice = 3;
  if (has_full_line_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->full_line_voice().data(), this->full_line_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicFullLine.full_line_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->full_line_voice(), target);
  }

  // optional int32 full_line_lasting_time = 4;
  if (has_full_line_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->full_line_lasting_time(), target);
  }

  // optional int32 full_line_deduction_number = 5;
  if (has_full_line_deduction_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->full_line_deduction_number(), target);
  }

  // optional int32 full_line_judge_number = 6;
  if (has_full_line_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->full_line_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicFullLine)
  return target;
}

int BasicFullLine::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicFullLine)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional bool full_line_whether_check = 1;
    if (has_full_line_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 full_line_deduction = 2;
    if (has_full_line_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->full_line_deduction());
    }

    // optional string full_line_voice = 3;
    if (has_full_line_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->full_line_voice());
    }

    // optional int32 full_line_lasting_time = 4;
    if (has_full_line_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->full_line_lasting_time());
    }

    // optional int32 full_line_deduction_number = 5;
    if (has_full_line_deduction_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->full_line_deduction_number());
    }

    // optional int32 full_line_judge_number = 6;
    if (has_full_line_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->full_line_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicFullLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicFullLine)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicFullLine* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicFullLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicFullLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicFullLine)
    MergeFrom(*source);
  }
}

void BasicFullLine::MergeFrom(const BasicFullLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicFullLine)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_full_line_whether_check()) {
      set_full_line_whether_check(from.full_line_whether_check());
    }
    if (from.has_full_line_deduction()) {
      set_full_line_deduction(from.full_line_deduction());
    }
    if (from.has_full_line_voice()) {
      set_has_full_line_voice();
      full_line_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.full_line_voice_);
    }
    if (from.has_full_line_lasting_time()) {
      set_full_line_lasting_time(from.full_line_lasting_time());
    }
    if (from.has_full_line_deduction_number()) {
      set_full_line_deduction_number(from.full_line_deduction_number());
    }
    if (from.has_full_line_judge_number()) {
      set_full_line_judge_number(from.full_line_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicFullLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicFullLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicFullLine::CopyFrom(const BasicFullLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicFullLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicFullLine::IsInitialized() const {

  return true;
}

void BasicFullLine::Swap(BasicFullLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicFullLine::InternalSwap(BasicFullLine* other) {
  std::swap(full_line_whether_check_, other->full_line_whether_check_);
  std::swap(full_line_deduction_, other->full_line_deduction_);
  full_line_voice_.Swap(&other->full_line_voice_);
  std::swap(full_line_lasting_time_, other->full_line_lasting_time_);
  std::swap(full_line_deduction_number_, other->full_line_deduction_number_);
  std::swap(full_line_judge_number_, other->full_line_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicFullLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicFullLine_descriptor_;
  metadata.reflection = BasicFullLine_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicFullLine

// optional bool full_line_whether_check = 1;
bool BasicFullLine::has_full_line_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicFullLine::set_has_full_line_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicFullLine::clear_has_full_line_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicFullLine::clear_full_line_whether_check() {
  full_line_whether_check_ = false;
  clear_has_full_line_whether_check();
}
 bool BasicFullLine::full_line_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFullLine.full_line_whether_check)
  return full_line_whether_check_;
}
 void BasicFullLine::set_full_line_whether_check(bool value) {
  set_has_full_line_whether_check();
  full_line_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFullLine.full_line_whether_check)
}

// optional int32 full_line_deduction = 2;
bool BasicFullLine::has_full_line_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicFullLine::set_has_full_line_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicFullLine::clear_has_full_line_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicFullLine::clear_full_line_deduction() {
  full_line_deduction_ = 0;
  clear_has_full_line_deduction();
}
 ::google::protobuf::int32 BasicFullLine::full_line_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFullLine.full_line_deduction)
  return full_line_deduction_;
}
 void BasicFullLine::set_full_line_deduction(::google::protobuf::int32 value) {
  set_has_full_line_deduction();
  full_line_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFullLine.full_line_deduction)
}

// optional string full_line_voice = 3;
bool BasicFullLine::has_full_line_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicFullLine::set_has_full_line_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicFullLine::clear_has_full_line_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicFullLine::clear_full_line_voice() {
  full_line_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_full_line_voice();
}
 const ::std::string& BasicFullLine::full_line_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFullLine.full_line_voice)
  return full_line_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicFullLine::set_full_line_voice(const ::std::string& value) {
  set_has_full_line_voice();
  full_line_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicFullLine.full_line_voice)
}
 void BasicFullLine::set_full_line_voice(const char* value) {
  set_has_full_line_voice();
  full_line_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicFullLine.full_line_voice)
}
 void BasicFullLine::set_full_line_voice(const char* value, size_t size) {
  set_has_full_line_voice();
  full_line_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicFullLine.full_line_voice)
}
 ::std::string* BasicFullLine::mutable_full_line_voice() {
  set_has_full_line_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicFullLine.full_line_voice)
  return full_line_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicFullLine::release_full_line_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicFullLine.full_line_voice)
  clear_has_full_line_voice();
  return full_line_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicFullLine::set_allocated_full_line_voice(::std::string* full_line_voice) {
  if (full_line_voice != NULL) {
    set_has_full_line_voice();
  } else {
    clear_has_full_line_voice();
  }
  full_line_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), full_line_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicFullLine.full_line_voice)
}

// optional int32 full_line_lasting_time = 4;
bool BasicFullLine::has_full_line_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicFullLine::set_has_full_line_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicFullLine::clear_has_full_line_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicFullLine::clear_full_line_lasting_time() {
  full_line_lasting_time_ = 0;
  clear_has_full_line_lasting_time();
}
 ::google::protobuf::int32 BasicFullLine::full_line_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFullLine.full_line_lasting_time)
  return full_line_lasting_time_;
}
 void BasicFullLine::set_full_line_lasting_time(::google::protobuf::int32 value) {
  set_has_full_line_lasting_time();
  full_line_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFullLine.full_line_lasting_time)
}

// optional int32 full_line_deduction_number = 5;
bool BasicFullLine::has_full_line_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicFullLine::set_has_full_line_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicFullLine::clear_has_full_line_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicFullLine::clear_full_line_deduction_number() {
  full_line_deduction_number_ = 0;
  clear_has_full_line_deduction_number();
}
 ::google::protobuf::int32 BasicFullLine::full_line_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFullLine.full_line_deduction_number)
  return full_line_deduction_number_;
}
 void BasicFullLine::set_full_line_deduction_number(::google::protobuf::int32 value) {
  set_has_full_line_deduction_number();
  full_line_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFullLine.full_line_deduction_number)
}

// optional int32 full_line_judge_number = 6;
bool BasicFullLine::has_full_line_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicFullLine::set_has_full_line_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicFullLine::clear_has_full_line_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicFullLine::clear_full_line_judge_number() {
  full_line_judge_number_ = 0;
  clear_has_full_line_judge_number();
}
 ::google::protobuf::int32 BasicFullLine::full_line_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFullLine.full_line_judge_number)
  return full_line_judge_number_;
}
 void BasicFullLine::set_full_line_judge_number(::google::protobuf::int32 value) {
  set_has_full_line_judge_number();
  full_line_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFullLine.full_line_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicDottedLine::kDottedLineWhetherCheckFieldNumber;
const int BasicDottedLine::kDottedLineDeductionFieldNumber;
const int BasicDottedLine::kDottedLineVoiceFieldNumber;
const int BasicDottedLine::kDottedLineLastingTimeFieldNumber;
const int BasicDottedLine::kDottedLineDeductionNumberFieldNumber;
const int BasicDottedLine::kDottedLineJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicDottedLine::BasicDottedLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicDottedLine)
}

void BasicDottedLine::InitAsDefaultInstance() {
}

BasicDottedLine::BasicDottedLine(const BasicDottedLine& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicDottedLine)
}

void BasicDottedLine::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  dotted_line_whether_check_ = false;
  dotted_line_deduction_ = 0;
  dotted_line_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dotted_line_lasting_time_ = 0;
  dotted_line_deduction_number_ = 0;
  dotted_line_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicDottedLine::~BasicDottedLine() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicDottedLine)
  SharedDtor();
}

void BasicDottedLine::SharedDtor() {
  dotted_line_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicDottedLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicDottedLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicDottedLine_descriptor_;
}

const BasicDottedLine& BasicDottedLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicDottedLine* BasicDottedLine::default_instance_ = NULL;

BasicDottedLine* BasicDottedLine::New(::google::protobuf::Arena* arena) const {
  BasicDottedLine* n = new BasicDottedLine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicDottedLine::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicDottedLine)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicDottedLine, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicDottedLine*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(dotted_line_whether_check_, dotted_line_deduction_);
    ZR_(dotted_line_lasting_time_, dotted_line_judge_number_);
    if (has_dotted_line_voice()) {
      dotted_line_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicDottedLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicDottedLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool dotted_line_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dotted_line_whether_check_)));
          set_has_dotted_line_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_dotted_line_deduction;
        break;
      }

      // optional int32 dotted_line_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_dotted_line_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dotted_line_deduction_)));
          set_has_dotted_line_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dotted_line_voice;
        break;
      }

      // optional string dotted_line_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_dotted_line_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dotted_line_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dotted_line_voice().data(), this->dotted_line_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicDottedLine.dotted_line_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dotted_line_lasting_time;
        break;
      }

      // optional int32 dotted_line_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_dotted_line_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dotted_line_lasting_time_)));
          set_has_dotted_line_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_dotted_line_deduction_number;
        break;
      }

      // optional int32 dotted_line_deduction_number = 5;
      case 5: {
        if (tag == 40) {
         parse_dotted_line_deduction_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dotted_line_deduction_number_)));
          set_has_dotted_line_deduction_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_dotted_line_judge_number;
        break;
      }

      // optional int32 dotted_line_judge_number = 6;
      case 6: {
        if (tag == 48) {
         parse_dotted_line_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dotted_line_judge_number_)));
          set_has_dotted_line_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicDottedLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicDottedLine)
  return false;
#undef DO_
}

void BasicDottedLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicDottedLine)
  // optional bool dotted_line_whether_check = 1;
  if (has_dotted_line_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->dotted_line_whether_check(), output);
  }

  // optional int32 dotted_line_deduction = 2;
  if (has_dotted_line_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dotted_line_deduction(), output);
  }

  // optional string dotted_line_voice = 3;
  if (has_dotted_line_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dotted_line_voice().data(), this->dotted_line_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicDottedLine.dotted_line_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->dotted_line_voice(), output);
  }

  // optional int32 dotted_line_lasting_time = 4;
  if (has_dotted_line_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dotted_line_lasting_time(), output);
  }

  // optional int32 dotted_line_deduction_number = 5;
  if (has_dotted_line_deduction_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->dotted_line_deduction_number(), output);
  }

  // optional int32 dotted_line_judge_number = 6;
  if (has_dotted_line_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->dotted_line_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicDottedLine)
}

::google::protobuf::uint8* BasicDottedLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicDottedLine)
  // optional bool dotted_line_whether_check = 1;
  if (has_dotted_line_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->dotted_line_whether_check(), target);
  }

  // optional int32 dotted_line_deduction = 2;
  if (has_dotted_line_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dotted_line_deduction(), target);
  }

  // optional string dotted_line_voice = 3;
  if (has_dotted_line_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dotted_line_voice().data(), this->dotted_line_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicDottedLine.dotted_line_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->dotted_line_voice(), target);
  }

  // optional int32 dotted_line_lasting_time = 4;
  if (has_dotted_line_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dotted_line_lasting_time(), target);
  }

  // optional int32 dotted_line_deduction_number = 5;
  if (has_dotted_line_deduction_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->dotted_line_deduction_number(), target);
  }

  // optional int32 dotted_line_judge_number = 6;
  if (has_dotted_line_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->dotted_line_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicDottedLine)
  return target;
}

int BasicDottedLine::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicDottedLine)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional bool dotted_line_whether_check = 1;
    if (has_dotted_line_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 dotted_line_deduction = 2;
    if (has_dotted_line_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dotted_line_deduction());
    }

    // optional string dotted_line_voice = 3;
    if (has_dotted_line_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dotted_line_voice());
    }

    // optional int32 dotted_line_lasting_time = 4;
    if (has_dotted_line_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dotted_line_lasting_time());
    }

    // optional int32 dotted_line_deduction_number = 5;
    if (has_dotted_line_deduction_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dotted_line_deduction_number());
    }

    // optional int32 dotted_line_judge_number = 6;
    if (has_dotted_line_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dotted_line_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicDottedLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicDottedLine)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicDottedLine* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicDottedLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicDottedLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicDottedLine)
    MergeFrom(*source);
  }
}

void BasicDottedLine::MergeFrom(const BasicDottedLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicDottedLine)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dotted_line_whether_check()) {
      set_dotted_line_whether_check(from.dotted_line_whether_check());
    }
    if (from.has_dotted_line_deduction()) {
      set_dotted_line_deduction(from.dotted_line_deduction());
    }
    if (from.has_dotted_line_voice()) {
      set_has_dotted_line_voice();
      dotted_line_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dotted_line_voice_);
    }
    if (from.has_dotted_line_lasting_time()) {
      set_dotted_line_lasting_time(from.dotted_line_lasting_time());
    }
    if (from.has_dotted_line_deduction_number()) {
      set_dotted_line_deduction_number(from.dotted_line_deduction_number());
    }
    if (from.has_dotted_line_judge_number()) {
      set_dotted_line_judge_number(from.dotted_line_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicDottedLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicDottedLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicDottedLine::CopyFrom(const BasicDottedLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicDottedLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicDottedLine::IsInitialized() const {

  return true;
}

void BasicDottedLine::Swap(BasicDottedLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicDottedLine::InternalSwap(BasicDottedLine* other) {
  std::swap(dotted_line_whether_check_, other->dotted_line_whether_check_);
  std::swap(dotted_line_deduction_, other->dotted_line_deduction_);
  dotted_line_voice_.Swap(&other->dotted_line_voice_);
  std::swap(dotted_line_lasting_time_, other->dotted_line_lasting_time_);
  std::swap(dotted_line_deduction_number_, other->dotted_line_deduction_number_);
  std::swap(dotted_line_judge_number_, other->dotted_line_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicDottedLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicDottedLine_descriptor_;
  metadata.reflection = BasicDottedLine_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicDottedLine

// optional bool dotted_line_whether_check = 1;
bool BasicDottedLine::has_dotted_line_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicDottedLine::set_has_dotted_line_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicDottedLine::clear_has_dotted_line_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicDottedLine::clear_dotted_line_whether_check() {
  dotted_line_whether_check_ = false;
  clear_has_dotted_line_whether_check();
}
 bool BasicDottedLine::dotted_line_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDottedLine.dotted_line_whether_check)
  return dotted_line_whether_check_;
}
 void BasicDottedLine::set_dotted_line_whether_check(bool value) {
  set_has_dotted_line_whether_check();
  dotted_line_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDottedLine.dotted_line_whether_check)
}

// optional int32 dotted_line_deduction = 2;
bool BasicDottedLine::has_dotted_line_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicDottedLine::set_has_dotted_line_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicDottedLine::clear_has_dotted_line_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicDottedLine::clear_dotted_line_deduction() {
  dotted_line_deduction_ = 0;
  clear_has_dotted_line_deduction();
}
 ::google::protobuf::int32 BasicDottedLine::dotted_line_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDottedLine.dotted_line_deduction)
  return dotted_line_deduction_;
}
 void BasicDottedLine::set_dotted_line_deduction(::google::protobuf::int32 value) {
  set_has_dotted_line_deduction();
  dotted_line_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDottedLine.dotted_line_deduction)
}

// optional string dotted_line_voice = 3;
bool BasicDottedLine::has_dotted_line_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicDottedLine::set_has_dotted_line_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicDottedLine::clear_has_dotted_line_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicDottedLine::clear_dotted_line_voice() {
  dotted_line_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dotted_line_voice();
}
 const ::std::string& BasicDottedLine::dotted_line_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDottedLine.dotted_line_voice)
  return dotted_line_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicDottedLine::set_dotted_line_voice(const ::std::string& value) {
  set_has_dotted_line_voice();
  dotted_line_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicDottedLine.dotted_line_voice)
}
 void BasicDottedLine::set_dotted_line_voice(const char* value) {
  set_has_dotted_line_voice();
  dotted_line_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicDottedLine.dotted_line_voice)
}
 void BasicDottedLine::set_dotted_line_voice(const char* value, size_t size) {
  set_has_dotted_line_voice();
  dotted_line_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicDottedLine.dotted_line_voice)
}
 ::std::string* BasicDottedLine::mutable_dotted_line_voice() {
  set_has_dotted_line_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicDottedLine.dotted_line_voice)
  return dotted_line_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicDottedLine::release_dotted_line_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicDottedLine.dotted_line_voice)
  clear_has_dotted_line_voice();
  return dotted_line_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicDottedLine::set_allocated_dotted_line_voice(::std::string* dotted_line_voice) {
  if (dotted_line_voice != NULL) {
    set_has_dotted_line_voice();
  } else {
    clear_has_dotted_line_voice();
  }
  dotted_line_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dotted_line_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicDottedLine.dotted_line_voice)
}

// optional int32 dotted_line_lasting_time = 4;
bool BasicDottedLine::has_dotted_line_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicDottedLine::set_has_dotted_line_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicDottedLine::clear_has_dotted_line_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicDottedLine::clear_dotted_line_lasting_time() {
  dotted_line_lasting_time_ = 0;
  clear_has_dotted_line_lasting_time();
}
 ::google::protobuf::int32 BasicDottedLine::dotted_line_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDottedLine.dotted_line_lasting_time)
  return dotted_line_lasting_time_;
}
 void BasicDottedLine::set_dotted_line_lasting_time(::google::protobuf::int32 value) {
  set_has_dotted_line_lasting_time();
  dotted_line_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDottedLine.dotted_line_lasting_time)
}

// optional int32 dotted_line_deduction_number = 5;
bool BasicDottedLine::has_dotted_line_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicDottedLine::set_has_dotted_line_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicDottedLine::clear_has_dotted_line_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicDottedLine::clear_dotted_line_deduction_number() {
  dotted_line_deduction_number_ = 0;
  clear_has_dotted_line_deduction_number();
}
 ::google::protobuf::int32 BasicDottedLine::dotted_line_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDottedLine.dotted_line_deduction_number)
  return dotted_line_deduction_number_;
}
 void BasicDottedLine::set_dotted_line_deduction_number(::google::protobuf::int32 value) {
  set_has_dotted_line_deduction_number();
  dotted_line_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDottedLine.dotted_line_deduction_number)
}

// optional int32 dotted_line_judge_number = 6;
bool BasicDottedLine::has_dotted_line_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicDottedLine::set_has_dotted_line_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicDottedLine::clear_has_dotted_line_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicDottedLine::clear_dotted_line_judge_number() {
  dotted_line_judge_number_ = 0;
  clear_has_dotted_line_judge_number();
}
 ::google::protobuf::int32 BasicDottedLine::dotted_line_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDottedLine.dotted_line_judge_number)
  return dotted_line_judge_number_;
}
 void BasicDottedLine::set_dotted_line_judge_number(::google::protobuf::int32 value) {
  set_has_dotted_line_judge_number();
  dotted_line_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDottedLine.dotted_line_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicLeftTurnLamp::kLeftTurnLampWhetherCheckFieldNumber;
const int BasicLeftTurnLamp::kLeftTurnLampDeductionFieldNumber;
const int BasicLeftTurnLamp::kLeftTurnLampVoiceFieldNumber;
const int BasicLeftTurnLamp::kLeftTurnLampLastingTimeFieldNumber;
const int BasicLeftTurnLamp::kLeftTurnLampDeductionNumberFieldNumber;
const int BasicLeftTurnLamp::kLeftTurnLampJudgeNumberFieldNumber;
const int BasicLeftTurnLamp::kLeftTurnLampLastingWholeCourseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicLeftTurnLamp::BasicLeftTurnLamp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicLeftTurnLamp)
}

void BasicLeftTurnLamp::InitAsDefaultInstance() {
}

BasicLeftTurnLamp::BasicLeftTurnLamp(const BasicLeftTurnLamp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicLeftTurnLamp)
}

void BasicLeftTurnLamp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  leftturnlamp_whether_check_ = false;
  leftturnlamp_deduction_ = 0;
  leftturnlamp_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leftturnlamp_lasting_time_ = 0;
  leftturnlamp_deduction_number_ = 0;
  leftturnlamp_judge_number_ = 0;
  leftturnlamp_lasting_whole_course_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicLeftTurnLamp::~BasicLeftTurnLamp() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicLeftTurnLamp)
  SharedDtor();
}

void BasicLeftTurnLamp::SharedDtor() {
  leftturnlamp_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicLeftTurnLamp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicLeftTurnLamp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicLeftTurnLamp_descriptor_;
}

const BasicLeftTurnLamp& BasicLeftTurnLamp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicLeftTurnLamp* BasicLeftTurnLamp::default_instance_ = NULL;

BasicLeftTurnLamp* BasicLeftTurnLamp::New(::google::protobuf::Arena* arena) const {
  BasicLeftTurnLamp* n = new BasicLeftTurnLamp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicLeftTurnLamp::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicLeftTurnLamp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicLeftTurnLamp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicLeftTurnLamp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(leftturnlamp_deduction_, leftturnlamp_judge_number_);
    if (has_leftturnlamp_voice()) {
      leftturnlamp_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicLeftTurnLamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicLeftTurnLamp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool leftTurnLamp_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &leftturnlamp_whether_check_)));
          set_has_leftturnlamp_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_leftTurnLamp_deduction;
        break;
      }

      // optional int32 leftTurnLamp_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_leftTurnLamp_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leftturnlamp_deduction_)));
          set_has_leftturnlamp_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_leftTurnLamp_voice;
        break;
      }

      // optional string leftTurnLamp_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_leftTurnLamp_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leftturnlamp_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->leftturnlamp_voice().data(), this->leftturnlamp_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_leftTurnLamp_lasting_time;
        break;
      }

      // optional int32 leftTurnLamp_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_leftTurnLamp_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leftturnlamp_lasting_time_)));
          set_has_leftturnlamp_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_leftTurnLamp_deduction_number;
        break;
      }

      // optional int32 leftTurnLamp_deduction_number = 5;
      case 5: {
        if (tag == 40) {
         parse_leftTurnLamp_deduction_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leftturnlamp_deduction_number_)));
          set_has_leftturnlamp_deduction_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_leftTurnLamp_judge_number;
        break;
      }

      // optional int32 leftTurnLamp_judge_number = 6;
      case 6: {
        if (tag == 48) {
         parse_leftTurnLamp_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leftturnlamp_judge_number_)));
          set_has_leftturnlamp_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_leftTurnLamp_lasting_whole_course;
        break;
      }

      // optional bool leftTurnLamp_lasting_whole_course = 7 [default = false];
      case 7: {
        if (tag == 56) {
         parse_leftTurnLamp_lasting_whole_course:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &leftturnlamp_lasting_whole_course_)));
          set_has_leftturnlamp_lasting_whole_course();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicLeftTurnLamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicLeftTurnLamp)
  return false;
#undef DO_
}

void BasicLeftTurnLamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicLeftTurnLamp)
  // optional bool leftTurnLamp_whether_check = 1;
  if (has_leftturnlamp_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->leftturnlamp_whether_check(), output);
  }

  // optional int32 leftTurnLamp_deduction = 2;
  if (has_leftturnlamp_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->leftturnlamp_deduction(), output);
  }

  // optional string leftTurnLamp_voice = 3;
  if (has_leftturnlamp_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leftturnlamp_voice().data(), this->leftturnlamp_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->leftturnlamp_voice(), output);
  }

  // optional int32 leftTurnLamp_lasting_time = 4;
  if (has_leftturnlamp_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->leftturnlamp_lasting_time(), output);
  }

  // optional int32 leftTurnLamp_deduction_number = 5;
  if (has_leftturnlamp_deduction_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->leftturnlamp_deduction_number(), output);
  }

  // optional int32 leftTurnLamp_judge_number = 6;
  if (has_leftturnlamp_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->leftturnlamp_judge_number(), output);
  }

  // optional bool leftTurnLamp_lasting_whole_course = 7 [default = false];
  if (has_leftturnlamp_lasting_whole_course()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->leftturnlamp_lasting_whole_course(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicLeftTurnLamp)
}

::google::protobuf::uint8* BasicLeftTurnLamp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicLeftTurnLamp)
  // optional bool leftTurnLamp_whether_check = 1;
  if (has_leftturnlamp_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->leftturnlamp_whether_check(), target);
  }

  // optional int32 leftTurnLamp_deduction = 2;
  if (has_leftturnlamp_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->leftturnlamp_deduction(), target);
  }

  // optional string leftTurnLamp_voice = 3;
  if (has_leftturnlamp_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->leftturnlamp_voice().data(), this->leftturnlamp_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->leftturnlamp_voice(), target);
  }

  // optional int32 leftTurnLamp_lasting_time = 4;
  if (has_leftturnlamp_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->leftturnlamp_lasting_time(), target);
  }

  // optional int32 leftTurnLamp_deduction_number = 5;
  if (has_leftturnlamp_deduction_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->leftturnlamp_deduction_number(), target);
  }

  // optional int32 leftTurnLamp_judge_number = 6;
  if (has_leftturnlamp_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->leftturnlamp_judge_number(), target);
  }

  // optional bool leftTurnLamp_lasting_whole_course = 7 [default = false];
  if (has_leftturnlamp_lasting_whole_course()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->leftturnlamp_lasting_whole_course(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicLeftTurnLamp)
  return target;
}

int BasicLeftTurnLamp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicLeftTurnLamp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional bool leftTurnLamp_whether_check = 1;
    if (has_leftturnlamp_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 leftTurnLamp_deduction = 2;
    if (has_leftturnlamp_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leftturnlamp_deduction());
    }

    // optional string leftTurnLamp_voice = 3;
    if (has_leftturnlamp_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leftturnlamp_voice());
    }

    // optional int32 leftTurnLamp_lasting_time = 4;
    if (has_leftturnlamp_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leftturnlamp_lasting_time());
    }

    // optional int32 leftTurnLamp_deduction_number = 5;
    if (has_leftturnlamp_deduction_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leftturnlamp_deduction_number());
    }

    // optional int32 leftTurnLamp_judge_number = 6;
    if (has_leftturnlamp_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leftturnlamp_judge_number());
    }

    // optional bool leftTurnLamp_lasting_whole_course = 7 [default = false];
    if (has_leftturnlamp_lasting_whole_course()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicLeftTurnLamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicLeftTurnLamp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicLeftTurnLamp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicLeftTurnLamp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicLeftTurnLamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicLeftTurnLamp)
    MergeFrom(*source);
  }
}

void BasicLeftTurnLamp::MergeFrom(const BasicLeftTurnLamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicLeftTurnLamp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_leftturnlamp_whether_check()) {
      set_leftturnlamp_whether_check(from.leftturnlamp_whether_check());
    }
    if (from.has_leftturnlamp_deduction()) {
      set_leftturnlamp_deduction(from.leftturnlamp_deduction());
    }
    if (from.has_leftturnlamp_voice()) {
      set_has_leftturnlamp_voice();
      leftturnlamp_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leftturnlamp_voice_);
    }
    if (from.has_leftturnlamp_lasting_time()) {
      set_leftturnlamp_lasting_time(from.leftturnlamp_lasting_time());
    }
    if (from.has_leftturnlamp_deduction_number()) {
      set_leftturnlamp_deduction_number(from.leftturnlamp_deduction_number());
    }
    if (from.has_leftturnlamp_judge_number()) {
      set_leftturnlamp_judge_number(from.leftturnlamp_judge_number());
    }
    if (from.has_leftturnlamp_lasting_whole_course()) {
      set_leftturnlamp_lasting_whole_course(from.leftturnlamp_lasting_whole_course());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicLeftTurnLamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicLeftTurnLamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicLeftTurnLamp::CopyFrom(const BasicLeftTurnLamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicLeftTurnLamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicLeftTurnLamp::IsInitialized() const {

  return true;
}

void BasicLeftTurnLamp::Swap(BasicLeftTurnLamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicLeftTurnLamp::InternalSwap(BasicLeftTurnLamp* other) {
  std::swap(leftturnlamp_whether_check_, other->leftturnlamp_whether_check_);
  std::swap(leftturnlamp_deduction_, other->leftturnlamp_deduction_);
  leftturnlamp_voice_.Swap(&other->leftturnlamp_voice_);
  std::swap(leftturnlamp_lasting_time_, other->leftturnlamp_lasting_time_);
  std::swap(leftturnlamp_deduction_number_, other->leftturnlamp_deduction_number_);
  std::swap(leftturnlamp_judge_number_, other->leftturnlamp_judge_number_);
  std::swap(leftturnlamp_lasting_whole_course_, other->leftturnlamp_lasting_whole_course_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicLeftTurnLamp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicLeftTurnLamp_descriptor_;
  metadata.reflection = BasicLeftTurnLamp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicLeftTurnLamp

// optional bool leftTurnLamp_whether_check = 1;
bool BasicLeftTurnLamp::has_leftturnlamp_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicLeftTurnLamp::set_has_leftturnlamp_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicLeftTurnLamp::clear_has_leftturnlamp_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicLeftTurnLamp::clear_leftturnlamp_whether_check() {
  leftturnlamp_whether_check_ = false;
  clear_has_leftturnlamp_whether_check();
}
 bool BasicLeftTurnLamp::leftturnlamp_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_whether_check)
  return leftturnlamp_whether_check_;
}
 void BasicLeftTurnLamp::set_leftturnlamp_whether_check(bool value) {
  set_has_leftturnlamp_whether_check();
  leftturnlamp_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_whether_check)
}

// optional int32 leftTurnLamp_deduction = 2;
bool BasicLeftTurnLamp::has_leftturnlamp_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicLeftTurnLamp::set_has_leftturnlamp_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicLeftTurnLamp::clear_has_leftturnlamp_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicLeftTurnLamp::clear_leftturnlamp_deduction() {
  leftturnlamp_deduction_ = 0;
  clear_has_leftturnlamp_deduction();
}
 ::google::protobuf::int32 BasicLeftTurnLamp::leftturnlamp_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_deduction)
  return leftturnlamp_deduction_;
}
 void BasicLeftTurnLamp::set_leftturnlamp_deduction(::google::protobuf::int32 value) {
  set_has_leftturnlamp_deduction();
  leftturnlamp_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_deduction)
}

// optional string leftTurnLamp_voice = 3;
bool BasicLeftTurnLamp::has_leftturnlamp_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicLeftTurnLamp::set_has_leftturnlamp_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicLeftTurnLamp::clear_has_leftturnlamp_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicLeftTurnLamp::clear_leftturnlamp_voice() {
  leftturnlamp_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_leftturnlamp_voice();
}
 const ::std::string& BasicLeftTurnLamp::leftturnlamp_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
  return leftturnlamp_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicLeftTurnLamp::set_leftturnlamp_voice(const ::std::string& value) {
  set_has_leftturnlamp_voice();
  leftturnlamp_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
}
 void BasicLeftTurnLamp::set_leftturnlamp_voice(const char* value) {
  set_has_leftturnlamp_voice();
  leftturnlamp_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
}
 void BasicLeftTurnLamp::set_leftturnlamp_voice(const char* value, size_t size) {
  set_has_leftturnlamp_voice();
  leftturnlamp_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
}
 ::std::string* BasicLeftTurnLamp::mutable_leftturnlamp_voice() {
  set_has_leftturnlamp_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
  return leftturnlamp_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicLeftTurnLamp::release_leftturnlamp_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
  clear_has_leftturnlamp_voice();
  return leftturnlamp_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicLeftTurnLamp::set_allocated_leftturnlamp_voice(::std::string* leftturnlamp_voice) {
  if (leftturnlamp_voice != NULL) {
    set_has_leftturnlamp_voice();
  } else {
    clear_has_leftturnlamp_voice();
  }
  leftturnlamp_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leftturnlamp_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicLeftTurnLamp.leftTurnLamp_voice)
}

// optional int32 leftTurnLamp_lasting_time = 4;
bool BasicLeftTurnLamp::has_leftturnlamp_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicLeftTurnLamp::set_has_leftturnlamp_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicLeftTurnLamp::clear_has_leftturnlamp_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicLeftTurnLamp::clear_leftturnlamp_lasting_time() {
  leftturnlamp_lasting_time_ = 0;
  clear_has_leftturnlamp_lasting_time();
}
 ::google::protobuf::int32 BasicLeftTurnLamp::leftturnlamp_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_lasting_time)
  return leftturnlamp_lasting_time_;
}
 void BasicLeftTurnLamp::set_leftturnlamp_lasting_time(::google::protobuf::int32 value) {
  set_has_leftturnlamp_lasting_time();
  leftturnlamp_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_lasting_time)
}

// optional int32 leftTurnLamp_deduction_number = 5;
bool BasicLeftTurnLamp::has_leftturnlamp_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicLeftTurnLamp::set_has_leftturnlamp_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicLeftTurnLamp::clear_has_leftturnlamp_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicLeftTurnLamp::clear_leftturnlamp_deduction_number() {
  leftturnlamp_deduction_number_ = 0;
  clear_has_leftturnlamp_deduction_number();
}
 ::google::protobuf::int32 BasicLeftTurnLamp::leftturnlamp_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_deduction_number)
  return leftturnlamp_deduction_number_;
}
 void BasicLeftTurnLamp::set_leftturnlamp_deduction_number(::google::protobuf::int32 value) {
  set_has_leftturnlamp_deduction_number();
  leftturnlamp_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_deduction_number)
}

// optional int32 leftTurnLamp_judge_number = 6;
bool BasicLeftTurnLamp::has_leftturnlamp_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicLeftTurnLamp::set_has_leftturnlamp_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicLeftTurnLamp::clear_has_leftturnlamp_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicLeftTurnLamp::clear_leftturnlamp_judge_number() {
  leftturnlamp_judge_number_ = 0;
  clear_has_leftturnlamp_judge_number();
}
 ::google::protobuf::int32 BasicLeftTurnLamp::leftturnlamp_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_judge_number)
  return leftturnlamp_judge_number_;
}
 void BasicLeftTurnLamp::set_leftturnlamp_judge_number(::google::protobuf::int32 value) {
  set_has_leftturnlamp_judge_number();
  leftturnlamp_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_judge_number)
}

// optional bool leftTurnLamp_lasting_whole_course = 7 [default = false];
bool BasicLeftTurnLamp::has_leftturnlamp_lasting_whole_course() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BasicLeftTurnLamp::set_has_leftturnlamp_lasting_whole_course() {
  _has_bits_[0] |= 0x00000040u;
}
void BasicLeftTurnLamp::clear_has_leftturnlamp_lasting_whole_course() {
  _has_bits_[0] &= ~0x00000040u;
}
void BasicLeftTurnLamp::clear_leftturnlamp_lasting_whole_course() {
  leftturnlamp_lasting_whole_course_ = false;
  clear_has_leftturnlamp_lasting_whole_course();
}
 bool BasicLeftTurnLamp::leftturnlamp_lasting_whole_course() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftTurnLamp.leftTurnLamp_lasting_whole_course)
  return leftturnlamp_lasting_whole_course_;
}
 void BasicLeftTurnLamp::set_leftturnlamp_lasting_whole_course(bool value) {
  set_has_leftturnlamp_lasting_whole_course();
  leftturnlamp_lasting_whole_course_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftTurnLamp.leftTurnLamp_lasting_whole_course)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicRightTurnLamp::kRightTurnLampWhetherCheckFieldNumber;
const int BasicRightTurnLamp::kRightTurnLampDeductionFieldNumber;
const int BasicRightTurnLamp::kRightTurnLampVoiceFieldNumber;
const int BasicRightTurnLamp::kRightTurnLampLastingTimeFieldNumber;
const int BasicRightTurnLamp::kRightTurnLampDeductionNumberFieldNumber;
const int BasicRightTurnLamp::kRightTurnLampJudgeNumberFieldNumber;
const int BasicRightTurnLamp::kRightTurnLampLastingWholeCourseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicRightTurnLamp::BasicRightTurnLamp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicRightTurnLamp)
}

void BasicRightTurnLamp::InitAsDefaultInstance() {
}

BasicRightTurnLamp::BasicRightTurnLamp(const BasicRightTurnLamp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicRightTurnLamp)
}

void BasicRightTurnLamp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rightturnlamp_whether_check_ = false;
  rightturnlamp_deduction_ = 0;
  rightturnlamp_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rightturnlamp_lasting_time_ = 0;
  rightturnlamp_deduction_number_ = 0;
  rightturnlamp_judge_number_ = 0;
  rightturnlamp_lasting_whole_course_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicRightTurnLamp::~BasicRightTurnLamp() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicRightTurnLamp)
  SharedDtor();
}

void BasicRightTurnLamp::SharedDtor() {
  rightturnlamp_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicRightTurnLamp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicRightTurnLamp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicRightTurnLamp_descriptor_;
}

const BasicRightTurnLamp& BasicRightTurnLamp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicRightTurnLamp* BasicRightTurnLamp::default_instance_ = NULL;

BasicRightTurnLamp* BasicRightTurnLamp::New(::google::protobuf::Arena* arena) const {
  BasicRightTurnLamp* n = new BasicRightTurnLamp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicRightTurnLamp::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicRightTurnLamp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicRightTurnLamp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicRightTurnLamp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(rightturnlamp_deduction_, rightturnlamp_judge_number_);
    if (has_rightturnlamp_voice()) {
      rightturnlamp_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicRightTurnLamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicRightTurnLamp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool rightTurnLamp_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rightturnlamp_whether_check_)));
          set_has_rightturnlamp_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rightTurnLamp_deduction;
        break;
      }

      // optional int32 rightTurnLamp_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_rightTurnLamp_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rightturnlamp_deduction_)));
          set_has_rightturnlamp_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rightTurnLamp_voice;
        break;
      }

      // optional string rightTurnLamp_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_rightTurnLamp_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rightturnlamp_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rightturnlamp_voice().data(), this->rightturnlamp_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicRightTurnLamp.rightTurnLamp_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_rightTurnLamp_lasting_time;
        break;
      }

      // optional int32 rightTurnLamp_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_rightTurnLamp_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rightturnlamp_lasting_time_)));
          set_has_rightturnlamp_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_rightTurnLamp_deduction_number;
        break;
      }

      // optional int32 rightTurnLamp_deduction_number = 5;
      case 5: {
        if (tag == 40) {
         parse_rightTurnLamp_deduction_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rightturnlamp_deduction_number_)));
          set_has_rightturnlamp_deduction_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_rightTurnLamp_judge_number;
        break;
      }

      // optional int32 rightTurnLamp_judge_number = 6;
      case 6: {
        if (tag == 48) {
         parse_rightTurnLamp_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rightturnlamp_judge_number_)));
          set_has_rightturnlamp_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_rightTurnLamp_lasting_whole_course;
        break;
      }

      // optional bool rightTurnLamp_lasting_whole_course = 7 [default = false];
      case 7: {
        if (tag == 56) {
         parse_rightTurnLamp_lasting_whole_course:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &rightturnlamp_lasting_whole_course_)));
          set_has_rightturnlamp_lasting_whole_course();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicRightTurnLamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicRightTurnLamp)
  return false;
#undef DO_
}

void BasicRightTurnLamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicRightTurnLamp)
  // optional bool rightTurnLamp_whether_check = 1;
  if (has_rightturnlamp_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->rightturnlamp_whether_check(), output);
  }

  // optional int32 rightTurnLamp_deduction = 2;
  if (has_rightturnlamp_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rightturnlamp_deduction(), output);
  }

  // optional string rightTurnLamp_voice = 3;
  if (has_rightturnlamp_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rightturnlamp_voice().data(), this->rightturnlamp_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicRightTurnLamp.rightTurnLamp_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rightturnlamp_voice(), output);
  }

  // optional int32 rightTurnLamp_lasting_time = 4;
  if (has_rightturnlamp_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->rightturnlamp_lasting_time(), output);
  }

  // optional int32 rightTurnLamp_deduction_number = 5;
  if (has_rightturnlamp_deduction_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rightturnlamp_deduction_number(), output);
  }

  // optional int32 rightTurnLamp_judge_number = 6;
  if (has_rightturnlamp_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->rightturnlamp_judge_number(), output);
  }

  // optional bool rightTurnLamp_lasting_whole_course = 7 [default = false];
  if (has_rightturnlamp_lasting_whole_course()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->rightturnlamp_lasting_whole_course(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicRightTurnLamp)
}

::google::protobuf::uint8* BasicRightTurnLamp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicRightTurnLamp)
  // optional bool rightTurnLamp_whether_check = 1;
  if (has_rightturnlamp_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->rightturnlamp_whether_check(), target);
  }

  // optional int32 rightTurnLamp_deduction = 2;
  if (has_rightturnlamp_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rightturnlamp_deduction(), target);
  }

  // optional string rightTurnLamp_voice = 3;
  if (has_rightturnlamp_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rightturnlamp_voice().data(), this->rightturnlamp_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicRightTurnLamp.rightTurnLamp_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rightturnlamp_voice(), target);
  }

  // optional int32 rightTurnLamp_lasting_time = 4;
  if (has_rightturnlamp_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->rightturnlamp_lasting_time(), target);
  }

  // optional int32 rightTurnLamp_deduction_number = 5;
  if (has_rightturnlamp_deduction_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rightturnlamp_deduction_number(), target);
  }

  // optional int32 rightTurnLamp_judge_number = 6;
  if (has_rightturnlamp_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->rightturnlamp_judge_number(), target);
  }

  // optional bool rightTurnLamp_lasting_whole_course = 7 [default = false];
  if (has_rightturnlamp_lasting_whole_course()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->rightturnlamp_lasting_whole_course(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicRightTurnLamp)
  return target;
}

int BasicRightTurnLamp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicRightTurnLamp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional bool rightTurnLamp_whether_check = 1;
    if (has_rightturnlamp_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 rightTurnLamp_deduction = 2;
    if (has_rightturnlamp_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rightturnlamp_deduction());
    }

    // optional string rightTurnLamp_voice = 3;
    if (has_rightturnlamp_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rightturnlamp_voice());
    }

    // optional int32 rightTurnLamp_lasting_time = 4;
    if (has_rightturnlamp_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rightturnlamp_lasting_time());
    }

    // optional int32 rightTurnLamp_deduction_number = 5;
    if (has_rightturnlamp_deduction_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rightturnlamp_deduction_number());
    }

    // optional int32 rightTurnLamp_judge_number = 6;
    if (has_rightturnlamp_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rightturnlamp_judge_number());
    }

    // optional bool rightTurnLamp_lasting_whole_course = 7 [default = false];
    if (has_rightturnlamp_lasting_whole_course()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicRightTurnLamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicRightTurnLamp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicRightTurnLamp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicRightTurnLamp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicRightTurnLamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicRightTurnLamp)
    MergeFrom(*source);
  }
}

void BasicRightTurnLamp::MergeFrom(const BasicRightTurnLamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicRightTurnLamp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rightturnlamp_whether_check()) {
      set_rightturnlamp_whether_check(from.rightturnlamp_whether_check());
    }
    if (from.has_rightturnlamp_deduction()) {
      set_rightturnlamp_deduction(from.rightturnlamp_deduction());
    }
    if (from.has_rightturnlamp_voice()) {
      set_has_rightturnlamp_voice();
      rightturnlamp_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rightturnlamp_voice_);
    }
    if (from.has_rightturnlamp_lasting_time()) {
      set_rightturnlamp_lasting_time(from.rightturnlamp_lasting_time());
    }
    if (from.has_rightturnlamp_deduction_number()) {
      set_rightturnlamp_deduction_number(from.rightturnlamp_deduction_number());
    }
    if (from.has_rightturnlamp_judge_number()) {
      set_rightturnlamp_judge_number(from.rightturnlamp_judge_number());
    }
    if (from.has_rightturnlamp_lasting_whole_course()) {
      set_rightturnlamp_lasting_whole_course(from.rightturnlamp_lasting_whole_course());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicRightTurnLamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicRightTurnLamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicRightTurnLamp::CopyFrom(const BasicRightTurnLamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicRightTurnLamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicRightTurnLamp::IsInitialized() const {

  return true;
}

void BasicRightTurnLamp::Swap(BasicRightTurnLamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicRightTurnLamp::InternalSwap(BasicRightTurnLamp* other) {
  std::swap(rightturnlamp_whether_check_, other->rightturnlamp_whether_check_);
  std::swap(rightturnlamp_deduction_, other->rightturnlamp_deduction_);
  rightturnlamp_voice_.Swap(&other->rightturnlamp_voice_);
  std::swap(rightturnlamp_lasting_time_, other->rightturnlamp_lasting_time_);
  std::swap(rightturnlamp_deduction_number_, other->rightturnlamp_deduction_number_);
  std::swap(rightturnlamp_judge_number_, other->rightturnlamp_judge_number_);
  std::swap(rightturnlamp_lasting_whole_course_, other->rightturnlamp_lasting_whole_course_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicRightTurnLamp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicRightTurnLamp_descriptor_;
  metadata.reflection = BasicRightTurnLamp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicRightTurnLamp

// optional bool rightTurnLamp_whether_check = 1;
bool BasicRightTurnLamp::has_rightturnlamp_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicRightTurnLamp::set_has_rightturnlamp_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicRightTurnLamp::clear_has_rightturnlamp_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicRightTurnLamp::clear_rightturnlamp_whether_check() {
  rightturnlamp_whether_check_ = false;
  clear_has_rightturnlamp_whether_check();
}
 bool BasicRightTurnLamp::rightturnlamp_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_whether_check)
  return rightturnlamp_whether_check_;
}
 void BasicRightTurnLamp::set_rightturnlamp_whether_check(bool value) {
  set_has_rightturnlamp_whether_check();
  rightturnlamp_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_whether_check)
}

// optional int32 rightTurnLamp_deduction = 2;
bool BasicRightTurnLamp::has_rightturnlamp_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicRightTurnLamp::set_has_rightturnlamp_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicRightTurnLamp::clear_has_rightturnlamp_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicRightTurnLamp::clear_rightturnlamp_deduction() {
  rightturnlamp_deduction_ = 0;
  clear_has_rightturnlamp_deduction();
}
 ::google::protobuf::int32 BasicRightTurnLamp::rightturnlamp_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_deduction)
  return rightturnlamp_deduction_;
}
 void BasicRightTurnLamp::set_rightturnlamp_deduction(::google::protobuf::int32 value) {
  set_has_rightturnlamp_deduction();
  rightturnlamp_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_deduction)
}

// optional string rightTurnLamp_voice = 3;
bool BasicRightTurnLamp::has_rightturnlamp_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicRightTurnLamp::set_has_rightturnlamp_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicRightTurnLamp::clear_has_rightturnlamp_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicRightTurnLamp::clear_rightturnlamp_voice() {
  rightturnlamp_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rightturnlamp_voice();
}
 const ::std::string& BasicRightTurnLamp::rightturnlamp_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
  return rightturnlamp_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicRightTurnLamp::set_rightturnlamp_voice(const ::std::string& value) {
  set_has_rightturnlamp_voice();
  rightturnlamp_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
}
 void BasicRightTurnLamp::set_rightturnlamp_voice(const char* value) {
  set_has_rightturnlamp_voice();
  rightturnlamp_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
}
 void BasicRightTurnLamp::set_rightturnlamp_voice(const char* value, size_t size) {
  set_has_rightturnlamp_voice();
  rightturnlamp_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
}
 ::std::string* BasicRightTurnLamp::mutable_rightturnlamp_voice() {
  set_has_rightturnlamp_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
  return rightturnlamp_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicRightTurnLamp::release_rightturnlamp_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
  clear_has_rightturnlamp_voice();
  return rightturnlamp_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicRightTurnLamp::set_allocated_rightturnlamp_voice(::std::string* rightturnlamp_voice) {
  if (rightturnlamp_voice != NULL) {
    set_has_rightturnlamp_voice();
  } else {
    clear_has_rightturnlamp_voice();
  }
  rightturnlamp_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rightturnlamp_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicRightTurnLamp.rightTurnLamp_voice)
}

// optional int32 rightTurnLamp_lasting_time = 4;
bool BasicRightTurnLamp::has_rightturnlamp_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicRightTurnLamp::set_has_rightturnlamp_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicRightTurnLamp::clear_has_rightturnlamp_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicRightTurnLamp::clear_rightturnlamp_lasting_time() {
  rightturnlamp_lasting_time_ = 0;
  clear_has_rightturnlamp_lasting_time();
}
 ::google::protobuf::int32 BasicRightTurnLamp::rightturnlamp_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_lasting_time)
  return rightturnlamp_lasting_time_;
}
 void BasicRightTurnLamp::set_rightturnlamp_lasting_time(::google::protobuf::int32 value) {
  set_has_rightturnlamp_lasting_time();
  rightturnlamp_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_lasting_time)
}

// optional int32 rightTurnLamp_deduction_number = 5;
bool BasicRightTurnLamp::has_rightturnlamp_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicRightTurnLamp::set_has_rightturnlamp_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicRightTurnLamp::clear_has_rightturnlamp_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicRightTurnLamp::clear_rightturnlamp_deduction_number() {
  rightturnlamp_deduction_number_ = 0;
  clear_has_rightturnlamp_deduction_number();
}
 ::google::protobuf::int32 BasicRightTurnLamp::rightturnlamp_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_deduction_number)
  return rightturnlamp_deduction_number_;
}
 void BasicRightTurnLamp::set_rightturnlamp_deduction_number(::google::protobuf::int32 value) {
  set_has_rightturnlamp_deduction_number();
  rightturnlamp_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_deduction_number)
}

// optional int32 rightTurnLamp_judge_number = 6;
bool BasicRightTurnLamp::has_rightturnlamp_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicRightTurnLamp::set_has_rightturnlamp_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicRightTurnLamp::clear_has_rightturnlamp_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicRightTurnLamp::clear_rightturnlamp_judge_number() {
  rightturnlamp_judge_number_ = 0;
  clear_has_rightturnlamp_judge_number();
}
 ::google::protobuf::int32 BasicRightTurnLamp::rightturnlamp_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_judge_number)
  return rightturnlamp_judge_number_;
}
 void BasicRightTurnLamp::set_rightturnlamp_judge_number(::google::protobuf::int32 value) {
  set_has_rightturnlamp_judge_number();
  rightturnlamp_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_judge_number)
}

// optional bool rightTurnLamp_lasting_whole_course = 7 [default = false];
bool BasicRightTurnLamp::has_rightturnlamp_lasting_whole_course() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BasicRightTurnLamp::set_has_rightturnlamp_lasting_whole_course() {
  _has_bits_[0] |= 0x00000040u;
}
void BasicRightTurnLamp::clear_has_rightturnlamp_lasting_whole_course() {
  _has_bits_[0] &= ~0x00000040u;
}
void BasicRightTurnLamp::clear_rightturnlamp_lasting_whole_course() {
  rightturnlamp_lasting_whole_course_ = false;
  clear_has_rightturnlamp_lasting_whole_course();
}
 bool BasicRightTurnLamp::rightturnlamp_lasting_whole_course() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightTurnLamp.rightTurnLamp_lasting_whole_course)
  return rightturnlamp_lasting_whole_course_;
}
 void BasicRightTurnLamp::set_rightturnlamp_lasting_whole_course(bool value) {
  set_has_rightturnlamp_lasting_whole_course();
  rightturnlamp_lasting_whole_course_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightTurnLamp.rightTurnLamp_lasting_whole_course)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicCarStop::kCarStopWhetherCheckFieldNumber;
const int BasicCarStop::kCarStopDeductionFieldNumber;
const int BasicCarStop::kCarStopVoiceFieldNumber;
const int BasicCarStop::kCarStopLastingTimeFieldNumber;
const int BasicCarStop::kCarStopDeductionNumberFieldNumber;
const int BasicCarStop::kCarStopJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicCarStop::BasicCarStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicCarStop)
}

void BasicCarStop::InitAsDefaultInstance() {
}

BasicCarStop::BasicCarStop(const BasicCarStop& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicCarStop)
}

void BasicCarStop::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  carstop_whether_check_ = false;
  carstop_deduction_ = 0;
  carstop_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  carstop_lasting_time_ = 0;
  carstop_deduction_number_ = 0;
  carstop_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicCarStop::~BasicCarStop() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicCarStop)
  SharedDtor();
}

void BasicCarStop::SharedDtor() {
  carstop_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicCarStop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicCarStop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicCarStop_descriptor_;
}

const BasicCarStop& BasicCarStop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicCarStop* BasicCarStop::default_instance_ = NULL;

BasicCarStop* BasicCarStop::New(::google::protobuf::Arena* arena) const {
  BasicCarStop* n = new BasicCarStop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicCarStop::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicCarStop)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicCarStop, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicCarStop*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(carstop_whether_check_, carstop_deduction_);
    ZR_(carstop_lasting_time_, carstop_judge_number_);
    if (has_carstop_voice()) {
      carstop_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicCarStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicCarStop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool carStop_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &carstop_whether_check_)));
          set_has_carstop_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_carStop_deduction;
        break;
      }

      // optional int32 carStop_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_carStop_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carstop_deduction_)));
          set_has_carstop_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_carStop_voice;
        break;
      }

      // optional string carStop_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_carStop_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_carstop_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->carstop_voice().data(), this->carstop_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicCarStop.carStop_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_carStop_lasting_time;
        break;
      }

      // optional int32 carStop_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_carStop_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carstop_lasting_time_)));
          set_has_carstop_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_carStop_deduction_number;
        break;
      }

      // optional int32 carStop_deduction_number = 5;
      case 5: {
        if (tag == 40) {
         parse_carStop_deduction_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carstop_deduction_number_)));
          set_has_carstop_deduction_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_carStop_judge_number;
        break;
      }

      // optional int32 carStop_judge_number = 6;
      case 6: {
        if (tag == 48) {
         parse_carStop_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &carstop_judge_number_)));
          set_has_carstop_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicCarStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicCarStop)
  return false;
#undef DO_
}

void BasicCarStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicCarStop)
  // optional bool carStop_whether_check = 1;
  if (has_carstop_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->carstop_whether_check(), output);
  }

  // optional int32 carStop_deduction = 2;
  if (has_carstop_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->carstop_deduction(), output);
  }

  // optional string carStop_voice = 3;
  if (has_carstop_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->carstop_voice().data(), this->carstop_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicCarStop.carStop_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->carstop_voice(), output);
  }

  // optional int32 carStop_lasting_time = 4;
  if (has_carstop_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->carstop_lasting_time(), output);
  }

  // optional int32 carStop_deduction_number = 5;
  if (has_carstop_deduction_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->carstop_deduction_number(), output);
  }

  // optional int32 carStop_judge_number = 6;
  if (has_carstop_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->carstop_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicCarStop)
}

::google::protobuf::uint8* BasicCarStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicCarStop)
  // optional bool carStop_whether_check = 1;
  if (has_carstop_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->carstop_whether_check(), target);
  }

  // optional int32 carStop_deduction = 2;
  if (has_carstop_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->carstop_deduction(), target);
  }

  // optional string carStop_voice = 3;
  if (has_carstop_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->carstop_voice().data(), this->carstop_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicCarStop.carStop_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->carstop_voice(), target);
  }

  // optional int32 carStop_lasting_time = 4;
  if (has_carstop_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->carstop_lasting_time(), target);
  }

  // optional int32 carStop_deduction_number = 5;
  if (has_carstop_deduction_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->carstop_deduction_number(), target);
  }

  // optional int32 carStop_judge_number = 6;
  if (has_carstop_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->carstop_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicCarStop)
  return target;
}

int BasicCarStop::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicCarStop)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional bool carStop_whether_check = 1;
    if (has_carstop_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 carStop_deduction = 2;
    if (has_carstop_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->carstop_deduction());
    }

    // optional string carStop_voice = 3;
    if (has_carstop_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->carstop_voice());
    }

    // optional int32 carStop_lasting_time = 4;
    if (has_carstop_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->carstop_lasting_time());
    }

    // optional int32 carStop_deduction_number = 5;
    if (has_carstop_deduction_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->carstop_deduction_number());
    }

    // optional int32 carStop_judge_number = 6;
    if (has_carstop_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->carstop_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicCarStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicCarStop)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicCarStop* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicCarStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicCarStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicCarStop)
    MergeFrom(*source);
  }
}

void BasicCarStop::MergeFrom(const BasicCarStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicCarStop)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_carstop_whether_check()) {
      set_carstop_whether_check(from.carstop_whether_check());
    }
    if (from.has_carstop_deduction()) {
      set_carstop_deduction(from.carstop_deduction());
    }
    if (from.has_carstop_voice()) {
      set_has_carstop_voice();
      carstop_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.carstop_voice_);
    }
    if (from.has_carstop_lasting_time()) {
      set_carstop_lasting_time(from.carstop_lasting_time());
    }
    if (from.has_carstop_deduction_number()) {
      set_carstop_deduction_number(from.carstop_deduction_number());
    }
    if (from.has_carstop_judge_number()) {
      set_carstop_judge_number(from.carstop_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicCarStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicCarStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicCarStop::CopyFrom(const BasicCarStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicCarStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicCarStop::IsInitialized() const {

  return true;
}

void BasicCarStop::Swap(BasicCarStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicCarStop::InternalSwap(BasicCarStop* other) {
  std::swap(carstop_whether_check_, other->carstop_whether_check_);
  std::swap(carstop_deduction_, other->carstop_deduction_);
  carstop_voice_.Swap(&other->carstop_voice_);
  std::swap(carstop_lasting_time_, other->carstop_lasting_time_);
  std::swap(carstop_deduction_number_, other->carstop_deduction_number_);
  std::swap(carstop_judge_number_, other->carstop_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicCarStop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicCarStop_descriptor_;
  metadata.reflection = BasicCarStop_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicCarStop

// optional bool carStop_whether_check = 1;
bool BasicCarStop::has_carstop_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicCarStop::set_has_carstop_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicCarStop::clear_has_carstop_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicCarStop::clear_carstop_whether_check() {
  carstop_whether_check_ = false;
  clear_has_carstop_whether_check();
}
 bool BasicCarStop::carstop_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicCarStop.carStop_whether_check)
  return carstop_whether_check_;
}
 void BasicCarStop::set_carstop_whether_check(bool value) {
  set_has_carstop_whether_check();
  carstop_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicCarStop.carStop_whether_check)
}

// optional int32 carStop_deduction = 2;
bool BasicCarStop::has_carstop_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicCarStop::set_has_carstop_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicCarStop::clear_has_carstop_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicCarStop::clear_carstop_deduction() {
  carstop_deduction_ = 0;
  clear_has_carstop_deduction();
}
 ::google::protobuf::int32 BasicCarStop::carstop_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicCarStop.carStop_deduction)
  return carstop_deduction_;
}
 void BasicCarStop::set_carstop_deduction(::google::protobuf::int32 value) {
  set_has_carstop_deduction();
  carstop_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicCarStop.carStop_deduction)
}

// optional string carStop_voice = 3;
bool BasicCarStop::has_carstop_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicCarStop::set_has_carstop_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicCarStop::clear_has_carstop_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicCarStop::clear_carstop_voice() {
  carstop_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_carstop_voice();
}
 const ::std::string& BasicCarStop::carstop_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicCarStop.carStop_voice)
  return carstop_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicCarStop::set_carstop_voice(const ::std::string& value) {
  set_has_carstop_voice();
  carstop_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicCarStop.carStop_voice)
}
 void BasicCarStop::set_carstop_voice(const char* value) {
  set_has_carstop_voice();
  carstop_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicCarStop.carStop_voice)
}
 void BasicCarStop::set_carstop_voice(const char* value, size_t size) {
  set_has_carstop_voice();
  carstop_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicCarStop.carStop_voice)
}
 ::std::string* BasicCarStop::mutable_carstop_voice() {
  set_has_carstop_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicCarStop.carStop_voice)
  return carstop_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicCarStop::release_carstop_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicCarStop.carStop_voice)
  clear_has_carstop_voice();
  return carstop_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicCarStop::set_allocated_carstop_voice(::std::string* carstop_voice) {
  if (carstop_voice != NULL) {
    set_has_carstop_voice();
  } else {
    clear_has_carstop_voice();
  }
  carstop_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), carstop_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicCarStop.carStop_voice)
}

// optional int32 carStop_lasting_time = 4;
bool BasicCarStop::has_carstop_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicCarStop::set_has_carstop_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicCarStop::clear_has_carstop_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicCarStop::clear_carstop_lasting_time() {
  carstop_lasting_time_ = 0;
  clear_has_carstop_lasting_time();
}
 ::google::protobuf::int32 BasicCarStop::carstop_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicCarStop.carStop_lasting_time)
  return carstop_lasting_time_;
}
 void BasicCarStop::set_carstop_lasting_time(::google::protobuf::int32 value) {
  set_has_carstop_lasting_time();
  carstop_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicCarStop.carStop_lasting_time)
}

// optional int32 carStop_deduction_number = 5;
bool BasicCarStop::has_carstop_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicCarStop::set_has_carstop_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicCarStop::clear_has_carstop_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicCarStop::clear_carstop_deduction_number() {
  carstop_deduction_number_ = 0;
  clear_has_carstop_deduction_number();
}
 ::google::protobuf::int32 BasicCarStop::carstop_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicCarStop.carStop_deduction_number)
  return carstop_deduction_number_;
}
 void BasicCarStop::set_carstop_deduction_number(::google::protobuf::int32 value) {
  set_has_carstop_deduction_number();
  carstop_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicCarStop.carStop_deduction_number)
}

// optional int32 carStop_judge_number = 6;
bool BasicCarStop::has_carstop_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicCarStop::set_has_carstop_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicCarStop::clear_has_carstop_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicCarStop::clear_carstop_judge_number() {
  carstop_judge_number_ = 0;
  clear_has_carstop_judge_number();
}
 ::google::protobuf::int32 BasicCarStop::carstop_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicCarStop.carStop_judge_number)
  return carstop_judge_number_;
}
 void BasicCarStop::set_carstop_judge_number(::google::protobuf::int32 value) {
  set_has_carstop_judge_number();
  carstop_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicCarStop.carStop_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicHandBrake::kHandBrakeWhetherCheckFieldNumber;
const int BasicHandBrake::kHandBrakeDeductionFieldNumber;
const int BasicHandBrake::kHandBrakeVoiceFieldNumber;
const int BasicHandBrake::kHandBrakeDistanceFieldNumber;
const int BasicHandBrake::kHandBrakeLastingTimeFieldNumber;
const int BasicHandBrake::kHandBrakeDeductionNumberFieldNumber;
const int BasicHandBrake::kHandBrakeJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicHandBrake::BasicHandBrake()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicHandBrake)
}

void BasicHandBrake::InitAsDefaultInstance() {
}

BasicHandBrake::BasicHandBrake(const BasicHandBrake& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicHandBrake)
}

void BasicHandBrake::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  handbrake_whether_check_ = false;
  handbrake_deduction_ = 0;
  handbrake_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handbrake_distance_ = 0;
  handbrake_lasting_time_ = 0;
  handbrake_deduction_number_ = 0;
  handbrake_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicHandBrake::~BasicHandBrake() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicHandBrake)
  SharedDtor();
}

void BasicHandBrake::SharedDtor() {
  handbrake_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicHandBrake::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicHandBrake::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicHandBrake_descriptor_;
}

const BasicHandBrake& BasicHandBrake::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicHandBrake* BasicHandBrake::default_instance_ = NULL;

BasicHandBrake* BasicHandBrake::New(::google::protobuf::Arena* arena) const {
  BasicHandBrake* n = new BasicHandBrake;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicHandBrake::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicHandBrake)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicHandBrake, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicHandBrake*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(handbrake_whether_check_, handbrake_deduction_);
    ZR_(handbrake_distance_, handbrake_judge_number_);
    if (has_handbrake_voice()) {
      handbrake_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicHandBrake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicHandBrake)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool handBrake_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &handbrake_whether_check_)));
          set_has_handbrake_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_handBrake_deduction;
        break;
      }

      // optional int32 handBrake_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_handBrake_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handbrake_deduction_)));
          set_has_handbrake_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_handBrake_voice;
        break;
      }

      // optional string handBrake_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_handBrake_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handbrake_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->handbrake_voice().data(), this->handbrake_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicHandBrake.handBrake_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_handBrake_distance;
        break;
      }

      // optional int32 handBrake_distance = 4;
      case 4: {
        if (tag == 32) {
         parse_handBrake_distance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handbrake_distance_)));
          set_has_handbrake_distance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_handBrake_lasting_time;
        break;
      }

      // optional int32 handBrake_lasting_time = 5;
      case 5: {
        if (tag == 40) {
         parse_handBrake_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handbrake_lasting_time_)));
          set_has_handbrake_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_handBrake_deduction_number;
        break;
      }

      // optional int32 handBrake_deduction_number = 6;
      case 6: {
        if (tag == 48) {
         parse_handBrake_deduction_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handbrake_deduction_number_)));
          set_has_handbrake_deduction_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_handBrake_judge_number;
        break;
      }

      // optional int32 handBrake_judge_number = 7;
      case 7: {
        if (tag == 56) {
         parse_handBrake_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &handbrake_judge_number_)));
          set_has_handbrake_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicHandBrake)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicHandBrake)
  return false;
#undef DO_
}

void BasicHandBrake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicHandBrake)
  // optional bool handBrake_whether_check = 1;
  if (has_handbrake_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->handbrake_whether_check(), output);
  }

  // optional int32 handBrake_deduction = 2;
  if (has_handbrake_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->handbrake_deduction(), output);
  }

  // optional string handBrake_voice = 3;
  if (has_handbrake_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->handbrake_voice().data(), this->handbrake_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicHandBrake.handBrake_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->handbrake_voice(), output);
  }

  // optional int32 handBrake_distance = 4;
  if (has_handbrake_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->handbrake_distance(), output);
  }

  // optional int32 handBrake_lasting_time = 5;
  if (has_handbrake_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->handbrake_lasting_time(), output);
  }

  // optional int32 handBrake_deduction_number = 6;
  if (has_handbrake_deduction_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->handbrake_deduction_number(), output);
  }

  // optional int32 handBrake_judge_number = 7;
  if (has_handbrake_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->handbrake_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicHandBrake)
}

::google::protobuf::uint8* BasicHandBrake::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicHandBrake)
  // optional bool handBrake_whether_check = 1;
  if (has_handbrake_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->handbrake_whether_check(), target);
  }

  // optional int32 handBrake_deduction = 2;
  if (has_handbrake_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->handbrake_deduction(), target);
  }

  // optional string handBrake_voice = 3;
  if (has_handbrake_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->handbrake_voice().data(), this->handbrake_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicHandBrake.handBrake_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->handbrake_voice(), target);
  }

  // optional int32 handBrake_distance = 4;
  if (has_handbrake_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->handbrake_distance(), target);
  }

  // optional int32 handBrake_lasting_time = 5;
  if (has_handbrake_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->handbrake_lasting_time(), target);
  }

  // optional int32 handBrake_deduction_number = 6;
  if (has_handbrake_deduction_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->handbrake_deduction_number(), target);
  }

  // optional int32 handBrake_judge_number = 7;
  if (has_handbrake_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->handbrake_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicHandBrake)
  return target;
}

int BasicHandBrake::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicHandBrake)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional bool handBrake_whether_check = 1;
    if (has_handbrake_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 handBrake_deduction = 2;
    if (has_handbrake_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->handbrake_deduction());
    }

    // optional string handBrake_voice = 3;
    if (has_handbrake_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->handbrake_voice());
    }

    // optional int32 handBrake_distance = 4;
    if (has_handbrake_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->handbrake_distance());
    }

    // optional int32 handBrake_lasting_time = 5;
    if (has_handbrake_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->handbrake_lasting_time());
    }

    // optional int32 handBrake_deduction_number = 6;
    if (has_handbrake_deduction_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->handbrake_deduction_number());
    }

    // optional int32 handBrake_judge_number = 7;
    if (has_handbrake_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->handbrake_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicHandBrake::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicHandBrake)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicHandBrake* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicHandBrake>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicHandBrake)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicHandBrake)
    MergeFrom(*source);
  }
}

void BasicHandBrake::MergeFrom(const BasicHandBrake& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicHandBrake)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_handbrake_whether_check()) {
      set_handbrake_whether_check(from.handbrake_whether_check());
    }
    if (from.has_handbrake_deduction()) {
      set_handbrake_deduction(from.handbrake_deduction());
    }
    if (from.has_handbrake_voice()) {
      set_has_handbrake_voice();
      handbrake_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handbrake_voice_);
    }
    if (from.has_handbrake_distance()) {
      set_handbrake_distance(from.handbrake_distance());
    }
    if (from.has_handbrake_lasting_time()) {
      set_handbrake_lasting_time(from.handbrake_lasting_time());
    }
    if (from.has_handbrake_deduction_number()) {
      set_handbrake_deduction_number(from.handbrake_deduction_number());
    }
    if (from.has_handbrake_judge_number()) {
      set_handbrake_judge_number(from.handbrake_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicHandBrake::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicHandBrake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicHandBrake::CopyFrom(const BasicHandBrake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicHandBrake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicHandBrake::IsInitialized() const {

  return true;
}

void BasicHandBrake::Swap(BasicHandBrake* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicHandBrake::InternalSwap(BasicHandBrake* other) {
  std::swap(handbrake_whether_check_, other->handbrake_whether_check_);
  std::swap(handbrake_deduction_, other->handbrake_deduction_);
  handbrake_voice_.Swap(&other->handbrake_voice_);
  std::swap(handbrake_distance_, other->handbrake_distance_);
  std::swap(handbrake_lasting_time_, other->handbrake_lasting_time_);
  std::swap(handbrake_deduction_number_, other->handbrake_deduction_number_);
  std::swap(handbrake_judge_number_, other->handbrake_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicHandBrake::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicHandBrake_descriptor_;
  metadata.reflection = BasicHandBrake_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicHandBrake

// optional bool handBrake_whether_check = 1;
bool BasicHandBrake::has_handbrake_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicHandBrake::set_has_handbrake_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicHandBrake::clear_has_handbrake_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicHandBrake::clear_handbrake_whether_check() {
  handbrake_whether_check_ = false;
  clear_has_handbrake_whether_check();
}
 bool BasicHandBrake::handbrake_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_whether_check)
  return handbrake_whether_check_;
}
 void BasicHandBrake::set_handbrake_whether_check(bool value) {
  set_has_handbrake_whether_check();
  handbrake_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_whether_check)
}

// optional int32 handBrake_deduction = 2;
bool BasicHandBrake::has_handbrake_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicHandBrake::set_has_handbrake_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicHandBrake::clear_has_handbrake_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicHandBrake::clear_handbrake_deduction() {
  handbrake_deduction_ = 0;
  clear_has_handbrake_deduction();
}
 ::google::protobuf::int32 BasicHandBrake::handbrake_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_deduction)
  return handbrake_deduction_;
}
 void BasicHandBrake::set_handbrake_deduction(::google::protobuf::int32 value) {
  set_has_handbrake_deduction();
  handbrake_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_deduction)
}

// optional string handBrake_voice = 3;
bool BasicHandBrake::has_handbrake_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicHandBrake::set_has_handbrake_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicHandBrake::clear_has_handbrake_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicHandBrake::clear_handbrake_voice() {
  handbrake_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_handbrake_voice();
}
 const ::std::string& BasicHandBrake::handbrake_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_voice)
  return handbrake_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicHandBrake::set_handbrake_voice(const ::std::string& value) {
  set_has_handbrake_voice();
  handbrake_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_voice)
}
 void BasicHandBrake::set_handbrake_voice(const char* value) {
  set_has_handbrake_voice();
  handbrake_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicHandBrake.handBrake_voice)
}
 void BasicHandBrake::set_handbrake_voice(const char* value, size_t size) {
  set_has_handbrake_voice();
  handbrake_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicHandBrake.handBrake_voice)
}
 ::std::string* BasicHandBrake::mutable_handbrake_voice() {
  set_has_handbrake_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicHandBrake.handBrake_voice)
  return handbrake_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicHandBrake::release_handbrake_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicHandBrake.handBrake_voice)
  clear_has_handbrake_voice();
  return handbrake_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicHandBrake::set_allocated_handbrake_voice(::std::string* handbrake_voice) {
  if (handbrake_voice != NULL) {
    set_has_handbrake_voice();
  } else {
    clear_has_handbrake_voice();
  }
  handbrake_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), handbrake_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicHandBrake.handBrake_voice)
}

// optional int32 handBrake_distance = 4;
bool BasicHandBrake::has_handbrake_distance() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicHandBrake::set_has_handbrake_distance() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicHandBrake::clear_has_handbrake_distance() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicHandBrake::clear_handbrake_distance() {
  handbrake_distance_ = 0;
  clear_has_handbrake_distance();
}
 ::google::protobuf::int32 BasicHandBrake::handbrake_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_distance)
  return handbrake_distance_;
}
 void BasicHandBrake::set_handbrake_distance(::google::protobuf::int32 value) {
  set_has_handbrake_distance();
  handbrake_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_distance)
}

// optional int32 handBrake_lasting_time = 5;
bool BasicHandBrake::has_handbrake_lasting_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicHandBrake::set_has_handbrake_lasting_time() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicHandBrake::clear_has_handbrake_lasting_time() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicHandBrake::clear_handbrake_lasting_time() {
  handbrake_lasting_time_ = 0;
  clear_has_handbrake_lasting_time();
}
 ::google::protobuf::int32 BasicHandBrake::handbrake_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_lasting_time)
  return handbrake_lasting_time_;
}
 void BasicHandBrake::set_handbrake_lasting_time(::google::protobuf::int32 value) {
  set_has_handbrake_lasting_time();
  handbrake_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_lasting_time)
}

// optional int32 handBrake_deduction_number = 6;
bool BasicHandBrake::has_handbrake_deduction_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicHandBrake::set_has_handbrake_deduction_number() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicHandBrake::clear_has_handbrake_deduction_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicHandBrake::clear_handbrake_deduction_number() {
  handbrake_deduction_number_ = 0;
  clear_has_handbrake_deduction_number();
}
 ::google::protobuf::int32 BasicHandBrake::handbrake_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_deduction_number)
  return handbrake_deduction_number_;
}
 void BasicHandBrake::set_handbrake_deduction_number(::google::protobuf::int32 value) {
  set_has_handbrake_deduction_number();
  handbrake_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_deduction_number)
}

// optional int32 handBrake_judge_number = 7;
bool BasicHandBrake::has_handbrake_judge_number() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BasicHandBrake::set_has_handbrake_judge_number() {
  _has_bits_[0] |= 0x00000040u;
}
void BasicHandBrake::clear_has_handbrake_judge_number() {
  _has_bits_[0] &= ~0x00000040u;
}
void BasicHandBrake::clear_handbrake_judge_number() {
  handbrake_judge_number_ = 0;
  clear_has_handbrake_judge_number();
}
 ::google::protobuf::int32 BasicHandBrake::handbrake_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicHandBrake.handBrake_judge_number)
  return handbrake_judge_number_;
}
 void BasicHandBrake::set_handbrake_judge_number(::google::protobuf::int32 value) {
  set_has_handbrake_judge_number();
  handbrake_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicHandBrake.handBrake_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicTimeout::kTimeoutWhetherCheckFieldNumber;
const int BasicTimeout::kTimeoutMillisecondsFieldNumber;
const int BasicTimeout::kTimeoutDeductionFieldNumber;
const int BasicTimeout::kTimeoutVoiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicTimeout::BasicTimeout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicTimeout)
}

void BasicTimeout::InitAsDefaultInstance() {
}

BasicTimeout::BasicTimeout(const BasicTimeout& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicTimeout)
}

void BasicTimeout::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  timeout_whether_check_ = false;
  timeout_milliseconds_ = 0;
  timeout_deduction_ = 0;
  timeout_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicTimeout::~BasicTimeout() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicTimeout)
  SharedDtor();
}

void BasicTimeout::SharedDtor() {
  timeout_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicTimeout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicTimeout::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicTimeout_descriptor_;
}

const BasicTimeout& BasicTimeout::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicTimeout* BasicTimeout::default_instance_ = NULL;

BasicTimeout* BasicTimeout::New(::google::protobuf::Arena* arena) const {
  BasicTimeout* n = new BasicTimeout;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicTimeout::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicTimeout)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicTimeout, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicTimeout*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(timeout_whether_check_, timeout_milliseconds_);
    timeout_deduction_ = 0;
    if (has_timeout_voice()) {
      timeout_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicTimeout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicTimeout)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool timeout_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &timeout_whether_check_)));
          set_has_timeout_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timeout_milliseconds;
        break;
      }

      // optional int32 timeout_milliseconds = 2;
      case 2: {
        if (tag == 16) {
         parse_timeout_milliseconds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_milliseconds_)));
          set_has_timeout_milliseconds();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_timeout_deduction;
        break;
      }

      // optional int32 timeout_deduction = 3;
      case 3: {
        if (tag == 24) {
         parse_timeout_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeout_deduction_)));
          set_has_timeout_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_timeout_voice;
        break;
      }

      // optional string timeout_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_timeout_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timeout_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->timeout_voice().data(), this->timeout_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicTimeout.timeout_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicTimeout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicTimeout)
  return false;
#undef DO_
}

void BasicTimeout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicTimeout)
  // optional bool timeout_whether_check = 1;
  if (has_timeout_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->timeout_whether_check(), output);
  }

  // optional int32 timeout_milliseconds = 2;
  if (has_timeout_milliseconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->timeout_milliseconds(), output);
  }

  // optional int32 timeout_deduction = 3;
  if (has_timeout_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->timeout_deduction(), output);
  }

  // optional string timeout_voice = 4;
  if (has_timeout_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timeout_voice().data(), this->timeout_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicTimeout.timeout_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->timeout_voice(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicTimeout)
}

::google::protobuf::uint8* BasicTimeout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicTimeout)
  // optional bool timeout_whether_check = 1;
  if (has_timeout_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->timeout_whether_check(), target);
  }

  // optional int32 timeout_milliseconds = 2;
  if (has_timeout_milliseconds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->timeout_milliseconds(), target);
  }

  // optional int32 timeout_deduction = 3;
  if (has_timeout_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->timeout_deduction(), target);
  }

  // optional string timeout_voice = 4;
  if (has_timeout_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timeout_voice().data(), this->timeout_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicTimeout.timeout_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->timeout_voice(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicTimeout)
  return target;
}

int BasicTimeout::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicTimeout)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional bool timeout_whether_check = 1;
    if (has_timeout_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 timeout_milliseconds = 2;
    if (has_timeout_milliseconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timeout_milliseconds());
    }

    // optional int32 timeout_deduction = 3;
    if (has_timeout_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timeout_deduction());
    }

    // optional string timeout_voice = 4;
    if (has_timeout_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timeout_voice());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicTimeout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicTimeout)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicTimeout* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicTimeout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicTimeout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicTimeout)
    MergeFrom(*source);
  }
}

void BasicTimeout::MergeFrom(const BasicTimeout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicTimeout)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timeout_whether_check()) {
      set_timeout_whether_check(from.timeout_whether_check());
    }
    if (from.has_timeout_milliseconds()) {
      set_timeout_milliseconds(from.timeout_milliseconds());
    }
    if (from.has_timeout_deduction()) {
      set_timeout_deduction(from.timeout_deduction());
    }
    if (from.has_timeout_voice()) {
      set_has_timeout_voice();
      timeout_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timeout_voice_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicTimeout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicTimeout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicTimeout::CopyFrom(const BasicTimeout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicTimeout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicTimeout::IsInitialized() const {

  return true;
}

void BasicTimeout::Swap(BasicTimeout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicTimeout::InternalSwap(BasicTimeout* other) {
  std::swap(timeout_whether_check_, other->timeout_whether_check_);
  std::swap(timeout_milliseconds_, other->timeout_milliseconds_);
  std::swap(timeout_deduction_, other->timeout_deduction_);
  timeout_voice_.Swap(&other->timeout_voice_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicTimeout::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicTimeout_descriptor_;
  metadata.reflection = BasicTimeout_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicTimeout

// optional bool timeout_whether_check = 1;
bool BasicTimeout::has_timeout_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicTimeout::set_has_timeout_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicTimeout::clear_has_timeout_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicTimeout::clear_timeout_whether_check() {
  timeout_whether_check_ = false;
  clear_has_timeout_whether_check();
}
 bool BasicTimeout::timeout_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicTimeout.timeout_whether_check)
  return timeout_whether_check_;
}
 void BasicTimeout::set_timeout_whether_check(bool value) {
  set_has_timeout_whether_check();
  timeout_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicTimeout.timeout_whether_check)
}

// optional int32 timeout_milliseconds = 2;
bool BasicTimeout::has_timeout_milliseconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicTimeout::set_has_timeout_milliseconds() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicTimeout::clear_has_timeout_milliseconds() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicTimeout::clear_timeout_milliseconds() {
  timeout_milliseconds_ = 0;
  clear_has_timeout_milliseconds();
}
 ::google::protobuf::int32 BasicTimeout::timeout_milliseconds() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicTimeout.timeout_milliseconds)
  return timeout_milliseconds_;
}
 void BasicTimeout::set_timeout_milliseconds(::google::protobuf::int32 value) {
  set_has_timeout_milliseconds();
  timeout_milliseconds_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicTimeout.timeout_milliseconds)
}

// optional int32 timeout_deduction = 3;
bool BasicTimeout::has_timeout_deduction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicTimeout::set_has_timeout_deduction() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicTimeout::clear_has_timeout_deduction() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicTimeout::clear_timeout_deduction() {
  timeout_deduction_ = 0;
  clear_has_timeout_deduction();
}
 ::google::protobuf::int32 BasicTimeout::timeout_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicTimeout.timeout_deduction)
  return timeout_deduction_;
}
 void BasicTimeout::set_timeout_deduction(::google::protobuf::int32 value) {
  set_has_timeout_deduction();
  timeout_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicTimeout.timeout_deduction)
}

// optional string timeout_voice = 4;
bool BasicTimeout::has_timeout_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicTimeout::set_has_timeout_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicTimeout::clear_has_timeout_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicTimeout::clear_timeout_voice() {
  timeout_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timeout_voice();
}
 const ::std::string& BasicTimeout::timeout_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicTimeout.timeout_voice)
  return timeout_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicTimeout::set_timeout_voice(const ::std::string& value) {
  set_has_timeout_voice();
  timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicTimeout.timeout_voice)
}
 void BasicTimeout::set_timeout_voice(const char* value) {
  set_has_timeout_voice();
  timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicTimeout.timeout_voice)
}
 void BasicTimeout::set_timeout_voice(const char* value, size_t size) {
  set_has_timeout_voice();
  timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicTimeout.timeout_voice)
}
 ::std::string* BasicTimeout::mutable_timeout_voice() {
  set_has_timeout_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicTimeout.timeout_voice)
  return timeout_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicTimeout::release_timeout_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicTimeout.timeout_voice)
  clear_has_timeout_voice();
  return timeout_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicTimeout::set_allocated_timeout_voice(::std::string* timeout_voice) {
  if (timeout_voice != NULL) {
    set_has_timeout_voice();
  } else {
    clear_has_timeout_voice();
  }
  timeout_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timeout_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicTimeout.timeout_voice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicClutch::kClutchWhetherCheckFieldNumber;
const int BasicClutch::kClutchDeductionFieldNumber;
const int BasicClutch::kClutchVoiceFieldNumber;
const int BasicClutch::kClutchLastingTimeFieldNumber;
const int BasicClutch::kClutchDeductionNumberFieldNumber;
const int BasicClutch::kClutchJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicClutch::BasicClutch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicClutch)
}

void BasicClutch::InitAsDefaultInstance() {
}

BasicClutch::BasicClutch(const BasicClutch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicClutch)
}

void BasicClutch::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  clutch_whether_check_ = false;
  clutch_deduction_ = 0;
  clutch_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clutch_lasting_time_ = 0;
  clutch_deduction_number_ = 0;
  clutch_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicClutch::~BasicClutch() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicClutch)
  SharedDtor();
}

void BasicClutch::SharedDtor() {
  clutch_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicClutch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicClutch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicClutch_descriptor_;
}

const BasicClutch& BasicClutch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicClutch* BasicClutch::default_instance_ = NULL;

BasicClutch* BasicClutch::New(::google::protobuf::Arena* arena) const {
  BasicClutch* n = new BasicClutch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicClutch::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicClutch)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicClutch, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicClutch*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(clutch_whether_check_, clutch_deduction_);
    ZR_(clutch_lasting_time_, clutch_judge_number_);
    if (has_clutch_voice()) {
      clutch_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicClutch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicClutch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool clutch_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clutch_whether_check_)));
          set_has_clutch_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_clutch_deduction;
        break;
      }

      // optional int32 clutch_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_clutch_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clutch_deduction_)));
          set_has_clutch_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_clutch_voice;
        break;
      }

      // optional string clutch_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_clutch_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clutch_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clutch_voice().data(), this->clutch_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicClutch.clutch_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_clutch_lasting_time;
        break;
      }

      // optional int32 clutch_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_clutch_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clutch_lasting_time_)));
          set_has_clutch_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_clutch_deduction_number;
        break;
      }

      // optional int32 clutch_deduction_number = 5;
      case 5: {
        if (tag == 40) {
         parse_clutch_deduction_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clutch_deduction_number_)));
          set_has_clutch_deduction_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_clutch_judge_number;
        break;
      }

      // optional int32 clutch_judge_number = 6;
      case 6: {
        if (tag == 48) {
         parse_clutch_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clutch_judge_number_)));
          set_has_clutch_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicClutch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicClutch)
  return false;
#undef DO_
}

void BasicClutch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicClutch)
  // optional bool clutch_whether_check = 1;
  if (has_clutch_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->clutch_whether_check(), output);
  }

  // optional int32 clutch_deduction = 2;
  if (has_clutch_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->clutch_deduction(), output);
  }

  // optional string clutch_voice = 3;
  if (has_clutch_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clutch_voice().data(), this->clutch_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicClutch.clutch_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->clutch_voice(), output);
  }

  // optional int32 clutch_lasting_time = 4;
  if (has_clutch_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->clutch_lasting_time(), output);
  }

  // optional int32 clutch_deduction_number = 5;
  if (has_clutch_deduction_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->clutch_deduction_number(), output);
  }

  // optional int32 clutch_judge_number = 6;
  if (has_clutch_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->clutch_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicClutch)
}

::google::protobuf::uint8* BasicClutch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicClutch)
  // optional bool clutch_whether_check = 1;
  if (has_clutch_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->clutch_whether_check(), target);
  }

  // optional int32 clutch_deduction = 2;
  if (has_clutch_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->clutch_deduction(), target);
  }

  // optional string clutch_voice = 3;
  if (has_clutch_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clutch_voice().data(), this->clutch_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicClutch.clutch_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->clutch_voice(), target);
  }

  // optional int32 clutch_lasting_time = 4;
  if (has_clutch_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->clutch_lasting_time(), target);
  }

  // optional int32 clutch_deduction_number = 5;
  if (has_clutch_deduction_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->clutch_deduction_number(), target);
  }

  // optional int32 clutch_judge_number = 6;
  if (has_clutch_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->clutch_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicClutch)
  return target;
}

int BasicClutch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicClutch)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional bool clutch_whether_check = 1;
    if (has_clutch_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 clutch_deduction = 2;
    if (has_clutch_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clutch_deduction());
    }

    // optional string clutch_voice = 3;
    if (has_clutch_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clutch_voice());
    }

    // optional int32 clutch_lasting_time = 4;
    if (has_clutch_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clutch_lasting_time());
    }

    // optional int32 clutch_deduction_number = 5;
    if (has_clutch_deduction_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clutch_deduction_number());
    }

    // optional int32 clutch_judge_number = 6;
    if (has_clutch_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clutch_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicClutch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicClutch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicClutch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicClutch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicClutch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicClutch)
    MergeFrom(*source);
  }
}

void BasicClutch::MergeFrom(const BasicClutch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicClutch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_clutch_whether_check()) {
      set_clutch_whether_check(from.clutch_whether_check());
    }
    if (from.has_clutch_deduction()) {
      set_clutch_deduction(from.clutch_deduction());
    }
    if (from.has_clutch_voice()) {
      set_has_clutch_voice();
      clutch_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clutch_voice_);
    }
    if (from.has_clutch_lasting_time()) {
      set_clutch_lasting_time(from.clutch_lasting_time());
    }
    if (from.has_clutch_deduction_number()) {
      set_clutch_deduction_number(from.clutch_deduction_number());
    }
    if (from.has_clutch_judge_number()) {
      set_clutch_judge_number(from.clutch_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicClutch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicClutch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicClutch::CopyFrom(const BasicClutch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicClutch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicClutch::IsInitialized() const {

  return true;
}

void BasicClutch::Swap(BasicClutch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicClutch::InternalSwap(BasicClutch* other) {
  std::swap(clutch_whether_check_, other->clutch_whether_check_);
  std::swap(clutch_deduction_, other->clutch_deduction_);
  clutch_voice_.Swap(&other->clutch_voice_);
  std::swap(clutch_lasting_time_, other->clutch_lasting_time_);
  std::swap(clutch_deduction_number_, other->clutch_deduction_number_);
  std::swap(clutch_judge_number_, other->clutch_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicClutch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicClutch_descriptor_;
  metadata.reflection = BasicClutch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicClutch

// optional bool clutch_whether_check = 1;
bool BasicClutch::has_clutch_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicClutch::set_has_clutch_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicClutch::clear_has_clutch_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicClutch::clear_clutch_whether_check() {
  clutch_whether_check_ = false;
  clear_has_clutch_whether_check();
}
 bool BasicClutch::clutch_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicClutch.clutch_whether_check)
  return clutch_whether_check_;
}
 void BasicClutch::set_clutch_whether_check(bool value) {
  set_has_clutch_whether_check();
  clutch_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicClutch.clutch_whether_check)
}

// optional int32 clutch_deduction = 2;
bool BasicClutch::has_clutch_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicClutch::set_has_clutch_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicClutch::clear_has_clutch_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicClutch::clear_clutch_deduction() {
  clutch_deduction_ = 0;
  clear_has_clutch_deduction();
}
 ::google::protobuf::int32 BasicClutch::clutch_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicClutch.clutch_deduction)
  return clutch_deduction_;
}
 void BasicClutch::set_clutch_deduction(::google::protobuf::int32 value) {
  set_has_clutch_deduction();
  clutch_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicClutch.clutch_deduction)
}

// optional string clutch_voice = 3;
bool BasicClutch::has_clutch_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicClutch::set_has_clutch_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicClutch::clear_has_clutch_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicClutch::clear_clutch_voice() {
  clutch_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clutch_voice();
}
 const ::std::string& BasicClutch::clutch_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicClutch.clutch_voice)
  return clutch_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicClutch::set_clutch_voice(const ::std::string& value) {
  set_has_clutch_voice();
  clutch_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicClutch.clutch_voice)
}
 void BasicClutch::set_clutch_voice(const char* value) {
  set_has_clutch_voice();
  clutch_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicClutch.clutch_voice)
}
 void BasicClutch::set_clutch_voice(const char* value, size_t size) {
  set_has_clutch_voice();
  clutch_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicClutch.clutch_voice)
}
 ::std::string* BasicClutch::mutable_clutch_voice() {
  set_has_clutch_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicClutch.clutch_voice)
  return clutch_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicClutch::release_clutch_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicClutch.clutch_voice)
  clear_has_clutch_voice();
  return clutch_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicClutch::set_allocated_clutch_voice(::std::string* clutch_voice) {
  if (clutch_voice != NULL) {
    set_has_clutch_voice();
  } else {
    clear_has_clutch_voice();
  }
  clutch_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clutch_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicClutch.clutch_voice)
}

// optional int32 clutch_lasting_time = 4;
bool BasicClutch::has_clutch_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicClutch::set_has_clutch_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicClutch::clear_has_clutch_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicClutch::clear_clutch_lasting_time() {
  clutch_lasting_time_ = 0;
  clear_has_clutch_lasting_time();
}
 ::google::protobuf::int32 BasicClutch::clutch_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicClutch.clutch_lasting_time)
  return clutch_lasting_time_;
}
 void BasicClutch::set_clutch_lasting_time(::google::protobuf::int32 value) {
  set_has_clutch_lasting_time();
  clutch_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicClutch.clutch_lasting_time)
}

// optional int32 clutch_deduction_number = 5;
bool BasicClutch::has_clutch_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicClutch::set_has_clutch_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicClutch::clear_has_clutch_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicClutch::clear_clutch_deduction_number() {
  clutch_deduction_number_ = 0;
  clear_has_clutch_deduction_number();
}
 ::google::protobuf::int32 BasicClutch::clutch_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicClutch.clutch_deduction_number)
  return clutch_deduction_number_;
}
 void BasicClutch::set_clutch_deduction_number(::google::protobuf::int32 value) {
  set_has_clutch_deduction_number();
  clutch_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicClutch.clutch_deduction_number)
}

// optional int32 clutch_judge_number = 6;
bool BasicClutch::has_clutch_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicClutch::set_has_clutch_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicClutch::clear_has_clutch_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicClutch::clear_clutch_judge_number() {
  clutch_judge_number_ = 0;
  clear_has_clutch_judge_number();
}
 ::google::protobuf::int32 BasicClutch::clutch_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicClutch.clutch_judge_number)
  return clutch_judge_number_;
}
 void BasicClutch::set_clutch_judge_number(::google::protobuf::int32 value) {
  set_has_clutch_judge_number();
  clutch_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicClutch.clutch_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicRoundCar::kRoundCarWhetherCheckFieldNumber;
const int BasicRoundCar::kRoundCarDeductionFieldNumber;
const int BasicRoundCar::kRoundCarVoiceFieldNumber;
const int BasicRoundCar::kRoundCarLastingTimeFieldNumber;
const int BasicRoundCar::kRoundCarDeductionNumberFieldNumber;
const int BasicRoundCar::kRoundCarJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicRoundCar::BasicRoundCar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicRoundCar)
}

void BasicRoundCar::InitAsDefaultInstance() {
}

BasicRoundCar::BasicRoundCar(const BasicRoundCar& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicRoundCar)
}

void BasicRoundCar::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roundcar_whether_check_ = false;
  roundcar_deduction_ = 0;
  roundcar_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roundcar_lasting_time_ = 0;
  roundcar_deduction_number_ = 0;
  roundcar_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicRoundCar::~BasicRoundCar() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicRoundCar)
  SharedDtor();
}

void BasicRoundCar::SharedDtor() {
  roundcar_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicRoundCar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicRoundCar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicRoundCar_descriptor_;
}

const BasicRoundCar& BasicRoundCar::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicRoundCar* BasicRoundCar::default_instance_ = NULL;

BasicRoundCar* BasicRoundCar::New(::google::protobuf::Arena* arena) const {
  BasicRoundCar* n = new BasicRoundCar;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicRoundCar::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicRoundCar)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicRoundCar, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicRoundCar*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(roundcar_whether_check_, roundcar_deduction_);
    ZR_(roundcar_lasting_time_, roundcar_judge_number_);
    if (has_roundcar_voice()) {
      roundcar_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicRoundCar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicRoundCar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool roundCar_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &roundcar_whether_check_)));
          set_has_roundcar_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_roundCar_deduction;
        break;
      }

      // optional int32 roundCar_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_roundCar_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roundcar_deduction_)));
          set_has_roundcar_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_roundCar_voice;
        break;
      }

      // optional string roundCar_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_roundCar_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roundcar_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roundcar_voice().data(), this->roundcar_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicRoundCar.roundCar_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_roundCar_lasting_time;
        break;
      }

      // optional int32 roundCar_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_roundCar_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roundcar_lasting_time_)));
          set_has_roundcar_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_roundCar_deduction_number;
        break;
      }

      // optional int32 roundCar_deduction_number = 5;
      case 5: {
        if (tag == 40) {
         parse_roundCar_deduction_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roundcar_deduction_number_)));
          set_has_roundcar_deduction_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_roundCar_judge_number;
        break;
      }

      // optional int32 roundCar_judge_number = 6;
      case 6: {
        if (tag == 48) {
         parse_roundCar_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roundcar_judge_number_)));
          set_has_roundcar_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicRoundCar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicRoundCar)
  return false;
#undef DO_
}

void BasicRoundCar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicRoundCar)
  // optional bool roundCar_whether_check = 1;
  if (has_roundcar_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->roundcar_whether_check(), output);
  }

  // optional int32 roundCar_deduction = 2;
  if (has_roundcar_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roundcar_deduction(), output);
  }

  // optional string roundCar_voice = 3;
  if (has_roundcar_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roundcar_voice().data(), this->roundcar_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicRoundCar.roundCar_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->roundcar_voice(), output);
  }

  // optional int32 roundCar_lasting_time = 4;
  if (has_roundcar_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->roundcar_lasting_time(), output);
  }

  // optional int32 roundCar_deduction_number = 5;
  if (has_roundcar_deduction_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->roundcar_deduction_number(), output);
  }

  // optional int32 roundCar_judge_number = 6;
  if (has_roundcar_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->roundcar_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicRoundCar)
}

::google::protobuf::uint8* BasicRoundCar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicRoundCar)
  // optional bool roundCar_whether_check = 1;
  if (has_roundcar_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->roundcar_whether_check(), target);
  }

  // optional int32 roundCar_deduction = 2;
  if (has_roundcar_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roundcar_deduction(), target);
  }

  // optional string roundCar_voice = 3;
  if (has_roundcar_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roundcar_voice().data(), this->roundcar_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicRoundCar.roundCar_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->roundcar_voice(), target);
  }

  // optional int32 roundCar_lasting_time = 4;
  if (has_roundcar_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->roundcar_lasting_time(), target);
  }

  // optional int32 roundCar_deduction_number = 5;
  if (has_roundcar_deduction_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->roundcar_deduction_number(), target);
  }

  // optional int32 roundCar_judge_number = 6;
  if (has_roundcar_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->roundcar_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicRoundCar)
  return target;
}

int BasicRoundCar::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicRoundCar)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional bool roundCar_whether_check = 1;
    if (has_roundcar_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 roundCar_deduction = 2;
    if (has_roundcar_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roundcar_deduction());
    }

    // optional string roundCar_voice = 3;
    if (has_roundcar_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roundcar_voice());
    }

    // optional int32 roundCar_lasting_time = 4;
    if (has_roundcar_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roundcar_lasting_time());
    }

    // optional int32 roundCar_deduction_number = 5;
    if (has_roundcar_deduction_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roundcar_deduction_number());
    }

    // optional int32 roundCar_judge_number = 6;
    if (has_roundcar_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roundcar_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicRoundCar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicRoundCar)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicRoundCar* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicRoundCar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicRoundCar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicRoundCar)
    MergeFrom(*source);
  }
}

void BasicRoundCar::MergeFrom(const BasicRoundCar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicRoundCar)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roundcar_whether_check()) {
      set_roundcar_whether_check(from.roundcar_whether_check());
    }
    if (from.has_roundcar_deduction()) {
      set_roundcar_deduction(from.roundcar_deduction());
    }
    if (from.has_roundcar_voice()) {
      set_has_roundcar_voice();
      roundcar_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roundcar_voice_);
    }
    if (from.has_roundcar_lasting_time()) {
      set_roundcar_lasting_time(from.roundcar_lasting_time());
    }
    if (from.has_roundcar_deduction_number()) {
      set_roundcar_deduction_number(from.roundcar_deduction_number());
    }
    if (from.has_roundcar_judge_number()) {
      set_roundcar_judge_number(from.roundcar_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicRoundCar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicRoundCar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicRoundCar::CopyFrom(const BasicRoundCar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicRoundCar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicRoundCar::IsInitialized() const {

  return true;
}

void BasicRoundCar::Swap(BasicRoundCar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicRoundCar::InternalSwap(BasicRoundCar* other) {
  std::swap(roundcar_whether_check_, other->roundcar_whether_check_);
  std::swap(roundcar_deduction_, other->roundcar_deduction_);
  roundcar_voice_.Swap(&other->roundcar_voice_);
  std::swap(roundcar_lasting_time_, other->roundcar_lasting_time_);
  std::swap(roundcar_deduction_number_, other->roundcar_deduction_number_);
  std::swap(roundcar_judge_number_, other->roundcar_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicRoundCar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicRoundCar_descriptor_;
  metadata.reflection = BasicRoundCar_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicRoundCar

// optional bool roundCar_whether_check = 1;
bool BasicRoundCar::has_roundcar_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicRoundCar::set_has_roundcar_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicRoundCar::clear_has_roundcar_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicRoundCar::clear_roundcar_whether_check() {
  roundcar_whether_check_ = false;
  clear_has_roundcar_whether_check();
}
 bool BasicRoundCar::roundcar_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRoundCar.roundCar_whether_check)
  return roundcar_whether_check_;
}
 void BasicRoundCar::set_roundcar_whether_check(bool value) {
  set_has_roundcar_whether_check();
  roundcar_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRoundCar.roundCar_whether_check)
}

// optional int32 roundCar_deduction = 2;
bool BasicRoundCar::has_roundcar_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicRoundCar::set_has_roundcar_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicRoundCar::clear_has_roundcar_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicRoundCar::clear_roundcar_deduction() {
  roundcar_deduction_ = 0;
  clear_has_roundcar_deduction();
}
 ::google::protobuf::int32 BasicRoundCar::roundcar_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRoundCar.roundCar_deduction)
  return roundcar_deduction_;
}
 void BasicRoundCar::set_roundcar_deduction(::google::protobuf::int32 value) {
  set_has_roundcar_deduction();
  roundcar_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRoundCar.roundCar_deduction)
}

// optional string roundCar_voice = 3;
bool BasicRoundCar::has_roundcar_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicRoundCar::set_has_roundcar_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicRoundCar::clear_has_roundcar_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicRoundCar::clear_roundcar_voice() {
  roundcar_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roundcar_voice();
}
 const ::std::string& BasicRoundCar::roundcar_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRoundCar.roundCar_voice)
  return roundcar_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicRoundCar::set_roundcar_voice(const ::std::string& value) {
  set_has_roundcar_voice();
  roundcar_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicRoundCar.roundCar_voice)
}
 void BasicRoundCar::set_roundcar_voice(const char* value) {
  set_has_roundcar_voice();
  roundcar_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicRoundCar.roundCar_voice)
}
 void BasicRoundCar::set_roundcar_voice(const char* value, size_t size) {
  set_has_roundcar_voice();
  roundcar_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicRoundCar.roundCar_voice)
}
 ::std::string* BasicRoundCar::mutable_roundcar_voice() {
  set_has_roundcar_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicRoundCar.roundCar_voice)
  return roundcar_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicRoundCar::release_roundcar_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicRoundCar.roundCar_voice)
  clear_has_roundcar_voice();
  return roundcar_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicRoundCar::set_allocated_roundcar_voice(::std::string* roundcar_voice) {
  if (roundcar_voice != NULL) {
    set_has_roundcar_voice();
  } else {
    clear_has_roundcar_voice();
  }
  roundcar_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roundcar_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicRoundCar.roundCar_voice)
}

// optional int32 roundCar_lasting_time = 4;
bool BasicRoundCar::has_roundcar_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicRoundCar::set_has_roundcar_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicRoundCar::clear_has_roundcar_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicRoundCar::clear_roundcar_lasting_time() {
  roundcar_lasting_time_ = 0;
  clear_has_roundcar_lasting_time();
}
 ::google::protobuf::int32 BasicRoundCar::roundcar_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRoundCar.roundCar_lasting_time)
  return roundcar_lasting_time_;
}
 void BasicRoundCar::set_roundcar_lasting_time(::google::protobuf::int32 value) {
  set_has_roundcar_lasting_time();
  roundcar_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRoundCar.roundCar_lasting_time)
}

// optional int32 roundCar_deduction_number = 5;
bool BasicRoundCar::has_roundcar_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicRoundCar::set_has_roundcar_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicRoundCar::clear_has_roundcar_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicRoundCar::clear_roundcar_deduction_number() {
  roundcar_deduction_number_ = 0;
  clear_has_roundcar_deduction_number();
}
 ::google::protobuf::int32 BasicRoundCar::roundcar_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRoundCar.roundCar_deduction_number)
  return roundcar_deduction_number_;
}
 void BasicRoundCar::set_roundcar_deduction_number(::google::protobuf::int32 value) {
  set_has_roundcar_deduction_number();
  roundcar_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRoundCar.roundCar_deduction_number)
}

// optional int32 roundCar_judge_number = 6;
bool BasicRoundCar::has_roundcar_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicRoundCar::set_has_roundcar_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicRoundCar::clear_has_roundcar_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicRoundCar::clear_roundcar_judge_number() {
  roundcar_judge_number_ = 0;
  clear_has_roundcar_judge_number();
}
 ::google::protobuf::int32 BasicRoundCar::roundcar_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRoundCar.roundCar_judge_number)
  return roundcar_judge_number_;
}
 void BasicRoundCar::set_roundcar_judge_number(::google::protobuf::int32 value) {
  set_has_roundcar_judge_number();
  roundcar_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRoundCar.roundCar_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicSlowDown::kSlowDownWhetherCheckFieldNumber;
const int BasicSlowDown::kSlowDownDeductionFieldNumber;
const int BasicSlowDown::kSlowDownVoiceFieldNumber;
const int BasicSlowDown::kSlowDownLastingTimeFieldNumber;
const int BasicSlowDown::kSlowDownDeductionNumberFieldNumber;
const int BasicSlowDown::kSlowDownJudgeNumberFieldNumber;
const int BasicSlowDown::kLimitSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicSlowDown::BasicSlowDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicSlowDown)
}

void BasicSlowDown::InitAsDefaultInstance() {
}

BasicSlowDown::BasicSlowDown(const BasicSlowDown& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicSlowDown)
}

void BasicSlowDown::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  slowdown_whether_check_ = true;
  slowdown_deduction_ = 0;
  slowdown_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slowdown_lasting_time_ = 0;
  slowdown_deduction_number_ = 0;
  slowdown_judge_number_ = 0;
  limit_speed_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicSlowDown::~BasicSlowDown() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicSlowDown)
  SharedDtor();
}

void BasicSlowDown::SharedDtor() {
  slowdown_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicSlowDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicSlowDown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicSlowDown_descriptor_;
}

const BasicSlowDown& BasicSlowDown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicSlowDown* BasicSlowDown::default_instance_ = NULL;

BasicSlowDown* BasicSlowDown::New(::google::protobuf::Arena* arena) const {
  BasicSlowDown* n = new BasicSlowDown;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicSlowDown::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicSlowDown)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicSlowDown, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicSlowDown*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(slowdown_lasting_time_, limit_speed_);
    slowdown_whether_check_ = true;
    slowdown_deduction_ = 0;
    if (has_slowdown_voice()) {
      slowdown_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicSlowDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicSlowDown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool slowDown_whether_check = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &slowdown_whether_check_)));
          set_has_slowdown_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_slowDown_deduction;
        break;
      }

      // optional int32 slowDown_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_slowDown_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slowdown_deduction_)));
          set_has_slowdown_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_slowDown_voice;
        break;
      }

      // optional string slowDown_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_slowDown_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slowdown_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->slowdown_voice().data(), this->slowdown_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicSlowDown.slowDown_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_slowDown_lasting_time;
        break;
      }

      // optional int32 slowDown_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_slowDown_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slowdown_lasting_time_)));
          set_has_slowdown_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_slowDown_deduction_number;
        break;
      }

      // optional int32 slowDown_deduction_number = 5;
      case 5: {
        if (tag == 40) {
         parse_slowDown_deduction_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slowdown_deduction_number_)));
          set_has_slowdown_deduction_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_slowDown_judge_number;
        break;
      }

      // optional int32 slowDown_judge_number = 6;
      case 6: {
        if (tag == 48) {
         parse_slowDown_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slowdown_judge_number_)));
          set_has_slowdown_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_limit_speed;
        break;
      }

      // optional int32 limit_speed = 7;
      case 7: {
        if (tag == 56) {
         parse_limit_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_speed_)));
          set_has_limit_speed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicSlowDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicSlowDown)
  return false;
#undef DO_
}

void BasicSlowDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicSlowDown)
  // optional bool slowDown_whether_check = 1 [default = true];
  if (has_slowdown_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->slowdown_whether_check(), output);
  }

  // optional int32 slowDown_deduction = 2;
  if (has_slowdown_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->slowdown_deduction(), output);
  }

  // optional string slowDown_voice = 3;
  if (has_slowdown_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slowdown_voice().data(), this->slowdown_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicSlowDown.slowDown_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->slowdown_voice(), output);
  }

  // optional int32 slowDown_lasting_time = 4;
  if (has_slowdown_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->slowdown_lasting_time(), output);
  }

  // optional int32 slowDown_deduction_number = 5;
  if (has_slowdown_deduction_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->slowdown_deduction_number(), output);
  }

  // optional int32 slowDown_judge_number = 6;
  if (has_slowdown_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->slowdown_judge_number(), output);
  }

  // optional int32 limit_speed = 7;
  if (has_limit_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->limit_speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicSlowDown)
}

::google::protobuf::uint8* BasicSlowDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicSlowDown)
  // optional bool slowDown_whether_check = 1 [default = true];
  if (has_slowdown_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->slowdown_whether_check(), target);
  }

  // optional int32 slowDown_deduction = 2;
  if (has_slowdown_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->slowdown_deduction(), target);
  }

  // optional string slowDown_voice = 3;
  if (has_slowdown_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->slowdown_voice().data(), this->slowdown_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicSlowDown.slowDown_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->slowdown_voice(), target);
  }

  // optional int32 slowDown_lasting_time = 4;
  if (has_slowdown_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->slowdown_lasting_time(), target);
  }

  // optional int32 slowDown_deduction_number = 5;
  if (has_slowdown_deduction_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->slowdown_deduction_number(), target);
  }

  // optional int32 slowDown_judge_number = 6;
  if (has_slowdown_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->slowdown_judge_number(), target);
  }

  // optional int32 limit_speed = 7;
  if (has_limit_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->limit_speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicSlowDown)
  return target;
}

int BasicSlowDown::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicSlowDown)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional bool slowDown_whether_check = 1 [default = true];
    if (has_slowdown_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 slowDown_deduction = 2;
    if (has_slowdown_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slowdown_deduction());
    }

    // optional string slowDown_voice = 3;
    if (has_slowdown_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->slowdown_voice());
    }

    // optional int32 slowDown_lasting_time = 4;
    if (has_slowdown_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slowdown_lasting_time());
    }

    // optional int32 slowDown_deduction_number = 5;
    if (has_slowdown_deduction_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slowdown_deduction_number());
    }

    // optional int32 slowDown_judge_number = 6;
    if (has_slowdown_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slowdown_judge_number());
    }

    // optional int32 limit_speed = 7;
    if (has_limit_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit_speed());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicSlowDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicSlowDown)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicSlowDown* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicSlowDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicSlowDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicSlowDown)
    MergeFrom(*source);
  }
}

void BasicSlowDown::MergeFrom(const BasicSlowDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicSlowDown)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slowdown_whether_check()) {
      set_slowdown_whether_check(from.slowdown_whether_check());
    }
    if (from.has_slowdown_deduction()) {
      set_slowdown_deduction(from.slowdown_deduction());
    }
    if (from.has_slowdown_voice()) {
      set_has_slowdown_voice();
      slowdown_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slowdown_voice_);
    }
    if (from.has_slowdown_lasting_time()) {
      set_slowdown_lasting_time(from.slowdown_lasting_time());
    }
    if (from.has_slowdown_deduction_number()) {
      set_slowdown_deduction_number(from.slowdown_deduction_number());
    }
    if (from.has_slowdown_judge_number()) {
      set_slowdown_judge_number(from.slowdown_judge_number());
    }
    if (from.has_limit_speed()) {
      set_limit_speed(from.limit_speed());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicSlowDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicSlowDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicSlowDown::CopyFrom(const BasicSlowDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicSlowDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicSlowDown::IsInitialized() const {

  return true;
}

void BasicSlowDown::Swap(BasicSlowDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicSlowDown::InternalSwap(BasicSlowDown* other) {
  std::swap(slowdown_whether_check_, other->slowdown_whether_check_);
  std::swap(slowdown_deduction_, other->slowdown_deduction_);
  slowdown_voice_.Swap(&other->slowdown_voice_);
  std::swap(slowdown_lasting_time_, other->slowdown_lasting_time_);
  std::swap(slowdown_deduction_number_, other->slowdown_deduction_number_);
  std::swap(slowdown_judge_number_, other->slowdown_judge_number_);
  std::swap(limit_speed_, other->limit_speed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicSlowDown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicSlowDown_descriptor_;
  metadata.reflection = BasicSlowDown_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicSlowDown

// optional bool slowDown_whether_check = 1 [default = true];
bool BasicSlowDown::has_slowdown_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicSlowDown::set_has_slowdown_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicSlowDown::clear_has_slowdown_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicSlowDown::clear_slowdown_whether_check() {
  slowdown_whether_check_ = true;
  clear_has_slowdown_whether_check();
}
 bool BasicSlowDown::slowdown_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.slowDown_whether_check)
  return slowdown_whether_check_;
}
 void BasicSlowDown::set_slowdown_whether_check(bool value) {
  set_has_slowdown_whether_check();
  slowdown_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.slowDown_whether_check)
}

// optional int32 slowDown_deduction = 2;
bool BasicSlowDown::has_slowdown_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicSlowDown::set_has_slowdown_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicSlowDown::clear_has_slowdown_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicSlowDown::clear_slowdown_deduction() {
  slowdown_deduction_ = 0;
  clear_has_slowdown_deduction();
}
 ::google::protobuf::int32 BasicSlowDown::slowdown_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.slowDown_deduction)
  return slowdown_deduction_;
}
 void BasicSlowDown::set_slowdown_deduction(::google::protobuf::int32 value) {
  set_has_slowdown_deduction();
  slowdown_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.slowDown_deduction)
}

// optional string slowDown_voice = 3;
bool BasicSlowDown::has_slowdown_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicSlowDown::set_has_slowdown_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicSlowDown::clear_has_slowdown_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicSlowDown::clear_slowdown_voice() {
  slowdown_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_slowdown_voice();
}
 const ::std::string& BasicSlowDown::slowdown_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.slowDown_voice)
  return slowdown_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicSlowDown::set_slowdown_voice(const ::std::string& value) {
  set_has_slowdown_voice();
  slowdown_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.slowDown_voice)
}
 void BasicSlowDown::set_slowdown_voice(const char* value) {
  set_has_slowdown_voice();
  slowdown_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicSlowDown.slowDown_voice)
}
 void BasicSlowDown::set_slowdown_voice(const char* value, size_t size) {
  set_has_slowdown_voice();
  slowdown_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicSlowDown.slowDown_voice)
}
 ::std::string* BasicSlowDown::mutable_slowdown_voice() {
  set_has_slowdown_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicSlowDown.slowDown_voice)
  return slowdown_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicSlowDown::release_slowdown_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicSlowDown.slowDown_voice)
  clear_has_slowdown_voice();
  return slowdown_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicSlowDown::set_allocated_slowdown_voice(::std::string* slowdown_voice) {
  if (slowdown_voice != NULL) {
    set_has_slowdown_voice();
  } else {
    clear_has_slowdown_voice();
  }
  slowdown_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), slowdown_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicSlowDown.slowDown_voice)
}

// optional int32 slowDown_lasting_time = 4;
bool BasicSlowDown::has_slowdown_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicSlowDown::set_has_slowdown_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicSlowDown::clear_has_slowdown_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicSlowDown::clear_slowdown_lasting_time() {
  slowdown_lasting_time_ = 0;
  clear_has_slowdown_lasting_time();
}
 ::google::protobuf::int32 BasicSlowDown::slowdown_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.slowDown_lasting_time)
  return slowdown_lasting_time_;
}
 void BasicSlowDown::set_slowdown_lasting_time(::google::protobuf::int32 value) {
  set_has_slowdown_lasting_time();
  slowdown_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.slowDown_lasting_time)
}

// optional int32 slowDown_deduction_number = 5;
bool BasicSlowDown::has_slowdown_deduction_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicSlowDown::set_has_slowdown_deduction_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicSlowDown::clear_has_slowdown_deduction_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicSlowDown::clear_slowdown_deduction_number() {
  slowdown_deduction_number_ = 0;
  clear_has_slowdown_deduction_number();
}
 ::google::protobuf::int32 BasicSlowDown::slowdown_deduction_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.slowDown_deduction_number)
  return slowdown_deduction_number_;
}
 void BasicSlowDown::set_slowdown_deduction_number(::google::protobuf::int32 value) {
  set_has_slowdown_deduction_number();
  slowdown_deduction_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.slowDown_deduction_number)
}

// optional int32 slowDown_judge_number = 6;
bool BasicSlowDown::has_slowdown_judge_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicSlowDown::set_has_slowdown_judge_number() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicSlowDown::clear_has_slowdown_judge_number() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicSlowDown::clear_slowdown_judge_number() {
  slowdown_judge_number_ = 0;
  clear_has_slowdown_judge_number();
}
 ::google::protobuf::int32 BasicSlowDown::slowdown_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.slowDown_judge_number)
  return slowdown_judge_number_;
}
 void BasicSlowDown::set_slowdown_judge_number(::google::protobuf::int32 value) {
  set_has_slowdown_judge_number();
  slowdown_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.slowDown_judge_number)
}

// optional int32 limit_speed = 7;
bool BasicSlowDown::has_limit_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BasicSlowDown::set_has_limit_speed() {
  _has_bits_[0] |= 0x00000040u;
}
void BasicSlowDown::clear_has_limit_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
void BasicSlowDown::clear_limit_speed() {
  limit_speed_ = 0;
  clear_has_limit_speed();
}
 ::google::protobuf::int32 BasicSlowDown::limit_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSlowDown.limit_speed)
  return limit_speed_;
}
 void BasicSlowDown::set_limit_speed(::google::protobuf::int32 value) {
  set_has_limit_speed();
  limit_speed_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSlowDown.limit_speed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicFireUp::kFireupWhetherCheckFieldNumber;
const int BasicFireUp::kFireupDeductionFieldNumber;
const int BasicFireUp::kFireupVoiceFieldNumber;
const int BasicFireUp::kFireupLastingTimeFieldNumber;
const int BasicFireUp::kSlowDownJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicFireUp::BasicFireUp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicFireUp)
}

void BasicFireUp::InitAsDefaultInstance() {
}

BasicFireUp::BasicFireUp(const BasicFireUp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicFireUp)
}

void BasicFireUp::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  fireup_whether_check_ = false;
  fireup_deduction_ = 0;
  fireup_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fireup_lasting_time_ = 0;
  slowdown_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicFireUp::~BasicFireUp() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicFireUp)
  SharedDtor();
}

void BasicFireUp::SharedDtor() {
  fireup_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicFireUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicFireUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicFireUp_descriptor_;
}

const BasicFireUp& BasicFireUp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicFireUp* BasicFireUp::default_instance_ = NULL;

BasicFireUp* BasicFireUp::New(::google::protobuf::Arena* arena) const {
  BasicFireUp* n = new BasicFireUp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicFireUp::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicFireUp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicFireUp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicFireUp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(fireup_whether_check_, fireup_deduction_);
    ZR_(fireup_lasting_time_, slowdown_judge_number_);
    if (has_fireup_voice()) {
      fireup_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicFireUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicFireUp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool fireup_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fireup_whether_check_)));
          set_has_fireup_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_fireup_deduction;
        break;
      }

      // optional int32 fireup_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_fireup_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fireup_deduction_)));
          set_has_fireup_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fireup_voice;
        break;
      }

      // optional string fireup_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_fireup_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fireup_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fireup_voice().data(), this->fireup_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicFireUp.fireup_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_fireup_lasting_time;
        break;
      }

      // optional int32 fireup_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_fireup_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fireup_lasting_time_)));
          set_has_fireup_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_slowDown_judge_number;
        break;
      }

      // optional int32 slowDown_judge_number = 5;
      case 5: {
        if (tag == 40) {
         parse_slowDown_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slowdown_judge_number_)));
          set_has_slowdown_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicFireUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicFireUp)
  return false;
#undef DO_
}

void BasicFireUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicFireUp)
  // optional bool fireup_whether_check = 1;
  if (has_fireup_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->fireup_whether_check(), output);
  }

  // optional int32 fireup_deduction = 2;
  if (has_fireup_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fireup_deduction(), output);
  }

  // optional string fireup_voice = 3;
  if (has_fireup_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fireup_voice().data(), this->fireup_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicFireUp.fireup_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fireup_voice(), output);
  }

  // optional int32 fireup_lasting_time = 4;
  if (has_fireup_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->fireup_lasting_time(), output);
  }

  // optional int32 slowDown_judge_number = 5;
  if (has_slowdown_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->slowdown_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicFireUp)
}

::google::protobuf::uint8* BasicFireUp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicFireUp)
  // optional bool fireup_whether_check = 1;
  if (has_fireup_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->fireup_whether_check(), target);
  }

  // optional int32 fireup_deduction = 2;
  if (has_fireup_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fireup_deduction(), target);
  }

  // optional string fireup_voice = 3;
  if (has_fireup_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fireup_voice().data(), this->fireup_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicFireUp.fireup_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fireup_voice(), target);
  }

  // optional int32 fireup_lasting_time = 4;
  if (has_fireup_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->fireup_lasting_time(), target);
  }

  // optional int32 slowDown_judge_number = 5;
  if (has_slowdown_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->slowdown_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicFireUp)
  return target;
}

int BasicFireUp::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicFireUp)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional bool fireup_whether_check = 1;
    if (has_fireup_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 fireup_deduction = 2;
    if (has_fireup_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fireup_deduction());
    }

    // optional string fireup_voice = 3;
    if (has_fireup_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fireup_voice());
    }

    // optional int32 fireup_lasting_time = 4;
    if (has_fireup_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fireup_lasting_time());
    }

    // optional int32 slowDown_judge_number = 5;
    if (has_slowdown_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slowdown_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicFireUp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicFireUp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicFireUp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicFireUp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicFireUp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicFireUp)
    MergeFrom(*source);
  }
}

void BasicFireUp::MergeFrom(const BasicFireUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicFireUp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fireup_whether_check()) {
      set_fireup_whether_check(from.fireup_whether_check());
    }
    if (from.has_fireup_deduction()) {
      set_fireup_deduction(from.fireup_deduction());
    }
    if (from.has_fireup_voice()) {
      set_has_fireup_voice();
      fireup_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fireup_voice_);
    }
    if (from.has_fireup_lasting_time()) {
      set_fireup_lasting_time(from.fireup_lasting_time());
    }
    if (from.has_slowdown_judge_number()) {
      set_slowdown_judge_number(from.slowdown_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicFireUp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicFireUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicFireUp::CopyFrom(const BasicFireUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicFireUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicFireUp::IsInitialized() const {

  return true;
}

void BasicFireUp::Swap(BasicFireUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicFireUp::InternalSwap(BasicFireUp* other) {
  std::swap(fireup_whether_check_, other->fireup_whether_check_);
  std::swap(fireup_deduction_, other->fireup_deduction_);
  fireup_voice_.Swap(&other->fireup_voice_);
  std::swap(fireup_lasting_time_, other->fireup_lasting_time_);
  std::swap(slowdown_judge_number_, other->slowdown_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicFireUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicFireUp_descriptor_;
  metadata.reflection = BasicFireUp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicFireUp

// optional bool fireup_whether_check = 1;
bool BasicFireUp::has_fireup_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicFireUp::set_has_fireup_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicFireUp::clear_has_fireup_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicFireUp::clear_fireup_whether_check() {
  fireup_whether_check_ = false;
  clear_has_fireup_whether_check();
}
 bool BasicFireUp::fireup_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFireUp.fireup_whether_check)
  return fireup_whether_check_;
}
 void BasicFireUp::set_fireup_whether_check(bool value) {
  set_has_fireup_whether_check();
  fireup_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFireUp.fireup_whether_check)
}

// optional int32 fireup_deduction = 2;
bool BasicFireUp::has_fireup_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicFireUp::set_has_fireup_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicFireUp::clear_has_fireup_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicFireUp::clear_fireup_deduction() {
  fireup_deduction_ = 0;
  clear_has_fireup_deduction();
}
 ::google::protobuf::int32 BasicFireUp::fireup_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFireUp.fireup_deduction)
  return fireup_deduction_;
}
 void BasicFireUp::set_fireup_deduction(::google::protobuf::int32 value) {
  set_has_fireup_deduction();
  fireup_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFireUp.fireup_deduction)
}

// optional string fireup_voice = 3;
bool BasicFireUp::has_fireup_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicFireUp::set_has_fireup_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicFireUp::clear_has_fireup_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicFireUp::clear_fireup_voice() {
  fireup_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fireup_voice();
}
 const ::std::string& BasicFireUp::fireup_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFireUp.fireup_voice)
  return fireup_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicFireUp::set_fireup_voice(const ::std::string& value) {
  set_has_fireup_voice();
  fireup_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicFireUp.fireup_voice)
}
 void BasicFireUp::set_fireup_voice(const char* value) {
  set_has_fireup_voice();
  fireup_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicFireUp.fireup_voice)
}
 void BasicFireUp::set_fireup_voice(const char* value, size_t size) {
  set_has_fireup_voice();
  fireup_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicFireUp.fireup_voice)
}
 ::std::string* BasicFireUp::mutable_fireup_voice() {
  set_has_fireup_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicFireUp.fireup_voice)
  return fireup_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicFireUp::release_fireup_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicFireUp.fireup_voice)
  clear_has_fireup_voice();
  return fireup_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicFireUp::set_allocated_fireup_voice(::std::string* fireup_voice) {
  if (fireup_voice != NULL) {
    set_has_fireup_voice();
  } else {
    clear_has_fireup_voice();
  }
  fireup_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fireup_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicFireUp.fireup_voice)
}

// optional int32 fireup_lasting_time = 4;
bool BasicFireUp::has_fireup_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicFireUp::set_has_fireup_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicFireUp::clear_has_fireup_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicFireUp::clear_fireup_lasting_time() {
  fireup_lasting_time_ = 0;
  clear_has_fireup_lasting_time();
}
 ::google::protobuf::int32 BasicFireUp::fireup_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFireUp.fireup_lasting_time)
  return fireup_lasting_time_;
}
 void BasicFireUp::set_fireup_lasting_time(::google::protobuf::int32 value) {
  set_has_fireup_lasting_time();
  fireup_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFireUp.fireup_lasting_time)
}

// optional int32 slowDown_judge_number = 5;
bool BasicFireUp::has_slowdown_judge_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicFireUp::set_has_slowdown_judge_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicFireUp::clear_has_slowdown_judge_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicFireUp::clear_slowdown_judge_number() {
  slowdown_judge_number_ = 0;
  clear_has_slowdown_judge_number();
}
 ::google::protobuf::int32 BasicFireUp::slowdown_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicFireUp.slowDown_judge_number)
  return slowdown_judge_number_;
}
 void BasicFireUp::set_slowdown_judge_number(::google::protobuf::int32 value) {
  set_has_slowdown_judge_number();
  slowdown_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicFireUp.slowDown_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicSeat::kSeatWhetherCheckFieldNumber;
const int BasicSeat::kSeatDeductionFieldNumber;
const int BasicSeat::kSeatVoiceFieldNumber;
const int BasicSeat::kSeatLastingTimeFieldNumber;
const int BasicSeat::kSlowDownJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicSeat::BasicSeat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicSeat)
}

void BasicSeat::InitAsDefaultInstance() {
}

BasicSeat::BasicSeat(const BasicSeat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicSeat)
}

void BasicSeat::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  seat_whether_check_ = false;
  seat_deduction_ = 0;
  seat_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seat_lasting_time_ = 0;
  slowdown_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicSeat::~BasicSeat() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicSeat)
  SharedDtor();
}

void BasicSeat::SharedDtor() {
  seat_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicSeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicSeat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicSeat_descriptor_;
}

const BasicSeat& BasicSeat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicSeat* BasicSeat::default_instance_ = NULL;

BasicSeat* BasicSeat::New(::google::protobuf::Arena* arena) const {
  BasicSeat* n = new BasicSeat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicSeat::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicSeat)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicSeat, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicSeat*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(seat_whether_check_, seat_deduction_);
    ZR_(seat_lasting_time_, slowdown_judge_number_);
    if (has_seat_voice()) {
      seat_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicSeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicSeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool seat_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &seat_whether_check_)));
          set_has_seat_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seat_deduction;
        break;
      }

      // optional int32 seat_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_seat_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_deduction_)));
          set_has_seat_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_seat_voice;
        break;
      }

      // optional string seat_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_seat_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_seat_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->seat_voice().data(), this->seat_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicSeat.seat_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_seat_lasting_time;
        break;
      }

      // optional int32 seat_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_seat_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seat_lasting_time_)));
          set_has_seat_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_slowDown_judge_number;
        break;
      }

      // optional int32 slowDown_judge_number = 5;
      case 5: {
        if (tag == 40) {
         parse_slowDown_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slowdown_judge_number_)));
          set_has_slowdown_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicSeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicSeat)
  return false;
#undef DO_
}

void BasicSeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicSeat)
  // optional bool seat_whether_check = 1;
  if (has_seat_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->seat_whether_check(), output);
  }

  // optional int32 seat_deduction = 2;
  if (has_seat_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->seat_deduction(), output);
  }

  // optional string seat_voice = 3;
  if (has_seat_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->seat_voice().data(), this->seat_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicSeat.seat_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->seat_voice(), output);
  }

  // optional int32 seat_lasting_time = 4;
  if (has_seat_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->seat_lasting_time(), output);
  }

  // optional int32 slowDown_judge_number = 5;
  if (has_slowdown_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->slowdown_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicSeat)
}

::google::protobuf::uint8* BasicSeat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicSeat)
  // optional bool seat_whether_check = 1;
  if (has_seat_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->seat_whether_check(), target);
  }

  // optional int32 seat_deduction = 2;
  if (has_seat_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->seat_deduction(), target);
  }

  // optional string seat_voice = 3;
  if (has_seat_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->seat_voice().data(), this->seat_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicSeat.seat_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->seat_voice(), target);
  }

  // optional int32 seat_lasting_time = 4;
  if (has_seat_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->seat_lasting_time(), target);
  }

  // optional int32 slowDown_judge_number = 5;
  if (has_slowdown_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->slowdown_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicSeat)
  return target;
}

int BasicSeat::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicSeat)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional bool seat_whether_check = 1;
    if (has_seat_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 seat_deduction = 2;
    if (has_seat_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seat_deduction());
    }

    // optional string seat_voice = 3;
    if (has_seat_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->seat_voice());
    }

    // optional int32 seat_lasting_time = 4;
    if (has_seat_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seat_lasting_time());
    }

    // optional int32 slowDown_judge_number = 5;
    if (has_slowdown_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slowdown_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicSeat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicSeat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicSeat* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicSeat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicSeat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicSeat)
    MergeFrom(*source);
  }
}

void BasicSeat::MergeFrom(const BasicSeat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicSeat)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seat_whether_check()) {
      set_seat_whether_check(from.seat_whether_check());
    }
    if (from.has_seat_deduction()) {
      set_seat_deduction(from.seat_deduction());
    }
    if (from.has_seat_voice()) {
      set_has_seat_voice();
      seat_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.seat_voice_);
    }
    if (from.has_seat_lasting_time()) {
      set_seat_lasting_time(from.seat_lasting_time());
    }
    if (from.has_slowdown_judge_number()) {
      set_slowdown_judge_number(from.slowdown_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicSeat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicSeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicSeat::CopyFrom(const BasicSeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicSeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicSeat::IsInitialized() const {

  return true;
}

void BasicSeat::Swap(BasicSeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicSeat::InternalSwap(BasicSeat* other) {
  std::swap(seat_whether_check_, other->seat_whether_check_);
  std::swap(seat_deduction_, other->seat_deduction_);
  seat_voice_.Swap(&other->seat_voice_);
  std::swap(seat_lasting_time_, other->seat_lasting_time_);
  std::swap(slowdown_judge_number_, other->slowdown_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicSeat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicSeat_descriptor_;
  metadata.reflection = BasicSeat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicSeat

// optional bool seat_whether_check = 1;
bool BasicSeat::has_seat_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicSeat::set_has_seat_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicSeat::clear_has_seat_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicSeat::clear_seat_whether_check() {
  seat_whether_check_ = false;
  clear_has_seat_whether_check();
}
 bool BasicSeat::seat_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSeat.seat_whether_check)
  return seat_whether_check_;
}
 void BasicSeat::set_seat_whether_check(bool value) {
  set_has_seat_whether_check();
  seat_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSeat.seat_whether_check)
}

// optional int32 seat_deduction = 2;
bool BasicSeat::has_seat_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicSeat::set_has_seat_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicSeat::clear_has_seat_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicSeat::clear_seat_deduction() {
  seat_deduction_ = 0;
  clear_has_seat_deduction();
}
 ::google::protobuf::int32 BasicSeat::seat_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSeat.seat_deduction)
  return seat_deduction_;
}
 void BasicSeat::set_seat_deduction(::google::protobuf::int32 value) {
  set_has_seat_deduction();
  seat_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSeat.seat_deduction)
}

// optional string seat_voice = 3;
bool BasicSeat::has_seat_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicSeat::set_has_seat_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicSeat::clear_has_seat_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicSeat::clear_seat_voice() {
  seat_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_seat_voice();
}
 const ::std::string& BasicSeat::seat_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSeat.seat_voice)
  return seat_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicSeat::set_seat_voice(const ::std::string& value) {
  set_has_seat_voice();
  seat_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicSeat.seat_voice)
}
 void BasicSeat::set_seat_voice(const char* value) {
  set_has_seat_voice();
  seat_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicSeat.seat_voice)
}
 void BasicSeat::set_seat_voice(const char* value, size_t size) {
  set_has_seat_voice();
  seat_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicSeat.seat_voice)
}
 ::std::string* BasicSeat::mutable_seat_voice() {
  set_has_seat_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicSeat.seat_voice)
  return seat_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicSeat::release_seat_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicSeat.seat_voice)
  clear_has_seat_voice();
  return seat_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicSeat::set_allocated_seat_voice(::std::string* seat_voice) {
  if (seat_voice != NULL) {
    set_has_seat_voice();
  } else {
    clear_has_seat_voice();
  }
  seat_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seat_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicSeat.seat_voice)
}

// optional int32 seat_lasting_time = 4;
bool BasicSeat::has_seat_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicSeat::set_has_seat_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicSeat::clear_has_seat_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicSeat::clear_seat_lasting_time() {
  seat_lasting_time_ = 0;
  clear_has_seat_lasting_time();
}
 ::google::protobuf::int32 BasicSeat::seat_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSeat.seat_lasting_time)
  return seat_lasting_time_;
}
 void BasicSeat::set_seat_lasting_time(::google::protobuf::int32 value) {
  set_has_seat_lasting_time();
  seat_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSeat.seat_lasting_time)
}

// optional int32 slowDown_judge_number = 5;
bool BasicSeat::has_slowdown_judge_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicSeat::set_has_slowdown_judge_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicSeat::clear_has_slowdown_judge_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicSeat::clear_slowdown_judge_number() {
  slowdown_judge_number_ = 0;
  clear_has_slowdown_judge_number();
}
 ::google::protobuf::int32 BasicSeat::slowdown_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicSeat.slowDown_judge_number)
  return slowdown_judge_number_;
}
 void BasicSeat::set_slowdown_judge_number(::google::protobuf::int32 value) {
  set_has_slowdown_judge_number();
  slowdown_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicSeat.slowDown_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicLeftMirror::kLeftMirrorWhetherCheckFieldNumber;
const int BasicLeftMirror::kLeftMirrorDeductionFieldNumber;
const int BasicLeftMirror::kLeftMirrorVoiceFieldNumber;
const int BasicLeftMirror::kLeftMirrorLastingTimeFieldNumber;
const int BasicLeftMirror::kLeftJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicLeftMirror::BasicLeftMirror()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicLeftMirror)
}

void BasicLeftMirror::InitAsDefaultInstance() {
}

BasicLeftMirror::BasicLeftMirror(const BasicLeftMirror& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicLeftMirror)
}

void BasicLeftMirror::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  left_mirror_whether_check_ = false;
  left_mirror_deduction_ = 0;
  left_mirror_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  left_mirror_lasting_time_ = 0;
  left_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicLeftMirror::~BasicLeftMirror() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicLeftMirror)
  SharedDtor();
}

void BasicLeftMirror::SharedDtor() {
  left_mirror_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicLeftMirror::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicLeftMirror::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicLeftMirror_descriptor_;
}

const BasicLeftMirror& BasicLeftMirror::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicLeftMirror* BasicLeftMirror::default_instance_ = NULL;

BasicLeftMirror* BasicLeftMirror::New(::google::protobuf::Arena* arena) const {
  BasicLeftMirror* n = new BasicLeftMirror;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicLeftMirror::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicLeftMirror)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicLeftMirror, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicLeftMirror*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(left_mirror_whether_check_, left_mirror_deduction_);
    ZR_(left_mirror_lasting_time_, left_judge_number_);
    if (has_left_mirror_voice()) {
      left_mirror_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicLeftMirror::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicLeftMirror)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool left_mirror_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &left_mirror_whether_check_)));
          set_has_left_mirror_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_left_mirror_deduction;
        break;
      }

      // optional int32 left_mirror_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_left_mirror_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_mirror_deduction_)));
          set_has_left_mirror_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_left_mirror_voice;
        break;
      }

      // optional string left_mirror_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_left_mirror_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_left_mirror_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->left_mirror_voice().data(), this->left_mirror_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicLeftMirror.left_mirror_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_left_mirror_lasting_time;
        break;
      }

      // optional int32 left_mirror_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_left_mirror_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_mirror_lasting_time_)));
          set_has_left_mirror_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_left_judge_number;
        break;
      }

      // optional int32 left_judge_number = 5;
      case 5: {
        if (tag == 40) {
         parse_left_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_judge_number_)));
          set_has_left_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicLeftMirror)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicLeftMirror)
  return false;
#undef DO_
}

void BasicLeftMirror::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicLeftMirror)
  // optional bool left_mirror_whether_check = 1;
  if (has_left_mirror_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->left_mirror_whether_check(), output);
  }

  // optional int32 left_mirror_deduction = 2;
  if (has_left_mirror_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_mirror_deduction(), output);
  }

  // optional string left_mirror_voice = 3;
  if (has_left_mirror_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->left_mirror_voice().data(), this->left_mirror_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicLeftMirror.left_mirror_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->left_mirror_voice(), output);
  }

  // optional int32 left_mirror_lasting_time = 4;
  if (has_left_mirror_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->left_mirror_lasting_time(), output);
  }

  // optional int32 left_judge_number = 5;
  if (has_left_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->left_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicLeftMirror)
}

::google::protobuf::uint8* BasicLeftMirror::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicLeftMirror)
  // optional bool left_mirror_whether_check = 1;
  if (has_left_mirror_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->left_mirror_whether_check(), target);
  }

  // optional int32 left_mirror_deduction = 2;
  if (has_left_mirror_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_mirror_deduction(), target);
  }

  // optional string left_mirror_voice = 3;
  if (has_left_mirror_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->left_mirror_voice().data(), this->left_mirror_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicLeftMirror.left_mirror_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->left_mirror_voice(), target);
  }

  // optional int32 left_mirror_lasting_time = 4;
  if (has_left_mirror_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->left_mirror_lasting_time(), target);
  }

  // optional int32 left_judge_number = 5;
  if (has_left_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->left_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicLeftMirror)
  return target;
}

int BasicLeftMirror::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicLeftMirror)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional bool left_mirror_whether_check = 1;
    if (has_left_mirror_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 left_mirror_deduction = 2;
    if (has_left_mirror_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_mirror_deduction());
    }

    // optional string left_mirror_voice = 3;
    if (has_left_mirror_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->left_mirror_voice());
    }

    // optional int32 left_mirror_lasting_time = 4;
    if (has_left_mirror_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_mirror_lasting_time());
    }

    // optional int32 left_judge_number = 5;
    if (has_left_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicLeftMirror::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicLeftMirror)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicLeftMirror* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicLeftMirror>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicLeftMirror)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicLeftMirror)
    MergeFrom(*source);
  }
}

void BasicLeftMirror::MergeFrom(const BasicLeftMirror& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicLeftMirror)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_mirror_whether_check()) {
      set_left_mirror_whether_check(from.left_mirror_whether_check());
    }
    if (from.has_left_mirror_deduction()) {
      set_left_mirror_deduction(from.left_mirror_deduction());
    }
    if (from.has_left_mirror_voice()) {
      set_has_left_mirror_voice();
      left_mirror_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.left_mirror_voice_);
    }
    if (from.has_left_mirror_lasting_time()) {
      set_left_mirror_lasting_time(from.left_mirror_lasting_time());
    }
    if (from.has_left_judge_number()) {
      set_left_judge_number(from.left_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicLeftMirror::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicLeftMirror)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicLeftMirror::CopyFrom(const BasicLeftMirror& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicLeftMirror)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicLeftMirror::IsInitialized() const {

  return true;
}

void BasicLeftMirror::Swap(BasicLeftMirror* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicLeftMirror::InternalSwap(BasicLeftMirror* other) {
  std::swap(left_mirror_whether_check_, other->left_mirror_whether_check_);
  std::swap(left_mirror_deduction_, other->left_mirror_deduction_);
  left_mirror_voice_.Swap(&other->left_mirror_voice_);
  std::swap(left_mirror_lasting_time_, other->left_mirror_lasting_time_);
  std::swap(left_judge_number_, other->left_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicLeftMirror::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicLeftMirror_descriptor_;
  metadata.reflection = BasicLeftMirror_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicLeftMirror

// optional bool left_mirror_whether_check = 1;
bool BasicLeftMirror::has_left_mirror_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicLeftMirror::set_has_left_mirror_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicLeftMirror::clear_has_left_mirror_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicLeftMirror::clear_left_mirror_whether_check() {
  left_mirror_whether_check_ = false;
  clear_has_left_mirror_whether_check();
}
 bool BasicLeftMirror::left_mirror_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftMirror.left_mirror_whether_check)
  return left_mirror_whether_check_;
}
 void BasicLeftMirror::set_left_mirror_whether_check(bool value) {
  set_has_left_mirror_whether_check();
  left_mirror_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftMirror.left_mirror_whether_check)
}

// optional int32 left_mirror_deduction = 2;
bool BasicLeftMirror::has_left_mirror_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicLeftMirror::set_has_left_mirror_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicLeftMirror::clear_has_left_mirror_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicLeftMirror::clear_left_mirror_deduction() {
  left_mirror_deduction_ = 0;
  clear_has_left_mirror_deduction();
}
 ::google::protobuf::int32 BasicLeftMirror::left_mirror_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftMirror.left_mirror_deduction)
  return left_mirror_deduction_;
}
 void BasicLeftMirror::set_left_mirror_deduction(::google::protobuf::int32 value) {
  set_has_left_mirror_deduction();
  left_mirror_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftMirror.left_mirror_deduction)
}

// optional string left_mirror_voice = 3;
bool BasicLeftMirror::has_left_mirror_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicLeftMirror::set_has_left_mirror_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicLeftMirror::clear_has_left_mirror_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicLeftMirror::clear_left_mirror_voice() {
  left_mirror_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_left_mirror_voice();
}
 const ::std::string& BasicLeftMirror::left_mirror_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftMirror.left_mirror_voice)
  return left_mirror_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicLeftMirror::set_left_mirror_voice(const ::std::string& value) {
  set_has_left_mirror_voice();
  left_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftMirror.left_mirror_voice)
}
 void BasicLeftMirror::set_left_mirror_voice(const char* value) {
  set_has_left_mirror_voice();
  left_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicLeftMirror.left_mirror_voice)
}
 void BasicLeftMirror::set_left_mirror_voice(const char* value, size_t size) {
  set_has_left_mirror_voice();
  left_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicLeftMirror.left_mirror_voice)
}
 ::std::string* BasicLeftMirror::mutable_left_mirror_voice() {
  set_has_left_mirror_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicLeftMirror.left_mirror_voice)
  return left_mirror_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicLeftMirror::release_left_mirror_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicLeftMirror.left_mirror_voice)
  clear_has_left_mirror_voice();
  return left_mirror_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicLeftMirror::set_allocated_left_mirror_voice(::std::string* left_mirror_voice) {
  if (left_mirror_voice != NULL) {
    set_has_left_mirror_voice();
  } else {
    clear_has_left_mirror_voice();
  }
  left_mirror_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), left_mirror_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicLeftMirror.left_mirror_voice)
}

// optional int32 left_mirror_lasting_time = 4;
bool BasicLeftMirror::has_left_mirror_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicLeftMirror::set_has_left_mirror_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicLeftMirror::clear_has_left_mirror_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicLeftMirror::clear_left_mirror_lasting_time() {
  left_mirror_lasting_time_ = 0;
  clear_has_left_mirror_lasting_time();
}
 ::google::protobuf::int32 BasicLeftMirror::left_mirror_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftMirror.left_mirror_lasting_time)
  return left_mirror_lasting_time_;
}
 void BasicLeftMirror::set_left_mirror_lasting_time(::google::protobuf::int32 value) {
  set_has_left_mirror_lasting_time();
  left_mirror_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftMirror.left_mirror_lasting_time)
}

// optional int32 left_judge_number = 5;
bool BasicLeftMirror::has_left_judge_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicLeftMirror::set_has_left_judge_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicLeftMirror::clear_has_left_judge_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicLeftMirror::clear_left_judge_number() {
  left_judge_number_ = 0;
  clear_has_left_judge_number();
}
 ::google::protobuf::int32 BasicLeftMirror::left_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicLeftMirror.left_judge_number)
  return left_judge_number_;
}
 void BasicLeftMirror::set_left_judge_number(::google::protobuf::int32 value) {
  set_has_left_judge_number();
  left_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicLeftMirror.left_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicMiddleMirror::kMiddleMirrorWhetherCheckFieldNumber;
const int BasicMiddleMirror::kMiddleMirrorDeductionFieldNumber;
const int BasicMiddleMirror::kMiddleMirrorVoiceFieldNumber;
const int BasicMiddleMirror::kMiddleMirrorLastingTimeFieldNumber;
const int BasicMiddleMirror::kMiddleJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicMiddleMirror::BasicMiddleMirror()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicMiddleMirror)
}

void BasicMiddleMirror::InitAsDefaultInstance() {
}

BasicMiddleMirror::BasicMiddleMirror(const BasicMiddleMirror& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicMiddleMirror)
}

void BasicMiddleMirror::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  middle_mirror_whether_check_ = false;
  middle_mirror_deduction_ = 0;
  middle_mirror_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  middle_mirror_lasting_time_ = 0;
  middle_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicMiddleMirror::~BasicMiddleMirror() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicMiddleMirror)
  SharedDtor();
}

void BasicMiddleMirror::SharedDtor() {
  middle_mirror_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicMiddleMirror::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicMiddleMirror::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicMiddleMirror_descriptor_;
}

const BasicMiddleMirror& BasicMiddleMirror::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicMiddleMirror* BasicMiddleMirror::default_instance_ = NULL;

BasicMiddleMirror* BasicMiddleMirror::New(::google::protobuf::Arena* arena) const {
  BasicMiddleMirror* n = new BasicMiddleMirror;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicMiddleMirror::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicMiddleMirror)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicMiddleMirror, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicMiddleMirror*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(middle_mirror_whether_check_, middle_mirror_deduction_);
    ZR_(middle_mirror_lasting_time_, middle_judge_number_);
    if (has_middle_mirror_voice()) {
      middle_mirror_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicMiddleMirror::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicMiddleMirror)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool middle_mirror_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &middle_mirror_whether_check_)));
          set_has_middle_mirror_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_middle_mirror_deduction;
        break;
      }

      // optional int32 middle_mirror_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_middle_mirror_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &middle_mirror_deduction_)));
          set_has_middle_mirror_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_middle_mirror_voice;
        break;
      }

      // optional string middle_mirror_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_middle_mirror_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_middle_mirror_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->middle_mirror_voice().data(), this->middle_mirror_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicMiddleMirror.middle_mirror_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_middle_mirror_lasting_time;
        break;
      }

      // optional int32 middle_mirror_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_middle_mirror_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &middle_mirror_lasting_time_)));
          set_has_middle_mirror_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_middle_judge_number;
        break;
      }

      // optional int32 middle_judge_number = 5;
      case 5: {
        if (tag == 40) {
         parse_middle_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &middle_judge_number_)));
          set_has_middle_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicMiddleMirror)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicMiddleMirror)
  return false;
#undef DO_
}

void BasicMiddleMirror::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicMiddleMirror)
  // optional bool middle_mirror_whether_check = 1;
  if (has_middle_mirror_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->middle_mirror_whether_check(), output);
  }

  // optional int32 middle_mirror_deduction = 2;
  if (has_middle_mirror_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->middle_mirror_deduction(), output);
  }

  // optional string middle_mirror_voice = 3;
  if (has_middle_mirror_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->middle_mirror_voice().data(), this->middle_mirror_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicMiddleMirror.middle_mirror_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->middle_mirror_voice(), output);
  }

  // optional int32 middle_mirror_lasting_time = 4;
  if (has_middle_mirror_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->middle_mirror_lasting_time(), output);
  }

  // optional int32 middle_judge_number = 5;
  if (has_middle_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->middle_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicMiddleMirror)
}

::google::protobuf::uint8* BasicMiddleMirror::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicMiddleMirror)
  // optional bool middle_mirror_whether_check = 1;
  if (has_middle_mirror_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->middle_mirror_whether_check(), target);
  }

  // optional int32 middle_mirror_deduction = 2;
  if (has_middle_mirror_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->middle_mirror_deduction(), target);
  }

  // optional string middle_mirror_voice = 3;
  if (has_middle_mirror_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->middle_mirror_voice().data(), this->middle_mirror_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicMiddleMirror.middle_mirror_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->middle_mirror_voice(), target);
  }

  // optional int32 middle_mirror_lasting_time = 4;
  if (has_middle_mirror_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->middle_mirror_lasting_time(), target);
  }

  // optional int32 middle_judge_number = 5;
  if (has_middle_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->middle_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicMiddleMirror)
  return target;
}

int BasicMiddleMirror::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicMiddleMirror)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional bool middle_mirror_whether_check = 1;
    if (has_middle_mirror_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 middle_mirror_deduction = 2;
    if (has_middle_mirror_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->middle_mirror_deduction());
    }

    // optional string middle_mirror_voice = 3;
    if (has_middle_mirror_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->middle_mirror_voice());
    }

    // optional int32 middle_mirror_lasting_time = 4;
    if (has_middle_mirror_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->middle_mirror_lasting_time());
    }

    // optional int32 middle_judge_number = 5;
    if (has_middle_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->middle_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicMiddleMirror::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicMiddleMirror)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicMiddleMirror* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicMiddleMirror>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicMiddleMirror)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicMiddleMirror)
    MergeFrom(*source);
  }
}

void BasicMiddleMirror::MergeFrom(const BasicMiddleMirror& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicMiddleMirror)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_middle_mirror_whether_check()) {
      set_middle_mirror_whether_check(from.middle_mirror_whether_check());
    }
    if (from.has_middle_mirror_deduction()) {
      set_middle_mirror_deduction(from.middle_mirror_deduction());
    }
    if (from.has_middle_mirror_voice()) {
      set_has_middle_mirror_voice();
      middle_mirror_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.middle_mirror_voice_);
    }
    if (from.has_middle_mirror_lasting_time()) {
      set_middle_mirror_lasting_time(from.middle_mirror_lasting_time());
    }
    if (from.has_middle_judge_number()) {
      set_middle_judge_number(from.middle_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicMiddleMirror::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicMiddleMirror)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicMiddleMirror::CopyFrom(const BasicMiddleMirror& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicMiddleMirror)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicMiddleMirror::IsInitialized() const {

  return true;
}

void BasicMiddleMirror::Swap(BasicMiddleMirror* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicMiddleMirror::InternalSwap(BasicMiddleMirror* other) {
  std::swap(middle_mirror_whether_check_, other->middle_mirror_whether_check_);
  std::swap(middle_mirror_deduction_, other->middle_mirror_deduction_);
  middle_mirror_voice_.Swap(&other->middle_mirror_voice_);
  std::swap(middle_mirror_lasting_time_, other->middle_mirror_lasting_time_);
  std::swap(middle_judge_number_, other->middle_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicMiddleMirror::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicMiddleMirror_descriptor_;
  metadata.reflection = BasicMiddleMirror_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicMiddleMirror

// optional bool middle_mirror_whether_check = 1;
bool BasicMiddleMirror::has_middle_mirror_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicMiddleMirror::set_has_middle_mirror_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicMiddleMirror::clear_has_middle_mirror_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicMiddleMirror::clear_middle_mirror_whether_check() {
  middle_mirror_whether_check_ = false;
  clear_has_middle_mirror_whether_check();
}
 bool BasicMiddleMirror::middle_mirror_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicMiddleMirror.middle_mirror_whether_check)
  return middle_mirror_whether_check_;
}
 void BasicMiddleMirror::set_middle_mirror_whether_check(bool value) {
  set_has_middle_mirror_whether_check();
  middle_mirror_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicMiddleMirror.middle_mirror_whether_check)
}

// optional int32 middle_mirror_deduction = 2;
bool BasicMiddleMirror::has_middle_mirror_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicMiddleMirror::set_has_middle_mirror_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicMiddleMirror::clear_has_middle_mirror_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicMiddleMirror::clear_middle_mirror_deduction() {
  middle_mirror_deduction_ = 0;
  clear_has_middle_mirror_deduction();
}
 ::google::protobuf::int32 BasicMiddleMirror::middle_mirror_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicMiddleMirror.middle_mirror_deduction)
  return middle_mirror_deduction_;
}
 void BasicMiddleMirror::set_middle_mirror_deduction(::google::protobuf::int32 value) {
  set_has_middle_mirror_deduction();
  middle_mirror_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicMiddleMirror.middle_mirror_deduction)
}

// optional string middle_mirror_voice = 3;
bool BasicMiddleMirror::has_middle_mirror_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicMiddleMirror::set_has_middle_mirror_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicMiddleMirror::clear_has_middle_mirror_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicMiddleMirror::clear_middle_mirror_voice() {
  middle_mirror_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_middle_mirror_voice();
}
 const ::std::string& BasicMiddleMirror::middle_mirror_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicMiddleMirror.middle_mirror_voice)
  return middle_mirror_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicMiddleMirror::set_middle_mirror_voice(const ::std::string& value) {
  set_has_middle_mirror_voice();
  middle_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicMiddleMirror.middle_mirror_voice)
}
 void BasicMiddleMirror::set_middle_mirror_voice(const char* value) {
  set_has_middle_mirror_voice();
  middle_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicMiddleMirror.middle_mirror_voice)
}
 void BasicMiddleMirror::set_middle_mirror_voice(const char* value, size_t size) {
  set_has_middle_mirror_voice();
  middle_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicMiddleMirror.middle_mirror_voice)
}
 ::std::string* BasicMiddleMirror::mutable_middle_mirror_voice() {
  set_has_middle_mirror_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicMiddleMirror.middle_mirror_voice)
  return middle_mirror_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicMiddleMirror::release_middle_mirror_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicMiddleMirror.middle_mirror_voice)
  clear_has_middle_mirror_voice();
  return middle_mirror_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicMiddleMirror::set_allocated_middle_mirror_voice(::std::string* middle_mirror_voice) {
  if (middle_mirror_voice != NULL) {
    set_has_middle_mirror_voice();
  } else {
    clear_has_middle_mirror_voice();
  }
  middle_mirror_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), middle_mirror_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicMiddleMirror.middle_mirror_voice)
}

// optional int32 middle_mirror_lasting_time = 4;
bool BasicMiddleMirror::has_middle_mirror_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicMiddleMirror::set_has_middle_mirror_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicMiddleMirror::clear_has_middle_mirror_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicMiddleMirror::clear_middle_mirror_lasting_time() {
  middle_mirror_lasting_time_ = 0;
  clear_has_middle_mirror_lasting_time();
}
 ::google::protobuf::int32 BasicMiddleMirror::middle_mirror_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicMiddleMirror.middle_mirror_lasting_time)
  return middle_mirror_lasting_time_;
}
 void BasicMiddleMirror::set_middle_mirror_lasting_time(::google::protobuf::int32 value) {
  set_has_middle_mirror_lasting_time();
  middle_mirror_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicMiddleMirror.middle_mirror_lasting_time)
}

// optional int32 middle_judge_number = 5;
bool BasicMiddleMirror::has_middle_judge_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicMiddleMirror::set_has_middle_judge_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicMiddleMirror::clear_has_middle_judge_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicMiddleMirror::clear_middle_judge_number() {
  middle_judge_number_ = 0;
  clear_has_middle_judge_number();
}
 ::google::protobuf::int32 BasicMiddleMirror::middle_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicMiddleMirror.middle_judge_number)
  return middle_judge_number_;
}
 void BasicMiddleMirror::set_middle_judge_number(::google::protobuf::int32 value) {
  set_has_middle_judge_number();
  middle_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicMiddleMirror.middle_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicRightMirror::kRightMirrorWhetherCheckFieldNumber;
const int BasicRightMirror::kRightMirrorDeductionFieldNumber;
const int BasicRightMirror::kRightMirrorVoiceFieldNumber;
const int BasicRightMirror::kRightMirrorLastingTimeFieldNumber;
const int BasicRightMirror::kRightJudgeNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicRightMirror::BasicRightMirror()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicRightMirror)
}

void BasicRightMirror::InitAsDefaultInstance() {
}

BasicRightMirror::BasicRightMirror(const BasicRightMirror& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicRightMirror)
}

void BasicRightMirror::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  right_mirror_whether_check_ = false;
  right_mirror_deduction_ = 0;
  right_mirror_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  right_mirror_lasting_time_ = 0;
  right_judge_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicRightMirror::~BasicRightMirror() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicRightMirror)
  SharedDtor();
}

void BasicRightMirror::SharedDtor() {
  right_mirror_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicRightMirror::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicRightMirror::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicRightMirror_descriptor_;
}

const BasicRightMirror& BasicRightMirror::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicRightMirror* BasicRightMirror::default_instance_ = NULL;

BasicRightMirror* BasicRightMirror::New(::google::protobuf::Arena* arena) const {
  BasicRightMirror* n = new BasicRightMirror;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicRightMirror::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicRightMirror)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicRightMirror, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicRightMirror*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(right_mirror_whether_check_, right_mirror_deduction_);
    ZR_(right_mirror_lasting_time_, right_judge_number_);
    if (has_right_mirror_voice()) {
      right_mirror_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicRightMirror::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicRightMirror)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool right_mirror_whether_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &right_mirror_whether_check_)));
          set_has_right_mirror_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_right_mirror_deduction;
        break;
      }

      // optional int32 right_mirror_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_right_mirror_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_mirror_deduction_)));
          set_has_right_mirror_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_right_mirror_voice;
        break;
      }

      // optional string right_mirror_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_right_mirror_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_right_mirror_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->right_mirror_voice().data(), this->right_mirror_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicRightMirror.right_mirror_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_right_mirror_lasting_time;
        break;
      }

      // optional int32 right_mirror_lasting_time = 4;
      case 4: {
        if (tag == 32) {
         parse_right_mirror_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_mirror_lasting_time_)));
          set_has_right_mirror_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_right_judge_number;
        break;
      }

      // optional int32 right_judge_number = 5;
      case 5: {
        if (tag == 40) {
         parse_right_judge_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_judge_number_)));
          set_has_right_judge_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicRightMirror)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicRightMirror)
  return false;
#undef DO_
}

void BasicRightMirror::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicRightMirror)
  // optional bool right_mirror_whether_check = 1;
  if (has_right_mirror_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->right_mirror_whether_check(), output);
  }

  // optional int32 right_mirror_deduction = 2;
  if (has_right_mirror_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->right_mirror_deduction(), output);
  }

  // optional string right_mirror_voice = 3;
  if (has_right_mirror_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->right_mirror_voice().data(), this->right_mirror_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicRightMirror.right_mirror_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->right_mirror_voice(), output);
  }

  // optional int32 right_mirror_lasting_time = 4;
  if (has_right_mirror_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->right_mirror_lasting_time(), output);
  }

  // optional int32 right_judge_number = 5;
  if (has_right_judge_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->right_judge_number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicRightMirror)
}

::google::protobuf::uint8* BasicRightMirror::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicRightMirror)
  // optional bool right_mirror_whether_check = 1;
  if (has_right_mirror_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->right_mirror_whether_check(), target);
  }

  // optional int32 right_mirror_deduction = 2;
  if (has_right_mirror_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->right_mirror_deduction(), target);
  }

  // optional string right_mirror_voice = 3;
  if (has_right_mirror_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->right_mirror_voice().data(), this->right_mirror_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicRightMirror.right_mirror_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->right_mirror_voice(), target);
  }

  // optional int32 right_mirror_lasting_time = 4;
  if (has_right_mirror_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->right_mirror_lasting_time(), target);
  }

  // optional int32 right_judge_number = 5;
  if (has_right_judge_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->right_judge_number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicRightMirror)
  return target;
}

int BasicRightMirror::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicRightMirror)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional bool right_mirror_whether_check = 1;
    if (has_right_mirror_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 right_mirror_deduction = 2;
    if (has_right_mirror_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->right_mirror_deduction());
    }

    // optional string right_mirror_voice = 3;
    if (has_right_mirror_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->right_mirror_voice());
    }

    // optional int32 right_mirror_lasting_time = 4;
    if (has_right_mirror_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->right_mirror_lasting_time());
    }

    // optional int32 right_judge_number = 5;
    if (has_right_judge_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->right_judge_number());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicRightMirror::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicRightMirror)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicRightMirror* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicRightMirror>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicRightMirror)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicRightMirror)
    MergeFrom(*source);
  }
}

void BasicRightMirror::MergeFrom(const BasicRightMirror& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicRightMirror)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_right_mirror_whether_check()) {
      set_right_mirror_whether_check(from.right_mirror_whether_check());
    }
    if (from.has_right_mirror_deduction()) {
      set_right_mirror_deduction(from.right_mirror_deduction());
    }
    if (from.has_right_mirror_voice()) {
      set_has_right_mirror_voice();
      right_mirror_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.right_mirror_voice_);
    }
    if (from.has_right_mirror_lasting_time()) {
      set_right_mirror_lasting_time(from.right_mirror_lasting_time());
    }
    if (from.has_right_judge_number()) {
      set_right_judge_number(from.right_judge_number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicRightMirror::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicRightMirror)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicRightMirror::CopyFrom(const BasicRightMirror& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicRightMirror)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicRightMirror::IsInitialized() const {

  return true;
}

void BasicRightMirror::Swap(BasicRightMirror* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicRightMirror::InternalSwap(BasicRightMirror* other) {
  std::swap(right_mirror_whether_check_, other->right_mirror_whether_check_);
  std::swap(right_mirror_deduction_, other->right_mirror_deduction_);
  right_mirror_voice_.Swap(&other->right_mirror_voice_);
  std::swap(right_mirror_lasting_time_, other->right_mirror_lasting_time_);
  std::swap(right_judge_number_, other->right_judge_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicRightMirror::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicRightMirror_descriptor_;
  metadata.reflection = BasicRightMirror_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicRightMirror

// optional bool right_mirror_whether_check = 1;
bool BasicRightMirror::has_right_mirror_whether_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicRightMirror::set_has_right_mirror_whether_check() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicRightMirror::clear_has_right_mirror_whether_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicRightMirror::clear_right_mirror_whether_check() {
  right_mirror_whether_check_ = false;
  clear_has_right_mirror_whether_check();
}
 bool BasicRightMirror::right_mirror_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightMirror.right_mirror_whether_check)
  return right_mirror_whether_check_;
}
 void BasicRightMirror::set_right_mirror_whether_check(bool value) {
  set_has_right_mirror_whether_check();
  right_mirror_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightMirror.right_mirror_whether_check)
}

// optional int32 right_mirror_deduction = 2;
bool BasicRightMirror::has_right_mirror_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicRightMirror::set_has_right_mirror_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicRightMirror::clear_has_right_mirror_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicRightMirror::clear_right_mirror_deduction() {
  right_mirror_deduction_ = 0;
  clear_has_right_mirror_deduction();
}
 ::google::protobuf::int32 BasicRightMirror::right_mirror_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightMirror.right_mirror_deduction)
  return right_mirror_deduction_;
}
 void BasicRightMirror::set_right_mirror_deduction(::google::protobuf::int32 value) {
  set_has_right_mirror_deduction();
  right_mirror_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightMirror.right_mirror_deduction)
}

// optional string right_mirror_voice = 3;
bool BasicRightMirror::has_right_mirror_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicRightMirror::set_has_right_mirror_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicRightMirror::clear_has_right_mirror_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicRightMirror::clear_right_mirror_voice() {
  right_mirror_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_right_mirror_voice();
}
 const ::std::string& BasicRightMirror::right_mirror_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightMirror.right_mirror_voice)
  return right_mirror_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicRightMirror::set_right_mirror_voice(const ::std::string& value) {
  set_has_right_mirror_voice();
  right_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightMirror.right_mirror_voice)
}
 void BasicRightMirror::set_right_mirror_voice(const char* value) {
  set_has_right_mirror_voice();
  right_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicRightMirror.right_mirror_voice)
}
 void BasicRightMirror::set_right_mirror_voice(const char* value, size_t size) {
  set_has_right_mirror_voice();
  right_mirror_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicRightMirror.right_mirror_voice)
}
 ::std::string* BasicRightMirror::mutable_right_mirror_voice() {
  set_has_right_mirror_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicRightMirror.right_mirror_voice)
  return right_mirror_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicRightMirror::release_right_mirror_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicRightMirror.right_mirror_voice)
  clear_has_right_mirror_voice();
  return right_mirror_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicRightMirror::set_allocated_right_mirror_voice(::std::string* right_mirror_voice) {
  if (right_mirror_voice != NULL) {
    set_has_right_mirror_voice();
  } else {
    clear_has_right_mirror_voice();
  }
  right_mirror_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), right_mirror_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicRightMirror.right_mirror_voice)
}

// optional int32 right_mirror_lasting_time = 4;
bool BasicRightMirror::has_right_mirror_lasting_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicRightMirror::set_has_right_mirror_lasting_time() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicRightMirror::clear_has_right_mirror_lasting_time() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicRightMirror::clear_right_mirror_lasting_time() {
  right_mirror_lasting_time_ = 0;
  clear_has_right_mirror_lasting_time();
}
 ::google::protobuf::int32 BasicRightMirror::right_mirror_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightMirror.right_mirror_lasting_time)
  return right_mirror_lasting_time_;
}
 void BasicRightMirror::set_right_mirror_lasting_time(::google::protobuf::int32 value) {
  set_has_right_mirror_lasting_time();
  right_mirror_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightMirror.right_mirror_lasting_time)
}

// optional int32 right_judge_number = 5;
bool BasicRightMirror::has_right_judge_number() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicRightMirror::set_has_right_judge_number() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicRightMirror::clear_has_right_judge_number() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicRightMirror::clear_right_judge_number() {
  right_judge_number_ = 0;
  clear_has_right_judge_number();
}
 ::google::protobuf::int32 BasicRightMirror::right_judge_number() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicRightMirror.right_judge_number)
  return right_judge_number_;
}
 void BasicRightMirror::set_right_judge_number(::google::protobuf::int32 value) {
  set_has_right_judge_number();
  right_judge_number_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicRightMirror.right_judge_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeDistance::kItemDistanceCheckFieldNumber;
const int ItemJudgeDistance::kItemMinDistanceFieldNumber;
const int ItemJudgeDistance::kItemMaxDistanceFieldNumber;
const int ItemJudgeDistance::kItemDeductionFieldNumber;
const int ItemJudgeDistance::kItemDeductionVoiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeDistance::ItemJudgeDistance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeDistance)
}

void ItemJudgeDistance::InitAsDefaultInstance() {
}

ItemJudgeDistance::ItemJudgeDistance(const ItemJudgeDistance& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeDistance)
}

void ItemJudgeDistance::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_distance_check_ = false;
  item_min_distance_ = 0;
  item_max_distance_ = 0;
  item_deduction_ = 0;
  item_deduction_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeDistance::~ItemJudgeDistance() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeDistance)
  SharedDtor();
}

void ItemJudgeDistance::SharedDtor() {
  item_deduction_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ItemJudgeDistance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeDistance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeDistance_descriptor_;
}

const ItemJudgeDistance& ItemJudgeDistance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeDistance* ItemJudgeDistance::default_instance_ = NULL;

ItemJudgeDistance* ItemJudgeDistance::New(::google::protobuf::Arena* arena) const {
  ItemJudgeDistance* n = new ItemJudgeDistance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeDistance::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeDistance)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeDistance, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeDistance*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(item_distance_check_, item_deduction_);
    if (has_item_deduction_voice()) {
      item_deduction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeDistance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeDistance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool item_distance_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &item_distance_check_)));
          set_has_item_distance_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_min_distance;
        break;
      }

      // optional int32 item_min_distance = 2;
      case 2: {
        if (tag == 16) {
         parse_item_min_distance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_min_distance_)));
          set_has_item_min_distance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_item_max_distance;
        break;
      }

      // optional int32 item_max_distance = 3;
      case 3: {
        if (tag == 24) {
         parse_item_max_distance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_max_distance_)));
          set_has_item_max_distance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_item_deduction;
        break;
      }

      // optional int32 item_deduction = 4;
      case 4: {
        if (tag == 32) {
         parse_item_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_deduction_)));
          set_has_item_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_deduction_voice;
        break;
      }

      // optional string item_deduction_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_item_deduction_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_deduction_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_deduction_voice().data(), this->item_deduction_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeDistance.item_deduction_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeDistance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeDistance)
  return false;
#undef DO_
}

void ItemJudgeDistance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeDistance)
  // optional bool item_distance_check = 1;
  if (has_item_distance_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->item_distance_check(), output);
  }

  // optional int32 item_min_distance = 2;
  if (has_item_min_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_min_distance(), output);
  }

  // optional int32 item_max_distance = 3;
  if (has_item_max_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_max_distance(), output);
  }

  // optional int32 item_deduction = 4;
  if (has_item_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->item_deduction(), output);
  }

  // optional string item_deduction_voice = 5;
  if (has_item_deduction_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_deduction_voice().data(), this->item_deduction_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeDistance.item_deduction_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->item_deduction_voice(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeDistance)
}

::google::protobuf::uint8* ItemJudgeDistance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeDistance)
  // optional bool item_distance_check = 1;
  if (has_item_distance_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->item_distance_check(), target);
  }

  // optional int32 item_min_distance = 2;
  if (has_item_min_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_min_distance(), target);
  }

  // optional int32 item_max_distance = 3;
  if (has_item_max_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_max_distance(), target);
  }

  // optional int32 item_deduction = 4;
  if (has_item_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->item_deduction(), target);
  }

  // optional string item_deduction_voice = 5;
  if (has_item_deduction_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_deduction_voice().data(), this->item_deduction_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeDistance.item_deduction_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->item_deduction_voice(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeDistance)
  return target;
}

int ItemJudgeDistance::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeDistance)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional bool item_distance_check = 1;
    if (has_item_distance_check()) {
      total_size += 1 + 1;
    }

    // optional int32 item_min_distance = 2;
    if (has_item_min_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_min_distance());
    }

    // optional int32 item_max_distance = 3;
    if (has_item_max_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_max_distance());
    }

    // optional int32 item_deduction = 4;
    if (has_item_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_deduction());
    }

    // optional string item_deduction_voice = 5;
    if (has_item_deduction_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_deduction_voice());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeDistance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeDistance)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeDistance* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeDistance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeDistance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeDistance)
    MergeFrom(*source);
  }
}

void ItemJudgeDistance::MergeFrom(const ItemJudgeDistance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeDistance)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_distance_check()) {
      set_item_distance_check(from.item_distance_check());
    }
    if (from.has_item_min_distance()) {
      set_item_min_distance(from.item_min_distance());
    }
    if (from.has_item_max_distance()) {
      set_item_max_distance(from.item_max_distance());
    }
    if (from.has_item_deduction()) {
      set_item_deduction(from.item_deduction());
    }
    if (from.has_item_deduction_voice()) {
      set_has_item_deduction_voice();
      item_deduction_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_deduction_voice_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeDistance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeDistance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeDistance::CopyFrom(const ItemJudgeDistance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeDistance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeDistance::IsInitialized() const {

  return true;
}

void ItemJudgeDistance::Swap(ItemJudgeDistance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeDistance::InternalSwap(ItemJudgeDistance* other) {
  std::swap(item_distance_check_, other->item_distance_check_);
  std::swap(item_min_distance_, other->item_min_distance_);
  std::swap(item_max_distance_, other->item_max_distance_);
  std::swap(item_deduction_, other->item_deduction_);
  item_deduction_voice_.Swap(&other->item_deduction_voice_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeDistance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeDistance_descriptor_;
  metadata.reflection = ItemJudgeDistance_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeDistance

// optional bool item_distance_check = 1;
bool ItemJudgeDistance::has_item_distance_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeDistance::set_has_item_distance_check() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeDistance::clear_has_item_distance_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeDistance::clear_item_distance_check() {
  item_distance_check_ = false;
  clear_has_item_distance_check();
}
 bool ItemJudgeDistance::item_distance_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeDistance.item_distance_check)
  return item_distance_check_;
}
 void ItemJudgeDistance::set_item_distance_check(bool value) {
  set_has_item_distance_check();
  item_distance_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeDistance.item_distance_check)
}

// optional int32 item_min_distance = 2;
bool ItemJudgeDistance::has_item_min_distance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeDistance::set_has_item_min_distance() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeDistance::clear_has_item_min_distance() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeDistance::clear_item_min_distance() {
  item_min_distance_ = 0;
  clear_has_item_min_distance();
}
 ::google::protobuf::int32 ItemJudgeDistance::item_min_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeDistance.item_min_distance)
  return item_min_distance_;
}
 void ItemJudgeDistance::set_item_min_distance(::google::protobuf::int32 value) {
  set_has_item_min_distance();
  item_min_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeDistance.item_min_distance)
}

// optional int32 item_max_distance = 3;
bool ItemJudgeDistance::has_item_max_distance() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeDistance::set_has_item_max_distance() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeDistance::clear_has_item_max_distance() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeDistance::clear_item_max_distance() {
  item_max_distance_ = 0;
  clear_has_item_max_distance();
}
 ::google::protobuf::int32 ItemJudgeDistance::item_max_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeDistance.item_max_distance)
  return item_max_distance_;
}
 void ItemJudgeDistance::set_item_max_distance(::google::protobuf::int32 value) {
  set_has_item_max_distance();
  item_max_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeDistance.item_max_distance)
}

// optional int32 item_deduction = 4;
bool ItemJudgeDistance::has_item_deduction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeDistance::set_has_item_deduction() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeDistance::clear_has_item_deduction() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeDistance::clear_item_deduction() {
  item_deduction_ = 0;
  clear_has_item_deduction();
}
 ::google::protobuf::int32 ItemJudgeDistance::item_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeDistance.item_deduction)
  return item_deduction_;
}
 void ItemJudgeDistance::set_item_deduction(::google::protobuf::int32 value) {
  set_has_item_deduction();
  item_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeDistance.item_deduction)
}

// optional string item_deduction_voice = 5;
bool ItemJudgeDistance::has_item_deduction_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeDistance::set_has_item_deduction_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeDistance::clear_has_item_deduction_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeDistance::clear_item_deduction_voice() {
  item_deduction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_deduction_voice();
}
 const ::std::string& ItemJudgeDistance::item_deduction_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeDistance.item_deduction_voice)
  return item_deduction_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeDistance::set_item_deduction_voice(const ::std::string& value) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeDistance.item_deduction_voice)
}
 void ItemJudgeDistance::set_item_deduction_voice(const char* value) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeDistance.item_deduction_voice)
}
 void ItemJudgeDistance::set_item_deduction_voice(const char* value, size_t size) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeDistance.item_deduction_voice)
}
 ::std::string* ItemJudgeDistance::mutable_item_deduction_voice() {
  set_has_item_deduction_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeDistance.item_deduction_voice)
  return item_deduction_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeDistance::release_item_deduction_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeDistance.item_deduction_voice)
  clear_has_item_deduction_voice();
  return item_deduction_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeDistance::set_allocated_item_deduction_voice(::std::string* item_deduction_voice) {
  if (item_deduction_voice != NULL) {
    set_has_item_deduction_voice();
  } else {
    clear_has_item_deduction_voice();
  }
  item_deduction_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_deduction_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeDistance.item_deduction_voice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeTime::kItemTimeCheckFieldNumber;
const int ItemJudgeTime::kItemMinTimeFieldNumber;
const int ItemJudgeTime::kItemMaxTimeFieldNumber;
const int ItemJudgeTime::kItemDeductionFieldNumber;
const int ItemJudgeTime::kItemDeductionVoiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeTime::ItemJudgeTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeTime)
}

void ItemJudgeTime::InitAsDefaultInstance() {
}

ItemJudgeTime::ItemJudgeTime(const ItemJudgeTime& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeTime)
}

void ItemJudgeTime::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_time_check_ = false;
  item_min_time_ = 0;
  item_max_time_ = 0;
  item_deduction_ = 0;
  item_deduction_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeTime::~ItemJudgeTime() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeTime)
  SharedDtor();
}

void ItemJudgeTime::SharedDtor() {
  item_deduction_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ItemJudgeTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeTime::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeTime_descriptor_;
}

const ItemJudgeTime& ItemJudgeTime::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeTime* ItemJudgeTime::default_instance_ = NULL;

ItemJudgeTime* ItemJudgeTime::New(::google::protobuf::Arena* arena) const {
  ItemJudgeTime* n = new ItemJudgeTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeTime::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeTime)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeTime, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeTime*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(item_time_check_, item_deduction_);
    if (has_item_deduction_voice()) {
      item_deduction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool item_time_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &item_time_check_)));
          set_has_item_time_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_min_time;
        break;
      }

      // optional int32 item_min_time = 2;
      case 2: {
        if (tag == 16) {
         parse_item_min_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_min_time_)));
          set_has_item_min_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_item_max_time;
        break;
      }

      // optional int32 item_max_time = 3;
      case 3: {
        if (tag == 24) {
         parse_item_max_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_max_time_)));
          set_has_item_max_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_item_deduction;
        break;
      }

      // optional int32 item_deduction = 4;
      case 4: {
        if (tag == 32) {
         parse_item_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_deduction_)));
          set_has_item_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_deduction_voice;
        break;
      }

      // optional string item_deduction_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_item_deduction_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_deduction_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_deduction_voice().data(), this->item_deduction_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeTime.item_deduction_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeTime)
  return false;
#undef DO_
}

void ItemJudgeTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeTime)
  // optional bool item_time_check = 1;
  if (has_item_time_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->item_time_check(), output);
  }

  // optional int32 item_min_time = 2;
  if (has_item_min_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_min_time(), output);
  }

  // optional int32 item_max_time = 3;
  if (has_item_max_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_max_time(), output);
  }

  // optional int32 item_deduction = 4;
  if (has_item_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->item_deduction(), output);
  }

  // optional string item_deduction_voice = 5;
  if (has_item_deduction_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_deduction_voice().data(), this->item_deduction_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeTime.item_deduction_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->item_deduction_voice(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeTime)
}

::google::protobuf::uint8* ItemJudgeTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeTime)
  // optional bool item_time_check = 1;
  if (has_item_time_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->item_time_check(), target);
  }

  // optional int32 item_min_time = 2;
  if (has_item_min_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_min_time(), target);
  }

  // optional int32 item_max_time = 3;
  if (has_item_max_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_max_time(), target);
  }

  // optional int32 item_deduction = 4;
  if (has_item_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->item_deduction(), target);
  }

  // optional string item_deduction_voice = 5;
  if (has_item_deduction_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_deduction_voice().data(), this->item_deduction_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeTime.item_deduction_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->item_deduction_voice(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeTime)
  return target;
}

int ItemJudgeTime::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeTime)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional bool item_time_check = 1;
    if (has_item_time_check()) {
      total_size += 1 + 1;
    }

    // optional int32 item_min_time = 2;
    if (has_item_min_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_min_time());
    }

    // optional int32 item_max_time = 3;
    if (has_item_max_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_max_time());
    }

    // optional int32 item_deduction = 4;
    if (has_item_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_deduction());
    }

    // optional string item_deduction_voice = 5;
    if (has_item_deduction_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_deduction_voice());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeTime)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeTime* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeTime)
    MergeFrom(*source);
  }
}

void ItemJudgeTime::MergeFrom(const ItemJudgeTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeTime)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_time_check()) {
      set_item_time_check(from.item_time_check());
    }
    if (from.has_item_min_time()) {
      set_item_min_time(from.item_min_time());
    }
    if (from.has_item_max_time()) {
      set_item_max_time(from.item_max_time());
    }
    if (from.has_item_deduction()) {
      set_item_deduction(from.item_deduction());
    }
    if (from.has_item_deduction_voice()) {
      set_has_item_deduction_voice();
      item_deduction_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_deduction_voice_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeTime::CopyFrom(const ItemJudgeTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeTime::IsInitialized() const {

  return true;
}

void ItemJudgeTime::Swap(ItemJudgeTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeTime::InternalSwap(ItemJudgeTime* other) {
  std::swap(item_time_check_, other->item_time_check_);
  std::swap(item_min_time_, other->item_min_time_);
  std::swap(item_max_time_, other->item_max_time_);
  std::swap(item_deduction_, other->item_deduction_);
  item_deduction_voice_.Swap(&other->item_deduction_voice_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeTime::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeTime_descriptor_;
  metadata.reflection = ItemJudgeTime_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeTime

// optional bool item_time_check = 1;
bool ItemJudgeTime::has_item_time_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeTime::set_has_item_time_check() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeTime::clear_has_item_time_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeTime::clear_item_time_check() {
  item_time_check_ = false;
  clear_has_item_time_check();
}
 bool ItemJudgeTime::item_time_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeTime.item_time_check)
  return item_time_check_;
}
 void ItemJudgeTime::set_item_time_check(bool value) {
  set_has_item_time_check();
  item_time_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeTime.item_time_check)
}

// optional int32 item_min_time = 2;
bool ItemJudgeTime::has_item_min_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeTime::set_has_item_min_time() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeTime::clear_has_item_min_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeTime::clear_item_min_time() {
  item_min_time_ = 0;
  clear_has_item_min_time();
}
 ::google::protobuf::int32 ItemJudgeTime::item_min_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeTime.item_min_time)
  return item_min_time_;
}
 void ItemJudgeTime::set_item_min_time(::google::protobuf::int32 value) {
  set_has_item_min_time();
  item_min_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeTime.item_min_time)
}

// optional int32 item_max_time = 3;
bool ItemJudgeTime::has_item_max_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeTime::set_has_item_max_time() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeTime::clear_has_item_max_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeTime::clear_item_max_time() {
  item_max_time_ = 0;
  clear_has_item_max_time();
}
 ::google::protobuf::int32 ItemJudgeTime::item_max_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeTime.item_max_time)
  return item_max_time_;
}
 void ItemJudgeTime::set_item_max_time(::google::protobuf::int32 value) {
  set_has_item_max_time();
  item_max_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeTime.item_max_time)
}

// optional int32 item_deduction = 4;
bool ItemJudgeTime::has_item_deduction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeTime::set_has_item_deduction() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeTime::clear_has_item_deduction() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeTime::clear_item_deduction() {
  item_deduction_ = 0;
  clear_has_item_deduction();
}
 ::google::protobuf::int32 ItemJudgeTime::item_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeTime.item_deduction)
  return item_deduction_;
}
 void ItemJudgeTime::set_item_deduction(::google::protobuf::int32 value) {
  set_has_item_deduction();
  item_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeTime.item_deduction)
}

// optional string item_deduction_voice = 5;
bool ItemJudgeTime::has_item_deduction_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeTime::set_has_item_deduction_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeTime::clear_has_item_deduction_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeTime::clear_item_deduction_voice() {
  item_deduction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_deduction_voice();
}
 const ::std::string& ItemJudgeTime::item_deduction_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeTime.item_deduction_voice)
  return item_deduction_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeTime::set_item_deduction_voice(const ::std::string& value) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeTime.item_deduction_voice)
}
 void ItemJudgeTime::set_item_deduction_voice(const char* value) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeTime.item_deduction_voice)
}
 void ItemJudgeTime::set_item_deduction_voice(const char* value, size_t size) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeTime.item_deduction_voice)
}
 ::std::string* ItemJudgeTime::mutable_item_deduction_voice() {
  set_has_item_deduction_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeTime.item_deduction_voice)
  return item_deduction_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeTime::release_item_deduction_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeTime.item_deduction_voice)
  clear_has_item_deduction_voice();
  return item_deduction_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeTime::set_allocated_item_deduction_voice(::std::string* item_deduction_voice) {
  if (item_deduction_voice != NULL) {
    set_has_item_deduction_voice();
  } else {
    clear_has_item_deduction_voice();
  }
  item_deduction_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_deduction_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeTime.item_deduction_voice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeSpeed::kItemSpeedCheckFieldNumber;
const int ItemJudgeSpeed::kItemMinSpeedFieldNumber;
const int ItemJudgeSpeed::kItemMaxSpeedFieldNumber;
const int ItemJudgeSpeed::kItemDeductionFieldNumber;
const int ItemJudgeSpeed::kItemDeductionVoiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeSpeed::ItemJudgeSpeed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeSpeed)
}

void ItemJudgeSpeed::InitAsDefaultInstance() {
}

ItemJudgeSpeed::ItemJudgeSpeed(const ItemJudgeSpeed& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeSpeed)
}

void ItemJudgeSpeed::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_speed_check_ = false;
  item_min_speed_ = 0;
  item_max_speed_ = 0;
  item_deduction_ = 0;
  item_deduction_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeSpeed::~ItemJudgeSpeed() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeSpeed)
  SharedDtor();
}

void ItemJudgeSpeed::SharedDtor() {
  item_deduction_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ItemJudgeSpeed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeSpeed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeSpeed_descriptor_;
}

const ItemJudgeSpeed& ItemJudgeSpeed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeSpeed* ItemJudgeSpeed::default_instance_ = NULL;

ItemJudgeSpeed* ItemJudgeSpeed::New(::google::protobuf::Arena* arena) const {
  ItemJudgeSpeed* n = new ItemJudgeSpeed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeSpeed::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeSpeed)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeSpeed, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeSpeed*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(item_speed_check_, item_deduction_);
    if (has_item_deduction_voice()) {
      item_deduction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeSpeed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeSpeed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool item_speed_check = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &item_speed_check_)));
          set_has_item_speed_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_min_speed;
        break;
      }

      // optional int32 item_min_speed = 2;
      case 2: {
        if (tag == 16) {
         parse_item_min_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_min_speed_)));
          set_has_item_min_speed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_item_max_speed;
        break;
      }

      // optional int32 item_max_speed = 3;
      case 3: {
        if (tag == 24) {
         parse_item_max_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_max_speed_)));
          set_has_item_max_speed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_item_deduction;
        break;
      }

      // optional int32 item_deduction = 4;
      case 4: {
        if (tag == 32) {
         parse_item_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_deduction_)));
          set_has_item_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_deduction_voice;
        break;
      }

      // optional string item_deduction_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_item_deduction_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_deduction_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_deduction_voice().data(), this->item_deduction_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeSpeed.item_deduction_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeSpeed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeSpeed)
  return false;
#undef DO_
}

void ItemJudgeSpeed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeSpeed)
  // optional bool item_speed_check = 1;
  if (has_item_speed_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->item_speed_check(), output);
  }

  // optional int32 item_min_speed = 2;
  if (has_item_min_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_min_speed(), output);
  }

  // optional int32 item_max_speed = 3;
  if (has_item_max_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_max_speed(), output);
  }

  // optional int32 item_deduction = 4;
  if (has_item_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->item_deduction(), output);
  }

  // optional string item_deduction_voice = 5;
  if (has_item_deduction_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_deduction_voice().data(), this->item_deduction_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeSpeed.item_deduction_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->item_deduction_voice(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeSpeed)
}

::google::protobuf::uint8* ItemJudgeSpeed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeSpeed)
  // optional bool item_speed_check = 1;
  if (has_item_speed_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->item_speed_check(), target);
  }

  // optional int32 item_min_speed = 2;
  if (has_item_min_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_min_speed(), target);
  }

  // optional int32 item_max_speed = 3;
  if (has_item_max_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_max_speed(), target);
  }

  // optional int32 item_deduction = 4;
  if (has_item_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->item_deduction(), target);
  }

  // optional string item_deduction_voice = 5;
  if (has_item_deduction_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_deduction_voice().data(), this->item_deduction_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeSpeed.item_deduction_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->item_deduction_voice(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeSpeed)
  return target;
}

int ItemJudgeSpeed::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeSpeed)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional bool item_speed_check = 1;
    if (has_item_speed_check()) {
      total_size += 1 + 1;
    }

    // optional int32 item_min_speed = 2;
    if (has_item_min_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_min_speed());
    }

    // optional int32 item_max_speed = 3;
    if (has_item_max_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_max_speed());
    }

    // optional int32 item_deduction = 4;
    if (has_item_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_deduction());
    }

    // optional string item_deduction_voice = 5;
    if (has_item_deduction_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_deduction_voice());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeSpeed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeSpeed)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeSpeed* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeSpeed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeSpeed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeSpeed)
    MergeFrom(*source);
  }
}

void ItemJudgeSpeed::MergeFrom(const ItemJudgeSpeed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeSpeed)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_speed_check()) {
      set_item_speed_check(from.item_speed_check());
    }
    if (from.has_item_min_speed()) {
      set_item_min_speed(from.item_min_speed());
    }
    if (from.has_item_max_speed()) {
      set_item_max_speed(from.item_max_speed());
    }
    if (from.has_item_deduction()) {
      set_item_deduction(from.item_deduction());
    }
    if (from.has_item_deduction_voice()) {
      set_has_item_deduction_voice();
      item_deduction_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_deduction_voice_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeSpeed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeSpeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeSpeed::CopyFrom(const ItemJudgeSpeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeSpeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeSpeed::IsInitialized() const {

  return true;
}

void ItemJudgeSpeed::Swap(ItemJudgeSpeed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeSpeed::InternalSwap(ItemJudgeSpeed* other) {
  std::swap(item_speed_check_, other->item_speed_check_);
  std::swap(item_min_speed_, other->item_min_speed_);
  std::swap(item_max_speed_, other->item_max_speed_);
  std::swap(item_deduction_, other->item_deduction_);
  item_deduction_voice_.Swap(&other->item_deduction_voice_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeSpeed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeSpeed_descriptor_;
  metadata.reflection = ItemJudgeSpeed_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeSpeed

// optional bool item_speed_check = 1;
bool ItemJudgeSpeed::has_item_speed_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeSpeed::set_has_item_speed_check() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeSpeed::clear_has_item_speed_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeSpeed::clear_item_speed_check() {
  item_speed_check_ = false;
  clear_has_item_speed_check();
}
 bool ItemJudgeSpeed::item_speed_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeSpeed.item_speed_check)
  return item_speed_check_;
}
 void ItemJudgeSpeed::set_item_speed_check(bool value) {
  set_has_item_speed_check();
  item_speed_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeSpeed.item_speed_check)
}

// optional int32 item_min_speed = 2;
bool ItemJudgeSpeed::has_item_min_speed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeSpeed::set_has_item_min_speed() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeSpeed::clear_has_item_min_speed() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeSpeed::clear_item_min_speed() {
  item_min_speed_ = 0;
  clear_has_item_min_speed();
}
 ::google::protobuf::int32 ItemJudgeSpeed::item_min_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeSpeed.item_min_speed)
  return item_min_speed_;
}
 void ItemJudgeSpeed::set_item_min_speed(::google::protobuf::int32 value) {
  set_has_item_min_speed();
  item_min_speed_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeSpeed.item_min_speed)
}

// optional int32 item_max_speed = 3;
bool ItemJudgeSpeed::has_item_max_speed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeSpeed::set_has_item_max_speed() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeSpeed::clear_has_item_max_speed() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeSpeed::clear_item_max_speed() {
  item_max_speed_ = 0;
  clear_has_item_max_speed();
}
 ::google::protobuf::int32 ItemJudgeSpeed::item_max_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeSpeed.item_max_speed)
  return item_max_speed_;
}
 void ItemJudgeSpeed::set_item_max_speed(::google::protobuf::int32 value) {
  set_has_item_max_speed();
  item_max_speed_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeSpeed.item_max_speed)
}

// optional int32 item_deduction = 4;
bool ItemJudgeSpeed::has_item_deduction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeSpeed::set_has_item_deduction() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeSpeed::clear_has_item_deduction() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeSpeed::clear_item_deduction() {
  item_deduction_ = 0;
  clear_has_item_deduction();
}
 ::google::protobuf::int32 ItemJudgeSpeed::item_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeSpeed.item_deduction)
  return item_deduction_;
}
 void ItemJudgeSpeed::set_item_deduction(::google::protobuf::int32 value) {
  set_has_item_deduction();
  item_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeSpeed.item_deduction)
}

// optional string item_deduction_voice = 5;
bool ItemJudgeSpeed::has_item_deduction_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeSpeed::set_has_item_deduction_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeSpeed::clear_has_item_deduction_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeSpeed::clear_item_deduction_voice() {
  item_deduction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_deduction_voice();
}
 const ::std::string& ItemJudgeSpeed::item_deduction_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeSpeed.item_deduction_voice)
  return item_deduction_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeSpeed::set_item_deduction_voice(const ::std::string& value) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeSpeed.item_deduction_voice)
}
 void ItemJudgeSpeed::set_item_deduction_voice(const char* value) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeSpeed.item_deduction_voice)
}
 void ItemJudgeSpeed::set_item_deduction_voice(const char* value, size_t size) {
  set_has_item_deduction_voice();
  item_deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeSpeed.item_deduction_voice)
}
 ::std::string* ItemJudgeSpeed::mutable_item_deduction_voice() {
  set_has_item_deduction_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeSpeed.item_deduction_voice)
  return item_deduction_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeSpeed::release_item_deduction_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeSpeed.item_deduction_voice)
  clear_has_item_deduction_voice();
  return item_deduction_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeSpeed::set_allocated_item_deduction_voice(::std::string* item_deduction_voice) {
  if (item_deduction_voice != NULL) {
    set_has_item_deduction_voice();
  } else {
    clear_has_item_deduction_voice();
  }
  item_deduction_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_deduction_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeSpeed.item_deduction_voice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeBasic::kBasicSafetyFieldNumber;
const int ItemJudgeBasic::kBasicDoorFieldNumber;
const int ItemJudgeBasic::kBasicFlameoutFieldNumber;
const int ItemJudgeBasic::kBasicLeftTurnLampFieldNumber;
const int ItemJudgeBasic::kBasicRightTurnLampFieldNumber;
const int ItemJudgeBasic::kBasicCarStopFieldNumber;
const int ItemJudgeBasic::kBasicHandBrakeFieldNumber;
const int ItemJudgeBasic::kBasicTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeBasic::ItemJudgeBasic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeBasic)
}

void ItemJudgeBasic::InitAsDefaultInstance() {
  basic_safety_ = const_cast< ::OPMessage::BasicSafety*>(&::OPMessage::BasicSafety::default_instance());
  basic_door_ = const_cast< ::OPMessage::BasicDoor*>(&::OPMessage::BasicDoor::default_instance());
  basic_flameout_ = const_cast< ::OPMessage::BasicFlameout*>(&::OPMessage::BasicFlameout::default_instance());
  basic_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  basic_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  basic_carstop_ = const_cast< ::OPMessage::BasicCarStop*>(&::OPMessage::BasicCarStop::default_instance());
  basic_handbrake_ = const_cast< ::OPMessage::BasicHandBrake*>(&::OPMessage::BasicHandBrake::default_instance());
  basic_timeout_ = const_cast< ::OPMessage::BasicTimeout*>(&::OPMessage::BasicTimeout::default_instance());
}

ItemJudgeBasic::ItemJudgeBasic(const ItemJudgeBasic& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeBasic)
}

void ItemJudgeBasic::SharedCtor() {
  _cached_size_ = 0;
  basic_safety_ = NULL;
  basic_door_ = NULL;
  basic_flameout_ = NULL;
  basic_leftturnlamp_ = NULL;
  basic_rightturnlamp_ = NULL;
  basic_carstop_ = NULL;
  basic_handbrake_ = NULL;
  basic_timeout_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeBasic::~ItemJudgeBasic() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeBasic)
  SharedDtor();
}

void ItemJudgeBasic::SharedDtor() {
  if (this != default_instance_) {
    delete basic_safety_;
    delete basic_door_;
    delete basic_flameout_;
    delete basic_leftturnlamp_;
    delete basic_rightturnlamp_;
    delete basic_carstop_;
    delete basic_handbrake_;
    delete basic_timeout_;
  }
}

void ItemJudgeBasic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeBasic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeBasic_descriptor_;
}

const ItemJudgeBasic& ItemJudgeBasic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeBasic* ItemJudgeBasic::default_instance_ = NULL;

ItemJudgeBasic* ItemJudgeBasic::New(::google::protobuf::Arena* arena) const {
  ItemJudgeBasic* n = new ItemJudgeBasic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeBasic::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeBasic)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_basic_safety()) {
      if (basic_safety_ != NULL) basic_safety_->::OPMessage::BasicSafety::Clear();
    }
    if (has_basic_door()) {
      if (basic_door_ != NULL) basic_door_->::OPMessage::BasicDoor::Clear();
    }
    if (has_basic_flameout()) {
      if (basic_flameout_ != NULL) basic_flameout_->::OPMessage::BasicFlameout::Clear();
    }
    if (has_basic_leftturnlamp()) {
      if (basic_leftturnlamp_ != NULL) basic_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_basic_rightturnlamp()) {
      if (basic_rightturnlamp_ != NULL) basic_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
    if (has_basic_carstop()) {
      if (basic_carstop_ != NULL) basic_carstop_->::OPMessage::BasicCarStop::Clear();
    }
    if (has_basic_handbrake()) {
      if (basic_handbrake_ != NULL) basic_handbrake_->::OPMessage::BasicHandBrake::Clear();
    }
    if (has_basic_timeout()) {
      if (basic_timeout_ != NULL) basic_timeout_->::OPMessage::BasicTimeout::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeBasic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeBasic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OPMessage.BasicSafety basic_safety = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_safety()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_basic_door;
        break;
      }

      // optional .OPMessage.BasicDoor basic_door = 2;
      case 2: {
        if (tag == 18) {
         parse_basic_door:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_door()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_basic_flameout;
        break;
      }

      // optional .OPMessage.BasicFlameout basic_flameout = 3;
      case 3: {
        if (tag == 26) {
         parse_basic_flameout:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_flameout()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_basic_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp basic_leftTurnLamp = 4;
      case 4: {
        if (tag == 34) {
         parse_basic_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_basic_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp basic_rightTurnLamp = 5;
      case 5: {
        if (tag == 42) {
         parse_basic_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_basic_carStop;
        break;
      }

      // optional .OPMessage.BasicCarStop basic_carStop = 6;
      case 6: {
        if (tag == 50) {
         parse_basic_carStop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_carstop()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_basic_handBrake;
        break;
      }

      // optional .OPMessage.BasicHandBrake basic_handBrake = 7;
      case 7: {
        if (tag == 58) {
         parse_basic_handBrake:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_handbrake()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_basic_timeout;
        break;
      }

      // optional .OPMessage.BasicTimeout basic_timeout = 8;
      case 8: {
        if (tag == 66) {
         parse_basic_timeout:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_timeout()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeBasic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeBasic)
  return false;
#undef DO_
}

void ItemJudgeBasic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeBasic)
  // optional .OPMessage.BasicSafety basic_safety = 1;
  if (has_basic_safety()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basic_safety_, output);
  }

  // optional .OPMessage.BasicDoor basic_door = 2;
  if (has_basic_door()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->basic_door_, output);
  }

  // optional .OPMessage.BasicFlameout basic_flameout = 3;
  if (has_basic_flameout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->basic_flameout_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp basic_leftTurnLamp = 4;
  if (has_basic_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->basic_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp basic_rightTurnLamp = 5;
  if (has_basic_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->basic_rightturnlamp_, output);
  }

  // optional .OPMessage.BasicCarStop basic_carStop = 6;
  if (has_basic_carstop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->basic_carstop_, output);
  }

  // optional .OPMessage.BasicHandBrake basic_handBrake = 7;
  if (has_basic_handbrake()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->basic_handbrake_, output);
  }

  // optional .OPMessage.BasicTimeout basic_timeout = 8;
  if (has_basic_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->basic_timeout_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeBasic)
}

::google::protobuf::uint8* ItemJudgeBasic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeBasic)
  // optional .OPMessage.BasicSafety basic_safety = 1;
  if (has_basic_safety()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basic_safety_, false, target);
  }

  // optional .OPMessage.BasicDoor basic_door = 2;
  if (has_basic_door()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->basic_door_, false, target);
  }

  // optional .OPMessage.BasicFlameout basic_flameout = 3;
  if (has_basic_flameout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->basic_flameout_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp basic_leftTurnLamp = 4;
  if (has_basic_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->basic_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp basic_rightTurnLamp = 5;
  if (has_basic_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->basic_rightturnlamp_, false, target);
  }

  // optional .OPMessage.BasicCarStop basic_carStop = 6;
  if (has_basic_carstop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->basic_carstop_, false, target);
  }

  // optional .OPMessage.BasicHandBrake basic_handBrake = 7;
  if (has_basic_handbrake()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->basic_handbrake_, false, target);
  }

  // optional .OPMessage.BasicTimeout basic_timeout = 8;
  if (has_basic_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->basic_timeout_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeBasic)
  return target;
}

int ItemJudgeBasic::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeBasic)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .OPMessage.BasicSafety basic_safety = 1;
    if (has_basic_safety()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_safety_);
    }

    // optional .OPMessage.BasicDoor basic_door = 2;
    if (has_basic_door()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_door_);
    }

    // optional .OPMessage.BasicFlameout basic_flameout = 3;
    if (has_basic_flameout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_flameout_);
    }

    // optional .OPMessage.BasicLeftTurnLamp basic_leftTurnLamp = 4;
    if (has_basic_leftturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_leftturnlamp_);
    }

    // optional .OPMessage.BasicRightTurnLamp basic_rightTurnLamp = 5;
    if (has_basic_rightturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_rightturnlamp_);
    }

    // optional .OPMessage.BasicCarStop basic_carStop = 6;
    if (has_basic_carstop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_carstop_);
    }

    // optional .OPMessage.BasicHandBrake basic_handBrake = 7;
    if (has_basic_handbrake()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_handbrake_);
    }

    // optional .OPMessage.BasicTimeout basic_timeout = 8;
    if (has_basic_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_timeout_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeBasic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeBasic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeBasic* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeBasic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeBasic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeBasic)
    MergeFrom(*source);
  }
}

void ItemJudgeBasic::MergeFrom(const ItemJudgeBasic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeBasic)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_basic_safety()) {
      mutable_basic_safety()->::OPMessage::BasicSafety::MergeFrom(from.basic_safety());
    }
    if (from.has_basic_door()) {
      mutable_basic_door()->::OPMessage::BasicDoor::MergeFrom(from.basic_door());
    }
    if (from.has_basic_flameout()) {
      mutable_basic_flameout()->::OPMessage::BasicFlameout::MergeFrom(from.basic_flameout());
    }
    if (from.has_basic_leftturnlamp()) {
      mutable_basic_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.basic_leftturnlamp());
    }
    if (from.has_basic_rightturnlamp()) {
      mutable_basic_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.basic_rightturnlamp());
    }
    if (from.has_basic_carstop()) {
      mutable_basic_carstop()->::OPMessage::BasicCarStop::MergeFrom(from.basic_carstop());
    }
    if (from.has_basic_handbrake()) {
      mutable_basic_handbrake()->::OPMessage::BasicHandBrake::MergeFrom(from.basic_handbrake());
    }
    if (from.has_basic_timeout()) {
      mutable_basic_timeout()->::OPMessage::BasicTimeout::MergeFrom(from.basic_timeout());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeBasic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeBasic::CopyFrom(const ItemJudgeBasic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeBasic::IsInitialized() const {

  return true;
}

void ItemJudgeBasic::Swap(ItemJudgeBasic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeBasic::InternalSwap(ItemJudgeBasic* other) {
  std::swap(basic_safety_, other->basic_safety_);
  std::swap(basic_door_, other->basic_door_);
  std::swap(basic_flameout_, other->basic_flameout_);
  std::swap(basic_leftturnlamp_, other->basic_leftturnlamp_);
  std::swap(basic_rightturnlamp_, other->basic_rightturnlamp_);
  std::swap(basic_carstop_, other->basic_carstop_);
  std::swap(basic_handbrake_, other->basic_handbrake_);
  std::swap(basic_timeout_, other->basic_timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeBasic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeBasic_descriptor_;
  metadata.reflection = ItemJudgeBasic_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeBasic

// optional .OPMessage.BasicSafety basic_safety = 1;
bool ItemJudgeBasic::has_basic_safety() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeBasic::set_has_basic_safety() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeBasic::clear_has_basic_safety() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeBasic::clear_basic_safety() {
  if (basic_safety_ != NULL) basic_safety_->::OPMessage::BasicSafety::Clear();
  clear_has_basic_safety();
}
const ::OPMessage::BasicSafety& ItemJudgeBasic::basic_safety() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_safety)
  return basic_safety_ != NULL ? *basic_safety_ : *default_instance_->basic_safety_;
}
::OPMessage::BasicSafety* ItemJudgeBasic::mutable_basic_safety() {
  set_has_basic_safety();
  if (basic_safety_ == NULL) {
    basic_safety_ = new ::OPMessage::BasicSafety;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_safety)
  return basic_safety_;
}
::OPMessage::BasicSafety* ItemJudgeBasic::release_basic_safety() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_safety)
  clear_has_basic_safety();
  ::OPMessage::BasicSafety* temp = basic_safety_;
  basic_safety_ = NULL;
  return temp;
}
void ItemJudgeBasic::set_allocated_basic_safety(::OPMessage::BasicSafety* basic_safety) {
  delete basic_safety_;
  basic_safety_ = basic_safety;
  if (basic_safety) {
    set_has_basic_safety();
  } else {
    clear_has_basic_safety();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_safety)
}

// optional .OPMessage.BasicDoor basic_door = 2;
bool ItemJudgeBasic::has_basic_door() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeBasic::set_has_basic_door() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeBasic::clear_has_basic_door() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeBasic::clear_basic_door() {
  if (basic_door_ != NULL) basic_door_->::OPMessage::BasicDoor::Clear();
  clear_has_basic_door();
}
const ::OPMessage::BasicDoor& ItemJudgeBasic::basic_door() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_door)
  return basic_door_ != NULL ? *basic_door_ : *default_instance_->basic_door_;
}
::OPMessage::BasicDoor* ItemJudgeBasic::mutable_basic_door() {
  set_has_basic_door();
  if (basic_door_ == NULL) {
    basic_door_ = new ::OPMessage::BasicDoor;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_door)
  return basic_door_;
}
::OPMessage::BasicDoor* ItemJudgeBasic::release_basic_door() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_door)
  clear_has_basic_door();
  ::OPMessage::BasicDoor* temp = basic_door_;
  basic_door_ = NULL;
  return temp;
}
void ItemJudgeBasic::set_allocated_basic_door(::OPMessage::BasicDoor* basic_door) {
  delete basic_door_;
  basic_door_ = basic_door;
  if (basic_door) {
    set_has_basic_door();
  } else {
    clear_has_basic_door();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_door)
}

// optional .OPMessage.BasicFlameout basic_flameout = 3;
bool ItemJudgeBasic::has_basic_flameout() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeBasic::set_has_basic_flameout() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeBasic::clear_has_basic_flameout() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeBasic::clear_basic_flameout() {
  if (basic_flameout_ != NULL) basic_flameout_->::OPMessage::BasicFlameout::Clear();
  clear_has_basic_flameout();
}
const ::OPMessage::BasicFlameout& ItemJudgeBasic::basic_flameout() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_flameout)
  return basic_flameout_ != NULL ? *basic_flameout_ : *default_instance_->basic_flameout_;
}
::OPMessage::BasicFlameout* ItemJudgeBasic::mutable_basic_flameout() {
  set_has_basic_flameout();
  if (basic_flameout_ == NULL) {
    basic_flameout_ = new ::OPMessage::BasicFlameout;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_flameout)
  return basic_flameout_;
}
::OPMessage::BasicFlameout* ItemJudgeBasic::release_basic_flameout() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_flameout)
  clear_has_basic_flameout();
  ::OPMessage::BasicFlameout* temp = basic_flameout_;
  basic_flameout_ = NULL;
  return temp;
}
void ItemJudgeBasic::set_allocated_basic_flameout(::OPMessage::BasicFlameout* basic_flameout) {
  delete basic_flameout_;
  basic_flameout_ = basic_flameout;
  if (basic_flameout) {
    set_has_basic_flameout();
  } else {
    clear_has_basic_flameout();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_flameout)
}

// optional .OPMessage.BasicLeftTurnLamp basic_leftTurnLamp = 4;
bool ItemJudgeBasic::has_basic_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeBasic::set_has_basic_leftturnlamp() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeBasic::clear_has_basic_leftturnlamp() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeBasic::clear_basic_leftturnlamp() {
  if (basic_leftturnlamp_ != NULL) basic_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_basic_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeBasic::basic_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_leftTurnLamp)
  return basic_leftturnlamp_ != NULL ? *basic_leftturnlamp_ : *default_instance_->basic_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeBasic::mutable_basic_leftturnlamp() {
  set_has_basic_leftturnlamp();
  if (basic_leftturnlamp_ == NULL) {
    basic_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_leftTurnLamp)
  return basic_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeBasic::release_basic_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_leftTurnLamp)
  clear_has_basic_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = basic_leftturnlamp_;
  basic_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeBasic::set_allocated_basic_leftturnlamp(::OPMessage::BasicLeftTurnLamp* basic_leftturnlamp) {
  delete basic_leftturnlamp_;
  basic_leftturnlamp_ = basic_leftturnlamp;
  if (basic_leftturnlamp) {
    set_has_basic_leftturnlamp();
  } else {
    clear_has_basic_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp basic_rightTurnLamp = 5;
bool ItemJudgeBasic::has_basic_rightturnlamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeBasic::set_has_basic_rightturnlamp() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeBasic::clear_has_basic_rightturnlamp() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeBasic::clear_basic_rightturnlamp() {
  if (basic_rightturnlamp_ != NULL) basic_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_basic_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeBasic::basic_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_rightTurnLamp)
  return basic_rightturnlamp_ != NULL ? *basic_rightturnlamp_ : *default_instance_->basic_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeBasic::mutable_basic_rightturnlamp() {
  set_has_basic_rightturnlamp();
  if (basic_rightturnlamp_ == NULL) {
    basic_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_rightTurnLamp)
  return basic_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeBasic::release_basic_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_rightTurnLamp)
  clear_has_basic_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = basic_rightturnlamp_;
  basic_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeBasic::set_allocated_basic_rightturnlamp(::OPMessage::BasicRightTurnLamp* basic_rightturnlamp) {
  delete basic_rightturnlamp_;
  basic_rightturnlamp_ = basic_rightturnlamp;
  if (basic_rightturnlamp) {
    set_has_basic_rightturnlamp();
  } else {
    clear_has_basic_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_rightTurnLamp)
}

// optional .OPMessage.BasicCarStop basic_carStop = 6;
bool ItemJudgeBasic::has_basic_carstop() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeBasic::set_has_basic_carstop() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeBasic::clear_has_basic_carstop() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeBasic::clear_basic_carstop() {
  if (basic_carstop_ != NULL) basic_carstop_->::OPMessage::BasicCarStop::Clear();
  clear_has_basic_carstop();
}
const ::OPMessage::BasicCarStop& ItemJudgeBasic::basic_carstop() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_carStop)
  return basic_carstop_ != NULL ? *basic_carstop_ : *default_instance_->basic_carstop_;
}
::OPMessage::BasicCarStop* ItemJudgeBasic::mutable_basic_carstop() {
  set_has_basic_carstop();
  if (basic_carstop_ == NULL) {
    basic_carstop_ = new ::OPMessage::BasicCarStop;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_carStop)
  return basic_carstop_;
}
::OPMessage::BasicCarStop* ItemJudgeBasic::release_basic_carstop() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_carStop)
  clear_has_basic_carstop();
  ::OPMessage::BasicCarStop* temp = basic_carstop_;
  basic_carstop_ = NULL;
  return temp;
}
void ItemJudgeBasic::set_allocated_basic_carstop(::OPMessage::BasicCarStop* basic_carstop) {
  delete basic_carstop_;
  basic_carstop_ = basic_carstop;
  if (basic_carstop) {
    set_has_basic_carstop();
  } else {
    clear_has_basic_carstop();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_carStop)
}

// optional .OPMessage.BasicHandBrake basic_handBrake = 7;
bool ItemJudgeBasic::has_basic_handbrake() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeBasic::set_has_basic_handbrake() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeBasic::clear_has_basic_handbrake() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeBasic::clear_basic_handbrake() {
  if (basic_handbrake_ != NULL) basic_handbrake_->::OPMessage::BasicHandBrake::Clear();
  clear_has_basic_handbrake();
}
const ::OPMessage::BasicHandBrake& ItemJudgeBasic::basic_handbrake() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_handBrake)
  return basic_handbrake_ != NULL ? *basic_handbrake_ : *default_instance_->basic_handbrake_;
}
::OPMessage::BasicHandBrake* ItemJudgeBasic::mutable_basic_handbrake() {
  set_has_basic_handbrake();
  if (basic_handbrake_ == NULL) {
    basic_handbrake_ = new ::OPMessage::BasicHandBrake;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_handBrake)
  return basic_handbrake_;
}
::OPMessage::BasicHandBrake* ItemJudgeBasic::release_basic_handbrake() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_handBrake)
  clear_has_basic_handbrake();
  ::OPMessage::BasicHandBrake* temp = basic_handbrake_;
  basic_handbrake_ = NULL;
  return temp;
}
void ItemJudgeBasic::set_allocated_basic_handbrake(::OPMessage::BasicHandBrake* basic_handbrake) {
  delete basic_handbrake_;
  basic_handbrake_ = basic_handbrake;
  if (basic_handbrake) {
    set_has_basic_handbrake();
  } else {
    clear_has_basic_handbrake();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_handBrake)
}

// optional .OPMessage.BasicTimeout basic_timeout = 8;
bool ItemJudgeBasic::has_basic_timeout() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeBasic::set_has_basic_timeout() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeBasic::clear_has_basic_timeout() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeBasic::clear_basic_timeout() {
  if (basic_timeout_ != NULL) basic_timeout_->::OPMessage::BasicTimeout::Clear();
  clear_has_basic_timeout();
}
const ::OPMessage::BasicTimeout& ItemJudgeBasic::basic_timeout() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeBasic.basic_timeout)
  return basic_timeout_ != NULL ? *basic_timeout_ : *default_instance_->basic_timeout_;
}
::OPMessage::BasicTimeout* ItemJudgeBasic::mutable_basic_timeout() {
  set_has_basic_timeout();
  if (basic_timeout_ == NULL) {
    basic_timeout_ = new ::OPMessage::BasicTimeout;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeBasic.basic_timeout)
  return basic_timeout_;
}
::OPMessage::BasicTimeout* ItemJudgeBasic::release_basic_timeout() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeBasic.basic_timeout)
  clear_has_basic_timeout();
  ::OPMessage::BasicTimeout* temp = basic_timeout_;
  basic_timeout_ = NULL;
  return temp;
}
void ItemJudgeBasic::set_allocated_basic_timeout(::OPMessage::BasicTimeout* basic_timeout) {
  delete basic_timeout_;
  basic_timeout_ = basic_timeout;
  if (basic_timeout) {
    set_has_basic_timeout();
  } else {
    clear_has_basic_timeout();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeBasic.basic_timeout)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GlobalJudgeRule::kRunModeMnAgainDkEndFieldNumber;
const int GlobalJudgeRule::kRunModeKsWhetherHaveSecondChanceFieldNumber;
const int GlobalJudgeRule::kRoundStartVoiceFieldNumber;
const int GlobalJudgeRule::kItemFinishPassVoiceFieldNumber;
const int GlobalJudgeRule::kItemFinishUnpassVoiceFieldNumber;
const int GlobalJudgeRule::kRoundFinishPassVoiceFieldNumber;
const int GlobalJudgeRule::kRoundFinishUnpassVoiceFieldNumber;
const int GlobalJudgeRule::kRetakeRoundStartVoiceFieldNumber;
const int GlobalJudgeRule::kRetakeTypeFieldNumber;
const int GlobalJudgeRule::kRetakeDkEnterVoiceFieldNumber;
const int GlobalJudgeRule::kBasicSafetyFieldNumber;
const int GlobalJudgeRule::kBasicDoorFieldNumber;
const int GlobalJudgeRule::kBasicFlameoutFieldNumber;
const int GlobalJudgeRule::kMaxSpeedFieldNumber;
const int GlobalJudgeRule::kBasicFullLineFieldNumber;
const int GlobalJudgeRule::kBasicDottedLineFieldNumber;
const int GlobalJudgeRule::kLongtimeLeftTurnLampFieldNumber;
const int GlobalJudgeRule::kLongtimeRightTurnLampFieldNumber;
const int GlobalJudgeRule::kLongtimeClutchFieldNumber;
const int GlobalJudgeRule::kMinDistanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GlobalJudgeRule::GlobalJudgeRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.GlobalJudgeRule)
}

void GlobalJudgeRule::InitAsDefaultInstance() {
  basic_safety_ = const_cast< ::OPMessage::BasicSafety*>(&::OPMessage::BasicSafety::default_instance());
  basic_door_ = const_cast< ::OPMessage::BasicDoor*>(&::OPMessage::BasicDoor::default_instance());
  basic_flameout_ = const_cast< ::OPMessage::BasicFlameout*>(&::OPMessage::BasicFlameout::default_instance());
  basic_full_line_ = const_cast< ::OPMessage::BasicFullLine*>(&::OPMessage::BasicFullLine::default_instance());
  basic_dotted_line_ = const_cast< ::OPMessage::BasicDottedLine*>(&::OPMessage::BasicDottedLine::default_instance());
  longtime_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  longtime_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  longtime_clutch_ = const_cast< ::OPMessage::BasicClutch*>(&::OPMessage::BasicClutch::default_instance());
}

GlobalJudgeRule::GlobalJudgeRule(const GlobalJudgeRule& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.GlobalJudgeRule)
}

void GlobalJudgeRule::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  run_mode_mn_again_dk_end_ = false;
  run_mode_ks_whether_have_second_chance_ = false;
  round_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_finish_pass_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_finish_unpass_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  round_finish_pass_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  round_finish_unpass_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retake_round_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retake_type_ = 0;
  retake_dk_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basic_safety_ = NULL;
  basic_door_ = NULL;
  basic_flameout_ = NULL;
  max_speed_ = 50;
  basic_full_line_ = NULL;
  basic_dotted_line_ = NULL;
  longtime_leftturnlamp_ = NULL;
  longtime_rightturnlamp_ = NULL;
  longtime_clutch_ = NULL;
  min_distance_ = 2.8;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalJudgeRule::~GlobalJudgeRule() {
  // @@protoc_insertion_point(destructor:OPMessage.GlobalJudgeRule)
  SharedDtor();
}

void GlobalJudgeRule::SharedDtor() {
  round_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_finish_pass_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_finish_unpass_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  round_finish_pass_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  round_finish_unpass_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retake_round_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retake_dk_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_safety_;
    delete basic_door_;
    delete basic_flameout_;
    delete basic_full_line_;
    delete basic_dotted_line_;
    delete longtime_leftturnlamp_;
    delete longtime_rightturnlamp_;
    delete longtime_clutch_;
  }
}

void GlobalJudgeRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalJudgeRule::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalJudgeRule_descriptor_;
}

const GlobalJudgeRule& GlobalJudgeRule::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

GlobalJudgeRule* GlobalJudgeRule::default_instance_ = NULL;

GlobalJudgeRule* GlobalJudgeRule::New(::google::protobuf::Arena* arena) const {
  GlobalJudgeRule* n = new GlobalJudgeRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GlobalJudgeRule::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.GlobalJudgeRule)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GlobalJudgeRule, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GlobalJudgeRule*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(run_mode_mn_again_dk_end_, run_mode_ks_whether_have_second_chance_);
    if (has_round_start_voice()) {
      round_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_finish_pass_voice()) {
      item_finish_pass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_finish_unpass_voice()) {
      item_finish_unpass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_round_finish_pass_voice()) {
      round_finish_pass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_round_finish_unpass_voice()) {
      round_finish_unpass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_retake_round_start_voice()) {
      retake_round_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    retake_type_ = 0;
    if (has_retake_dk_enter_voice()) {
      retake_dk_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_basic_safety()) {
      if (basic_safety_ != NULL) basic_safety_->::OPMessage::BasicSafety::Clear();
    }
    if (has_basic_door()) {
      if (basic_door_ != NULL) basic_door_->::OPMessage::BasicDoor::Clear();
    }
    if (has_basic_flameout()) {
      if (basic_flameout_ != NULL) basic_flameout_->::OPMessage::BasicFlameout::Clear();
    }
    max_speed_ = 50;
    if (has_basic_full_line()) {
      if (basic_full_line_ != NULL) basic_full_line_->::OPMessage::BasicFullLine::Clear();
    }
    if (has_basic_dotted_line()) {
      if (basic_dotted_line_ != NULL) basic_dotted_line_->::OPMessage::BasicDottedLine::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 983040u) {
    if (has_longtime_leftturnlamp()) {
      if (longtime_leftturnlamp_ != NULL) longtime_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_longtime_rightturnlamp()) {
      if (longtime_rightturnlamp_ != NULL) longtime_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
    if (has_longtime_clutch()) {
      if (longtime_clutch_ != NULL) longtime_clutch_->::OPMessage::BasicClutch::Clear();
    }
    min_distance_ = 2.8;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GlobalJudgeRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.GlobalJudgeRule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool run_mode_mn_again_dk_end = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &run_mode_mn_again_dk_end_)));
          set_has_run_mode_mn_again_dk_end();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_run_mode_ks_whether_have_second_chance;
        break;
      }

      // optional bool run_mode_ks_whether_have_second_chance = 2;
      case 2: {
        if (tag == 16) {
         parse_run_mode_ks_whether_have_second_chance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &run_mode_ks_whether_have_second_chance_)));
          set_has_run_mode_ks_whether_have_second_chance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_round_start_voice;
        break;
      }

      // optional string round_start_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_round_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_round_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->round_start_voice().data(), this->round_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.GlobalJudgeRule.round_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_finish_pass_voice;
        break;
      }

      // optional string item_finish_pass_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_finish_pass_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_finish_pass_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_finish_pass_voice().data(), this->item_finish_pass_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.GlobalJudgeRule.item_finish_pass_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_finish_unpass_voice;
        break;
      }

      // optional string item_finish_unpass_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_item_finish_unpass_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_finish_unpass_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_finish_unpass_voice().data(), this->item_finish_unpass_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.GlobalJudgeRule.item_finish_unpass_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_round_finish_pass_voice;
        break;
      }

      // optional string round_finish_pass_voice = 6;
      case 6: {
        if (tag == 50) {
         parse_round_finish_pass_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_round_finish_pass_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->round_finish_pass_voice().data(), this->round_finish_pass_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.GlobalJudgeRule.round_finish_pass_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_round_finish_unpass_voice;
        break;
      }

      // optional string round_finish_unpass_voice = 7;
      case 7: {
        if (tag == 58) {
         parse_round_finish_unpass_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_round_finish_unpass_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->round_finish_unpass_voice().data(), this->round_finish_unpass_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.GlobalJudgeRule.round_finish_unpass_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_retake_round_start_voice;
        break;
      }

      // optional string retake_round_start_voice = 8;
      case 8: {
        if (tag == 66) {
         parse_retake_round_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retake_round_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retake_round_start_voice().data(), this->retake_round_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.GlobalJudgeRule.retake_round_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_retake_type;
        break;
      }

      // optional .OPMessage.enum_judge_retake retake_type = 9;
      case 9: {
        if (tag == 72) {
         parse_retake_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::enum_judge_retake_IsValid(value)) {
            set_retake_type(static_cast< ::OPMessage::enum_judge_retake >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_retake_dk_enter_voice;
        break;
      }

      // optional string retake_dk_enter_voice = 10;
      case 10: {
        if (tag == 82) {
         parse_retake_dk_enter_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retake_dk_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retake_dk_enter_voice().data(), this->retake_dk_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.GlobalJudgeRule.retake_dk_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_basic_safety;
        break;
      }

      // optional .OPMessage.BasicSafety basic_safety = 11;
      case 11: {
        if (tag == 90) {
         parse_basic_safety:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_safety()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_basic_door;
        break;
      }

      // optional .OPMessage.BasicDoor basic_door = 12;
      case 12: {
        if (tag == 98) {
         parse_basic_door:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_door()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_basic_flameout;
        break;
      }

      // optional .OPMessage.BasicFlameout basic_flameout = 13;
      case 13: {
        if (tag == 106) {
         parse_basic_flameout:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_flameout()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_max_speed;
        break;
      }

      // optional double max_speed = 14 [default = 50];
      case 14: {
        if (tag == 113) {
         parse_max_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_speed_)));
          set_has_max_speed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_basic_full_line;
        break;
      }

      // optional .OPMessage.BasicFullLine basic_full_line = 15;
      case 15: {
        if (tag == 122) {
         parse_basic_full_line:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_full_line()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_basic_dotted_line;
        break;
      }

      // optional .OPMessage.BasicDottedLine basic_dotted_line = 16;
      case 16: {
        if (tag == 130) {
         parse_basic_dotted_line:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_dotted_line()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_longtime_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp longtime_leftTurnLamp = 17;
      case 17: {
        if (tag == 138) {
         parse_longtime_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_longtime_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_longtime_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp longtime_rightTurnLamp = 18;
      case 18: {
        if (tag == 146) {
         parse_longtime_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_longtime_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_longtime_clutch;
        break;
      }

      // optional .OPMessage.BasicClutch longtime_clutch = 19;
      case 19: {
        if (tag == 154) {
         parse_longtime_clutch:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_longtime_clutch()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(161)) goto parse_min_distance;
        break;
      }

      // optional double min_distance = 20 [default = 2.8];
      case 20: {
        if (tag == 161) {
         parse_min_distance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_distance_)));
          set_has_min_distance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.GlobalJudgeRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.GlobalJudgeRule)
  return false;
#undef DO_
}

void GlobalJudgeRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.GlobalJudgeRule)
  // optional bool run_mode_mn_again_dk_end = 1;
  if (has_run_mode_mn_again_dk_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->run_mode_mn_again_dk_end(), output);
  }

  // optional bool run_mode_ks_whether_have_second_chance = 2;
  if (has_run_mode_ks_whether_have_second_chance()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->run_mode_ks_whether_have_second_chance(), output);
  }

  // optional string round_start_voice = 3;
  if (has_round_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->round_start_voice().data(), this->round_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.round_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->round_start_voice(), output);
  }

  // optional string item_finish_pass_voice = 4;
  if (has_item_finish_pass_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_finish_pass_voice().data(), this->item_finish_pass_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.item_finish_pass_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_finish_pass_voice(), output);
  }

  // optional string item_finish_unpass_voice = 5;
  if (has_item_finish_unpass_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_finish_unpass_voice().data(), this->item_finish_unpass_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.item_finish_unpass_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->item_finish_unpass_voice(), output);
  }

  // optional string round_finish_pass_voice = 6;
  if (has_round_finish_pass_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->round_finish_pass_voice().data(), this->round_finish_pass_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.round_finish_pass_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->round_finish_pass_voice(), output);
  }

  // optional string round_finish_unpass_voice = 7;
  if (has_round_finish_unpass_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->round_finish_unpass_voice().data(), this->round_finish_unpass_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.round_finish_unpass_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->round_finish_unpass_voice(), output);
  }

  // optional string retake_round_start_voice = 8;
  if (has_retake_round_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retake_round_start_voice().data(), this->retake_round_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.retake_round_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->retake_round_start_voice(), output);
  }

  // optional .OPMessage.enum_judge_retake retake_type = 9;
  if (has_retake_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->retake_type(), output);
  }

  // optional string retake_dk_enter_voice = 10;
  if (has_retake_dk_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retake_dk_enter_voice().data(), this->retake_dk_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.retake_dk_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->retake_dk_enter_voice(), output);
  }

  // optional .OPMessage.BasicSafety basic_safety = 11;
  if (has_basic_safety()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->basic_safety_, output);
  }

  // optional .OPMessage.BasicDoor basic_door = 12;
  if (has_basic_door()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->basic_door_, output);
  }

  // optional .OPMessage.BasicFlameout basic_flameout = 13;
  if (has_basic_flameout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->basic_flameout_, output);
  }

  // optional double max_speed = 14 [default = 50];
  if (has_max_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->max_speed(), output);
  }

  // optional .OPMessage.BasicFullLine basic_full_line = 15;
  if (has_basic_full_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->basic_full_line_, output);
  }

  // optional .OPMessage.BasicDottedLine basic_dotted_line = 16;
  if (has_basic_dotted_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->basic_dotted_line_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp longtime_leftTurnLamp = 17;
  if (has_longtime_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->longtime_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp longtime_rightTurnLamp = 18;
  if (has_longtime_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->longtime_rightturnlamp_, output);
  }

  // optional .OPMessage.BasicClutch longtime_clutch = 19;
  if (has_longtime_clutch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->longtime_clutch_, output);
  }

  // optional double min_distance = 20 [default = 2.8];
  if (has_min_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->min_distance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.GlobalJudgeRule)
}

::google::protobuf::uint8* GlobalJudgeRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.GlobalJudgeRule)
  // optional bool run_mode_mn_again_dk_end = 1;
  if (has_run_mode_mn_again_dk_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->run_mode_mn_again_dk_end(), target);
  }

  // optional bool run_mode_ks_whether_have_second_chance = 2;
  if (has_run_mode_ks_whether_have_second_chance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->run_mode_ks_whether_have_second_chance(), target);
  }

  // optional string round_start_voice = 3;
  if (has_round_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->round_start_voice().data(), this->round_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.round_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->round_start_voice(), target);
  }

  // optional string item_finish_pass_voice = 4;
  if (has_item_finish_pass_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_finish_pass_voice().data(), this->item_finish_pass_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.item_finish_pass_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_finish_pass_voice(), target);
  }

  // optional string item_finish_unpass_voice = 5;
  if (has_item_finish_unpass_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_finish_unpass_voice().data(), this->item_finish_unpass_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.item_finish_unpass_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->item_finish_unpass_voice(), target);
  }

  // optional string round_finish_pass_voice = 6;
  if (has_round_finish_pass_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->round_finish_pass_voice().data(), this->round_finish_pass_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.round_finish_pass_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->round_finish_pass_voice(), target);
  }

  // optional string round_finish_unpass_voice = 7;
  if (has_round_finish_unpass_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->round_finish_unpass_voice().data(), this->round_finish_unpass_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.round_finish_unpass_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->round_finish_unpass_voice(), target);
  }

  // optional string retake_round_start_voice = 8;
  if (has_retake_round_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retake_round_start_voice().data(), this->retake_round_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.retake_round_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->retake_round_start_voice(), target);
  }

  // optional .OPMessage.enum_judge_retake retake_type = 9;
  if (has_retake_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->retake_type(), target);
  }

  // optional string retake_dk_enter_voice = 10;
  if (has_retake_dk_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retake_dk_enter_voice().data(), this->retake_dk_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.GlobalJudgeRule.retake_dk_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->retake_dk_enter_voice(), target);
  }

  // optional .OPMessage.BasicSafety basic_safety = 11;
  if (has_basic_safety()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->basic_safety_, false, target);
  }

  // optional .OPMessage.BasicDoor basic_door = 12;
  if (has_basic_door()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->basic_door_, false, target);
  }

  // optional .OPMessage.BasicFlameout basic_flameout = 13;
  if (has_basic_flameout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->basic_flameout_, false, target);
  }

  // optional double max_speed = 14 [default = 50];
  if (has_max_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->max_speed(), target);
  }

  // optional .OPMessage.BasicFullLine basic_full_line = 15;
  if (has_basic_full_line()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->basic_full_line_, false, target);
  }

  // optional .OPMessage.BasicDottedLine basic_dotted_line = 16;
  if (has_basic_dotted_line()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->basic_dotted_line_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp longtime_leftTurnLamp = 17;
  if (has_longtime_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->longtime_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp longtime_rightTurnLamp = 18;
  if (has_longtime_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->longtime_rightturnlamp_, false, target);
  }

  // optional .OPMessage.BasicClutch longtime_clutch = 19;
  if (has_longtime_clutch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *this->longtime_clutch_, false, target);
  }

  // optional double min_distance = 20 [default = 2.8];
  if (has_min_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->min_distance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.GlobalJudgeRule)
  return target;
}

int GlobalJudgeRule::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.GlobalJudgeRule)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional bool run_mode_mn_again_dk_end = 1;
    if (has_run_mode_mn_again_dk_end()) {
      total_size += 1 + 1;
    }

    // optional bool run_mode_ks_whether_have_second_chance = 2;
    if (has_run_mode_ks_whether_have_second_chance()) {
      total_size += 1 + 1;
    }

    // optional string round_start_voice = 3;
    if (has_round_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->round_start_voice());
    }

    // optional string item_finish_pass_voice = 4;
    if (has_item_finish_pass_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_finish_pass_voice());
    }

    // optional string item_finish_unpass_voice = 5;
    if (has_item_finish_unpass_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_finish_unpass_voice());
    }

    // optional string round_finish_pass_voice = 6;
    if (has_round_finish_pass_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->round_finish_pass_voice());
    }

    // optional string round_finish_unpass_voice = 7;
    if (has_round_finish_unpass_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->round_finish_unpass_voice());
    }

    // optional string retake_round_start_voice = 8;
    if (has_retake_round_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retake_round_start_voice());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .OPMessage.enum_judge_retake retake_type = 9;
    if (has_retake_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->retake_type());
    }

    // optional string retake_dk_enter_voice = 10;
    if (has_retake_dk_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retake_dk_enter_voice());
    }

    // optional .OPMessage.BasicSafety basic_safety = 11;
    if (has_basic_safety()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_safety_);
    }

    // optional .OPMessage.BasicDoor basic_door = 12;
    if (has_basic_door()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_door_);
    }

    // optional .OPMessage.BasicFlameout basic_flameout = 13;
    if (has_basic_flameout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_flameout_);
    }

    // optional double max_speed = 14 [default = 50];
    if (has_max_speed()) {
      total_size += 1 + 8;
    }

    // optional .OPMessage.BasicFullLine basic_full_line = 15;
    if (has_basic_full_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_full_line_);
    }

    // optional .OPMessage.BasicDottedLine basic_dotted_line = 16;
    if (has_basic_dotted_line()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_dotted_line_);
    }

  }
  if (_has_bits_[16 / 32] & 983040u) {
    // optional .OPMessage.BasicLeftTurnLamp longtime_leftTurnLamp = 17;
    if (has_longtime_leftturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->longtime_leftturnlamp_);
    }

    // optional .OPMessage.BasicRightTurnLamp longtime_rightTurnLamp = 18;
    if (has_longtime_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->longtime_rightturnlamp_);
    }

    // optional .OPMessage.BasicClutch longtime_clutch = 19;
    if (has_longtime_clutch()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->longtime_clutch_);
    }

    // optional double min_distance = 20 [default = 2.8];
    if (has_min_distance()) {
      total_size += 2 + 8;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalJudgeRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.GlobalJudgeRule)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GlobalJudgeRule* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GlobalJudgeRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.GlobalJudgeRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.GlobalJudgeRule)
    MergeFrom(*source);
  }
}

void GlobalJudgeRule::MergeFrom(const GlobalJudgeRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.GlobalJudgeRule)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_run_mode_mn_again_dk_end()) {
      set_run_mode_mn_again_dk_end(from.run_mode_mn_again_dk_end());
    }
    if (from.has_run_mode_ks_whether_have_second_chance()) {
      set_run_mode_ks_whether_have_second_chance(from.run_mode_ks_whether_have_second_chance());
    }
    if (from.has_round_start_voice()) {
      set_has_round_start_voice();
      round_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.round_start_voice_);
    }
    if (from.has_item_finish_pass_voice()) {
      set_has_item_finish_pass_voice();
      item_finish_pass_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_finish_pass_voice_);
    }
    if (from.has_item_finish_unpass_voice()) {
      set_has_item_finish_unpass_voice();
      item_finish_unpass_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_finish_unpass_voice_);
    }
    if (from.has_round_finish_pass_voice()) {
      set_has_round_finish_pass_voice();
      round_finish_pass_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.round_finish_pass_voice_);
    }
    if (from.has_round_finish_unpass_voice()) {
      set_has_round_finish_unpass_voice();
      round_finish_unpass_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.round_finish_unpass_voice_);
    }
    if (from.has_retake_round_start_voice()) {
      set_has_retake_round_start_voice();
      retake_round_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retake_round_start_voice_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_retake_type()) {
      set_retake_type(from.retake_type());
    }
    if (from.has_retake_dk_enter_voice()) {
      set_has_retake_dk_enter_voice();
      retake_dk_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retake_dk_enter_voice_);
    }
    if (from.has_basic_safety()) {
      mutable_basic_safety()->::OPMessage::BasicSafety::MergeFrom(from.basic_safety());
    }
    if (from.has_basic_door()) {
      mutable_basic_door()->::OPMessage::BasicDoor::MergeFrom(from.basic_door());
    }
    if (from.has_basic_flameout()) {
      mutable_basic_flameout()->::OPMessage::BasicFlameout::MergeFrom(from.basic_flameout());
    }
    if (from.has_max_speed()) {
      set_max_speed(from.max_speed());
    }
    if (from.has_basic_full_line()) {
      mutable_basic_full_line()->::OPMessage::BasicFullLine::MergeFrom(from.basic_full_line());
    }
    if (from.has_basic_dotted_line()) {
      mutable_basic_dotted_line()->::OPMessage::BasicDottedLine::MergeFrom(from.basic_dotted_line());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_longtime_leftturnlamp()) {
      mutable_longtime_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.longtime_leftturnlamp());
    }
    if (from.has_longtime_rightturnlamp()) {
      mutable_longtime_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.longtime_rightturnlamp());
    }
    if (from.has_longtime_clutch()) {
      mutable_longtime_clutch()->::OPMessage::BasicClutch::MergeFrom(from.longtime_clutch());
    }
    if (from.has_min_distance()) {
      set_min_distance(from.min_distance());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GlobalJudgeRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.GlobalJudgeRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalJudgeRule::CopyFrom(const GlobalJudgeRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.GlobalJudgeRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalJudgeRule::IsInitialized() const {

  return true;
}

void GlobalJudgeRule::Swap(GlobalJudgeRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GlobalJudgeRule::InternalSwap(GlobalJudgeRule* other) {
  std::swap(run_mode_mn_again_dk_end_, other->run_mode_mn_again_dk_end_);
  std::swap(run_mode_ks_whether_have_second_chance_, other->run_mode_ks_whether_have_second_chance_);
  round_start_voice_.Swap(&other->round_start_voice_);
  item_finish_pass_voice_.Swap(&other->item_finish_pass_voice_);
  item_finish_unpass_voice_.Swap(&other->item_finish_unpass_voice_);
  round_finish_pass_voice_.Swap(&other->round_finish_pass_voice_);
  round_finish_unpass_voice_.Swap(&other->round_finish_unpass_voice_);
  retake_round_start_voice_.Swap(&other->retake_round_start_voice_);
  std::swap(retake_type_, other->retake_type_);
  retake_dk_enter_voice_.Swap(&other->retake_dk_enter_voice_);
  std::swap(basic_safety_, other->basic_safety_);
  std::swap(basic_door_, other->basic_door_);
  std::swap(basic_flameout_, other->basic_flameout_);
  std::swap(max_speed_, other->max_speed_);
  std::swap(basic_full_line_, other->basic_full_line_);
  std::swap(basic_dotted_line_, other->basic_dotted_line_);
  std::swap(longtime_leftturnlamp_, other->longtime_leftturnlamp_);
  std::swap(longtime_rightturnlamp_, other->longtime_rightturnlamp_);
  std::swap(longtime_clutch_, other->longtime_clutch_);
  std::swap(min_distance_, other->min_distance_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GlobalJudgeRule::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalJudgeRule_descriptor_;
  metadata.reflection = GlobalJudgeRule_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GlobalJudgeRule

// optional bool run_mode_mn_again_dk_end = 1;
bool GlobalJudgeRule::has_run_mode_mn_again_dk_end() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GlobalJudgeRule::set_has_run_mode_mn_again_dk_end() {
  _has_bits_[0] |= 0x00000001u;
}
void GlobalJudgeRule::clear_has_run_mode_mn_again_dk_end() {
  _has_bits_[0] &= ~0x00000001u;
}
void GlobalJudgeRule::clear_run_mode_mn_again_dk_end() {
  run_mode_mn_again_dk_end_ = false;
  clear_has_run_mode_mn_again_dk_end();
}
 bool GlobalJudgeRule::run_mode_mn_again_dk_end() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.run_mode_mn_again_dk_end)
  return run_mode_mn_again_dk_end_;
}
 void GlobalJudgeRule::set_run_mode_mn_again_dk_end(bool value) {
  set_has_run_mode_mn_again_dk_end();
  run_mode_mn_again_dk_end_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.run_mode_mn_again_dk_end)
}

// optional bool run_mode_ks_whether_have_second_chance = 2;
bool GlobalJudgeRule::has_run_mode_ks_whether_have_second_chance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GlobalJudgeRule::set_has_run_mode_ks_whether_have_second_chance() {
  _has_bits_[0] |= 0x00000002u;
}
void GlobalJudgeRule::clear_has_run_mode_ks_whether_have_second_chance() {
  _has_bits_[0] &= ~0x00000002u;
}
void GlobalJudgeRule::clear_run_mode_ks_whether_have_second_chance() {
  run_mode_ks_whether_have_second_chance_ = false;
  clear_has_run_mode_ks_whether_have_second_chance();
}
 bool GlobalJudgeRule::run_mode_ks_whether_have_second_chance() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.run_mode_ks_whether_have_second_chance)
  return run_mode_ks_whether_have_second_chance_;
}
 void GlobalJudgeRule::set_run_mode_ks_whether_have_second_chance(bool value) {
  set_has_run_mode_ks_whether_have_second_chance();
  run_mode_ks_whether_have_second_chance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.run_mode_ks_whether_have_second_chance)
}

// optional string round_start_voice = 3;
bool GlobalJudgeRule::has_round_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GlobalJudgeRule::set_has_round_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void GlobalJudgeRule::clear_has_round_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void GlobalJudgeRule::clear_round_start_voice() {
  round_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_round_start_voice();
}
 const ::std::string& GlobalJudgeRule::round_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.round_start_voice)
  return round_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_round_start_voice(const ::std::string& value) {
  set_has_round_start_voice();
  round_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.round_start_voice)
}
 void GlobalJudgeRule::set_round_start_voice(const char* value) {
  set_has_round_start_voice();
  round_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.round_start_voice)
}
 void GlobalJudgeRule::set_round_start_voice(const char* value, size_t size) {
  set_has_round_start_voice();
  round_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.round_start_voice)
}
 ::std::string* GlobalJudgeRule::mutable_round_start_voice() {
  set_has_round_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.round_start_voice)
  return round_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GlobalJudgeRule::release_round_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.round_start_voice)
  clear_has_round_start_voice();
  return round_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_allocated_round_start_voice(::std::string* round_start_voice) {
  if (round_start_voice != NULL) {
    set_has_round_start_voice();
  } else {
    clear_has_round_start_voice();
  }
  round_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), round_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.round_start_voice)
}

// optional string item_finish_pass_voice = 4;
bool GlobalJudgeRule::has_item_finish_pass_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GlobalJudgeRule::set_has_item_finish_pass_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void GlobalJudgeRule::clear_has_item_finish_pass_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void GlobalJudgeRule::clear_item_finish_pass_voice() {
  item_finish_pass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_finish_pass_voice();
}
 const ::std::string& GlobalJudgeRule::item_finish_pass_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
  return item_finish_pass_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_item_finish_pass_voice(const ::std::string& value) {
  set_has_item_finish_pass_voice();
  item_finish_pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
}
 void GlobalJudgeRule::set_item_finish_pass_voice(const char* value) {
  set_has_item_finish_pass_voice();
  item_finish_pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
}
 void GlobalJudgeRule::set_item_finish_pass_voice(const char* value, size_t size) {
  set_has_item_finish_pass_voice();
  item_finish_pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
}
 ::std::string* GlobalJudgeRule::mutable_item_finish_pass_voice() {
  set_has_item_finish_pass_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
  return item_finish_pass_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GlobalJudgeRule::release_item_finish_pass_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
  clear_has_item_finish_pass_voice();
  return item_finish_pass_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_allocated_item_finish_pass_voice(::std::string* item_finish_pass_voice) {
  if (item_finish_pass_voice != NULL) {
    set_has_item_finish_pass_voice();
  } else {
    clear_has_item_finish_pass_voice();
  }
  item_finish_pass_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_finish_pass_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.item_finish_pass_voice)
}

// optional string item_finish_unpass_voice = 5;
bool GlobalJudgeRule::has_item_finish_unpass_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GlobalJudgeRule::set_has_item_finish_unpass_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void GlobalJudgeRule::clear_has_item_finish_unpass_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void GlobalJudgeRule::clear_item_finish_unpass_voice() {
  item_finish_unpass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_finish_unpass_voice();
}
 const ::std::string& GlobalJudgeRule::item_finish_unpass_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
  return item_finish_unpass_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_item_finish_unpass_voice(const ::std::string& value) {
  set_has_item_finish_unpass_voice();
  item_finish_unpass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
}
 void GlobalJudgeRule::set_item_finish_unpass_voice(const char* value) {
  set_has_item_finish_unpass_voice();
  item_finish_unpass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
}
 void GlobalJudgeRule::set_item_finish_unpass_voice(const char* value, size_t size) {
  set_has_item_finish_unpass_voice();
  item_finish_unpass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
}
 ::std::string* GlobalJudgeRule::mutable_item_finish_unpass_voice() {
  set_has_item_finish_unpass_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
  return item_finish_unpass_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GlobalJudgeRule::release_item_finish_unpass_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
  clear_has_item_finish_unpass_voice();
  return item_finish_unpass_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_allocated_item_finish_unpass_voice(::std::string* item_finish_unpass_voice) {
  if (item_finish_unpass_voice != NULL) {
    set_has_item_finish_unpass_voice();
  } else {
    clear_has_item_finish_unpass_voice();
  }
  item_finish_unpass_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_finish_unpass_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.item_finish_unpass_voice)
}

// optional string round_finish_pass_voice = 6;
bool GlobalJudgeRule::has_round_finish_pass_voice() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GlobalJudgeRule::set_has_round_finish_pass_voice() {
  _has_bits_[0] |= 0x00000020u;
}
void GlobalJudgeRule::clear_has_round_finish_pass_voice() {
  _has_bits_[0] &= ~0x00000020u;
}
void GlobalJudgeRule::clear_round_finish_pass_voice() {
  round_finish_pass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_round_finish_pass_voice();
}
 const ::std::string& GlobalJudgeRule::round_finish_pass_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
  return round_finish_pass_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_round_finish_pass_voice(const ::std::string& value) {
  set_has_round_finish_pass_voice();
  round_finish_pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
}
 void GlobalJudgeRule::set_round_finish_pass_voice(const char* value) {
  set_has_round_finish_pass_voice();
  round_finish_pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
}
 void GlobalJudgeRule::set_round_finish_pass_voice(const char* value, size_t size) {
  set_has_round_finish_pass_voice();
  round_finish_pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
}
 ::std::string* GlobalJudgeRule::mutable_round_finish_pass_voice() {
  set_has_round_finish_pass_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
  return round_finish_pass_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GlobalJudgeRule::release_round_finish_pass_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
  clear_has_round_finish_pass_voice();
  return round_finish_pass_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_allocated_round_finish_pass_voice(::std::string* round_finish_pass_voice) {
  if (round_finish_pass_voice != NULL) {
    set_has_round_finish_pass_voice();
  } else {
    clear_has_round_finish_pass_voice();
  }
  round_finish_pass_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), round_finish_pass_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.round_finish_pass_voice)
}

// optional string round_finish_unpass_voice = 7;
bool GlobalJudgeRule::has_round_finish_unpass_voice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GlobalJudgeRule::set_has_round_finish_unpass_voice() {
  _has_bits_[0] |= 0x00000040u;
}
void GlobalJudgeRule::clear_has_round_finish_unpass_voice() {
  _has_bits_[0] &= ~0x00000040u;
}
void GlobalJudgeRule::clear_round_finish_unpass_voice() {
  round_finish_unpass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_round_finish_unpass_voice();
}
 const ::std::string& GlobalJudgeRule::round_finish_unpass_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
  return round_finish_unpass_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_round_finish_unpass_voice(const ::std::string& value) {
  set_has_round_finish_unpass_voice();
  round_finish_unpass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
}
 void GlobalJudgeRule::set_round_finish_unpass_voice(const char* value) {
  set_has_round_finish_unpass_voice();
  round_finish_unpass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
}
 void GlobalJudgeRule::set_round_finish_unpass_voice(const char* value, size_t size) {
  set_has_round_finish_unpass_voice();
  round_finish_unpass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
}
 ::std::string* GlobalJudgeRule::mutable_round_finish_unpass_voice() {
  set_has_round_finish_unpass_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
  return round_finish_unpass_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GlobalJudgeRule::release_round_finish_unpass_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
  clear_has_round_finish_unpass_voice();
  return round_finish_unpass_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_allocated_round_finish_unpass_voice(::std::string* round_finish_unpass_voice) {
  if (round_finish_unpass_voice != NULL) {
    set_has_round_finish_unpass_voice();
  } else {
    clear_has_round_finish_unpass_voice();
  }
  round_finish_unpass_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), round_finish_unpass_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.round_finish_unpass_voice)
}

// optional string retake_round_start_voice = 8;
bool GlobalJudgeRule::has_retake_round_start_voice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GlobalJudgeRule::set_has_retake_round_start_voice() {
  _has_bits_[0] |= 0x00000080u;
}
void GlobalJudgeRule::clear_has_retake_round_start_voice() {
  _has_bits_[0] &= ~0x00000080u;
}
void GlobalJudgeRule::clear_retake_round_start_voice() {
  retake_round_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retake_round_start_voice();
}
 const ::std::string& GlobalJudgeRule::retake_round_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.retake_round_start_voice)
  return retake_round_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_retake_round_start_voice(const ::std::string& value) {
  set_has_retake_round_start_voice();
  retake_round_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.retake_round_start_voice)
}
 void GlobalJudgeRule::set_retake_round_start_voice(const char* value) {
  set_has_retake_round_start_voice();
  retake_round_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.retake_round_start_voice)
}
 void GlobalJudgeRule::set_retake_round_start_voice(const char* value, size_t size) {
  set_has_retake_round_start_voice();
  retake_round_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.retake_round_start_voice)
}
 ::std::string* GlobalJudgeRule::mutable_retake_round_start_voice() {
  set_has_retake_round_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.retake_round_start_voice)
  return retake_round_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GlobalJudgeRule::release_retake_round_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.retake_round_start_voice)
  clear_has_retake_round_start_voice();
  return retake_round_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_allocated_retake_round_start_voice(::std::string* retake_round_start_voice) {
  if (retake_round_start_voice != NULL) {
    set_has_retake_round_start_voice();
  } else {
    clear_has_retake_round_start_voice();
  }
  retake_round_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retake_round_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.retake_round_start_voice)
}

// optional .OPMessage.enum_judge_retake retake_type = 9;
bool GlobalJudgeRule::has_retake_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GlobalJudgeRule::set_has_retake_type() {
  _has_bits_[0] |= 0x00000100u;
}
void GlobalJudgeRule::clear_has_retake_type() {
  _has_bits_[0] &= ~0x00000100u;
}
void GlobalJudgeRule::clear_retake_type() {
  retake_type_ = 0;
  clear_has_retake_type();
}
 ::OPMessage::enum_judge_retake GlobalJudgeRule::retake_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.retake_type)
  return static_cast< ::OPMessage::enum_judge_retake >(retake_type_);
}
 void GlobalJudgeRule::set_retake_type(::OPMessage::enum_judge_retake value) {
  assert(::OPMessage::enum_judge_retake_IsValid(value));
  set_has_retake_type();
  retake_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.retake_type)
}

// optional string retake_dk_enter_voice = 10;
bool GlobalJudgeRule::has_retake_dk_enter_voice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void GlobalJudgeRule::set_has_retake_dk_enter_voice() {
  _has_bits_[0] |= 0x00000200u;
}
void GlobalJudgeRule::clear_has_retake_dk_enter_voice() {
  _has_bits_[0] &= ~0x00000200u;
}
void GlobalJudgeRule::clear_retake_dk_enter_voice() {
  retake_dk_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retake_dk_enter_voice();
}
 const ::std::string& GlobalJudgeRule::retake_dk_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
  return retake_dk_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_retake_dk_enter_voice(const ::std::string& value) {
  set_has_retake_dk_enter_voice();
  retake_dk_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
}
 void GlobalJudgeRule::set_retake_dk_enter_voice(const char* value) {
  set_has_retake_dk_enter_voice();
  retake_dk_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
}
 void GlobalJudgeRule::set_retake_dk_enter_voice(const char* value, size_t size) {
  set_has_retake_dk_enter_voice();
  retake_dk_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
}
 ::std::string* GlobalJudgeRule::mutable_retake_dk_enter_voice() {
  set_has_retake_dk_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
  return retake_dk_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GlobalJudgeRule::release_retake_dk_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
  clear_has_retake_dk_enter_voice();
  return retake_dk_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GlobalJudgeRule::set_allocated_retake_dk_enter_voice(::std::string* retake_dk_enter_voice) {
  if (retake_dk_enter_voice != NULL) {
    set_has_retake_dk_enter_voice();
  } else {
    clear_has_retake_dk_enter_voice();
  }
  retake_dk_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retake_dk_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.retake_dk_enter_voice)
}

// optional .OPMessage.BasicSafety basic_safety = 11;
bool GlobalJudgeRule::has_basic_safety() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void GlobalJudgeRule::set_has_basic_safety() {
  _has_bits_[0] |= 0x00000400u;
}
void GlobalJudgeRule::clear_has_basic_safety() {
  _has_bits_[0] &= ~0x00000400u;
}
void GlobalJudgeRule::clear_basic_safety() {
  if (basic_safety_ != NULL) basic_safety_->::OPMessage::BasicSafety::Clear();
  clear_has_basic_safety();
}
const ::OPMessage::BasicSafety& GlobalJudgeRule::basic_safety() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.basic_safety)
  return basic_safety_ != NULL ? *basic_safety_ : *default_instance_->basic_safety_;
}
::OPMessage::BasicSafety* GlobalJudgeRule::mutable_basic_safety() {
  set_has_basic_safety();
  if (basic_safety_ == NULL) {
    basic_safety_ = new ::OPMessage::BasicSafety;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.basic_safety)
  return basic_safety_;
}
::OPMessage::BasicSafety* GlobalJudgeRule::release_basic_safety() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.basic_safety)
  clear_has_basic_safety();
  ::OPMessage::BasicSafety* temp = basic_safety_;
  basic_safety_ = NULL;
  return temp;
}
void GlobalJudgeRule::set_allocated_basic_safety(::OPMessage::BasicSafety* basic_safety) {
  delete basic_safety_;
  basic_safety_ = basic_safety;
  if (basic_safety) {
    set_has_basic_safety();
  } else {
    clear_has_basic_safety();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.basic_safety)
}

// optional .OPMessage.BasicDoor basic_door = 12;
bool GlobalJudgeRule::has_basic_door() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void GlobalJudgeRule::set_has_basic_door() {
  _has_bits_[0] |= 0x00000800u;
}
void GlobalJudgeRule::clear_has_basic_door() {
  _has_bits_[0] &= ~0x00000800u;
}
void GlobalJudgeRule::clear_basic_door() {
  if (basic_door_ != NULL) basic_door_->::OPMessage::BasicDoor::Clear();
  clear_has_basic_door();
}
const ::OPMessage::BasicDoor& GlobalJudgeRule::basic_door() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.basic_door)
  return basic_door_ != NULL ? *basic_door_ : *default_instance_->basic_door_;
}
::OPMessage::BasicDoor* GlobalJudgeRule::mutable_basic_door() {
  set_has_basic_door();
  if (basic_door_ == NULL) {
    basic_door_ = new ::OPMessage::BasicDoor;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.basic_door)
  return basic_door_;
}
::OPMessage::BasicDoor* GlobalJudgeRule::release_basic_door() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.basic_door)
  clear_has_basic_door();
  ::OPMessage::BasicDoor* temp = basic_door_;
  basic_door_ = NULL;
  return temp;
}
void GlobalJudgeRule::set_allocated_basic_door(::OPMessage::BasicDoor* basic_door) {
  delete basic_door_;
  basic_door_ = basic_door;
  if (basic_door) {
    set_has_basic_door();
  } else {
    clear_has_basic_door();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.basic_door)
}

// optional .OPMessage.BasicFlameout basic_flameout = 13;
bool GlobalJudgeRule::has_basic_flameout() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void GlobalJudgeRule::set_has_basic_flameout() {
  _has_bits_[0] |= 0x00001000u;
}
void GlobalJudgeRule::clear_has_basic_flameout() {
  _has_bits_[0] &= ~0x00001000u;
}
void GlobalJudgeRule::clear_basic_flameout() {
  if (basic_flameout_ != NULL) basic_flameout_->::OPMessage::BasicFlameout::Clear();
  clear_has_basic_flameout();
}
const ::OPMessage::BasicFlameout& GlobalJudgeRule::basic_flameout() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.basic_flameout)
  return basic_flameout_ != NULL ? *basic_flameout_ : *default_instance_->basic_flameout_;
}
::OPMessage::BasicFlameout* GlobalJudgeRule::mutable_basic_flameout() {
  set_has_basic_flameout();
  if (basic_flameout_ == NULL) {
    basic_flameout_ = new ::OPMessage::BasicFlameout;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.basic_flameout)
  return basic_flameout_;
}
::OPMessage::BasicFlameout* GlobalJudgeRule::release_basic_flameout() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.basic_flameout)
  clear_has_basic_flameout();
  ::OPMessage::BasicFlameout* temp = basic_flameout_;
  basic_flameout_ = NULL;
  return temp;
}
void GlobalJudgeRule::set_allocated_basic_flameout(::OPMessage::BasicFlameout* basic_flameout) {
  delete basic_flameout_;
  basic_flameout_ = basic_flameout;
  if (basic_flameout) {
    set_has_basic_flameout();
  } else {
    clear_has_basic_flameout();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.basic_flameout)
}

// optional double max_speed = 14 [default = 50];
bool GlobalJudgeRule::has_max_speed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void GlobalJudgeRule::set_has_max_speed() {
  _has_bits_[0] |= 0x00002000u;
}
void GlobalJudgeRule::clear_has_max_speed() {
  _has_bits_[0] &= ~0x00002000u;
}
void GlobalJudgeRule::clear_max_speed() {
  max_speed_ = 50;
  clear_has_max_speed();
}
 double GlobalJudgeRule::max_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.max_speed)
  return max_speed_;
}
 void GlobalJudgeRule::set_max_speed(double value) {
  set_has_max_speed();
  max_speed_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.max_speed)
}

// optional .OPMessage.BasicFullLine basic_full_line = 15;
bool GlobalJudgeRule::has_basic_full_line() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void GlobalJudgeRule::set_has_basic_full_line() {
  _has_bits_[0] |= 0x00004000u;
}
void GlobalJudgeRule::clear_has_basic_full_line() {
  _has_bits_[0] &= ~0x00004000u;
}
void GlobalJudgeRule::clear_basic_full_line() {
  if (basic_full_line_ != NULL) basic_full_line_->::OPMessage::BasicFullLine::Clear();
  clear_has_basic_full_line();
}
const ::OPMessage::BasicFullLine& GlobalJudgeRule::basic_full_line() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.basic_full_line)
  return basic_full_line_ != NULL ? *basic_full_line_ : *default_instance_->basic_full_line_;
}
::OPMessage::BasicFullLine* GlobalJudgeRule::mutable_basic_full_line() {
  set_has_basic_full_line();
  if (basic_full_line_ == NULL) {
    basic_full_line_ = new ::OPMessage::BasicFullLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.basic_full_line)
  return basic_full_line_;
}
::OPMessage::BasicFullLine* GlobalJudgeRule::release_basic_full_line() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.basic_full_line)
  clear_has_basic_full_line();
  ::OPMessage::BasicFullLine* temp = basic_full_line_;
  basic_full_line_ = NULL;
  return temp;
}
void GlobalJudgeRule::set_allocated_basic_full_line(::OPMessage::BasicFullLine* basic_full_line) {
  delete basic_full_line_;
  basic_full_line_ = basic_full_line;
  if (basic_full_line) {
    set_has_basic_full_line();
  } else {
    clear_has_basic_full_line();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.basic_full_line)
}

// optional .OPMessage.BasicDottedLine basic_dotted_line = 16;
bool GlobalJudgeRule::has_basic_dotted_line() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void GlobalJudgeRule::set_has_basic_dotted_line() {
  _has_bits_[0] |= 0x00008000u;
}
void GlobalJudgeRule::clear_has_basic_dotted_line() {
  _has_bits_[0] &= ~0x00008000u;
}
void GlobalJudgeRule::clear_basic_dotted_line() {
  if (basic_dotted_line_ != NULL) basic_dotted_line_->::OPMessage::BasicDottedLine::Clear();
  clear_has_basic_dotted_line();
}
const ::OPMessage::BasicDottedLine& GlobalJudgeRule::basic_dotted_line() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.basic_dotted_line)
  return basic_dotted_line_ != NULL ? *basic_dotted_line_ : *default_instance_->basic_dotted_line_;
}
::OPMessage::BasicDottedLine* GlobalJudgeRule::mutable_basic_dotted_line() {
  set_has_basic_dotted_line();
  if (basic_dotted_line_ == NULL) {
    basic_dotted_line_ = new ::OPMessage::BasicDottedLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.basic_dotted_line)
  return basic_dotted_line_;
}
::OPMessage::BasicDottedLine* GlobalJudgeRule::release_basic_dotted_line() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.basic_dotted_line)
  clear_has_basic_dotted_line();
  ::OPMessage::BasicDottedLine* temp = basic_dotted_line_;
  basic_dotted_line_ = NULL;
  return temp;
}
void GlobalJudgeRule::set_allocated_basic_dotted_line(::OPMessage::BasicDottedLine* basic_dotted_line) {
  delete basic_dotted_line_;
  basic_dotted_line_ = basic_dotted_line;
  if (basic_dotted_line) {
    set_has_basic_dotted_line();
  } else {
    clear_has_basic_dotted_line();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.basic_dotted_line)
}

// optional .OPMessage.BasicLeftTurnLamp longtime_leftTurnLamp = 17;
bool GlobalJudgeRule::has_longtime_leftturnlamp() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void GlobalJudgeRule::set_has_longtime_leftturnlamp() {
  _has_bits_[0] |= 0x00010000u;
}
void GlobalJudgeRule::clear_has_longtime_leftturnlamp() {
  _has_bits_[0] &= ~0x00010000u;
}
void GlobalJudgeRule::clear_longtime_leftturnlamp() {
  if (longtime_leftturnlamp_ != NULL) longtime_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_longtime_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& GlobalJudgeRule::longtime_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.longtime_leftTurnLamp)
  return longtime_leftturnlamp_ != NULL ? *longtime_leftturnlamp_ : *default_instance_->longtime_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* GlobalJudgeRule::mutable_longtime_leftturnlamp() {
  set_has_longtime_leftturnlamp();
  if (longtime_leftturnlamp_ == NULL) {
    longtime_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.longtime_leftTurnLamp)
  return longtime_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* GlobalJudgeRule::release_longtime_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.longtime_leftTurnLamp)
  clear_has_longtime_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = longtime_leftturnlamp_;
  longtime_leftturnlamp_ = NULL;
  return temp;
}
void GlobalJudgeRule::set_allocated_longtime_leftturnlamp(::OPMessage::BasicLeftTurnLamp* longtime_leftturnlamp) {
  delete longtime_leftturnlamp_;
  longtime_leftturnlamp_ = longtime_leftturnlamp;
  if (longtime_leftturnlamp) {
    set_has_longtime_leftturnlamp();
  } else {
    clear_has_longtime_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.longtime_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp longtime_rightTurnLamp = 18;
bool GlobalJudgeRule::has_longtime_rightturnlamp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void GlobalJudgeRule::set_has_longtime_rightturnlamp() {
  _has_bits_[0] |= 0x00020000u;
}
void GlobalJudgeRule::clear_has_longtime_rightturnlamp() {
  _has_bits_[0] &= ~0x00020000u;
}
void GlobalJudgeRule::clear_longtime_rightturnlamp() {
  if (longtime_rightturnlamp_ != NULL) longtime_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_longtime_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& GlobalJudgeRule::longtime_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.longtime_rightTurnLamp)
  return longtime_rightturnlamp_ != NULL ? *longtime_rightturnlamp_ : *default_instance_->longtime_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* GlobalJudgeRule::mutable_longtime_rightturnlamp() {
  set_has_longtime_rightturnlamp();
  if (longtime_rightturnlamp_ == NULL) {
    longtime_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.longtime_rightTurnLamp)
  return longtime_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* GlobalJudgeRule::release_longtime_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.longtime_rightTurnLamp)
  clear_has_longtime_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = longtime_rightturnlamp_;
  longtime_rightturnlamp_ = NULL;
  return temp;
}
void GlobalJudgeRule::set_allocated_longtime_rightturnlamp(::OPMessage::BasicRightTurnLamp* longtime_rightturnlamp) {
  delete longtime_rightturnlamp_;
  longtime_rightturnlamp_ = longtime_rightturnlamp;
  if (longtime_rightturnlamp) {
    set_has_longtime_rightturnlamp();
  } else {
    clear_has_longtime_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.longtime_rightTurnLamp)
}

// optional .OPMessage.BasicClutch longtime_clutch = 19;
bool GlobalJudgeRule::has_longtime_clutch() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void GlobalJudgeRule::set_has_longtime_clutch() {
  _has_bits_[0] |= 0x00040000u;
}
void GlobalJudgeRule::clear_has_longtime_clutch() {
  _has_bits_[0] &= ~0x00040000u;
}
void GlobalJudgeRule::clear_longtime_clutch() {
  if (longtime_clutch_ != NULL) longtime_clutch_->::OPMessage::BasicClutch::Clear();
  clear_has_longtime_clutch();
}
const ::OPMessage::BasicClutch& GlobalJudgeRule::longtime_clutch() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.longtime_clutch)
  return longtime_clutch_ != NULL ? *longtime_clutch_ : *default_instance_->longtime_clutch_;
}
::OPMessage::BasicClutch* GlobalJudgeRule::mutable_longtime_clutch() {
  set_has_longtime_clutch();
  if (longtime_clutch_ == NULL) {
    longtime_clutch_ = new ::OPMessage::BasicClutch;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.GlobalJudgeRule.longtime_clutch)
  return longtime_clutch_;
}
::OPMessage::BasicClutch* GlobalJudgeRule::release_longtime_clutch() {
  // @@protoc_insertion_point(field_release:OPMessage.GlobalJudgeRule.longtime_clutch)
  clear_has_longtime_clutch();
  ::OPMessage::BasicClutch* temp = longtime_clutch_;
  longtime_clutch_ = NULL;
  return temp;
}
void GlobalJudgeRule::set_allocated_longtime_clutch(::OPMessage::BasicClutch* longtime_clutch) {
  delete longtime_clutch_;
  longtime_clutch_ = longtime_clutch;
  if (longtime_clutch) {
    set_has_longtime_clutch();
  } else {
    clear_has_longtime_clutch();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.GlobalJudgeRule.longtime_clutch)
}

// optional double min_distance = 20 [default = 2.8];
bool GlobalJudgeRule::has_min_distance() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void GlobalJudgeRule::set_has_min_distance() {
  _has_bits_[0] |= 0x00080000u;
}
void GlobalJudgeRule::clear_has_min_distance() {
  _has_bits_[0] &= ~0x00080000u;
}
void GlobalJudgeRule::clear_min_distance() {
  min_distance_ = 2.8;
  clear_has_min_distance();
}
 double GlobalJudgeRule::min_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.GlobalJudgeRule.min_distance)
  return min_distance_;
}
 void GlobalJudgeRule::set_min_distance(double value) {
  set_has_min_distance();
  min_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.GlobalJudgeRule.min_distance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleZero::kBasicEventCheckFieldNumber;
const int ItemJudgeRuleZero::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleZero::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleZero::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleZero::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleZero::kJudgePointsTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleZero::ItemJudgeRuleZero()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleZero)
}

void ItemJudgeRuleZero::InitAsDefaultInstance() {
  basic_event_check_ = const_cast< ::OPMessage::ItemJudgeBasic*>(&::OPMessage::ItemJudgeBasic::default_instance());
}

ItemJudgeRuleZero::ItemJudgeRuleZero(const ItemJudgeRuleZero& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleZero)
}

void ItemJudgeRuleZero::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  basic_event_check_ = NULL;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  judge_points_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleZero::~ItemJudgeRuleZero() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleZero)
  SharedDtor();
}

void ItemJudgeRuleZero::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_event_check_;
  }
}

void ItemJudgeRuleZero::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleZero::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleZero_descriptor_;
}

const ItemJudgeRuleZero& ItemJudgeRuleZero::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleZero* ItemJudgeRuleZero::default_instance_ = NULL;

ItemJudgeRuleZero* ItemJudgeRuleZero::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleZero* n = new ItemJudgeRuleZero;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleZero::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleZero)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_basic_event_check()) {
      if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
    }
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    judge_points_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleZero::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleZero)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_event_check()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_enter_voice;
        break;
      }

      // optional string item_enter_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_enter_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZero.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZero.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZero.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZero.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_judge_points_type;
        break;
      }

      // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
      case 6: {
        if (tag == 48) {
         parse_judge_points_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::enum_judge_points_IsValid(value)) {
            set_judge_points_type(static_cast< ::OPMessage::enum_judge_points >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleZero)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleZero)
  return false;
#undef DO_
}

void ItemJudgeRuleZero::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleZero)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basic_event_check_, output);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZero.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZero.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZero.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZero.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->item_end_voice(), output);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->judge_points_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleZero)
}

::google::protobuf::uint8* ItemJudgeRuleZero::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleZero)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basic_event_check_, false, target);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZero.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZero.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZero.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZero.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->item_end_voice(), target);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->judge_points_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleZero)
  return target;
}

int ItemJudgeRuleZero::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleZero)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
    if (has_basic_event_check()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_event_check_);
    }

    // optional string item_enter_voice = 2;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 3;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 4;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 5;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
    if (has_judge_points_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->judge_points_type());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleZero::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleZero)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleZero* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleZero>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleZero)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleZero)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleZero::MergeFrom(const ItemJudgeRuleZero& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleZero)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_basic_event_check()) {
      mutable_basic_event_check()->::OPMessage::ItemJudgeBasic::MergeFrom(from.basic_event_check());
    }
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_judge_points_type()) {
      set_judge_points_type(from.judge_points_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleZero::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleZero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleZero::CopyFrom(const ItemJudgeRuleZero& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleZero)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleZero::IsInitialized() const {

  return true;
}

void ItemJudgeRuleZero::Swap(ItemJudgeRuleZero* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleZero::InternalSwap(ItemJudgeRuleZero* other) {
  std::swap(basic_event_check_, other->basic_event_check_);
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(judge_points_type_, other->judge_points_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleZero::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleZero_descriptor_;
  metadata.reflection = ItemJudgeRuleZero_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleZero

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
bool ItemJudgeRuleZero::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleZero::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleZero::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleZero::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleZero::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZero.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleZero::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZero.basic_event_check)
  return basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleZero::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZero.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
void ItemJudgeRuleZero::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZero.basic_event_check)
}

// optional string item_enter_voice = 2;
bool ItemJudgeRuleZero::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleZero::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleZero::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleZero::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleZero::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZero.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZero::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZero.item_enter_voice)
}
 void ItemJudgeRuleZero::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZero.item_enter_voice)
}
 void ItemJudgeRuleZero::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZero.item_enter_voice)
}
 ::std::string* ItemJudgeRuleZero::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZero.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZero::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZero.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZero::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZero.item_enter_voice)
}

// optional string item_leave_voice = 3;
bool ItemJudgeRuleZero::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleZero::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleZero::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleZero::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleZero::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZero.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZero::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZero.item_leave_voice)
}
 void ItemJudgeRuleZero::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZero.item_leave_voice)
}
 void ItemJudgeRuleZero::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZero.item_leave_voice)
}
 ::std::string* ItemJudgeRuleZero::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZero.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZero::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZero.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZero::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZero.item_leave_voice)
}

// optional string item_start_voice = 4;
bool ItemJudgeRuleZero::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleZero::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleZero::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleZero::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleZero::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZero.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZero::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZero.item_start_voice)
}
 void ItemJudgeRuleZero::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZero.item_start_voice)
}
 void ItemJudgeRuleZero::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZero.item_start_voice)
}
 ::std::string* ItemJudgeRuleZero::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZero.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZero::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZero.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZero::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZero.item_start_voice)
}

// optional string item_end_voice = 5;
bool ItemJudgeRuleZero::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleZero::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleZero::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleZero::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleZero::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZero.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZero::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZero.item_end_voice)
}
 void ItemJudgeRuleZero::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZero.item_end_voice)
}
 void ItemJudgeRuleZero::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZero.item_end_voice)
}
 ::std::string* ItemJudgeRuleZero::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZero.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZero::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZero.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZero::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZero.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
bool ItemJudgeRuleZero::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleZero::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleZero::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleZero::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
 ::OPMessage::enum_judge_points ItemJudgeRuleZero::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZero.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
 void ItemJudgeRuleZero::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZero.judge_points_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleDk::kBasicEventCheckFieldNumber;
const int ItemJudgeRuleDk::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleDk::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleDk::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleDk::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleDk::kJudgePointsTypeFieldNumber;
const int ItemJudgeRuleDk::kCheckStartTypeFieldNumber;
const int ItemJudgeRuleDk::kEventCheckLeftTurnLampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleDk::ItemJudgeRuleDk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleDk)
}

void ItemJudgeRuleDk::InitAsDefaultInstance() {
  basic_event_check_ = const_cast< ::OPMessage::ItemJudgeBasic*>(&::OPMessage::ItemJudgeBasic::default_instance());
  event_check_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
}

ItemJudgeRuleDk::ItemJudgeRuleDk(const ItemJudgeRuleDk& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleDk)
}

void ItemJudgeRuleDk::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  basic_event_check_ = NULL;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  judge_points_type_ = 0;
  check_start_type_ = 0;
  event_check_leftturnlamp_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleDk::~ItemJudgeRuleDk() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleDk)
  SharedDtor();
}

void ItemJudgeRuleDk::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_event_check_;
    delete event_check_leftturnlamp_;
  }
}

void ItemJudgeRuleDk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleDk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleDk_descriptor_;
}

const ItemJudgeRuleDk& ItemJudgeRuleDk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleDk* ItemJudgeRuleDk::default_instance_ = NULL;

ItemJudgeRuleDk* ItemJudgeRuleDk::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleDk* n = new ItemJudgeRuleDk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleDk::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleDk)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeRuleDk, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeRuleDk*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(judge_points_type_, check_start_type_);
    if (has_basic_event_check()) {
      if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
    }
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_event_check_leftturnlamp()) {
      if (event_check_leftturnlamp_ != NULL) event_check_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleDk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleDk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_event_check()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_enter_voice;
        break;
      }

      // optional string item_enter_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_enter_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDk.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDk.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDk.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDk.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_judge_points_type;
        break;
      }

      // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
      case 6: {
        if (tag == 48) {
         parse_judge_points_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::enum_judge_points_IsValid(value)) {
            set_judge_points_type(static_cast< ::OPMessage::enum_judge_points >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_check_start_type;
        break;
      }

      // optional .OPMessage.CheckStartTypeStart check_start_type = 7;
      case 7: {
        if (tag == 56) {
         parse_check_start_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckStartTypeStart_IsValid(value)) {
            set_check_start_type(static_cast< ::OPMessage::CheckStartTypeStart >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_event_check_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 8;
      case 8: {
        if (tag == 66) {
         parse_event_check_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleDk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleDk)
  return false;
#undef DO_
}

void ItemJudgeRuleDk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleDk)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basic_event_check_, output);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDk.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDk.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDk.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDk.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->item_end_voice(), output);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->judge_points_type(), output);
  }

  // optional .OPMessage.CheckStartTypeStart check_start_type = 7;
  if (has_check_start_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->check_start_type(), output);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 8;
  if (has_event_check_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->event_check_leftturnlamp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleDk)
}

::google::protobuf::uint8* ItemJudgeRuleDk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleDk)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basic_event_check_, false, target);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDk.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDk.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDk.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDk.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->item_end_voice(), target);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->judge_points_type(), target);
  }

  // optional .OPMessage.CheckStartTypeStart check_start_type = 7;
  if (has_check_start_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->check_start_type(), target);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 8;
  if (has_event_check_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->event_check_leftturnlamp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleDk)
  return target;
}

int ItemJudgeRuleDk::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleDk)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
    if (has_basic_event_check()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_event_check_);
    }

    // optional string item_enter_voice = 2;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 3;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 4;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 5;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
    if (has_judge_points_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->judge_points_type());
    }

    // optional .OPMessage.CheckStartTypeStart check_start_type = 7;
    if (has_check_start_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_start_type());
    }

    // optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 8;
    if (has_event_check_leftturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_leftturnlamp_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleDk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleDk)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleDk* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleDk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleDk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleDk)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleDk::MergeFrom(const ItemJudgeRuleDk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleDk)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_basic_event_check()) {
      mutable_basic_event_check()->::OPMessage::ItemJudgeBasic::MergeFrom(from.basic_event_check());
    }
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_judge_points_type()) {
      set_judge_points_type(from.judge_points_type());
    }
    if (from.has_check_start_type()) {
      set_check_start_type(from.check_start_type());
    }
    if (from.has_event_check_leftturnlamp()) {
      mutable_event_check_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.event_check_leftturnlamp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleDk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleDk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleDk::CopyFrom(const ItemJudgeRuleDk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleDk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleDk::IsInitialized() const {

  return true;
}

void ItemJudgeRuleDk::Swap(ItemJudgeRuleDk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleDk::InternalSwap(ItemJudgeRuleDk* other) {
  std::swap(basic_event_check_, other->basic_event_check_);
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(judge_points_type_, other->judge_points_type_);
  std::swap(check_start_type_, other->check_start_type_);
  std::swap(event_check_leftturnlamp_, other->event_check_leftturnlamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleDk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleDk_descriptor_;
  metadata.reflection = ItemJudgeRuleDk_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleDk

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
bool ItemJudgeRuleDk::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleDk::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleDk::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleDk::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleDk::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleDk::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDk.basic_event_check)
  return basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleDk::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDk.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
void ItemJudgeRuleDk::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDk.basic_event_check)
}

// optional string item_enter_voice = 2;
bool ItemJudgeRuleDk::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleDk::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleDk::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleDk::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleDk::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDk::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDk.item_enter_voice)
}
 void ItemJudgeRuleDk::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDk.item_enter_voice)
}
 void ItemJudgeRuleDk::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDk.item_enter_voice)
}
 ::std::string* ItemJudgeRuleDk::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDk.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDk::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDk.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDk::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDk.item_enter_voice)
}

// optional string item_leave_voice = 3;
bool ItemJudgeRuleDk::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleDk::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleDk::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleDk::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleDk::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDk::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDk.item_leave_voice)
}
 void ItemJudgeRuleDk::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDk.item_leave_voice)
}
 void ItemJudgeRuleDk::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDk.item_leave_voice)
}
 ::std::string* ItemJudgeRuleDk::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDk.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDk::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDk.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDk::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDk.item_leave_voice)
}

// optional string item_start_voice = 4;
bool ItemJudgeRuleDk::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleDk::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleDk::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleDk::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleDk::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDk::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDk.item_start_voice)
}
 void ItemJudgeRuleDk::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDk.item_start_voice)
}
 void ItemJudgeRuleDk::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDk.item_start_voice)
}
 ::std::string* ItemJudgeRuleDk::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDk.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDk::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDk.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDk::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDk.item_start_voice)
}

// optional string item_end_voice = 5;
bool ItemJudgeRuleDk::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleDk::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleDk::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleDk::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleDk::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDk::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDk.item_end_voice)
}
 void ItemJudgeRuleDk::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDk.item_end_voice)
}
 void ItemJudgeRuleDk::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDk.item_end_voice)
}
 ::std::string* ItemJudgeRuleDk::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDk.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDk::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDk.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDk::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDk.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
bool ItemJudgeRuleDk::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleDk::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleDk::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleDk::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
 ::OPMessage::enum_judge_points ItemJudgeRuleDk::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
 void ItemJudgeRuleDk::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDk.judge_points_type)
}

// optional .OPMessage.CheckStartTypeStart check_start_type = 7;
bool ItemJudgeRuleDk::has_check_start_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleDk::set_has_check_start_type() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleDk::clear_has_check_start_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleDk::clear_check_start_type() {
  check_start_type_ = 0;
  clear_has_check_start_type();
}
 ::OPMessage::CheckStartTypeStart ItemJudgeRuleDk::check_start_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.check_start_type)
  return static_cast< ::OPMessage::CheckStartTypeStart >(check_start_type_);
}
 void ItemJudgeRuleDk::set_check_start_type(::OPMessage::CheckStartTypeStart value) {
  assert(::OPMessage::CheckStartTypeStart_IsValid(value));
  set_has_check_start_type();
  check_start_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDk.check_start_type)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 8;
bool ItemJudgeRuleDk::has_event_check_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeRuleDk::set_has_event_check_leftturnlamp() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeRuleDk::clear_has_event_check_leftturnlamp() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeRuleDk::clear_event_check_leftturnlamp() {
  if (event_check_leftturnlamp_ != NULL) event_check_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDk::event_check_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDk.event_check_leftTurnLamp)
  return event_check_leftturnlamp_ != NULL ? *event_check_leftturnlamp_ : *default_instance_->event_check_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDk::mutable_event_check_leftturnlamp() {
  set_has_event_check_leftturnlamp();
  if (event_check_leftturnlamp_ == NULL) {
    event_check_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDk.event_check_leftTurnLamp)
  return event_check_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDk::release_event_check_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDk.event_check_leftTurnLamp)
  clear_has_event_check_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_leftturnlamp_;
  event_check_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDk::set_allocated_event_check_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_leftturnlamp) {
  delete event_check_leftturnlamp_;
  event_check_leftturnlamp_ = event_check_leftturnlamp;
  if (event_check_leftturnlamp) {
    set_has_event_check_leftturnlamp();
  } else {
    clear_has_event_check_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDk.event_check_leftTurnLamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleShangCheZhunBei::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleShangCheZhunBei::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleShangCheZhunBei::kBasicRoundcarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleShangCheZhunBei::ItemJudgeRuleShangCheZhunBei()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleShangCheZhunBei)
}

void ItemJudgeRuleShangCheZhunBei::InitAsDefaultInstance() {
  basic_roundcar_ = const_cast< ::OPMessage::BasicRoundCar*>(&::OPMessage::BasicRoundCar::default_instance());
}

ItemJudgeRuleShangCheZhunBei::ItemJudgeRuleShangCheZhunBei(const ItemJudgeRuleShangCheZhunBei& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleShangCheZhunBei)
}

void ItemJudgeRuleShangCheZhunBei::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basic_roundcar_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleShangCheZhunBei::~ItemJudgeRuleShangCheZhunBei() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleShangCheZhunBei)
  SharedDtor();
}

void ItemJudgeRuleShangCheZhunBei::SharedDtor() {
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_roundcar_;
  }
}

void ItemJudgeRuleShangCheZhunBei::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleShangCheZhunBei::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleShangCheZhunBei_descriptor_;
}

const ItemJudgeRuleShangCheZhunBei& ItemJudgeRuleShangCheZhunBei::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleShangCheZhunBei* ItemJudgeRuleShangCheZhunBei::default_instance_ = NULL;

ItemJudgeRuleShangCheZhunBei* ItemJudgeRuleShangCheZhunBei::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleShangCheZhunBei* n = new ItemJudgeRuleShangCheZhunBei;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleShangCheZhunBei::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleShangCheZhunBei)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_basic_roundcar()) {
      if (basic_roundcar_ != NULL) basic_roundcar_->::OPMessage::BasicRoundCar::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleShangCheZhunBei::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleShangCheZhunBei)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_start_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_basic_roundcar;
        break;
      }

      // optional .OPMessage.BasicRoundCar basic_roundcar = 3;
      case 3: {
        if (tag == 26) {
         parse_basic_roundcar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_roundcar()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleShangCheZhunBei)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleShangCheZhunBei)
  return false;
#undef DO_
}

void ItemJudgeRuleShangCheZhunBei::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleShangCheZhunBei)
  // optional string item_start_voice = 1;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 2;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_end_voice(), output);
  }

  // optional .OPMessage.BasicRoundCar basic_roundcar = 3;
  if (has_basic_roundcar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->basic_roundcar_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleShangCheZhunBei)
}

::google::protobuf::uint8* ItemJudgeRuleShangCheZhunBei::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleShangCheZhunBei)
  // optional string item_start_voice = 1;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 2;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_end_voice(), target);
  }

  // optional .OPMessage.BasicRoundCar basic_roundcar = 3;
  if (has_basic_roundcar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->basic_roundcar_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleShangCheZhunBei)
  return target;
}

int ItemJudgeRuleShangCheZhunBei::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleShangCheZhunBei)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string item_start_voice = 1;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 2;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.BasicRoundCar basic_roundcar = 3;
    if (has_basic_roundcar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_roundcar_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleShangCheZhunBei::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleShangCheZhunBei)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleShangCheZhunBei* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleShangCheZhunBei>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleShangCheZhunBei)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleShangCheZhunBei)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleShangCheZhunBei::MergeFrom(const ItemJudgeRuleShangCheZhunBei& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleShangCheZhunBei)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_basic_roundcar()) {
      mutable_basic_roundcar()->::OPMessage::BasicRoundCar::MergeFrom(from.basic_roundcar());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleShangCheZhunBei::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleShangCheZhunBei)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleShangCheZhunBei::CopyFrom(const ItemJudgeRuleShangCheZhunBei& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleShangCheZhunBei)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleShangCheZhunBei::IsInitialized() const {

  return true;
}

void ItemJudgeRuleShangCheZhunBei::Swap(ItemJudgeRuleShangCheZhunBei* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleShangCheZhunBei::InternalSwap(ItemJudgeRuleShangCheZhunBei* other) {
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(basic_roundcar_, other->basic_roundcar_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleShangCheZhunBei::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleShangCheZhunBei_descriptor_;
  metadata.reflection = ItemJudgeRuleShangCheZhunBei_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleShangCheZhunBei

// optional string item_start_voice = 1;
bool ItemJudgeRuleShangCheZhunBei::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleShangCheZhunBei::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleShangCheZhunBei::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleShangCheZhunBei::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleShangCheZhunBei::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleShangCheZhunBei::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
}
 void ItemJudgeRuleShangCheZhunBei::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
}
 void ItemJudgeRuleShangCheZhunBei::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
}
 ::std::string* ItemJudgeRuleShangCheZhunBei::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleShangCheZhunBei::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleShangCheZhunBei::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleShangCheZhunBei.item_start_voice)
}

// optional string item_end_voice = 2;
bool ItemJudgeRuleShangCheZhunBei::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleShangCheZhunBei::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleShangCheZhunBei::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleShangCheZhunBei::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleShangCheZhunBei::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleShangCheZhunBei::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
}
 void ItemJudgeRuleShangCheZhunBei::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
}
 void ItemJudgeRuleShangCheZhunBei::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
}
 ::std::string* ItemJudgeRuleShangCheZhunBei::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleShangCheZhunBei::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleShangCheZhunBei::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleShangCheZhunBei.item_end_voice)
}

// optional .OPMessage.BasicRoundCar basic_roundcar = 3;
bool ItemJudgeRuleShangCheZhunBei::has_basic_roundcar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleShangCheZhunBei::set_has_basic_roundcar() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleShangCheZhunBei::clear_has_basic_roundcar() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleShangCheZhunBei::clear_basic_roundcar() {
  if (basic_roundcar_ != NULL) basic_roundcar_->::OPMessage::BasicRoundCar::Clear();
  clear_has_basic_roundcar();
}
const ::OPMessage::BasicRoundCar& ItemJudgeRuleShangCheZhunBei::basic_roundcar() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleShangCheZhunBei.basic_roundcar)
  return basic_roundcar_ != NULL ? *basic_roundcar_ : *default_instance_->basic_roundcar_;
}
::OPMessage::BasicRoundCar* ItemJudgeRuleShangCheZhunBei::mutable_basic_roundcar() {
  set_has_basic_roundcar();
  if (basic_roundcar_ == NULL) {
    basic_roundcar_ = new ::OPMessage::BasicRoundCar;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleShangCheZhunBei.basic_roundcar)
  return basic_roundcar_;
}
::OPMessage::BasicRoundCar* ItemJudgeRuleShangCheZhunBei::release_basic_roundcar() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleShangCheZhunBei.basic_roundcar)
  clear_has_basic_roundcar();
  ::OPMessage::BasicRoundCar* temp = basic_roundcar_;
  basic_roundcar_ = NULL;
  return temp;
}
void ItemJudgeRuleShangCheZhunBei::set_allocated_basic_roundcar(::OPMessage::BasicRoundCar* basic_roundcar) {
  delete basic_roundcar_;
  basic_roundcar_ = basic_roundcar;
  if (basic_roundcar) {
    set_has_basic_roundcar();
  } else {
    clear_has_basic_roundcar();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleShangCheZhunBei.basic_roundcar)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicDengGuangMoNiItem::kTypeFieldNumber;
const int BasicDengGuangMoNiItem::kIsParticipantJudgeFieldNumber;
const int BasicDengGuangMoNiItem::kIsMustTypeFieldNumber;
const int BasicDengGuangMoNiItem::kTipVoiceFieldNumber;
const int BasicDengGuangMoNiItem::kPassVoiceFieldNumber;
const int BasicDengGuangMoNiItem::kDeductionFieldNumber;
const int BasicDengGuangMoNiItem::kTimeOutFieldNumber;
const int BasicDengGuangMoNiItem::kDeductionVoiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicDengGuangMoNiItem::BasicDengGuangMoNiItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.BasicDengGuangMoNiItem)
}

void BasicDengGuangMoNiItem::InitAsDefaultInstance() {
}

BasicDengGuangMoNiItem::BasicDengGuangMoNiItem(const BasicDengGuangMoNiItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.BasicDengGuangMoNiItem)
}

void BasicDengGuangMoNiItem::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  is_participant_judge_ = true;
  is_must_type_ = true;
  tip_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deduction_ = 0;
  time_out_ = 0;
  deduction_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BasicDengGuangMoNiItem::~BasicDengGuangMoNiItem() {
  // @@protoc_insertion_point(destructor:OPMessage.BasicDengGuangMoNiItem)
  SharedDtor();
}

void BasicDengGuangMoNiItem::SharedDtor() {
  tip_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  deduction_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BasicDengGuangMoNiItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicDengGuangMoNiItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BasicDengGuangMoNiItem_descriptor_;
}

const BasicDengGuangMoNiItem& BasicDengGuangMoNiItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

BasicDengGuangMoNiItem* BasicDengGuangMoNiItem::default_instance_ = NULL;

BasicDengGuangMoNiItem* BasicDengGuangMoNiItem::New(::google::protobuf::Arena* arena) const {
  BasicDengGuangMoNiItem* n = new BasicDengGuangMoNiItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicDengGuangMoNiItem::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.BasicDengGuangMoNiItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BasicDengGuangMoNiItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BasicDengGuangMoNiItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(deduction_, time_out_);
    type_ = 0;
    is_participant_judge_ = true;
    is_must_type_ = true;
    if (has_tip_voice()) {
      tip_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_pass_voice()) {
      pass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_deduction_voice()) {
      deduction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BasicDengGuangMoNiItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.BasicDengGuangMoNiItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OPMessage.enum_judge_dengguangmoni_type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::enum_judge_dengguangmoni_type_IsValid(value)) {
            set_type(static_cast< ::OPMessage::enum_judge_dengguangmoni_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_is_participant_judge;
        break;
      }

      // optional bool is_participant_judge = 2 [default = true];
      case 2: {
        if (tag == 16) {
         parse_is_participant_judge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_participant_judge_)));
          set_has_is_participant_judge();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_is_must_type;
        break;
      }

      // optional bool is_must_type = 3 [default = true];
      case 3: {
        if (tag == 24) {
         parse_is_must_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_must_type_)));
          set_has_is_must_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_tip_voice;
        break;
      }

      // optional string tip_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_tip_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tip_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tip_voice().data(), this->tip_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicDengGuangMoNiItem.tip_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_pass_voice;
        break;
      }

      // optional string pass_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_pass_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pass_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pass_voice().data(), this->pass_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicDengGuangMoNiItem.pass_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_deduction;
        break;
      }

      // optional int32 deduction = 6;
      case 6: {
        if (tag == 48) {
         parse_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deduction_)));
          set_has_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_time_out;
        break;
      }

      // optional int32 time_out = 7;
      case 7: {
        if (tag == 56) {
         parse_time_out:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_out_)));
          set_has_time_out();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_deduction_voice;
        break;
      }

      // optional string deduction_voice = 8;
      case 8: {
        if (tag == 66) {
         parse_deduction_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deduction_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->deduction_voice().data(), this->deduction_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.BasicDengGuangMoNiItem.deduction_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.BasicDengGuangMoNiItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.BasicDengGuangMoNiItem)
  return false;
#undef DO_
}

void BasicDengGuangMoNiItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.BasicDengGuangMoNiItem)
  // optional .OPMessage.enum_judge_dengguangmoni_type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional bool is_participant_judge = 2 [default = true];
  if (has_is_participant_judge()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_participant_judge(), output);
  }

  // optional bool is_must_type = 3 [default = true];
  if (has_is_must_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_must_type(), output);
  }

  // optional string tip_voice = 4;
  if (has_tip_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tip_voice().data(), this->tip_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicDengGuangMoNiItem.tip_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tip_voice(), output);
  }

  // optional string pass_voice = 5;
  if (has_pass_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pass_voice().data(), this->pass_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicDengGuangMoNiItem.pass_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pass_voice(), output);
  }

  // optional int32 deduction = 6;
  if (has_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->deduction(), output);
  }

  // optional int32 time_out = 7;
  if (has_time_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->time_out(), output);
  }

  // optional string deduction_voice = 8;
  if (has_deduction_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deduction_voice().data(), this->deduction_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicDengGuangMoNiItem.deduction_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->deduction_voice(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.BasicDengGuangMoNiItem)
}

::google::protobuf::uint8* BasicDengGuangMoNiItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.BasicDengGuangMoNiItem)
  // optional .OPMessage.enum_judge_dengguangmoni_type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional bool is_participant_judge = 2 [default = true];
  if (has_is_participant_judge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_participant_judge(), target);
  }

  // optional bool is_must_type = 3 [default = true];
  if (has_is_must_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_must_type(), target);
  }

  // optional string tip_voice = 4;
  if (has_tip_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tip_voice().data(), this->tip_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicDengGuangMoNiItem.tip_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tip_voice(), target);
  }

  // optional string pass_voice = 5;
  if (has_pass_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pass_voice().data(), this->pass_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicDengGuangMoNiItem.pass_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pass_voice(), target);
  }

  // optional int32 deduction = 6;
  if (has_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->deduction(), target);
  }

  // optional int32 time_out = 7;
  if (has_time_out()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->time_out(), target);
  }

  // optional string deduction_voice = 8;
  if (has_deduction_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deduction_voice().data(), this->deduction_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.BasicDengGuangMoNiItem.deduction_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->deduction_voice(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.BasicDengGuangMoNiItem)
  return target;
}

int BasicDengGuangMoNiItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.BasicDengGuangMoNiItem)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .OPMessage.enum_judge_dengguangmoni_type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional bool is_participant_judge = 2 [default = true];
    if (has_is_participant_judge()) {
      total_size += 1 + 1;
    }

    // optional bool is_must_type = 3 [default = true];
    if (has_is_must_type()) {
      total_size += 1 + 1;
    }

    // optional string tip_voice = 4;
    if (has_tip_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tip_voice());
    }

    // optional string pass_voice = 5;
    if (has_pass_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pass_voice());
    }

    // optional int32 deduction = 6;
    if (has_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->deduction());
    }

    // optional int32 time_out = 7;
    if (has_time_out()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time_out());
    }

    // optional string deduction_voice = 8;
    if (has_deduction_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->deduction_voice());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicDengGuangMoNiItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.BasicDengGuangMoNiItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BasicDengGuangMoNiItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicDengGuangMoNiItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.BasicDengGuangMoNiItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.BasicDengGuangMoNiItem)
    MergeFrom(*source);
  }
}

void BasicDengGuangMoNiItem::MergeFrom(const BasicDengGuangMoNiItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.BasicDengGuangMoNiItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_is_participant_judge()) {
      set_is_participant_judge(from.is_participant_judge());
    }
    if (from.has_is_must_type()) {
      set_is_must_type(from.is_must_type());
    }
    if (from.has_tip_voice()) {
      set_has_tip_voice();
      tip_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tip_voice_);
    }
    if (from.has_pass_voice()) {
      set_has_pass_voice();
      pass_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_voice_);
    }
    if (from.has_deduction()) {
      set_deduction(from.deduction());
    }
    if (from.has_time_out()) {
      set_time_out(from.time_out());
    }
    if (from.has_deduction_voice()) {
      set_has_deduction_voice();
      deduction_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deduction_voice_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BasicDengGuangMoNiItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.BasicDengGuangMoNiItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicDengGuangMoNiItem::CopyFrom(const BasicDengGuangMoNiItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.BasicDengGuangMoNiItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicDengGuangMoNiItem::IsInitialized() const {

  return true;
}

void BasicDengGuangMoNiItem::Swap(BasicDengGuangMoNiItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicDengGuangMoNiItem::InternalSwap(BasicDengGuangMoNiItem* other) {
  std::swap(type_, other->type_);
  std::swap(is_participant_judge_, other->is_participant_judge_);
  std::swap(is_must_type_, other->is_must_type_);
  tip_voice_.Swap(&other->tip_voice_);
  pass_voice_.Swap(&other->pass_voice_);
  std::swap(deduction_, other->deduction_);
  std::swap(time_out_, other->time_out_);
  deduction_voice_.Swap(&other->deduction_voice_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicDengGuangMoNiItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BasicDengGuangMoNiItem_descriptor_;
  metadata.reflection = BasicDengGuangMoNiItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BasicDengGuangMoNiItem

// optional .OPMessage.enum_judge_dengguangmoni_type type = 1;
bool BasicDengGuangMoNiItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BasicDengGuangMoNiItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void BasicDengGuangMoNiItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void BasicDengGuangMoNiItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::OPMessage::enum_judge_dengguangmoni_type BasicDengGuangMoNiItem::type() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.type)
  return static_cast< ::OPMessage::enum_judge_dengguangmoni_type >(type_);
}
 void BasicDengGuangMoNiItem::set_type(::OPMessage::enum_judge_dengguangmoni_type value) {
  assert(::OPMessage::enum_judge_dengguangmoni_type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.type)
}

// optional bool is_participant_judge = 2 [default = true];
bool BasicDengGuangMoNiItem::has_is_participant_judge() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BasicDengGuangMoNiItem::set_has_is_participant_judge() {
  _has_bits_[0] |= 0x00000002u;
}
void BasicDengGuangMoNiItem::clear_has_is_participant_judge() {
  _has_bits_[0] &= ~0x00000002u;
}
void BasicDengGuangMoNiItem::clear_is_participant_judge() {
  is_participant_judge_ = true;
  clear_has_is_participant_judge();
}
 bool BasicDengGuangMoNiItem::is_participant_judge() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.is_participant_judge)
  return is_participant_judge_;
}
 void BasicDengGuangMoNiItem::set_is_participant_judge(bool value) {
  set_has_is_participant_judge();
  is_participant_judge_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.is_participant_judge)
}

// optional bool is_must_type = 3 [default = true];
bool BasicDengGuangMoNiItem::has_is_must_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BasicDengGuangMoNiItem::set_has_is_must_type() {
  _has_bits_[0] |= 0x00000004u;
}
void BasicDengGuangMoNiItem::clear_has_is_must_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void BasicDengGuangMoNiItem::clear_is_must_type() {
  is_must_type_ = true;
  clear_has_is_must_type();
}
 bool BasicDengGuangMoNiItem::is_must_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.is_must_type)
  return is_must_type_;
}
 void BasicDengGuangMoNiItem::set_is_must_type(bool value) {
  set_has_is_must_type();
  is_must_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.is_must_type)
}

// optional string tip_voice = 4;
bool BasicDengGuangMoNiItem::has_tip_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BasicDengGuangMoNiItem::set_has_tip_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void BasicDengGuangMoNiItem::clear_has_tip_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void BasicDengGuangMoNiItem::clear_tip_voice() {
  tip_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tip_voice();
}
 const ::std::string& BasicDengGuangMoNiItem::tip_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.tip_voice)
  return tip_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicDengGuangMoNiItem::set_tip_voice(const ::std::string& value) {
  set_has_tip_voice();
  tip_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.tip_voice)
}
 void BasicDengGuangMoNiItem::set_tip_voice(const char* value) {
  set_has_tip_voice();
  tip_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicDengGuangMoNiItem.tip_voice)
}
 void BasicDengGuangMoNiItem::set_tip_voice(const char* value, size_t size) {
  set_has_tip_voice();
  tip_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicDengGuangMoNiItem.tip_voice)
}
 ::std::string* BasicDengGuangMoNiItem::mutable_tip_voice() {
  set_has_tip_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicDengGuangMoNiItem.tip_voice)
  return tip_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicDengGuangMoNiItem::release_tip_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicDengGuangMoNiItem.tip_voice)
  clear_has_tip_voice();
  return tip_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicDengGuangMoNiItem::set_allocated_tip_voice(::std::string* tip_voice) {
  if (tip_voice != NULL) {
    set_has_tip_voice();
  } else {
    clear_has_tip_voice();
  }
  tip_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tip_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicDengGuangMoNiItem.tip_voice)
}

// optional string pass_voice = 5;
bool BasicDengGuangMoNiItem::has_pass_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BasicDengGuangMoNiItem::set_has_pass_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void BasicDengGuangMoNiItem::clear_has_pass_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void BasicDengGuangMoNiItem::clear_pass_voice() {
  pass_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pass_voice();
}
 const ::std::string& BasicDengGuangMoNiItem::pass_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.pass_voice)
  return pass_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicDengGuangMoNiItem::set_pass_voice(const ::std::string& value) {
  set_has_pass_voice();
  pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.pass_voice)
}
 void BasicDengGuangMoNiItem::set_pass_voice(const char* value) {
  set_has_pass_voice();
  pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicDengGuangMoNiItem.pass_voice)
}
 void BasicDengGuangMoNiItem::set_pass_voice(const char* value, size_t size) {
  set_has_pass_voice();
  pass_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicDengGuangMoNiItem.pass_voice)
}
 ::std::string* BasicDengGuangMoNiItem::mutable_pass_voice() {
  set_has_pass_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicDengGuangMoNiItem.pass_voice)
  return pass_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicDengGuangMoNiItem::release_pass_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicDengGuangMoNiItem.pass_voice)
  clear_has_pass_voice();
  return pass_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicDengGuangMoNiItem::set_allocated_pass_voice(::std::string* pass_voice) {
  if (pass_voice != NULL) {
    set_has_pass_voice();
  } else {
    clear_has_pass_voice();
  }
  pass_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicDengGuangMoNiItem.pass_voice)
}

// optional int32 deduction = 6;
bool BasicDengGuangMoNiItem::has_deduction() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BasicDengGuangMoNiItem::set_has_deduction() {
  _has_bits_[0] |= 0x00000020u;
}
void BasicDengGuangMoNiItem::clear_has_deduction() {
  _has_bits_[0] &= ~0x00000020u;
}
void BasicDengGuangMoNiItem::clear_deduction() {
  deduction_ = 0;
  clear_has_deduction();
}
 ::google::protobuf::int32 BasicDengGuangMoNiItem::deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.deduction)
  return deduction_;
}
 void BasicDengGuangMoNiItem::set_deduction(::google::protobuf::int32 value) {
  set_has_deduction();
  deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.deduction)
}

// optional int32 time_out = 7;
bool BasicDengGuangMoNiItem::has_time_out() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BasicDengGuangMoNiItem::set_has_time_out() {
  _has_bits_[0] |= 0x00000040u;
}
void BasicDengGuangMoNiItem::clear_has_time_out() {
  _has_bits_[0] &= ~0x00000040u;
}
void BasicDengGuangMoNiItem::clear_time_out() {
  time_out_ = 0;
  clear_has_time_out();
}
 ::google::protobuf::int32 BasicDengGuangMoNiItem::time_out() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.time_out)
  return time_out_;
}
 void BasicDengGuangMoNiItem::set_time_out(::google::protobuf::int32 value) {
  set_has_time_out();
  time_out_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.time_out)
}

// optional string deduction_voice = 8;
bool BasicDengGuangMoNiItem::has_deduction_voice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void BasicDengGuangMoNiItem::set_has_deduction_voice() {
  _has_bits_[0] |= 0x00000080u;
}
void BasicDengGuangMoNiItem::clear_has_deduction_voice() {
  _has_bits_[0] &= ~0x00000080u;
}
void BasicDengGuangMoNiItem::clear_deduction_voice() {
  deduction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deduction_voice();
}
 const ::std::string& BasicDengGuangMoNiItem::deduction_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
  return deduction_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicDengGuangMoNiItem::set_deduction_voice(const ::std::string& value) {
  set_has_deduction_voice();
  deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
}
 void BasicDengGuangMoNiItem::set_deduction_voice(const char* value) {
  set_has_deduction_voice();
  deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
}
 void BasicDengGuangMoNiItem::set_deduction_voice(const char* value, size_t size) {
  set_has_deduction_voice();
  deduction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
}
 ::std::string* BasicDengGuangMoNiItem::mutable_deduction_voice() {
  set_has_deduction_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
  return deduction_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BasicDengGuangMoNiItem::release_deduction_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
  clear_has_deduction_voice();
  return deduction_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BasicDengGuangMoNiItem::set_allocated_deduction_voice(::std::string* deduction_voice) {
  if (deduction_voice != NULL) {
    set_has_deduction_voice();
  } else {
    clear_has_deduction_voice();
  }
  deduction_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deduction_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.BasicDengGuangMoNiItem.deduction_voice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleDengGuangMoNi::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kMustItemCountFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kNotMustItemCountFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kBasicNightNoLampPoorLightingFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kBasicNightNoLampPoorLightingInCityFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kBasicNightCloseWithCarSameDirectionFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kBasicNightNoLampPoorLightingInSuburbanFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kBasicNightThroughCurveRampBridgeFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kBasicFogDrivingFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kBasicNightPassingInNarrowRoadFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kBasicNightPassingNearly150OtherCarFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kBasicNightCarRoadDownFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kBasicNightThroughNoTrafficSignalRoadFieldNumber;
const int ItemJudgeRuleDengGuangMoNi::kBasicSimulationTestDoneCloseAllLightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleDengGuangMoNi::ItemJudgeRuleDengGuangMoNi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleDengGuangMoNi)
}

void ItemJudgeRuleDengGuangMoNi::InitAsDefaultInstance() {
  basic_night_no_lamp_poor_lighting_ = const_cast< ::OPMessage::BasicDengGuangMoNiItem*>(&::OPMessage::BasicDengGuangMoNiItem::default_instance());
  basic_night_no_lamp_poor_lighting_in_city_ = const_cast< ::OPMessage::BasicDengGuangMoNiItem*>(&::OPMessage::BasicDengGuangMoNiItem::default_instance());
  basic_night_close_with_car_same_direction_ = const_cast< ::OPMessage::BasicDengGuangMoNiItem*>(&::OPMessage::BasicDengGuangMoNiItem::default_instance());
  basic_night_no_lamp_poor_lighting_in_suburban_ = const_cast< ::OPMessage::BasicDengGuangMoNiItem*>(&::OPMessage::BasicDengGuangMoNiItem::default_instance());
  basic_night_through_curve_ramp_bridge_ = const_cast< ::OPMessage::BasicDengGuangMoNiItem*>(&::OPMessage::BasicDengGuangMoNiItem::default_instance());
  basic_fog_driving_ = const_cast< ::OPMessage::BasicDengGuangMoNiItem*>(&::OPMessage::BasicDengGuangMoNiItem::default_instance());
  basic_night_passing_in_narrow_road_ = const_cast< ::OPMessage::BasicDengGuangMoNiItem*>(&::OPMessage::BasicDengGuangMoNiItem::default_instance());
  basic_night_passing_nearly_150_other_car_ = const_cast< ::OPMessage::BasicDengGuangMoNiItem*>(&::OPMessage::BasicDengGuangMoNiItem::default_instance());
  basic_night_car_road_down_ = const_cast< ::OPMessage::BasicDengGuangMoNiItem*>(&::OPMessage::BasicDengGuangMoNiItem::default_instance());
  basic_night_through_no_traffic_signal_road_ = const_cast< ::OPMessage::BasicDengGuangMoNiItem*>(&::OPMessage::BasicDengGuangMoNiItem::default_instance());
  basic_simulation_test_done_close_all_light_ = const_cast< ::OPMessage::BasicDengGuangMoNiItem*>(&::OPMessage::BasicDengGuangMoNiItem::default_instance());
}

ItemJudgeRuleDengGuangMoNi::ItemJudgeRuleDengGuangMoNi(const ItemJudgeRuleDengGuangMoNi& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleDengGuangMoNi)
}

void ItemJudgeRuleDengGuangMoNi::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  must_item_count_ = 0;
  not_must_item_count_ = 0;
  basic_night_no_lamp_poor_lighting_ = NULL;
  basic_night_no_lamp_poor_lighting_in_city_ = NULL;
  basic_night_close_with_car_same_direction_ = NULL;
  basic_night_no_lamp_poor_lighting_in_suburban_ = NULL;
  basic_night_through_curve_ramp_bridge_ = NULL;
  basic_fog_driving_ = NULL;
  basic_night_passing_in_narrow_road_ = NULL;
  basic_night_passing_nearly_150_other_car_ = NULL;
  basic_night_car_road_down_ = NULL;
  basic_night_through_no_traffic_signal_road_ = NULL;
  basic_simulation_test_done_close_all_light_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleDengGuangMoNi::~ItemJudgeRuleDengGuangMoNi() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleDengGuangMoNi)
  SharedDtor();
}

void ItemJudgeRuleDengGuangMoNi::SharedDtor() {
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_night_no_lamp_poor_lighting_;
    delete basic_night_no_lamp_poor_lighting_in_city_;
    delete basic_night_close_with_car_same_direction_;
    delete basic_night_no_lamp_poor_lighting_in_suburban_;
    delete basic_night_through_curve_ramp_bridge_;
    delete basic_fog_driving_;
    delete basic_night_passing_in_narrow_road_;
    delete basic_night_passing_nearly_150_other_car_;
    delete basic_night_car_road_down_;
    delete basic_night_through_no_traffic_signal_road_;
    delete basic_simulation_test_done_close_all_light_;
  }
}

void ItemJudgeRuleDengGuangMoNi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleDengGuangMoNi::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleDengGuangMoNi_descriptor_;
}

const ItemJudgeRuleDengGuangMoNi& ItemJudgeRuleDengGuangMoNi::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleDengGuangMoNi* ItemJudgeRuleDengGuangMoNi::default_instance_ = NULL;

ItemJudgeRuleDengGuangMoNi* ItemJudgeRuleDengGuangMoNi::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleDengGuangMoNi* n = new ItemJudgeRuleDengGuangMoNi;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleDengGuangMoNi::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleDengGuangMoNi)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeRuleDengGuangMoNi, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeRuleDengGuangMoNi*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(must_item_count_, not_must_item_count_);
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_basic_night_no_lamp_poor_lighting()) {
      if (basic_night_no_lamp_poor_lighting_ != NULL) basic_night_no_lamp_poor_lighting_->::OPMessage::BasicDengGuangMoNiItem::Clear();
    }
    if (has_basic_night_no_lamp_poor_lighting_in_city()) {
      if (basic_night_no_lamp_poor_lighting_in_city_ != NULL) basic_night_no_lamp_poor_lighting_in_city_->::OPMessage::BasicDengGuangMoNiItem::Clear();
    }
    if (has_basic_night_close_with_car_same_direction()) {
      if (basic_night_close_with_car_same_direction_ != NULL) basic_night_close_with_car_same_direction_->::OPMessage::BasicDengGuangMoNiItem::Clear();
    }
    if (has_basic_night_no_lamp_poor_lighting_in_suburban()) {
      if (basic_night_no_lamp_poor_lighting_in_suburban_ != NULL) basic_night_no_lamp_poor_lighting_in_suburban_->::OPMessage::BasicDengGuangMoNiItem::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 32512u) {
    if (has_basic_night_through_curve_ramp_bridge()) {
      if (basic_night_through_curve_ramp_bridge_ != NULL) basic_night_through_curve_ramp_bridge_->::OPMessage::BasicDengGuangMoNiItem::Clear();
    }
    if (has_basic_fog_driving()) {
      if (basic_fog_driving_ != NULL) basic_fog_driving_->::OPMessage::BasicDengGuangMoNiItem::Clear();
    }
    if (has_basic_night_passing_in_narrow_road()) {
      if (basic_night_passing_in_narrow_road_ != NULL) basic_night_passing_in_narrow_road_->::OPMessage::BasicDengGuangMoNiItem::Clear();
    }
    if (has_basic_night_passing_nearly_150_other_car()) {
      if (basic_night_passing_nearly_150_other_car_ != NULL) basic_night_passing_nearly_150_other_car_->::OPMessage::BasicDengGuangMoNiItem::Clear();
    }
    if (has_basic_night_car_road_down()) {
      if (basic_night_car_road_down_ != NULL) basic_night_car_road_down_->::OPMessage::BasicDengGuangMoNiItem::Clear();
    }
    if (has_basic_night_through_no_traffic_signal_road()) {
      if (basic_night_through_no_traffic_signal_road_ != NULL) basic_night_through_no_traffic_signal_road_->::OPMessage::BasicDengGuangMoNiItem::Clear();
    }
    if (has_basic_simulation_test_done_close_all_light()) {
      if (basic_simulation_test_done_close_all_light_ != NULL) basic_simulation_test_done_close_all_light_->::OPMessage::BasicDengGuangMoNiItem::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleDengGuangMoNi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleDengGuangMoNi)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_start_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_must_item_count;
        break;
      }

      // optional int32 must_item_count = 3;
      case 3: {
        if (tag == 24) {
         parse_must_item_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &must_item_count_)));
          set_has_must_item_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_not_must_item_count;
        break;
      }

      // optional int32 not_must_item_count = 4;
      case 4: {
        if (tag == 32) {
         parse_not_must_item_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &not_must_item_count_)));
          set_has_not_must_item_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_basic_night_no_lamp_poor_lighting;
        break;
      }

      // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting = 5;
      case 5: {
        if (tag == 42) {
         parse_basic_night_no_lamp_poor_lighting:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_night_no_lamp_poor_lighting()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_basic_night_no_lamp_poor_lighting_in_city;
        break;
      }

      // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_city = 6;
      case 6: {
        if (tag == 50) {
         parse_basic_night_no_lamp_poor_lighting_in_city:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_night_no_lamp_poor_lighting_in_city()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_basic_night_close_with_car_same_direction;
        break;
      }

      // optional .OPMessage.BasicDengGuangMoNiItem basic_night_close_with_car_same_direction = 7;
      case 7: {
        if (tag == 58) {
         parse_basic_night_close_with_car_same_direction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_night_close_with_car_same_direction()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_basic_night_no_lamp_poor_lighting_in_suburban;
        break;
      }

      // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_suburban = 8;
      case 8: {
        if (tag == 66) {
         parse_basic_night_no_lamp_poor_lighting_in_suburban:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_night_no_lamp_poor_lighting_in_suburban()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_basic_night_through_curve_ramp_bridge;
        break;
      }

      // optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_curve_ramp_bridge = 9;
      case 9: {
        if (tag == 74) {
         parse_basic_night_through_curve_ramp_bridge:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_night_through_curve_ramp_bridge()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_basic_fog_driving;
        break;
      }

      // optional .OPMessage.BasicDengGuangMoNiItem basic_fog_driving = 10;
      case 10: {
        if (tag == 82) {
         parse_basic_fog_driving:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_fog_driving()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_basic_night_passing_in_narrow_road;
        break;
      }

      // optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_in_narrow_road = 11;
      case 11: {
        if (tag == 90) {
         parse_basic_night_passing_in_narrow_road:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_night_passing_in_narrow_road()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_basic_night_passing_nearly_150_other_car;
        break;
      }

      // optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_nearly_150_other_car = 12;
      case 12: {
        if (tag == 98) {
         parse_basic_night_passing_nearly_150_other_car:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_night_passing_nearly_150_other_car()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_basic_night_car_road_down;
        break;
      }

      // optional .OPMessage.BasicDengGuangMoNiItem basic_night_car_road_down = 13;
      case 13: {
        if (tag == 106) {
         parse_basic_night_car_road_down:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_night_car_road_down()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_basic_night_through_no_traffic_signal_road;
        break;
      }

      // optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_no_traffic_signal_road = 14;
      case 14: {
        if (tag == 114) {
         parse_basic_night_through_no_traffic_signal_road:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_night_through_no_traffic_signal_road()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_basic_simulation_test_done_close_all_light;
        break;
      }

      // optional .OPMessage.BasicDengGuangMoNiItem basic_simulation_test_done_close_all_light = 15;
      case 15: {
        if (tag == 122) {
         parse_basic_simulation_test_done_close_all_light:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_simulation_test_done_close_all_light()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleDengGuangMoNi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleDengGuangMoNi)
  return false;
#undef DO_
}

void ItemJudgeRuleDengGuangMoNi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleDengGuangMoNi)
  // optional string item_start_voice = 1;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 2;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_end_voice(), output);
  }

  // optional int32 must_item_count = 3;
  if (has_must_item_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->must_item_count(), output);
  }

  // optional int32 not_must_item_count = 4;
  if (has_not_must_item_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->not_must_item_count(), output);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting = 5;
  if (has_basic_night_no_lamp_poor_lighting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->basic_night_no_lamp_poor_lighting_, output);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_city = 6;
  if (has_basic_night_no_lamp_poor_lighting_in_city()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->basic_night_no_lamp_poor_lighting_in_city_, output);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_close_with_car_same_direction = 7;
  if (has_basic_night_close_with_car_same_direction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->basic_night_close_with_car_same_direction_, output);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_suburban = 8;
  if (has_basic_night_no_lamp_poor_lighting_in_suburban()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->basic_night_no_lamp_poor_lighting_in_suburban_, output);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_curve_ramp_bridge = 9;
  if (has_basic_night_through_curve_ramp_bridge()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->basic_night_through_curve_ramp_bridge_, output);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_fog_driving = 10;
  if (has_basic_fog_driving()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->basic_fog_driving_, output);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_in_narrow_road = 11;
  if (has_basic_night_passing_in_narrow_road()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->basic_night_passing_in_narrow_road_, output);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_nearly_150_other_car = 12;
  if (has_basic_night_passing_nearly_150_other_car()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->basic_night_passing_nearly_150_other_car_, output);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_car_road_down = 13;
  if (has_basic_night_car_road_down()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->basic_night_car_road_down_, output);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_no_traffic_signal_road = 14;
  if (has_basic_night_through_no_traffic_signal_road()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->basic_night_through_no_traffic_signal_road_, output);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_simulation_test_done_close_all_light = 15;
  if (has_basic_simulation_test_done_close_all_light()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->basic_simulation_test_done_close_all_light_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleDengGuangMoNi)
}

::google::protobuf::uint8* ItemJudgeRuleDengGuangMoNi::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleDengGuangMoNi)
  // optional string item_start_voice = 1;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 2;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_end_voice(), target);
  }

  // optional int32 must_item_count = 3;
  if (has_must_item_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->must_item_count(), target);
  }

  // optional int32 not_must_item_count = 4;
  if (has_not_must_item_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->not_must_item_count(), target);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting = 5;
  if (has_basic_night_no_lamp_poor_lighting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->basic_night_no_lamp_poor_lighting_, false, target);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_city = 6;
  if (has_basic_night_no_lamp_poor_lighting_in_city()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->basic_night_no_lamp_poor_lighting_in_city_, false, target);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_close_with_car_same_direction = 7;
  if (has_basic_night_close_with_car_same_direction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->basic_night_close_with_car_same_direction_, false, target);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_suburban = 8;
  if (has_basic_night_no_lamp_poor_lighting_in_suburban()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->basic_night_no_lamp_poor_lighting_in_suburban_, false, target);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_curve_ramp_bridge = 9;
  if (has_basic_night_through_curve_ramp_bridge()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->basic_night_through_curve_ramp_bridge_, false, target);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_fog_driving = 10;
  if (has_basic_fog_driving()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->basic_fog_driving_, false, target);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_in_narrow_road = 11;
  if (has_basic_night_passing_in_narrow_road()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->basic_night_passing_in_narrow_road_, false, target);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_nearly_150_other_car = 12;
  if (has_basic_night_passing_nearly_150_other_car()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->basic_night_passing_nearly_150_other_car_, false, target);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_car_road_down = 13;
  if (has_basic_night_car_road_down()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->basic_night_car_road_down_, false, target);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_no_traffic_signal_road = 14;
  if (has_basic_night_through_no_traffic_signal_road()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->basic_night_through_no_traffic_signal_road_, false, target);
  }

  // optional .OPMessage.BasicDengGuangMoNiItem basic_simulation_test_done_close_all_light = 15;
  if (has_basic_simulation_test_done_close_all_light()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->basic_simulation_test_done_close_all_light_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleDengGuangMoNi)
  return target;
}

int ItemJudgeRuleDengGuangMoNi::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleDengGuangMoNi)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string item_start_voice = 1;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 2;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional int32 must_item_count = 3;
    if (has_must_item_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->must_item_count());
    }

    // optional int32 not_must_item_count = 4;
    if (has_not_must_item_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->not_must_item_count());
    }

    // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting = 5;
    if (has_basic_night_no_lamp_poor_lighting()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_night_no_lamp_poor_lighting_);
    }

    // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_city = 6;
    if (has_basic_night_no_lamp_poor_lighting_in_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_night_no_lamp_poor_lighting_in_city_);
    }

    // optional .OPMessage.BasicDengGuangMoNiItem basic_night_close_with_car_same_direction = 7;
    if (has_basic_night_close_with_car_same_direction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_night_close_with_car_same_direction_);
    }

    // optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_suburban = 8;
    if (has_basic_night_no_lamp_poor_lighting_in_suburban()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_night_no_lamp_poor_lighting_in_suburban_);
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_curve_ramp_bridge = 9;
    if (has_basic_night_through_curve_ramp_bridge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_night_through_curve_ramp_bridge_);
    }

    // optional .OPMessage.BasicDengGuangMoNiItem basic_fog_driving = 10;
    if (has_basic_fog_driving()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_fog_driving_);
    }

    // optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_in_narrow_road = 11;
    if (has_basic_night_passing_in_narrow_road()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_night_passing_in_narrow_road_);
    }

    // optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_nearly_150_other_car = 12;
    if (has_basic_night_passing_nearly_150_other_car()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_night_passing_nearly_150_other_car_);
    }

    // optional .OPMessage.BasicDengGuangMoNiItem basic_night_car_road_down = 13;
    if (has_basic_night_car_road_down()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_night_car_road_down_);
    }

    // optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_no_traffic_signal_road = 14;
    if (has_basic_night_through_no_traffic_signal_road()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_night_through_no_traffic_signal_road_);
    }

    // optional .OPMessage.BasicDengGuangMoNiItem basic_simulation_test_done_close_all_light = 15;
    if (has_basic_simulation_test_done_close_all_light()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_simulation_test_done_close_all_light_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleDengGuangMoNi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleDengGuangMoNi)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleDengGuangMoNi* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleDengGuangMoNi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleDengGuangMoNi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleDengGuangMoNi)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleDengGuangMoNi::MergeFrom(const ItemJudgeRuleDengGuangMoNi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleDengGuangMoNi)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_must_item_count()) {
      set_must_item_count(from.must_item_count());
    }
    if (from.has_not_must_item_count()) {
      set_not_must_item_count(from.not_must_item_count());
    }
    if (from.has_basic_night_no_lamp_poor_lighting()) {
      mutable_basic_night_no_lamp_poor_lighting()->::OPMessage::BasicDengGuangMoNiItem::MergeFrom(from.basic_night_no_lamp_poor_lighting());
    }
    if (from.has_basic_night_no_lamp_poor_lighting_in_city()) {
      mutable_basic_night_no_lamp_poor_lighting_in_city()->::OPMessage::BasicDengGuangMoNiItem::MergeFrom(from.basic_night_no_lamp_poor_lighting_in_city());
    }
    if (from.has_basic_night_close_with_car_same_direction()) {
      mutable_basic_night_close_with_car_same_direction()->::OPMessage::BasicDengGuangMoNiItem::MergeFrom(from.basic_night_close_with_car_same_direction());
    }
    if (from.has_basic_night_no_lamp_poor_lighting_in_suburban()) {
      mutable_basic_night_no_lamp_poor_lighting_in_suburban()->::OPMessage::BasicDengGuangMoNiItem::MergeFrom(from.basic_night_no_lamp_poor_lighting_in_suburban());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_basic_night_through_curve_ramp_bridge()) {
      mutable_basic_night_through_curve_ramp_bridge()->::OPMessage::BasicDengGuangMoNiItem::MergeFrom(from.basic_night_through_curve_ramp_bridge());
    }
    if (from.has_basic_fog_driving()) {
      mutable_basic_fog_driving()->::OPMessage::BasicDengGuangMoNiItem::MergeFrom(from.basic_fog_driving());
    }
    if (from.has_basic_night_passing_in_narrow_road()) {
      mutable_basic_night_passing_in_narrow_road()->::OPMessage::BasicDengGuangMoNiItem::MergeFrom(from.basic_night_passing_in_narrow_road());
    }
    if (from.has_basic_night_passing_nearly_150_other_car()) {
      mutable_basic_night_passing_nearly_150_other_car()->::OPMessage::BasicDengGuangMoNiItem::MergeFrom(from.basic_night_passing_nearly_150_other_car());
    }
    if (from.has_basic_night_car_road_down()) {
      mutable_basic_night_car_road_down()->::OPMessage::BasicDengGuangMoNiItem::MergeFrom(from.basic_night_car_road_down());
    }
    if (from.has_basic_night_through_no_traffic_signal_road()) {
      mutable_basic_night_through_no_traffic_signal_road()->::OPMessage::BasicDengGuangMoNiItem::MergeFrom(from.basic_night_through_no_traffic_signal_road());
    }
    if (from.has_basic_simulation_test_done_close_all_light()) {
      mutable_basic_simulation_test_done_close_all_light()->::OPMessage::BasicDengGuangMoNiItem::MergeFrom(from.basic_simulation_test_done_close_all_light());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleDengGuangMoNi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleDengGuangMoNi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleDengGuangMoNi::CopyFrom(const ItemJudgeRuleDengGuangMoNi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleDengGuangMoNi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleDengGuangMoNi::IsInitialized() const {

  return true;
}

void ItemJudgeRuleDengGuangMoNi::Swap(ItemJudgeRuleDengGuangMoNi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleDengGuangMoNi::InternalSwap(ItemJudgeRuleDengGuangMoNi* other) {
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(must_item_count_, other->must_item_count_);
  std::swap(not_must_item_count_, other->not_must_item_count_);
  std::swap(basic_night_no_lamp_poor_lighting_, other->basic_night_no_lamp_poor_lighting_);
  std::swap(basic_night_no_lamp_poor_lighting_in_city_, other->basic_night_no_lamp_poor_lighting_in_city_);
  std::swap(basic_night_close_with_car_same_direction_, other->basic_night_close_with_car_same_direction_);
  std::swap(basic_night_no_lamp_poor_lighting_in_suburban_, other->basic_night_no_lamp_poor_lighting_in_suburban_);
  std::swap(basic_night_through_curve_ramp_bridge_, other->basic_night_through_curve_ramp_bridge_);
  std::swap(basic_fog_driving_, other->basic_fog_driving_);
  std::swap(basic_night_passing_in_narrow_road_, other->basic_night_passing_in_narrow_road_);
  std::swap(basic_night_passing_nearly_150_other_car_, other->basic_night_passing_nearly_150_other_car_);
  std::swap(basic_night_car_road_down_, other->basic_night_car_road_down_);
  std::swap(basic_night_through_no_traffic_signal_road_, other->basic_night_through_no_traffic_signal_road_);
  std::swap(basic_simulation_test_done_close_all_light_, other->basic_simulation_test_done_close_all_light_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleDengGuangMoNi::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleDengGuangMoNi_descriptor_;
  metadata.reflection = ItemJudgeRuleDengGuangMoNi_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleDengGuangMoNi

// optional string item_start_voice = 1;
bool ItemJudgeRuleDengGuangMoNi::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleDengGuangMoNi::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleDengGuangMoNi::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDengGuangMoNi::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
}
 void ItemJudgeRuleDengGuangMoNi::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
}
 void ItemJudgeRuleDengGuangMoNi::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
}
 ::std::string* ItemJudgeRuleDengGuangMoNi::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDengGuangMoNi::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDengGuangMoNi::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.item_start_voice)
}

// optional string item_end_voice = 2;
bool ItemJudgeRuleDengGuangMoNi::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleDengGuangMoNi::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleDengGuangMoNi::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDengGuangMoNi::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
}
 void ItemJudgeRuleDengGuangMoNi::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
}
 void ItemJudgeRuleDengGuangMoNi::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
}
 ::std::string* ItemJudgeRuleDengGuangMoNi::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDengGuangMoNi::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDengGuangMoNi::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.item_end_voice)
}

// optional int32 must_item_count = 3;
bool ItemJudgeRuleDengGuangMoNi::has_must_item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_must_item_count() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_must_item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleDengGuangMoNi::clear_must_item_count() {
  must_item_count_ = 0;
  clear_has_must_item_count();
}
 ::google::protobuf::int32 ItemJudgeRuleDengGuangMoNi::must_item_count() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.must_item_count)
  return must_item_count_;
}
 void ItemJudgeRuleDengGuangMoNi::set_must_item_count(::google::protobuf::int32 value) {
  set_has_must_item_count();
  must_item_count_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDengGuangMoNi.must_item_count)
}

// optional int32 not_must_item_count = 4;
bool ItemJudgeRuleDengGuangMoNi::has_not_must_item_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_not_must_item_count() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_not_must_item_count() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleDengGuangMoNi::clear_not_must_item_count() {
  not_must_item_count_ = 0;
  clear_has_not_must_item_count();
}
 ::google::protobuf::int32 ItemJudgeRuleDengGuangMoNi::not_must_item_count() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.not_must_item_count)
  return not_must_item_count_;
}
 void ItemJudgeRuleDengGuangMoNi::set_not_must_item_count(::google::protobuf::int32 value) {
  set_has_not_must_item_count();
  not_must_item_count_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDengGuangMoNi.not_must_item_count)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting = 5;
bool ItemJudgeRuleDengGuangMoNi::has_basic_night_no_lamp_poor_lighting() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_no_lamp_poor_lighting() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_no_lamp_poor_lighting() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleDengGuangMoNi::clear_basic_night_no_lamp_poor_lighting() {
  if (basic_night_no_lamp_poor_lighting_ != NULL) basic_night_no_lamp_poor_lighting_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_no_lamp_poor_lighting();
}
const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_no_lamp_poor_lighting() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting)
  return basic_night_no_lamp_poor_lighting_ != NULL ? *basic_night_no_lamp_poor_lighting_ : *default_instance_->basic_night_no_lamp_poor_lighting_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_no_lamp_poor_lighting() {
  set_has_basic_night_no_lamp_poor_lighting();
  if (basic_night_no_lamp_poor_lighting_ == NULL) {
    basic_night_no_lamp_poor_lighting_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting)
  return basic_night_no_lamp_poor_lighting_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_no_lamp_poor_lighting() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting)
  clear_has_basic_night_no_lamp_poor_lighting();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_no_lamp_poor_lighting_;
  basic_night_no_lamp_poor_lighting_ = NULL;
  return temp;
}
void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_no_lamp_poor_lighting(::OPMessage::BasicDengGuangMoNiItem* basic_night_no_lamp_poor_lighting) {
  delete basic_night_no_lamp_poor_lighting_;
  basic_night_no_lamp_poor_lighting_ = basic_night_no_lamp_poor_lighting;
  if (basic_night_no_lamp_poor_lighting) {
    set_has_basic_night_no_lamp_poor_lighting();
  } else {
    clear_has_basic_night_no_lamp_poor_lighting();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_city = 6;
bool ItemJudgeRuleDengGuangMoNi::has_basic_night_no_lamp_poor_lighting_in_city() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_no_lamp_poor_lighting_in_city() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_no_lamp_poor_lighting_in_city() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleDengGuangMoNi::clear_basic_night_no_lamp_poor_lighting_in_city() {
  if (basic_night_no_lamp_poor_lighting_in_city_ != NULL) basic_night_no_lamp_poor_lighting_in_city_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_no_lamp_poor_lighting_in_city();
}
const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_no_lamp_poor_lighting_in_city() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_city)
  return basic_night_no_lamp_poor_lighting_in_city_ != NULL ? *basic_night_no_lamp_poor_lighting_in_city_ : *default_instance_->basic_night_no_lamp_poor_lighting_in_city_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_no_lamp_poor_lighting_in_city() {
  set_has_basic_night_no_lamp_poor_lighting_in_city();
  if (basic_night_no_lamp_poor_lighting_in_city_ == NULL) {
    basic_night_no_lamp_poor_lighting_in_city_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_city)
  return basic_night_no_lamp_poor_lighting_in_city_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_no_lamp_poor_lighting_in_city() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_city)
  clear_has_basic_night_no_lamp_poor_lighting_in_city();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_no_lamp_poor_lighting_in_city_;
  basic_night_no_lamp_poor_lighting_in_city_ = NULL;
  return temp;
}
void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_no_lamp_poor_lighting_in_city(::OPMessage::BasicDengGuangMoNiItem* basic_night_no_lamp_poor_lighting_in_city) {
  delete basic_night_no_lamp_poor_lighting_in_city_;
  basic_night_no_lamp_poor_lighting_in_city_ = basic_night_no_lamp_poor_lighting_in_city;
  if (basic_night_no_lamp_poor_lighting_in_city) {
    set_has_basic_night_no_lamp_poor_lighting_in_city();
  } else {
    clear_has_basic_night_no_lamp_poor_lighting_in_city();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_city)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_close_with_car_same_direction = 7;
bool ItemJudgeRuleDengGuangMoNi::has_basic_night_close_with_car_same_direction() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_close_with_car_same_direction() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_close_with_car_same_direction() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleDengGuangMoNi::clear_basic_night_close_with_car_same_direction() {
  if (basic_night_close_with_car_same_direction_ != NULL) basic_night_close_with_car_same_direction_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_close_with_car_same_direction();
}
const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_close_with_car_same_direction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_close_with_car_same_direction)
  return basic_night_close_with_car_same_direction_ != NULL ? *basic_night_close_with_car_same_direction_ : *default_instance_->basic_night_close_with_car_same_direction_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_close_with_car_same_direction() {
  set_has_basic_night_close_with_car_same_direction();
  if (basic_night_close_with_car_same_direction_ == NULL) {
    basic_night_close_with_car_same_direction_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_close_with_car_same_direction)
  return basic_night_close_with_car_same_direction_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_close_with_car_same_direction() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_close_with_car_same_direction)
  clear_has_basic_night_close_with_car_same_direction();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_close_with_car_same_direction_;
  basic_night_close_with_car_same_direction_ = NULL;
  return temp;
}
void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_close_with_car_same_direction(::OPMessage::BasicDengGuangMoNiItem* basic_night_close_with_car_same_direction) {
  delete basic_night_close_with_car_same_direction_;
  basic_night_close_with_car_same_direction_ = basic_night_close_with_car_same_direction;
  if (basic_night_close_with_car_same_direction) {
    set_has_basic_night_close_with_car_same_direction();
  } else {
    clear_has_basic_night_close_with_car_same_direction();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_close_with_car_same_direction)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_no_lamp_poor_lighting_in_suburban = 8;
bool ItemJudgeRuleDengGuangMoNi::has_basic_night_no_lamp_poor_lighting_in_suburban() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_no_lamp_poor_lighting_in_suburban() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_no_lamp_poor_lighting_in_suburban() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeRuleDengGuangMoNi::clear_basic_night_no_lamp_poor_lighting_in_suburban() {
  if (basic_night_no_lamp_poor_lighting_in_suburban_ != NULL) basic_night_no_lamp_poor_lighting_in_suburban_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_no_lamp_poor_lighting_in_suburban();
}
const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_no_lamp_poor_lighting_in_suburban() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_suburban)
  return basic_night_no_lamp_poor_lighting_in_suburban_ != NULL ? *basic_night_no_lamp_poor_lighting_in_suburban_ : *default_instance_->basic_night_no_lamp_poor_lighting_in_suburban_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_no_lamp_poor_lighting_in_suburban() {
  set_has_basic_night_no_lamp_poor_lighting_in_suburban();
  if (basic_night_no_lamp_poor_lighting_in_suburban_ == NULL) {
    basic_night_no_lamp_poor_lighting_in_suburban_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_suburban)
  return basic_night_no_lamp_poor_lighting_in_suburban_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_no_lamp_poor_lighting_in_suburban() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_suburban)
  clear_has_basic_night_no_lamp_poor_lighting_in_suburban();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_no_lamp_poor_lighting_in_suburban_;
  basic_night_no_lamp_poor_lighting_in_suburban_ = NULL;
  return temp;
}
void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_no_lamp_poor_lighting_in_suburban(::OPMessage::BasicDengGuangMoNiItem* basic_night_no_lamp_poor_lighting_in_suburban) {
  delete basic_night_no_lamp_poor_lighting_in_suburban_;
  basic_night_no_lamp_poor_lighting_in_suburban_ = basic_night_no_lamp_poor_lighting_in_suburban;
  if (basic_night_no_lamp_poor_lighting_in_suburban) {
    set_has_basic_night_no_lamp_poor_lighting_in_suburban();
  } else {
    clear_has_basic_night_no_lamp_poor_lighting_in_suburban();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_no_lamp_poor_lighting_in_suburban)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_curve_ramp_bridge = 9;
bool ItemJudgeRuleDengGuangMoNi::has_basic_night_through_curve_ramp_bridge() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_through_curve_ramp_bridge() {
  _has_bits_[0] |= 0x00000100u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_through_curve_ramp_bridge() {
  _has_bits_[0] &= ~0x00000100u;
}
void ItemJudgeRuleDengGuangMoNi::clear_basic_night_through_curve_ramp_bridge() {
  if (basic_night_through_curve_ramp_bridge_ != NULL) basic_night_through_curve_ramp_bridge_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_through_curve_ramp_bridge();
}
const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_through_curve_ramp_bridge() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_curve_ramp_bridge)
  return basic_night_through_curve_ramp_bridge_ != NULL ? *basic_night_through_curve_ramp_bridge_ : *default_instance_->basic_night_through_curve_ramp_bridge_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_through_curve_ramp_bridge() {
  set_has_basic_night_through_curve_ramp_bridge();
  if (basic_night_through_curve_ramp_bridge_ == NULL) {
    basic_night_through_curve_ramp_bridge_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_curve_ramp_bridge)
  return basic_night_through_curve_ramp_bridge_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_through_curve_ramp_bridge() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_curve_ramp_bridge)
  clear_has_basic_night_through_curve_ramp_bridge();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_through_curve_ramp_bridge_;
  basic_night_through_curve_ramp_bridge_ = NULL;
  return temp;
}
void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_through_curve_ramp_bridge(::OPMessage::BasicDengGuangMoNiItem* basic_night_through_curve_ramp_bridge) {
  delete basic_night_through_curve_ramp_bridge_;
  basic_night_through_curve_ramp_bridge_ = basic_night_through_curve_ramp_bridge;
  if (basic_night_through_curve_ramp_bridge) {
    set_has_basic_night_through_curve_ramp_bridge();
  } else {
    clear_has_basic_night_through_curve_ramp_bridge();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_curve_ramp_bridge)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_fog_driving = 10;
bool ItemJudgeRuleDengGuangMoNi::has_basic_fog_driving() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_basic_fog_driving() {
  _has_bits_[0] |= 0x00000200u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_basic_fog_driving() {
  _has_bits_[0] &= ~0x00000200u;
}
void ItemJudgeRuleDengGuangMoNi::clear_basic_fog_driving() {
  if (basic_fog_driving_ != NULL) basic_fog_driving_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_fog_driving();
}
const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_fog_driving() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_fog_driving)
  return basic_fog_driving_ != NULL ? *basic_fog_driving_ : *default_instance_->basic_fog_driving_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_fog_driving() {
  set_has_basic_fog_driving();
  if (basic_fog_driving_ == NULL) {
    basic_fog_driving_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_fog_driving)
  return basic_fog_driving_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_fog_driving() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_fog_driving)
  clear_has_basic_fog_driving();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_fog_driving_;
  basic_fog_driving_ = NULL;
  return temp;
}
void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_fog_driving(::OPMessage::BasicDengGuangMoNiItem* basic_fog_driving) {
  delete basic_fog_driving_;
  basic_fog_driving_ = basic_fog_driving;
  if (basic_fog_driving) {
    set_has_basic_fog_driving();
  } else {
    clear_has_basic_fog_driving();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_fog_driving)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_in_narrow_road = 11;
bool ItemJudgeRuleDengGuangMoNi::has_basic_night_passing_in_narrow_road() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_passing_in_narrow_road() {
  _has_bits_[0] |= 0x00000400u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_passing_in_narrow_road() {
  _has_bits_[0] &= ~0x00000400u;
}
void ItemJudgeRuleDengGuangMoNi::clear_basic_night_passing_in_narrow_road() {
  if (basic_night_passing_in_narrow_road_ != NULL) basic_night_passing_in_narrow_road_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_passing_in_narrow_road();
}
const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_passing_in_narrow_road() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_in_narrow_road)
  return basic_night_passing_in_narrow_road_ != NULL ? *basic_night_passing_in_narrow_road_ : *default_instance_->basic_night_passing_in_narrow_road_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_passing_in_narrow_road() {
  set_has_basic_night_passing_in_narrow_road();
  if (basic_night_passing_in_narrow_road_ == NULL) {
    basic_night_passing_in_narrow_road_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_in_narrow_road)
  return basic_night_passing_in_narrow_road_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_passing_in_narrow_road() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_in_narrow_road)
  clear_has_basic_night_passing_in_narrow_road();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_passing_in_narrow_road_;
  basic_night_passing_in_narrow_road_ = NULL;
  return temp;
}
void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_passing_in_narrow_road(::OPMessage::BasicDengGuangMoNiItem* basic_night_passing_in_narrow_road) {
  delete basic_night_passing_in_narrow_road_;
  basic_night_passing_in_narrow_road_ = basic_night_passing_in_narrow_road;
  if (basic_night_passing_in_narrow_road) {
    set_has_basic_night_passing_in_narrow_road();
  } else {
    clear_has_basic_night_passing_in_narrow_road();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_in_narrow_road)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_passing_nearly_150_other_car = 12;
bool ItemJudgeRuleDengGuangMoNi::has_basic_night_passing_nearly_150_other_car() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_passing_nearly_150_other_car() {
  _has_bits_[0] |= 0x00000800u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_passing_nearly_150_other_car() {
  _has_bits_[0] &= ~0x00000800u;
}
void ItemJudgeRuleDengGuangMoNi::clear_basic_night_passing_nearly_150_other_car() {
  if (basic_night_passing_nearly_150_other_car_ != NULL) basic_night_passing_nearly_150_other_car_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_passing_nearly_150_other_car();
}
const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_passing_nearly_150_other_car() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_nearly_150_other_car)
  return basic_night_passing_nearly_150_other_car_ != NULL ? *basic_night_passing_nearly_150_other_car_ : *default_instance_->basic_night_passing_nearly_150_other_car_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_passing_nearly_150_other_car() {
  set_has_basic_night_passing_nearly_150_other_car();
  if (basic_night_passing_nearly_150_other_car_ == NULL) {
    basic_night_passing_nearly_150_other_car_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_nearly_150_other_car)
  return basic_night_passing_nearly_150_other_car_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_passing_nearly_150_other_car() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_nearly_150_other_car)
  clear_has_basic_night_passing_nearly_150_other_car();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_passing_nearly_150_other_car_;
  basic_night_passing_nearly_150_other_car_ = NULL;
  return temp;
}
void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_passing_nearly_150_other_car(::OPMessage::BasicDengGuangMoNiItem* basic_night_passing_nearly_150_other_car) {
  delete basic_night_passing_nearly_150_other_car_;
  basic_night_passing_nearly_150_other_car_ = basic_night_passing_nearly_150_other_car;
  if (basic_night_passing_nearly_150_other_car) {
    set_has_basic_night_passing_nearly_150_other_car();
  } else {
    clear_has_basic_night_passing_nearly_150_other_car();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_passing_nearly_150_other_car)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_car_road_down = 13;
bool ItemJudgeRuleDengGuangMoNi::has_basic_night_car_road_down() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_car_road_down() {
  _has_bits_[0] |= 0x00001000u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_car_road_down() {
  _has_bits_[0] &= ~0x00001000u;
}
void ItemJudgeRuleDengGuangMoNi::clear_basic_night_car_road_down() {
  if (basic_night_car_road_down_ != NULL) basic_night_car_road_down_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_car_road_down();
}
const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_car_road_down() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_car_road_down)
  return basic_night_car_road_down_ != NULL ? *basic_night_car_road_down_ : *default_instance_->basic_night_car_road_down_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_car_road_down() {
  set_has_basic_night_car_road_down();
  if (basic_night_car_road_down_ == NULL) {
    basic_night_car_road_down_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_car_road_down)
  return basic_night_car_road_down_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_car_road_down() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_car_road_down)
  clear_has_basic_night_car_road_down();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_car_road_down_;
  basic_night_car_road_down_ = NULL;
  return temp;
}
void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_car_road_down(::OPMessage::BasicDengGuangMoNiItem* basic_night_car_road_down) {
  delete basic_night_car_road_down_;
  basic_night_car_road_down_ = basic_night_car_road_down;
  if (basic_night_car_road_down) {
    set_has_basic_night_car_road_down();
  } else {
    clear_has_basic_night_car_road_down();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_car_road_down)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_night_through_no_traffic_signal_road = 14;
bool ItemJudgeRuleDengGuangMoNi::has_basic_night_through_no_traffic_signal_road() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_basic_night_through_no_traffic_signal_road() {
  _has_bits_[0] |= 0x00002000u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_basic_night_through_no_traffic_signal_road() {
  _has_bits_[0] &= ~0x00002000u;
}
void ItemJudgeRuleDengGuangMoNi::clear_basic_night_through_no_traffic_signal_road() {
  if (basic_night_through_no_traffic_signal_road_ != NULL) basic_night_through_no_traffic_signal_road_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_night_through_no_traffic_signal_road();
}
const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_night_through_no_traffic_signal_road() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_no_traffic_signal_road)
  return basic_night_through_no_traffic_signal_road_ != NULL ? *basic_night_through_no_traffic_signal_road_ : *default_instance_->basic_night_through_no_traffic_signal_road_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_night_through_no_traffic_signal_road() {
  set_has_basic_night_through_no_traffic_signal_road();
  if (basic_night_through_no_traffic_signal_road_ == NULL) {
    basic_night_through_no_traffic_signal_road_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_no_traffic_signal_road)
  return basic_night_through_no_traffic_signal_road_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_night_through_no_traffic_signal_road() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_no_traffic_signal_road)
  clear_has_basic_night_through_no_traffic_signal_road();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_night_through_no_traffic_signal_road_;
  basic_night_through_no_traffic_signal_road_ = NULL;
  return temp;
}
void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_night_through_no_traffic_signal_road(::OPMessage::BasicDengGuangMoNiItem* basic_night_through_no_traffic_signal_road) {
  delete basic_night_through_no_traffic_signal_road_;
  basic_night_through_no_traffic_signal_road_ = basic_night_through_no_traffic_signal_road;
  if (basic_night_through_no_traffic_signal_road) {
    set_has_basic_night_through_no_traffic_signal_road();
  } else {
    clear_has_basic_night_through_no_traffic_signal_road();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_night_through_no_traffic_signal_road)
}

// optional .OPMessage.BasicDengGuangMoNiItem basic_simulation_test_done_close_all_light = 15;
bool ItemJudgeRuleDengGuangMoNi::has_basic_simulation_test_done_close_all_light() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void ItemJudgeRuleDengGuangMoNi::set_has_basic_simulation_test_done_close_all_light() {
  _has_bits_[0] |= 0x00004000u;
}
void ItemJudgeRuleDengGuangMoNi::clear_has_basic_simulation_test_done_close_all_light() {
  _has_bits_[0] &= ~0x00004000u;
}
void ItemJudgeRuleDengGuangMoNi::clear_basic_simulation_test_done_close_all_light() {
  if (basic_simulation_test_done_close_all_light_ != NULL) basic_simulation_test_done_close_all_light_->::OPMessage::BasicDengGuangMoNiItem::Clear();
  clear_has_basic_simulation_test_done_close_all_light();
}
const ::OPMessage::BasicDengGuangMoNiItem& ItemJudgeRuleDengGuangMoNi::basic_simulation_test_done_close_all_light() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_simulation_test_done_close_all_light)
  return basic_simulation_test_done_close_all_light_ != NULL ? *basic_simulation_test_done_close_all_light_ : *default_instance_->basic_simulation_test_done_close_all_light_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::mutable_basic_simulation_test_done_close_all_light() {
  set_has_basic_simulation_test_done_close_all_light();
  if (basic_simulation_test_done_close_all_light_ == NULL) {
    basic_simulation_test_done_close_all_light_ = new ::OPMessage::BasicDengGuangMoNiItem;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_simulation_test_done_close_all_light)
  return basic_simulation_test_done_close_all_light_;
}
::OPMessage::BasicDengGuangMoNiItem* ItemJudgeRuleDengGuangMoNi::release_basic_simulation_test_done_close_all_light() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_simulation_test_done_close_all_light)
  clear_has_basic_simulation_test_done_close_all_light();
  ::OPMessage::BasicDengGuangMoNiItem* temp = basic_simulation_test_done_close_all_light_;
  basic_simulation_test_done_close_all_light_ = NULL;
  return temp;
}
void ItemJudgeRuleDengGuangMoNi::set_allocated_basic_simulation_test_done_close_all_light(::OPMessage::BasicDengGuangMoNiItem* basic_simulation_test_done_close_all_light) {
  delete basic_simulation_test_done_close_all_light_;
  basic_simulation_test_done_close_all_light_ = basic_simulation_test_done_close_all_light;
  if (basic_simulation_test_done_close_all_light) {
    set_has_basic_simulation_test_done_close_all_light();
  } else {
    clear_has_basic_simulation_test_done_close_all_light();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDengGuangMoNi.basic_simulation_test_done_close_all_light)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleQiBu::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleQiBu::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleQiBu::kBasicLeftturnlampFieldNumber;
const int ItemJudgeRuleQiBu::kBasicDoorFieldNumber;
const int ItemJudgeRuleQiBu::kBasicHornFieldNumber;
const int ItemJudgeRuleQiBu::kBasicFireupFieldNumber;
const int ItemJudgeRuleQiBu::kBasicSeatFieldNumber;
const int ItemJudgeRuleQiBu::kBasicLeftMirrorFieldNumber;
const int ItemJudgeRuleQiBu::kBasicMiddleMirrorFieldNumber;
const int ItemJudgeRuleQiBu::kBasicRightMirrorFieldNumber;
const int ItemJudgeRuleQiBu::kCarHlWhetherCheckFieldNumber;
const int ItemJudgeRuleQiBu::kCarHlDistanceMore30CmVoiceFieldNumber;
const int ItemJudgeRuleQiBu::kCarHlDistanceMore30CmDeductionFieldNumber;
const int ItemJudgeRuleQiBu::kCarHlDistanceLess30CmVoiceFieldNumber;
const int ItemJudgeRuleQiBu::kCarHlDistanceLess30CmDeductionFieldNumber;
const int ItemJudgeRuleQiBu::kCarHandbrakeWhetherCheckFieldNumber;
const int ItemJudgeRuleQiBu::kCarHandbrakeMoreDistanceFieldNumber;
const int ItemJudgeRuleQiBu::kCarHandbrakeMoreVoiceFieldNumber;
const int ItemJudgeRuleQiBu::kCarHandbrakeMoreDeductionFieldNumber;
const int ItemJudgeRuleQiBu::kCarHandbrakeLessDistanceFieldNumber;
const int ItemJudgeRuleQiBu::kCarHandbrakeLessVoiceFieldNumber;
const int ItemJudgeRuleQiBu::kCarHandbrakeLessDeductionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleQiBu::ItemJudgeRuleQiBu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleQiBu)
}

void ItemJudgeRuleQiBu::InitAsDefaultInstance() {
  basic_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  basic_door_ = const_cast< ::OPMessage::BasicDoor*>(&::OPMessage::BasicDoor::default_instance());
  basic_horn_ = const_cast< ::OPMessage::BasicHorn*>(&::OPMessage::BasicHorn::default_instance());
  basic_fireup_ = const_cast< ::OPMessage::BasicFireUp*>(&::OPMessage::BasicFireUp::default_instance());
  basic_seat_ = const_cast< ::OPMessage::BasicSeat*>(&::OPMessage::BasicSeat::default_instance());
  basic_left_mirror_ = const_cast< ::OPMessage::BasicLeftMirror*>(&::OPMessage::BasicLeftMirror::default_instance());
  basic_middle_mirror_ = const_cast< ::OPMessage::BasicMiddleMirror*>(&::OPMessage::BasicMiddleMirror::default_instance());
  basic_right_mirror_ = const_cast< ::OPMessage::BasicRightMirror*>(&::OPMessage::BasicRightMirror::default_instance());
}

ItemJudgeRuleQiBu::ItemJudgeRuleQiBu(const ItemJudgeRuleQiBu& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleQiBu)
}

void ItemJudgeRuleQiBu::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basic_leftturnlamp_ = NULL;
  basic_door_ = NULL;
  basic_horn_ = NULL;
  basic_fireup_ = NULL;
  basic_seat_ = NULL;
  basic_left_mirror_ = NULL;
  basic_middle_mirror_ = NULL;
  basic_right_mirror_ = NULL;
  car_hl_whether_check_ = true;
  car_hl_distance_more_30cm_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_hl_distance_more_30cm_deduction_ = 0;
  car_hl_distance_less_30cm_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_hl_distance_less_30cm_deduction_ = 0;
  car_handbrake_whether_check_ = true;
  car_handbrake_more_distance_ = 0;
  car_handbrake_more_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_handbrake_more_deduction_ = 0;
  car_handbrake_less_distance_ = 0;
  car_handbrake_less_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_handbrake_less_deduction_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleQiBu::~ItemJudgeRuleQiBu() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleQiBu)
  SharedDtor();
}

void ItemJudgeRuleQiBu::SharedDtor() {
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_hl_distance_more_30cm_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_hl_distance_less_30cm_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_handbrake_more_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_handbrake_less_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_leftturnlamp_;
    delete basic_door_;
    delete basic_horn_;
    delete basic_fireup_;
    delete basic_seat_;
    delete basic_left_mirror_;
    delete basic_middle_mirror_;
    delete basic_right_mirror_;
  }
}

void ItemJudgeRuleQiBu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleQiBu::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleQiBu_descriptor_;
}

const ItemJudgeRuleQiBu& ItemJudgeRuleQiBu::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleQiBu* ItemJudgeRuleQiBu::default_instance_ = NULL;

ItemJudgeRuleQiBu* ItemJudgeRuleQiBu::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleQiBu* n = new ItemJudgeRuleQiBu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleQiBu::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleQiBu)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeRuleQiBu, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeRuleQiBu*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_basic_leftturnlamp()) {
      if (basic_leftturnlamp_ != NULL) basic_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_basic_door()) {
      if (basic_door_ != NULL) basic_door_->::OPMessage::BasicDoor::Clear();
    }
    if (has_basic_horn()) {
      if (basic_horn_ != NULL) basic_horn_->::OPMessage::BasicHorn::Clear();
    }
    if (has_basic_fireup()) {
      if (basic_fireup_ != NULL) basic_fireup_->::OPMessage::BasicFireUp::Clear();
    }
    if (has_basic_seat()) {
      if (basic_seat_ != NULL) basic_seat_->::OPMessage::BasicSeat::Clear();
    }
    if (has_basic_left_mirror()) {
      if (basic_left_mirror_ != NULL) basic_left_mirror_->::OPMessage::BasicLeftMirror::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_basic_middle_mirror()) {
      if (basic_middle_mirror_ != NULL) basic_middle_mirror_->::OPMessage::BasicMiddleMirror::Clear();
    }
    if (has_basic_right_mirror()) {
      if (basic_right_mirror_ != NULL) basic_right_mirror_->::OPMessage::BasicRightMirror::Clear();
    }
    car_hl_whether_check_ = true;
    if (has_car_hl_distance_more_30cm_voice()) {
      car_hl_distance_more_30cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_hl_distance_more_30cm_deduction_ = 0;
    if (has_car_hl_distance_less_30cm_voice()) {
      car_hl_distance_less_30cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_hl_distance_less_30cm_deduction_ = 0;
    car_handbrake_whether_check_ = true;
  }
  if (_has_bits_[16 / 32] & 4128768u) {
    ZR_(car_handbrake_more_deduction_, car_handbrake_less_distance_);
    car_handbrake_more_distance_ = 0;
    if (has_car_handbrake_more_voice()) {
      car_handbrake_more_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_handbrake_less_voice()) {
      car_handbrake_less_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_handbrake_less_deduction_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleQiBu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleQiBu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_start_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleQiBu.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleQiBu.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_basic_leftturnlamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp basic_leftturnlamp = 3;
      case 3: {
        if (tag == 26) {
         parse_basic_leftturnlamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_basic_door;
        break;
      }

      // optional .OPMessage.BasicDoor basic_door = 4;
      case 4: {
        if (tag == 34) {
         parse_basic_door:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_door()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_basic_horn;
        break;
      }

      // optional .OPMessage.BasicHorn basic_horn = 5;
      case 5: {
        if (tag == 42) {
         parse_basic_horn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_horn()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_basic_fireup;
        break;
      }

      // optional .OPMessage.BasicFireUp basic_fireup = 6;
      case 6: {
        if (tag == 50) {
         parse_basic_fireup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_fireup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_basic_seat;
        break;
      }

      // optional .OPMessage.BasicSeat basic_seat = 7;
      case 7: {
        if (tag == 58) {
         parse_basic_seat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_seat()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_basic_left_mirror;
        break;
      }

      // optional .OPMessage.BasicLeftMirror basic_left_mirror = 8;
      case 8: {
        if (tag == 66) {
         parse_basic_left_mirror:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_left_mirror()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_basic_middle_mirror;
        break;
      }

      // optional .OPMessage.BasicMiddleMirror basic_middle_mirror = 9;
      case 9: {
        if (tag == 74) {
         parse_basic_middle_mirror:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_middle_mirror()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_basic_right_mirror;
        break;
      }

      // optional .OPMessage.BasicRightMirror basic_right_mirror = 10;
      case 10: {
        if (tag == 82) {
         parse_basic_right_mirror:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_right_mirror()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_car_hl_whether_check;
        break;
      }

      // optional bool car_hl_whether_check = 11 [default = true];
      case 11: {
        if (tag == 88) {
         parse_car_hl_whether_check:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &car_hl_whether_check_)));
          set_has_car_hl_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_car_hl_distance_more_30cm_voice;
        break;
      }

      // optional string car_hl_distance_more_30cm_voice = 12;
      case 12: {
        if (tag == 98) {
         parse_car_hl_distance_more_30cm_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_hl_distance_more_30cm_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_hl_distance_more_30cm_voice().data(), this->car_hl_distance_more_30cm_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_car_hl_distance_more_30cm_deduction;
        break;
      }

      // optional int32 car_hl_distance_more_30cm_deduction = 13;
      case 13: {
        if (tag == 104) {
         parse_car_hl_distance_more_30cm_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_hl_distance_more_30cm_deduction_)));
          set_has_car_hl_distance_more_30cm_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_car_hl_distance_less_30cm_voice;
        break;
      }

      // optional string car_hl_distance_less_30cm_voice = 14;
      case 14: {
        if (tag == 114) {
         parse_car_hl_distance_less_30cm_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_hl_distance_less_30cm_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_hl_distance_less_30cm_voice().data(), this->car_hl_distance_less_30cm_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_car_hl_distance_less_30cm_deduction;
        break;
      }

      // optional int32 car_hl_distance_less_30cm_deduction = 15;
      case 15: {
        if (tag == 120) {
         parse_car_hl_distance_less_30cm_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_hl_distance_less_30cm_deduction_)));
          set_has_car_hl_distance_less_30cm_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_car_handbrake_whether_check;
        break;
      }

      // optional bool car_handbrake_whether_check = 16 [default = true];
      case 16: {
        if (tag == 128) {
         parse_car_handbrake_whether_check:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &car_handbrake_whether_check_)));
          set_has_car_handbrake_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_car_handbrake_more_distance;
        break;
      }

      // optional int32 car_handbrake_more_distance = 17;
      case 17: {
        if (tag == 136) {
         parse_car_handbrake_more_distance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_handbrake_more_distance_)));
          set_has_car_handbrake_more_distance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_car_handbrake_more_voice;
        break;
      }

      // optional string car_handbrake_more_voice = 18;
      case 18: {
        if (tag == 146) {
         parse_car_handbrake_more_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_handbrake_more_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_handbrake_more_voice().data(), this->car_handbrake_more_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_car_handbrake_more_deduction;
        break;
      }

      // optional int32 car_handbrake_more_deduction = 19;
      case 19: {
        if (tag == 152) {
         parse_car_handbrake_more_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_handbrake_more_deduction_)));
          set_has_car_handbrake_more_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_car_handbrake_less_distance;
        break;
      }

      // optional int32 car_handbrake_less_distance = 20;
      case 20: {
        if (tag == 160) {
         parse_car_handbrake_less_distance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_handbrake_less_distance_)));
          set_has_car_handbrake_less_distance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_car_handbrake_less_voice;
        break;
      }

      // optional string car_handbrake_less_voice = 21;
      case 21: {
        if (tag == 170) {
         parse_car_handbrake_less_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_handbrake_less_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_handbrake_less_voice().data(), this->car_handbrake_less_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_car_handbrake_less_deduction;
        break;
      }

      // optional int32 car_handbrake_less_deduction = 22;
      case 22: {
        if (tag == 176) {
         parse_car_handbrake_less_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_handbrake_less_deduction_)));
          set_has_car_handbrake_less_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleQiBu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleQiBu)
  return false;
#undef DO_
}

void ItemJudgeRuleQiBu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleQiBu)
  // optional string item_start_voice = 1;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQiBu.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 2;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQiBu.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_end_voice(), output);
  }

  // optional .OPMessage.BasicLeftTurnLamp basic_leftturnlamp = 3;
  if (has_basic_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->basic_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicDoor basic_door = 4;
  if (has_basic_door()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->basic_door_, output);
  }

  // optional .OPMessage.BasicHorn basic_horn = 5;
  if (has_basic_horn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->basic_horn_, output);
  }

  // optional .OPMessage.BasicFireUp basic_fireup = 6;
  if (has_basic_fireup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->basic_fireup_, output);
  }

  // optional .OPMessage.BasicSeat basic_seat = 7;
  if (has_basic_seat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->basic_seat_, output);
  }

  // optional .OPMessage.BasicLeftMirror basic_left_mirror = 8;
  if (has_basic_left_mirror()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->basic_left_mirror_, output);
  }

  // optional .OPMessage.BasicMiddleMirror basic_middle_mirror = 9;
  if (has_basic_middle_mirror()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->basic_middle_mirror_, output);
  }

  // optional .OPMessage.BasicRightMirror basic_right_mirror = 10;
  if (has_basic_right_mirror()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->basic_right_mirror_, output);
  }

  // optional bool car_hl_whether_check = 11 [default = true];
  if (has_car_hl_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->car_hl_whether_check(), output);
  }

  // optional string car_hl_distance_more_30cm_voice = 12;
  if (has_car_hl_distance_more_30cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_hl_distance_more_30cm_voice().data(), this->car_hl_distance_more_30cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->car_hl_distance_more_30cm_voice(), output);
  }

  // optional int32 car_hl_distance_more_30cm_deduction = 13;
  if (has_car_hl_distance_more_30cm_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->car_hl_distance_more_30cm_deduction(), output);
  }

  // optional string car_hl_distance_less_30cm_voice = 14;
  if (has_car_hl_distance_less_30cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_hl_distance_less_30cm_voice().data(), this->car_hl_distance_less_30cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->car_hl_distance_less_30cm_voice(), output);
  }

  // optional int32 car_hl_distance_less_30cm_deduction = 15;
  if (has_car_hl_distance_less_30cm_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->car_hl_distance_less_30cm_deduction(), output);
  }

  // optional bool car_handbrake_whether_check = 16 [default = true];
  if (has_car_handbrake_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->car_handbrake_whether_check(), output);
  }

  // optional int32 car_handbrake_more_distance = 17;
  if (has_car_handbrake_more_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->car_handbrake_more_distance(), output);
  }

  // optional string car_handbrake_more_voice = 18;
  if (has_car_handbrake_more_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_handbrake_more_voice().data(), this->car_handbrake_more_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->car_handbrake_more_voice(), output);
  }

  // optional int32 car_handbrake_more_deduction = 19;
  if (has_car_handbrake_more_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->car_handbrake_more_deduction(), output);
  }

  // optional int32 car_handbrake_less_distance = 20;
  if (has_car_handbrake_less_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->car_handbrake_less_distance(), output);
  }

  // optional string car_handbrake_less_voice = 21;
  if (has_car_handbrake_less_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_handbrake_less_voice().data(), this->car_handbrake_less_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->car_handbrake_less_voice(), output);
  }

  // optional int32 car_handbrake_less_deduction = 22;
  if (has_car_handbrake_less_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->car_handbrake_less_deduction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleQiBu)
}

::google::protobuf::uint8* ItemJudgeRuleQiBu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleQiBu)
  // optional string item_start_voice = 1;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQiBu.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 2;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQiBu.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_end_voice(), target);
  }

  // optional .OPMessage.BasicLeftTurnLamp basic_leftturnlamp = 3;
  if (has_basic_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->basic_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicDoor basic_door = 4;
  if (has_basic_door()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->basic_door_, false, target);
  }

  // optional .OPMessage.BasicHorn basic_horn = 5;
  if (has_basic_horn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->basic_horn_, false, target);
  }

  // optional .OPMessage.BasicFireUp basic_fireup = 6;
  if (has_basic_fireup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->basic_fireup_, false, target);
  }

  // optional .OPMessage.BasicSeat basic_seat = 7;
  if (has_basic_seat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->basic_seat_, false, target);
  }

  // optional .OPMessage.BasicLeftMirror basic_left_mirror = 8;
  if (has_basic_left_mirror()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->basic_left_mirror_, false, target);
  }

  // optional .OPMessage.BasicMiddleMirror basic_middle_mirror = 9;
  if (has_basic_middle_mirror()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->basic_middle_mirror_, false, target);
  }

  // optional .OPMessage.BasicRightMirror basic_right_mirror = 10;
  if (has_basic_right_mirror()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->basic_right_mirror_, false, target);
  }

  // optional bool car_hl_whether_check = 11 [default = true];
  if (has_car_hl_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->car_hl_whether_check(), target);
  }

  // optional string car_hl_distance_more_30cm_voice = 12;
  if (has_car_hl_distance_more_30cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_hl_distance_more_30cm_voice().data(), this->car_hl_distance_more_30cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->car_hl_distance_more_30cm_voice(), target);
  }

  // optional int32 car_hl_distance_more_30cm_deduction = 13;
  if (has_car_hl_distance_more_30cm_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->car_hl_distance_more_30cm_deduction(), target);
  }

  // optional string car_hl_distance_less_30cm_voice = 14;
  if (has_car_hl_distance_less_30cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_hl_distance_less_30cm_voice().data(), this->car_hl_distance_less_30cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->car_hl_distance_less_30cm_voice(), target);
  }

  // optional int32 car_hl_distance_less_30cm_deduction = 15;
  if (has_car_hl_distance_less_30cm_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->car_hl_distance_less_30cm_deduction(), target);
  }

  // optional bool car_handbrake_whether_check = 16 [default = true];
  if (has_car_handbrake_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->car_handbrake_whether_check(), target);
  }

  // optional int32 car_handbrake_more_distance = 17;
  if (has_car_handbrake_more_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->car_handbrake_more_distance(), target);
  }

  // optional string car_handbrake_more_voice = 18;
  if (has_car_handbrake_more_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_handbrake_more_voice().data(), this->car_handbrake_more_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->car_handbrake_more_voice(), target);
  }

  // optional int32 car_handbrake_more_deduction = 19;
  if (has_car_handbrake_more_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->car_handbrake_more_deduction(), target);
  }

  // optional int32 car_handbrake_less_distance = 20;
  if (has_car_handbrake_less_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->car_handbrake_less_distance(), target);
  }

  // optional string car_handbrake_less_voice = 21;
  if (has_car_handbrake_less_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_handbrake_less_voice().data(), this->car_handbrake_less_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->car_handbrake_less_voice(), target);
  }

  // optional int32 car_handbrake_less_deduction = 22;
  if (has_car_handbrake_less_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->car_handbrake_less_deduction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleQiBu)
  return target;
}

int ItemJudgeRuleQiBu::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleQiBu)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string item_start_voice = 1;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 2;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.BasicLeftTurnLamp basic_leftturnlamp = 3;
    if (has_basic_leftturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_leftturnlamp_);
    }

    // optional .OPMessage.BasicDoor basic_door = 4;
    if (has_basic_door()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_door_);
    }

    // optional .OPMessage.BasicHorn basic_horn = 5;
    if (has_basic_horn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_horn_);
    }

    // optional .OPMessage.BasicFireUp basic_fireup = 6;
    if (has_basic_fireup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_fireup_);
    }

    // optional .OPMessage.BasicSeat basic_seat = 7;
    if (has_basic_seat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_seat_);
    }

    // optional .OPMessage.BasicLeftMirror basic_left_mirror = 8;
    if (has_basic_left_mirror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_left_mirror_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .OPMessage.BasicMiddleMirror basic_middle_mirror = 9;
    if (has_basic_middle_mirror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_middle_mirror_);
    }

    // optional .OPMessage.BasicRightMirror basic_right_mirror = 10;
    if (has_basic_right_mirror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_right_mirror_);
    }

    // optional bool car_hl_whether_check = 11 [default = true];
    if (has_car_hl_whether_check()) {
      total_size += 1 + 1;
    }

    // optional string car_hl_distance_more_30cm_voice = 12;
    if (has_car_hl_distance_more_30cm_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_hl_distance_more_30cm_voice());
    }

    // optional int32 car_hl_distance_more_30cm_deduction = 13;
    if (has_car_hl_distance_more_30cm_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_hl_distance_more_30cm_deduction());
    }

    // optional string car_hl_distance_less_30cm_voice = 14;
    if (has_car_hl_distance_less_30cm_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_hl_distance_less_30cm_voice());
    }

    // optional int32 car_hl_distance_less_30cm_deduction = 15;
    if (has_car_hl_distance_less_30cm_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_hl_distance_less_30cm_deduction());
    }

    // optional bool car_handbrake_whether_check = 16 [default = true];
    if (has_car_handbrake_whether_check()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 4128768u) {
    // optional int32 car_handbrake_more_distance = 17;
    if (has_car_handbrake_more_distance()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_handbrake_more_distance());
    }

    // optional string car_handbrake_more_voice = 18;
    if (has_car_handbrake_more_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_handbrake_more_voice());
    }

    // optional int32 car_handbrake_more_deduction = 19;
    if (has_car_handbrake_more_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_handbrake_more_deduction());
    }

    // optional int32 car_handbrake_less_distance = 20;
    if (has_car_handbrake_less_distance()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_handbrake_less_distance());
    }

    // optional string car_handbrake_less_voice = 21;
    if (has_car_handbrake_less_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_handbrake_less_voice());
    }

    // optional int32 car_handbrake_less_deduction = 22;
    if (has_car_handbrake_less_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_handbrake_less_deduction());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleQiBu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleQiBu)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleQiBu* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleQiBu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleQiBu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleQiBu)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleQiBu::MergeFrom(const ItemJudgeRuleQiBu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleQiBu)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_basic_leftturnlamp()) {
      mutable_basic_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.basic_leftturnlamp());
    }
    if (from.has_basic_door()) {
      mutable_basic_door()->::OPMessage::BasicDoor::MergeFrom(from.basic_door());
    }
    if (from.has_basic_horn()) {
      mutable_basic_horn()->::OPMessage::BasicHorn::MergeFrom(from.basic_horn());
    }
    if (from.has_basic_fireup()) {
      mutable_basic_fireup()->::OPMessage::BasicFireUp::MergeFrom(from.basic_fireup());
    }
    if (from.has_basic_seat()) {
      mutable_basic_seat()->::OPMessage::BasicSeat::MergeFrom(from.basic_seat());
    }
    if (from.has_basic_left_mirror()) {
      mutable_basic_left_mirror()->::OPMessage::BasicLeftMirror::MergeFrom(from.basic_left_mirror());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_basic_middle_mirror()) {
      mutable_basic_middle_mirror()->::OPMessage::BasicMiddleMirror::MergeFrom(from.basic_middle_mirror());
    }
    if (from.has_basic_right_mirror()) {
      mutable_basic_right_mirror()->::OPMessage::BasicRightMirror::MergeFrom(from.basic_right_mirror());
    }
    if (from.has_car_hl_whether_check()) {
      set_car_hl_whether_check(from.car_hl_whether_check());
    }
    if (from.has_car_hl_distance_more_30cm_voice()) {
      set_has_car_hl_distance_more_30cm_voice();
      car_hl_distance_more_30cm_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_hl_distance_more_30cm_voice_);
    }
    if (from.has_car_hl_distance_more_30cm_deduction()) {
      set_car_hl_distance_more_30cm_deduction(from.car_hl_distance_more_30cm_deduction());
    }
    if (from.has_car_hl_distance_less_30cm_voice()) {
      set_has_car_hl_distance_less_30cm_voice();
      car_hl_distance_less_30cm_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_hl_distance_less_30cm_voice_);
    }
    if (from.has_car_hl_distance_less_30cm_deduction()) {
      set_car_hl_distance_less_30cm_deduction(from.car_hl_distance_less_30cm_deduction());
    }
    if (from.has_car_handbrake_whether_check()) {
      set_car_handbrake_whether_check(from.car_handbrake_whether_check());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_car_handbrake_more_distance()) {
      set_car_handbrake_more_distance(from.car_handbrake_more_distance());
    }
    if (from.has_car_handbrake_more_voice()) {
      set_has_car_handbrake_more_voice();
      car_handbrake_more_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_handbrake_more_voice_);
    }
    if (from.has_car_handbrake_more_deduction()) {
      set_car_handbrake_more_deduction(from.car_handbrake_more_deduction());
    }
    if (from.has_car_handbrake_less_distance()) {
      set_car_handbrake_less_distance(from.car_handbrake_less_distance());
    }
    if (from.has_car_handbrake_less_voice()) {
      set_has_car_handbrake_less_voice();
      car_handbrake_less_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_handbrake_less_voice_);
    }
    if (from.has_car_handbrake_less_deduction()) {
      set_car_handbrake_less_deduction(from.car_handbrake_less_deduction());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleQiBu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleQiBu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleQiBu::CopyFrom(const ItemJudgeRuleQiBu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleQiBu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleQiBu::IsInitialized() const {

  return true;
}

void ItemJudgeRuleQiBu::Swap(ItemJudgeRuleQiBu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleQiBu::InternalSwap(ItemJudgeRuleQiBu* other) {
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(basic_leftturnlamp_, other->basic_leftturnlamp_);
  std::swap(basic_door_, other->basic_door_);
  std::swap(basic_horn_, other->basic_horn_);
  std::swap(basic_fireup_, other->basic_fireup_);
  std::swap(basic_seat_, other->basic_seat_);
  std::swap(basic_left_mirror_, other->basic_left_mirror_);
  std::swap(basic_middle_mirror_, other->basic_middle_mirror_);
  std::swap(basic_right_mirror_, other->basic_right_mirror_);
  std::swap(car_hl_whether_check_, other->car_hl_whether_check_);
  car_hl_distance_more_30cm_voice_.Swap(&other->car_hl_distance_more_30cm_voice_);
  std::swap(car_hl_distance_more_30cm_deduction_, other->car_hl_distance_more_30cm_deduction_);
  car_hl_distance_less_30cm_voice_.Swap(&other->car_hl_distance_less_30cm_voice_);
  std::swap(car_hl_distance_less_30cm_deduction_, other->car_hl_distance_less_30cm_deduction_);
  std::swap(car_handbrake_whether_check_, other->car_handbrake_whether_check_);
  std::swap(car_handbrake_more_distance_, other->car_handbrake_more_distance_);
  car_handbrake_more_voice_.Swap(&other->car_handbrake_more_voice_);
  std::swap(car_handbrake_more_deduction_, other->car_handbrake_more_deduction_);
  std::swap(car_handbrake_less_distance_, other->car_handbrake_less_distance_);
  car_handbrake_less_voice_.Swap(&other->car_handbrake_less_voice_);
  std::swap(car_handbrake_less_deduction_, other->car_handbrake_less_deduction_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleQiBu::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleQiBu_descriptor_;
  metadata.reflection = ItemJudgeRuleQiBu_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleQiBu

// optional string item_start_voice = 1;
bool ItemJudgeRuleQiBu::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleQiBu::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleQiBu::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleQiBu::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleQiBu::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQiBu::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
}
 void ItemJudgeRuleQiBu::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
}
 void ItemJudgeRuleQiBu::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
}
 ::std::string* ItemJudgeRuleQiBu::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleQiBu::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQiBu::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.item_start_voice)
}

// optional string item_end_voice = 2;
bool ItemJudgeRuleQiBu::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleQiBu::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleQiBu::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleQiBu::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleQiBu::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQiBu::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
}
 void ItemJudgeRuleQiBu::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
}
 void ItemJudgeRuleQiBu::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
}
 ::std::string* ItemJudgeRuleQiBu::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleQiBu::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQiBu::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.item_end_voice)
}

// optional .OPMessage.BasicLeftTurnLamp basic_leftturnlamp = 3;
bool ItemJudgeRuleQiBu::has_basic_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleQiBu::set_has_basic_leftturnlamp() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleQiBu::clear_has_basic_leftturnlamp() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleQiBu::clear_basic_leftturnlamp() {
  if (basic_leftturnlamp_ != NULL) basic_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_basic_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleQiBu::basic_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_leftturnlamp)
  return basic_leftturnlamp_ != NULL ? *basic_leftturnlamp_ : *default_instance_->basic_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleQiBu::mutable_basic_leftturnlamp() {
  set_has_basic_leftturnlamp();
  if (basic_leftturnlamp_ == NULL) {
    basic_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_leftturnlamp)
  return basic_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleQiBu::release_basic_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_leftturnlamp)
  clear_has_basic_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = basic_leftturnlamp_;
  basic_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleQiBu::set_allocated_basic_leftturnlamp(::OPMessage::BasicLeftTurnLamp* basic_leftturnlamp) {
  delete basic_leftturnlamp_;
  basic_leftturnlamp_ = basic_leftturnlamp;
  if (basic_leftturnlamp) {
    set_has_basic_leftturnlamp();
  } else {
    clear_has_basic_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_leftturnlamp)
}

// optional .OPMessage.BasicDoor basic_door = 4;
bool ItemJudgeRuleQiBu::has_basic_door() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleQiBu::set_has_basic_door() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleQiBu::clear_has_basic_door() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleQiBu::clear_basic_door() {
  if (basic_door_ != NULL) basic_door_->::OPMessage::BasicDoor::Clear();
  clear_has_basic_door();
}
const ::OPMessage::BasicDoor& ItemJudgeRuleQiBu::basic_door() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_door)
  return basic_door_ != NULL ? *basic_door_ : *default_instance_->basic_door_;
}
::OPMessage::BasicDoor* ItemJudgeRuleQiBu::mutable_basic_door() {
  set_has_basic_door();
  if (basic_door_ == NULL) {
    basic_door_ = new ::OPMessage::BasicDoor;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_door)
  return basic_door_;
}
::OPMessage::BasicDoor* ItemJudgeRuleQiBu::release_basic_door() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_door)
  clear_has_basic_door();
  ::OPMessage::BasicDoor* temp = basic_door_;
  basic_door_ = NULL;
  return temp;
}
void ItemJudgeRuleQiBu::set_allocated_basic_door(::OPMessage::BasicDoor* basic_door) {
  delete basic_door_;
  basic_door_ = basic_door;
  if (basic_door) {
    set_has_basic_door();
  } else {
    clear_has_basic_door();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_door)
}

// optional .OPMessage.BasicHorn basic_horn = 5;
bool ItemJudgeRuleQiBu::has_basic_horn() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleQiBu::set_has_basic_horn() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleQiBu::clear_has_basic_horn() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleQiBu::clear_basic_horn() {
  if (basic_horn_ != NULL) basic_horn_->::OPMessage::BasicHorn::Clear();
  clear_has_basic_horn();
}
const ::OPMessage::BasicHorn& ItemJudgeRuleQiBu::basic_horn() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_horn)
  return basic_horn_ != NULL ? *basic_horn_ : *default_instance_->basic_horn_;
}
::OPMessage::BasicHorn* ItemJudgeRuleQiBu::mutable_basic_horn() {
  set_has_basic_horn();
  if (basic_horn_ == NULL) {
    basic_horn_ = new ::OPMessage::BasicHorn;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_horn)
  return basic_horn_;
}
::OPMessage::BasicHorn* ItemJudgeRuleQiBu::release_basic_horn() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_horn)
  clear_has_basic_horn();
  ::OPMessage::BasicHorn* temp = basic_horn_;
  basic_horn_ = NULL;
  return temp;
}
void ItemJudgeRuleQiBu::set_allocated_basic_horn(::OPMessage::BasicHorn* basic_horn) {
  delete basic_horn_;
  basic_horn_ = basic_horn;
  if (basic_horn) {
    set_has_basic_horn();
  } else {
    clear_has_basic_horn();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_horn)
}

// optional .OPMessage.BasicFireUp basic_fireup = 6;
bool ItemJudgeRuleQiBu::has_basic_fireup() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleQiBu::set_has_basic_fireup() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleQiBu::clear_has_basic_fireup() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleQiBu::clear_basic_fireup() {
  if (basic_fireup_ != NULL) basic_fireup_->::OPMessage::BasicFireUp::Clear();
  clear_has_basic_fireup();
}
const ::OPMessage::BasicFireUp& ItemJudgeRuleQiBu::basic_fireup() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_fireup)
  return basic_fireup_ != NULL ? *basic_fireup_ : *default_instance_->basic_fireup_;
}
::OPMessage::BasicFireUp* ItemJudgeRuleQiBu::mutable_basic_fireup() {
  set_has_basic_fireup();
  if (basic_fireup_ == NULL) {
    basic_fireup_ = new ::OPMessage::BasicFireUp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_fireup)
  return basic_fireup_;
}
::OPMessage::BasicFireUp* ItemJudgeRuleQiBu::release_basic_fireup() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_fireup)
  clear_has_basic_fireup();
  ::OPMessage::BasicFireUp* temp = basic_fireup_;
  basic_fireup_ = NULL;
  return temp;
}
void ItemJudgeRuleQiBu::set_allocated_basic_fireup(::OPMessage::BasicFireUp* basic_fireup) {
  delete basic_fireup_;
  basic_fireup_ = basic_fireup;
  if (basic_fireup) {
    set_has_basic_fireup();
  } else {
    clear_has_basic_fireup();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_fireup)
}

// optional .OPMessage.BasicSeat basic_seat = 7;
bool ItemJudgeRuleQiBu::has_basic_seat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleQiBu::set_has_basic_seat() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleQiBu::clear_has_basic_seat() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleQiBu::clear_basic_seat() {
  if (basic_seat_ != NULL) basic_seat_->::OPMessage::BasicSeat::Clear();
  clear_has_basic_seat();
}
const ::OPMessage::BasicSeat& ItemJudgeRuleQiBu::basic_seat() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_seat)
  return basic_seat_ != NULL ? *basic_seat_ : *default_instance_->basic_seat_;
}
::OPMessage::BasicSeat* ItemJudgeRuleQiBu::mutable_basic_seat() {
  set_has_basic_seat();
  if (basic_seat_ == NULL) {
    basic_seat_ = new ::OPMessage::BasicSeat;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_seat)
  return basic_seat_;
}
::OPMessage::BasicSeat* ItemJudgeRuleQiBu::release_basic_seat() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_seat)
  clear_has_basic_seat();
  ::OPMessage::BasicSeat* temp = basic_seat_;
  basic_seat_ = NULL;
  return temp;
}
void ItemJudgeRuleQiBu::set_allocated_basic_seat(::OPMessage::BasicSeat* basic_seat) {
  delete basic_seat_;
  basic_seat_ = basic_seat;
  if (basic_seat) {
    set_has_basic_seat();
  } else {
    clear_has_basic_seat();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_seat)
}

// optional .OPMessage.BasicLeftMirror basic_left_mirror = 8;
bool ItemJudgeRuleQiBu::has_basic_left_mirror() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeRuleQiBu::set_has_basic_left_mirror() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeRuleQiBu::clear_has_basic_left_mirror() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeRuleQiBu::clear_basic_left_mirror() {
  if (basic_left_mirror_ != NULL) basic_left_mirror_->::OPMessage::BasicLeftMirror::Clear();
  clear_has_basic_left_mirror();
}
const ::OPMessage::BasicLeftMirror& ItemJudgeRuleQiBu::basic_left_mirror() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_left_mirror)
  return basic_left_mirror_ != NULL ? *basic_left_mirror_ : *default_instance_->basic_left_mirror_;
}
::OPMessage::BasicLeftMirror* ItemJudgeRuleQiBu::mutable_basic_left_mirror() {
  set_has_basic_left_mirror();
  if (basic_left_mirror_ == NULL) {
    basic_left_mirror_ = new ::OPMessage::BasicLeftMirror;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_left_mirror)
  return basic_left_mirror_;
}
::OPMessage::BasicLeftMirror* ItemJudgeRuleQiBu::release_basic_left_mirror() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_left_mirror)
  clear_has_basic_left_mirror();
  ::OPMessage::BasicLeftMirror* temp = basic_left_mirror_;
  basic_left_mirror_ = NULL;
  return temp;
}
void ItemJudgeRuleQiBu::set_allocated_basic_left_mirror(::OPMessage::BasicLeftMirror* basic_left_mirror) {
  delete basic_left_mirror_;
  basic_left_mirror_ = basic_left_mirror;
  if (basic_left_mirror) {
    set_has_basic_left_mirror();
  } else {
    clear_has_basic_left_mirror();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_left_mirror)
}

// optional .OPMessage.BasicMiddleMirror basic_middle_mirror = 9;
bool ItemJudgeRuleQiBu::has_basic_middle_mirror() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ItemJudgeRuleQiBu::set_has_basic_middle_mirror() {
  _has_bits_[0] |= 0x00000100u;
}
void ItemJudgeRuleQiBu::clear_has_basic_middle_mirror() {
  _has_bits_[0] &= ~0x00000100u;
}
void ItemJudgeRuleQiBu::clear_basic_middle_mirror() {
  if (basic_middle_mirror_ != NULL) basic_middle_mirror_->::OPMessage::BasicMiddleMirror::Clear();
  clear_has_basic_middle_mirror();
}
const ::OPMessage::BasicMiddleMirror& ItemJudgeRuleQiBu::basic_middle_mirror() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_middle_mirror)
  return basic_middle_mirror_ != NULL ? *basic_middle_mirror_ : *default_instance_->basic_middle_mirror_;
}
::OPMessage::BasicMiddleMirror* ItemJudgeRuleQiBu::mutable_basic_middle_mirror() {
  set_has_basic_middle_mirror();
  if (basic_middle_mirror_ == NULL) {
    basic_middle_mirror_ = new ::OPMessage::BasicMiddleMirror;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_middle_mirror)
  return basic_middle_mirror_;
}
::OPMessage::BasicMiddleMirror* ItemJudgeRuleQiBu::release_basic_middle_mirror() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_middle_mirror)
  clear_has_basic_middle_mirror();
  ::OPMessage::BasicMiddleMirror* temp = basic_middle_mirror_;
  basic_middle_mirror_ = NULL;
  return temp;
}
void ItemJudgeRuleQiBu::set_allocated_basic_middle_mirror(::OPMessage::BasicMiddleMirror* basic_middle_mirror) {
  delete basic_middle_mirror_;
  basic_middle_mirror_ = basic_middle_mirror;
  if (basic_middle_mirror) {
    set_has_basic_middle_mirror();
  } else {
    clear_has_basic_middle_mirror();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_middle_mirror)
}

// optional .OPMessage.BasicRightMirror basic_right_mirror = 10;
bool ItemJudgeRuleQiBu::has_basic_right_mirror() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ItemJudgeRuleQiBu::set_has_basic_right_mirror() {
  _has_bits_[0] |= 0x00000200u;
}
void ItemJudgeRuleQiBu::clear_has_basic_right_mirror() {
  _has_bits_[0] &= ~0x00000200u;
}
void ItemJudgeRuleQiBu::clear_basic_right_mirror() {
  if (basic_right_mirror_ != NULL) basic_right_mirror_->::OPMessage::BasicRightMirror::Clear();
  clear_has_basic_right_mirror();
}
const ::OPMessage::BasicRightMirror& ItemJudgeRuleQiBu::basic_right_mirror() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.basic_right_mirror)
  return basic_right_mirror_ != NULL ? *basic_right_mirror_ : *default_instance_->basic_right_mirror_;
}
::OPMessage::BasicRightMirror* ItemJudgeRuleQiBu::mutable_basic_right_mirror() {
  set_has_basic_right_mirror();
  if (basic_right_mirror_ == NULL) {
    basic_right_mirror_ = new ::OPMessage::BasicRightMirror;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.basic_right_mirror)
  return basic_right_mirror_;
}
::OPMessage::BasicRightMirror* ItemJudgeRuleQiBu::release_basic_right_mirror() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.basic_right_mirror)
  clear_has_basic_right_mirror();
  ::OPMessage::BasicRightMirror* temp = basic_right_mirror_;
  basic_right_mirror_ = NULL;
  return temp;
}
void ItemJudgeRuleQiBu::set_allocated_basic_right_mirror(::OPMessage::BasicRightMirror* basic_right_mirror) {
  delete basic_right_mirror_;
  basic_right_mirror_ = basic_right_mirror;
  if (basic_right_mirror) {
    set_has_basic_right_mirror();
  } else {
    clear_has_basic_right_mirror();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.basic_right_mirror)
}

// optional bool car_hl_whether_check = 11 [default = true];
bool ItemJudgeRuleQiBu::has_car_hl_whether_check() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ItemJudgeRuleQiBu::set_has_car_hl_whether_check() {
  _has_bits_[0] |= 0x00000400u;
}
void ItemJudgeRuleQiBu::clear_has_car_hl_whether_check() {
  _has_bits_[0] &= ~0x00000400u;
}
void ItemJudgeRuleQiBu::clear_car_hl_whether_check() {
  car_hl_whether_check_ = true;
  clear_has_car_hl_whether_check();
}
 bool ItemJudgeRuleQiBu::car_hl_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_hl_whether_check)
  return car_hl_whether_check_;
}
 void ItemJudgeRuleQiBu::set_car_hl_whether_check(bool value) {
  set_has_car_hl_whether_check();
  car_hl_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_hl_whether_check)
}

// optional string car_hl_distance_more_30cm_voice = 12;
bool ItemJudgeRuleQiBu::has_car_hl_distance_more_30cm_voice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ItemJudgeRuleQiBu::set_has_car_hl_distance_more_30cm_voice() {
  _has_bits_[0] |= 0x00000800u;
}
void ItemJudgeRuleQiBu::clear_has_car_hl_distance_more_30cm_voice() {
  _has_bits_[0] &= ~0x00000800u;
}
void ItemJudgeRuleQiBu::clear_car_hl_distance_more_30cm_voice() {
  car_hl_distance_more_30cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_hl_distance_more_30cm_voice();
}
 const ::std::string& ItemJudgeRuleQiBu::car_hl_distance_more_30cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
  return car_hl_distance_more_30cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQiBu::set_car_hl_distance_more_30cm_voice(const ::std::string& value) {
  set_has_car_hl_distance_more_30cm_voice();
  car_hl_distance_more_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
}
 void ItemJudgeRuleQiBu::set_car_hl_distance_more_30cm_voice(const char* value) {
  set_has_car_hl_distance_more_30cm_voice();
  car_hl_distance_more_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
}
 void ItemJudgeRuleQiBu::set_car_hl_distance_more_30cm_voice(const char* value, size_t size) {
  set_has_car_hl_distance_more_30cm_voice();
  car_hl_distance_more_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
}
 ::std::string* ItemJudgeRuleQiBu::mutable_car_hl_distance_more_30cm_voice() {
  set_has_car_hl_distance_more_30cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
  return car_hl_distance_more_30cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleQiBu::release_car_hl_distance_more_30cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
  clear_has_car_hl_distance_more_30cm_voice();
  return car_hl_distance_more_30cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQiBu::set_allocated_car_hl_distance_more_30cm_voice(::std::string* car_hl_distance_more_30cm_voice) {
  if (car_hl_distance_more_30cm_voice != NULL) {
    set_has_car_hl_distance_more_30cm_voice();
  } else {
    clear_has_car_hl_distance_more_30cm_voice();
  }
  car_hl_distance_more_30cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_hl_distance_more_30cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_voice)
}

// optional int32 car_hl_distance_more_30cm_deduction = 13;
bool ItemJudgeRuleQiBu::has_car_hl_distance_more_30cm_deduction() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ItemJudgeRuleQiBu::set_has_car_hl_distance_more_30cm_deduction() {
  _has_bits_[0] |= 0x00001000u;
}
void ItemJudgeRuleQiBu::clear_has_car_hl_distance_more_30cm_deduction() {
  _has_bits_[0] &= ~0x00001000u;
}
void ItemJudgeRuleQiBu::clear_car_hl_distance_more_30cm_deduction() {
  car_hl_distance_more_30cm_deduction_ = 0;
  clear_has_car_hl_distance_more_30cm_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleQiBu::car_hl_distance_more_30cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_deduction)
  return car_hl_distance_more_30cm_deduction_;
}
 void ItemJudgeRuleQiBu::set_car_hl_distance_more_30cm_deduction(::google::protobuf::int32 value) {
  set_has_car_hl_distance_more_30cm_deduction();
  car_hl_distance_more_30cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_more_30cm_deduction)
}

// optional string car_hl_distance_less_30cm_voice = 14;
bool ItemJudgeRuleQiBu::has_car_hl_distance_less_30cm_voice() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ItemJudgeRuleQiBu::set_has_car_hl_distance_less_30cm_voice() {
  _has_bits_[0] |= 0x00002000u;
}
void ItemJudgeRuleQiBu::clear_has_car_hl_distance_less_30cm_voice() {
  _has_bits_[0] &= ~0x00002000u;
}
void ItemJudgeRuleQiBu::clear_car_hl_distance_less_30cm_voice() {
  car_hl_distance_less_30cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_hl_distance_less_30cm_voice();
}
 const ::std::string& ItemJudgeRuleQiBu::car_hl_distance_less_30cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
  return car_hl_distance_less_30cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQiBu::set_car_hl_distance_less_30cm_voice(const ::std::string& value) {
  set_has_car_hl_distance_less_30cm_voice();
  car_hl_distance_less_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
}
 void ItemJudgeRuleQiBu::set_car_hl_distance_less_30cm_voice(const char* value) {
  set_has_car_hl_distance_less_30cm_voice();
  car_hl_distance_less_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
}
 void ItemJudgeRuleQiBu::set_car_hl_distance_less_30cm_voice(const char* value, size_t size) {
  set_has_car_hl_distance_less_30cm_voice();
  car_hl_distance_less_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
}
 ::std::string* ItemJudgeRuleQiBu::mutable_car_hl_distance_less_30cm_voice() {
  set_has_car_hl_distance_less_30cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
  return car_hl_distance_less_30cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleQiBu::release_car_hl_distance_less_30cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
  clear_has_car_hl_distance_less_30cm_voice();
  return car_hl_distance_less_30cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQiBu::set_allocated_car_hl_distance_less_30cm_voice(::std::string* car_hl_distance_less_30cm_voice) {
  if (car_hl_distance_less_30cm_voice != NULL) {
    set_has_car_hl_distance_less_30cm_voice();
  } else {
    clear_has_car_hl_distance_less_30cm_voice();
  }
  car_hl_distance_less_30cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_hl_distance_less_30cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_voice)
}

// optional int32 car_hl_distance_less_30cm_deduction = 15;
bool ItemJudgeRuleQiBu::has_car_hl_distance_less_30cm_deduction() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void ItemJudgeRuleQiBu::set_has_car_hl_distance_less_30cm_deduction() {
  _has_bits_[0] |= 0x00004000u;
}
void ItemJudgeRuleQiBu::clear_has_car_hl_distance_less_30cm_deduction() {
  _has_bits_[0] &= ~0x00004000u;
}
void ItemJudgeRuleQiBu::clear_car_hl_distance_less_30cm_deduction() {
  car_hl_distance_less_30cm_deduction_ = 0;
  clear_has_car_hl_distance_less_30cm_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleQiBu::car_hl_distance_less_30cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_deduction)
  return car_hl_distance_less_30cm_deduction_;
}
 void ItemJudgeRuleQiBu::set_car_hl_distance_less_30cm_deduction(::google::protobuf::int32 value) {
  set_has_car_hl_distance_less_30cm_deduction();
  car_hl_distance_less_30cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_hl_distance_less_30cm_deduction)
}

// optional bool car_handbrake_whether_check = 16 [default = true];
bool ItemJudgeRuleQiBu::has_car_handbrake_whether_check() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void ItemJudgeRuleQiBu::set_has_car_handbrake_whether_check() {
  _has_bits_[0] |= 0x00008000u;
}
void ItemJudgeRuleQiBu::clear_has_car_handbrake_whether_check() {
  _has_bits_[0] &= ~0x00008000u;
}
void ItemJudgeRuleQiBu::clear_car_handbrake_whether_check() {
  car_handbrake_whether_check_ = true;
  clear_has_car_handbrake_whether_check();
}
 bool ItemJudgeRuleQiBu::car_handbrake_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_whether_check)
  return car_handbrake_whether_check_;
}
 void ItemJudgeRuleQiBu::set_car_handbrake_whether_check(bool value) {
  set_has_car_handbrake_whether_check();
  car_handbrake_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_whether_check)
}

// optional int32 car_handbrake_more_distance = 17;
bool ItemJudgeRuleQiBu::has_car_handbrake_more_distance() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void ItemJudgeRuleQiBu::set_has_car_handbrake_more_distance() {
  _has_bits_[0] |= 0x00010000u;
}
void ItemJudgeRuleQiBu::clear_has_car_handbrake_more_distance() {
  _has_bits_[0] &= ~0x00010000u;
}
void ItemJudgeRuleQiBu::clear_car_handbrake_more_distance() {
  car_handbrake_more_distance_ = 0;
  clear_has_car_handbrake_more_distance();
}
 ::google::protobuf::int32 ItemJudgeRuleQiBu::car_handbrake_more_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_distance)
  return car_handbrake_more_distance_;
}
 void ItemJudgeRuleQiBu::set_car_handbrake_more_distance(::google::protobuf::int32 value) {
  set_has_car_handbrake_more_distance();
  car_handbrake_more_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_distance)
}

// optional string car_handbrake_more_voice = 18;
bool ItemJudgeRuleQiBu::has_car_handbrake_more_voice() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void ItemJudgeRuleQiBu::set_has_car_handbrake_more_voice() {
  _has_bits_[0] |= 0x00020000u;
}
void ItemJudgeRuleQiBu::clear_has_car_handbrake_more_voice() {
  _has_bits_[0] &= ~0x00020000u;
}
void ItemJudgeRuleQiBu::clear_car_handbrake_more_voice() {
  car_handbrake_more_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_handbrake_more_voice();
}
 const ::std::string& ItemJudgeRuleQiBu::car_handbrake_more_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
  return car_handbrake_more_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQiBu::set_car_handbrake_more_voice(const ::std::string& value) {
  set_has_car_handbrake_more_voice();
  car_handbrake_more_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
}
 void ItemJudgeRuleQiBu::set_car_handbrake_more_voice(const char* value) {
  set_has_car_handbrake_more_voice();
  car_handbrake_more_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
}
 void ItemJudgeRuleQiBu::set_car_handbrake_more_voice(const char* value, size_t size) {
  set_has_car_handbrake_more_voice();
  car_handbrake_more_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
}
 ::std::string* ItemJudgeRuleQiBu::mutable_car_handbrake_more_voice() {
  set_has_car_handbrake_more_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
  return car_handbrake_more_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleQiBu::release_car_handbrake_more_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
  clear_has_car_handbrake_more_voice();
  return car_handbrake_more_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQiBu::set_allocated_car_handbrake_more_voice(::std::string* car_handbrake_more_voice) {
  if (car_handbrake_more_voice != NULL) {
    set_has_car_handbrake_more_voice();
  } else {
    clear_has_car_handbrake_more_voice();
  }
  car_handbrake_more_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_handbrake_more_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_voice)
}

// optional int32 car_handbrake_more_deduction = 19;
bool ItemJudgeRuleQiBu::has_car_handbrake_more_deduction() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void ItemJudgeRuleQiBu::set_has_car_handbrake_more_deduction() {
  _has_bits_[0] |= 0x00040000u;
}
void ItemJudgeRuleQiBu::clear_has_car_handbrake_more_deduction() {
  _has_bits_[0] &= ~0x00040000u;
}
void ItemJudgeRuleQiBu::clear_car_handbrake_more_deduction() {
  car_handbrake_more_deduction_ = 0;
  clear_has_car_handbrake_more_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleQiBu::car_handbrake_more_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_deduction)
  return car_handbrake_more_deduction_;
}
 void ItemJudgeRuleQiBu::set_car_handbrake_more_deduction(::google::protobuf::int32 value) {
  set_has_car_handbrake_more_deduction();
  car_handbrake_more_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_more_deduction)
}

// optional int32 car_handbrake_less_distance = 20;
bool ItemJudgeRuleQiBu::has_car_handbrake_less_distance() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void ItemJudgeRuleQiBu::set_has_car_handbrake_less_distance() {
  _has_bits_[0] |= 0x00080000u;
}
void ItemJudgeRuleQiBu::clear_has_car_handbrake_less_distance() {
  _has_bits_[0] &= ~0x00080000u;
}
void ItemJudgeRuleQiBu::clear_car_handbrake_less_distance() {
  car_handbrake_less_distance_ = 0;
  clear_has_car_handbrake_less_distance();
}
 ::google::protobuf::int32 ItemJudgeRuleQiBu::car_handbrake_less_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_distance)
  return car_handbrake_less_distance_;
}
 void ItemJudgeRuleQiBu::set_car_handbrake_less_distance(::google::protobuf::int32 value) {
  set_has_car_handbrake_less_distance();
  car_handbrake_less_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_distance)
}

// optional string car_handbrake_less_voice = 21;
bool ItemJudgeRuleQiBu::has_car_handbrake_less_voice() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void ItemJudgeRuleQiBu::set_has_car_handbrake_less_voice() {
  _has_bits_[0] |= 0x00100000u;
}
void ItemJudgeRuleQiBu::clear_has_car_handbrake_less_voice() {
  _has_bits_[0] &= ~0x00100000u;
}
void ItemJudgeRuleQiBu::clear_car_handbrake_less_voice() {
  car_handbrake_less_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_handbrake_less_voice();
}
 const ::std::string& ItemJudgeRuleQiBu::car_handbrake_less_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
  return car_handbrake_less_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQiBu::set_car_handbrake_less_voice(const ::std::string& value) {
  set_has_car_handbrake_less_voice();
  car_handbrake_less_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
}
 void ItemJudgeRuleQiBu::set_car_handbrake_less_voice(const char* value) {
  set_has_car_handbrake_less_voice();
  car_handbrake_less_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
}
 void ItemJudgeRuleQiBu::set_car_handbrake_less_voice(const char* value, size_t size) {
  set_has_car_handbrake_less_voice();
  car_handbrake_less_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
}
 ::std::string* ItemJudgeRuleQiBu::mutable_car_handbrake_less_voice() {
  set_has_car_handbrake_less_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
  return car_handbrake_less_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleQiBu::release_car_handbrake_less_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
  clear_has_car_handbrake_less_voice();
  return car_handbrake_less_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQiBu::set_allocated_car_handbrake_less_voice(::std::string* car_handbrake_less_voice) {
  if (car_handbrake_less_voice != NULL) {
    set_has_car_handbrake_less_voice();
  } else {
    clear_has_car_handbrake_less_voice();
  }
  car_handbrake_less_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_handbrake_less_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_voice)
}

// optional int32 car_handbrake_less_deduction = 22;
bool ItemJudgeRuleQiBu::has_car_handbrake_less_deduction() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void ItemJudgeRuleQiBu::set_has_car_handbrake_less_deduction() {
  _has_bits_[0] |= 0x00200000u;
}
void ItemJudgeRuleQiBu::clear_has_car_handbrake_less_deduction() {
  _has_bits_[0] &= ~0x00200000u;
}
void ItemJudgeRuleQiBu::clear_car_handbrake_less_deduction() {
  car_handbrake_less_deduction_ = 0;
  clear_has_car_handbrake_less_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleQiBu::car_handbrake_less_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_deduction)
  return car_handbrake_less_deduction_;
}
 void ItemJudgeRuleQiBu::set_car_handbrake_less_deduction(::google::protobuf::int32 value) {
  set_has_car_handbrake_less_deduction();
  car_handbrake_less_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQiBu.car_handbrake_less_deduction)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleKaoBianTingChe::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleKaoBianTingChe::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleKaoBianTingChe::kBasicRightturnlampFieldNumber;
const int ItemJudgeRuleKaoBianTingChe::kBasicFlameoutFieldNumber;
const int ItemJudgeRuleKaoBianTingChe::kBasicDoorFieldNumber;
const int ItemJudgeRuleKaoBianTingChe::kLimitCompleteDistanceWhetherCheckFieldNumber;
const int ItemJudgeRuleKaoBianTingChe::kLimitCompleteDistanceFieldNumber;
const int ItemJudgeRuleKaoBianTingChe::kLimitCompleteDistanceVoiceFieldNumber;
const int ItemJudgeRuleKaoBianTingChe::kLimitCompleteDistanceDeductionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleKaoBianTingChe::ItemJudgeRuleKaoBianTingChe()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleKaoBianTingChe)
}

void ItemJudgeRuleKaoBianTingChe::InitAsDefaultInstance() {
  basic_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  basic_flameout_ = const_cast< ::OPMessage::BasicFlameout*>(&::OPMessage::BasicFlameout::default_instance());
  basic_door_ = const_cast< ::OPMessage::BasicDoor*>(&::OPMessage::BasicDoor::default_instance());
}

ItemJudgeRuleKaoBianTingChe::ItemJudgeRuleKaoBianTingChe(const ItemJudgeRuleKaoBianTingChe& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleKaoBianTingChe)
}

void ItemJudgeRuleKaoBianTingChe::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basic_rightturnlamp_ = NULL;
  basic_flameout_ = NULL;
  basic_door_ = NULL;
  limit_complete_distance_whether_check_ = true;
  limit_complete_distance_ = 0;
  limit_complete_distance_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limit_complete_distance_deduction_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleKaoBianTingChe::~ItemJudgeRuleKaoBianTingChe() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleKaoBianTingChe)
  SharedDtor();
}

void ItemJudgeRuleKaoBianTingChe::SharedDtor() {
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limit_complete_distance_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_rightturnlamp_;
    delete basic_flameout_;
    delete basic_door_;
  }
}

void ItemJudgeRuleKaoBianTingChe::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleKaoBianTingChe::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleKaoBianTingChe_descriptor_;
}

const ItemJudgeRuleKaoBianTingChe& ItemJudgeRuleKaoBianTingChe::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleKaoBianTingChe* ItemJudgeRuleKaoBianTingChe::default_instance_ = NULL;

ItemJudgeRuleKaoBianTingChe* ItemJudgeRuleKaoBianTingChe::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleKaoBianTingChe* n = new ItemJudgeRuleKaoBianTingChe;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleKaoBianTingChe::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleKaoBianTingChe)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_basic_rightturnlamp()) {
      if (basic_rightturnlamp_ != NULL) basic_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
    if (has_basic_flameout()) {
      if (basic_flameout_ != NULL) basic_flameout_->::OPMessage::BasicFlameout::Clear();
    }
    if (has_basic_door()) {
      if (basic_door_ != NULL) basic_door_->::OPMessage::BasicDoor::Clear();
    }
    limit_complete_distance_whether_check_ = true;
    limit_complete_distance_ = 0;
    if (has_limit_complete_distance_voice()) {
      limit_complete_distance_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  limit_complete_distance_deduction_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleKaoBianTingChe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleKaoBianTingChe)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_start_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_basic_rightturnlamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp basic_rightturnlamp = 3;
      case 3: {
        if (tag == 26) {
         parse_basic_rightturnlamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_basic_flameout;
        break;
      }

      // optional .OPMessage.BasicFlameout basic_flameout = 4;
      case 4: {
        if (tag == 34) {
         parse_basic_flameout:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_flameout()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_basic_door;
        break;
      }

      // optional .OPMessage.BasicDoor basic_door = 5;
      case 5: {
        if (tag == 42) {
         parse_basic_door:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_door()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_limit_complete_distance_whether_check;
        break;
      }

      // optional bool limit_complete_distance_whether_check = 6 [default = true];
      case 6: {
        if (tag == 48) {
         parse_limit_complete_distance_whether_check:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &limit_complete_distance_whether_check_)));
          set_has_limit_complete_distance_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_limit_complete_distance;
        break;
      }

      // optional int32 limit_complete_distance = 7;
      case 7: {
        if (tag == 56) {
         parse_limit_complete_distance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_complete_distance_)));
          set_has_limit_complete_distance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_limit_complete_distance_voice;
        break;
      }

      // optional string limit_complete_distance_voice = 8;
      case 8: {
        if (tag == 66) {
         parse_limit_complete_distance_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_limit_complete_distance_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->limit_complete_distance_voice().data(), this->limit_complete_distance_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_limit_complete_distance_deduction;
        break;
      }

      // optional int32 limit_complete_distance_deduction = 9;
      case 9: {
        if (tag == 72) {
         parse_limit_complete_distance_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_complete_distance_deduction_)));
          set_has_limit_complete_distance_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleKaoBianTingChe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleKaoBianTingChe)
  return false;
#undef DO_
}

void ItemJudgeRuleKaoBianTingChe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleKaoBianTingChe)
  // optional string item_start_voice = 1;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 2;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_end_voice(), output);
  }

  // optional .OPMessage.BasicRightTurnLamp basic_rightturnlamp = 3;
  if (has_basic_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->basic_rightturnlamp_, output);
  }

  // optional .OPMessage.BasicFlameout basic_flameout = 4;
  if (has_basic_flameout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->basic_flameout_, output);
  }

  // optional .OPMessage.BasicDoor basic_door = 5;
  if (has_basic_door()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->basic_door_, output);
  }

  // optional bool limit_complete_distance_whether_check = 6 [default = true];
  if (has_limit_complete_distance_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->limit_complete_distance_whether_check(), output);
  }

  // optional int32 limit_complete_distance = 7;
  if (has_limit_complete_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->limit_complete_distance(), output);
  }

  // optional string limit_complete_distance_voice = 8;
  if (has_limit_complete_distance_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->limit_complete_distance_voice().data(), this->limit_complete_distance_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->limit_complete_distance_voice(), output);
  }

  // optional int32 limit_complete_distance_deduction = 9;
  if (has_limit_complete_distance_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->limit_complete_distance_deduction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleKaoBianTingChe)
}

::google::protobuf::uint8* ItemJudgeRuleKaoBianTingChe::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleKaoBianTingChe)
  // optional string item_start_voice = 1;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 2;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_end_voice(), target);
  }

  // optional .OPMessage.BasicRightTurnLamp basic_rightturnlamp = 3;
  if (has_basic_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->basic_rightturnlamp_, false, target);
  }

  // optional .OPMessage.BasicFlameout basic_flameout = 4;
  if (has_basic_flameout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->basic_flameout_, false, target);
  }

  // optional .OPMessage.BasicDoor basic_door = 5;
  if (has_basic_door()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->basic_door_, false, target);
  }

  // optional bool limit_complete_distance_whether_check = 6 [default = true];
  if (has_limit_complete_distance_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->limit_complete_distance_whether_check(), target);
  }

  // optional int32 limit_complete_distance = 7;
  if (has_limit_complete_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->limit_complete_distance(), target);
  }

  // optional string limit_complete_distance_voice = 8;
  if (has_limit_complete_distance_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->limit_complete_distance_voice().data(), this->limit_complete_distance_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->limit_complete_distance_voice(), target);
  }

  // optional int32 limit_complete_distance_deduction = 9;
  if (has_limit_complete_distance_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->limit_complete_distance_deduction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleKaoBianTingChe)
  return target;
}

int ItemJudgeRuleKaoBianTingChe::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleKaoBianTingChe)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string item_start_voice = 1;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 2;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.BasicRightTurnLamp basic_rightturnlamp = 3;
    if (has_basic_rightturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_rightturnlamp_);
    }

    // optional .OPMessage.BasicFlameout basic_flameout = 4;
    if (has_basic_flameout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_flameout_);
    }

    // optional .OPMessage.BasicDoor basic_door = 5;
    if (has_basic_door()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_door_);
    }

    // optional bool limit_complete_distance_whether_check = 6 [default = true];
    if (has_limit_complete_distance_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 limit_complete_distance = 7;
    if (has_limit_complete_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit_complete_distance());
    }

    // optional string limit_complete_distance_voice = 8;
    if (has_limit_complete_distance_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->limit_complete_distance_voice());
    }

  }
  // optional int32 limit_complete_distance_deduction = 9;
  if (has_limit_complete_distance_deduction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit_complete_distance_deduction());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleKaoBianTingChe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleKaoBianTingChe)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleKaoBianTingChe* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleKaoBianTingChe>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleKaoBianTingChe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleKaoBianTingChe)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleKaoBianTingChe::MergeFrom(const ItemJudgeRuleKaoBianTingChe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleKaoBianTingChe)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_basic_rightturnlamp()) {
      mutable_basic_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.basic_rightturnlamp());
    }
    if (from.has_basic_flameout()) {
      mutable_basic_flameout()->::OPMessage::BasicFlameout::MergeFrom(from.basic_flameout());
    }
    if (from.has_basic_door()) {
      mutable_basic_door()->::OPMessage::BasicDoor::MergeFrom(from.basic_door());
    }
    if (from.has_limit_complete_distance_whether_check()) {
      set_limit_complete_distance_whether_check(from.limit_complete_distance_whether_check());
    }
    if (from.has_limit_complete_distance()) {
      set_limit_complete_distance(from.limit_complete_distance());
    }
    if (from.has_limit_complete_distance_voice()) {
      set_has_limit_complete_distance_voice();
      limit_complete_distance_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.limit_complete_distance_voice_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_limit_complete_distance_deduction()) {
      set_limit_complete_distance_deduction(from.limit_complete_distance_deduction());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleKaoBianTingChe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleKaoBianTingChe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleKaoBianTingChe::CopyFrom(const ItemJudgeRuleKaoBianTingChe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleKaoBianTingChe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleKaoBianTingChe::IsInitialized() const {

  return true;
}

void ItemJudgeRuleKaoBianTingChe::Swap(ItemJudgeRuleKaoBianTingChe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleKaoBianTingChe::InternalSwap(ItemJudgeRuleKaoBianTingChe* other) {
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(basic_rightturnlamp_, other->basic_rightturnlamp_);
  std::swap(basic_flameout_, other->basic_flameout_);
  std::swap(basic_door_, other->basic_door_);
  std::swap(limit_complete_distance_whether_check_, other->limit_complete_distance_whether_check_);
  std::swap(limit_complete_distance_, other->limit_complete_distance_);
  limit_complete_distance_voice_.Swap(&other->limit_complete_distance_voice_);
  std::swap(limit_complete_distance_deduction_, other->limit_complete_distance_deduction_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleKaoBianTingChe::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleKaoBianTingChe_descriptor_;
  metadata.reflection = ItemJudgeRuleKaoBianTingChe_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleKaoBianTingChe

// optional string item_start_voice = 1;
bool ItemJudgeRuleKaoBianTingChe::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleKaoBianTingChe::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleKaoBianTingChe::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleKaoBianTingChe::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleKaoBianTingChe::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleKaoBianTingChe::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
}
 void ItemJudgeRuleKaoBianTingChe::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
}
 void ItemJudgeRuleKaoBianTingChe::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
}
 ::std::string* ItemJudgeRuleKaoBianTingChe::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleKaoBianTingChe::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleKaoBianTingChe::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleKaoBianTingChe.item_start_voice)
}

// optional string item_end_voice = 2;
bool ItemJudgeRuleKaoBianTingChe::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleKaoBianTingChe::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleKaoBianTingChe::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleKaoBianTingChe::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleKaoBianTingChe::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleKaoBianTingChe::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
}
 void ItemJudgeRuleKaoBianTingChe::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
}
 void ItemJudgeRuleKaoBianTingChe::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
}
 ::std::string* ItemJudgeRuleKaoBianTingChe::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleKaoBianTingChe::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleKaoBianTingChe::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleKaoBianTingChe.item_end_voice)
}

// optional .OPMessage.BasicRightTurnLamp basic_rightturnlamp = 3;
bool ItemJudgeRuleKaoBianTingChe::has_basic_rightturnlamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleKaoBianTingChe::set_has_basic_rightturnlamp() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleKaoBianTingChe::clear_has_basic_rightturnlamp() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleKaoBianTingChe::clear_basic_rightturnlamp() {
  if (basic_rightturnlamp_ != NULL) basic_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_basic_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleKaoBianTingChe::basic_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_rightturnlamp)
  return basic_rightturnlamp_ != NULL ? *basic_rightturnlamp_ : *default_instance_->basic_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleKaoBianTingChe::mutable_basic_rightturnlamp() {
  set_has_basic_rightturnlamp();
  if (basic_rightturnlamp_ == NULL) {
    basic_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_rightturnlamp)
  return basic_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleKaoBianTingChe::release_basic_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_rightturnlamp)
  clear_has_basic_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = basic_rightturnlamp_;
  basic_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleKaoBianTingChe::set_allocated_basic_rightturnlamp(::OPMessage::BasicRightTurnLamp* basic_rightturnlamp) {
  delete basic_rightturnlamp_;
  basic_rightturnlamp_ = basic_rightturnlamp;
  if (basic_rightturnlamp) {
    set_has_basic_rightturnlamp();
  } else {
    clear_has_basic_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_rightturnlamp)
}

// optional .OPMessage.BasicFlameout basic_flameout = 4;
bool ItemJudgeRuleKaoBianTingChe::has_basic_flameout() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleKaoBianTingChe::set_has_basic_flameout() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleKaoBianTingChe::clear_has_basic_flameout() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleKaoBianTingChe::clear_basic_flameout() {
  if (basic_flameout_ != NULL) basic_flameout_->::OPMessage::BasicFlameout::Clear();
  clear_has_basic_flameout();
}
const ::OPMessage::BasicFlameout& ItemJudgeRuleKaoBianTingChe::basic_flameout() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_flameout)
  return basic_flameout_ != NULL ? *basic_flameout_ : *default_instance_->basic_flameout_;
}
::OPMessage::BasicFlameout* ItemJudgeRuleKaoBianTingChe::mutable_basic_flameout() {
  set_has_basic_flameout();
  if (basic_flameout_ == NULL) {
    basic_flameout_ = new ::OPMessage::BasicFlameout;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_flameout)
  return basic_flameout_;
}
::OPMessage::BasicFlameout* ItemJudgeRuleKaoBianTingChe::release_basic_flameout() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_flameout)
  clear_has_basic_flameout();
  ::OPMessage::BasicFlameout* temp = basic_flameout_;
  basic_flameout_ = NULL;
  return temp;
}
void ItemJudgeRuleKaoBianTingChe::set_allocated_basic_flameout(::OPMessage::BasicFlameout* basic_flameout) {
  delete basic_flameout_;
  basic_flameout_ = basic_flameout;
  if (basic_flameout) {
    set_has_basic_flameout();
  } else {
    clear_has_basic_flameout();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_flameout)
}

// optional .OPMessage.BasicDoor basic_door = 5;
bool ItemJudgeRuleKaoBianTingChe::has_basic_door() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleKaoBianTingChe::set_has_basic_door() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleKaoBianTingChe::clear_has_basic_door() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleKaoBianTingChe::clear_basic_door() {
  if (basic_door_ != NULL) basic_door_->::OPMessage::BasicDoor::Clear();
  clear_has_basic_door();
}
const ::OPMessage::BasicDoor& ItemJudgeRuleKaoBianTingChe::basic_door() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_door)
  return basic_door_ != NULL ? *basic_door_ : *default_instance_->basic_door_;
}
::OPMessage::BasicDoor* ItemJudgeRuleKaoBianTingChe::mutable_basic_door() {
  set_has_basic_door();
  if (basic_door_ == NULL) {
    basic_door_ = new ::OPMessage::BasicDoor;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_door)
  return basic_door_;
}
::OPMessage::BasicDoor* ItemJudgeRuleKaoBianTingChe::release_basic_door() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_door)
  clear_has_basic_door();
  ::OPMessage::BasicDoor* temp = basic_door_;
  basic_door_ = NULL;
  return temp;
}
void ItemJudgeRuleKaoBianTingChe::set_allocated_basic_door(::OPMessage::BasicDoor* basic_door) {
  delete basic_door_;
  basic_door_ = basic_door;
  if (basic_door) {
    set_has_basic_door();
  } else {
    clear_has_basic_door();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleKaoBianTingChe.basic_door)
}

// optional bool limit_complete_distance_whether_check = 6 [default = true];
bool ItemJudgeRuleKaoBianTingChe::has_limit_complete_distance_whether_check() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleKaoBianTingChe::set_has_limit_complete_distance_whether_check() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleKaoBianTingChe::clear_has_limit_complete_distance_whether_check() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleKaoBianTingChe::clear_limit_complete_distance_whether_check() {
  limit_complete_distance_whether_check_ = true;
  clear_has_limit_complete_distance_whether_check();
}
 bool ItemJudgeRuleKaoBianTingChe::limit_complete_distance_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_whether_check)
  return limit_complete_distance_whether_check_;
}
 void ItemJudgeRuleKaoBianTingChe::set_limit_complete_distance_whether_check(bool value) {
  set_has_limit_complete_distance_whether_check();
  limit_complete_distance_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_whether_check)
}

// optional int32 limit_complete_distance = 7;
bool ItemJudgeRuleKaoBianTingChe::has_limit_complete_distance() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleKaoBianTingChe::set_has_limit_complete_distance() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleKaoBianTingChe::clear_has_limit_complete_distance() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleKaoBianTingChe::clear_limit_complete_distance() {
  limit_complete_distance_ = 0;
  clear_has_limit_complete_distance();
}
 ::google::protobuf::int32 ItemJudgeRuleKaoBianTingChe::limit_complete_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance)
  return limit_complete_distance_;
}
 void ItemJudgeRuleKaoBianTingChe::set_limit_complete_distance(::google::protobuf::int32 value) {
  set_has_limit_complete_distance();
  limit_complete_distance_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance)
}

// optional string limit_complete_distance_voice = 8;
bool ItemJudgeRuleKaoBianTingChe::has_limit_complete_distance_voice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeRuleKaoBianTingChe::set_has_limit_complete_distance_voice() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeRuleKaoBianTingChe::clear_has_limit_complete_distance_voice() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeRuleKaoBianTingChe::clear_limit_complete_distance_voice() {
  limit_complete_distance_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_limit_complete_distance_voice();
}
 const ::std::string& ItemJudgeRuleKaoBianTingChe::limit_complete_distance_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
  return limit_complete_distance_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleKaoBianTingChe::set_limit_complete_distance_voice(const ::std::string& value) {
  set_has_limit_complete_distance_voice();
  limit_complete_distance_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
}
 void ItemJudgeRuleKaoBianTingChe::set_limit_complete_distance_voice(const char* value) {
  set_has_limit_complete_distance_voice();
  limit_complete_distance_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
}
 void ItemJudgeRuleKaoBianTingChe::set_limit_complete_distance_voice(const char* value, size_t size) {
  set_has_limit_complete_distance_voice();
  limit_complete_distance_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
}
 ::std::string* ItemJudgeRuleKaoBianTingChe::mutable_limit_complete_distance_voice() {
  set_has_limit_complete_distance_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
  return limit_complete_distance_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleKaoBianTingChe::release_limit_complete_distance_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
  clear_has_limit_complete_distance_voice();
  return limit_complete_distance_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleKaoBianTingChe::set_allocated_limit_complete_distance_voice(::std::string* limit_complete_distance_voice) {
  if (limit_complete_distance_voice != NULL) {
    set_has_limit_complete_distance_voice();
  } else {
    clear_has_limit_complete_distance_voice();
  }
  limit_complete_distance_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), limit_complete_distance_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_voice)
}

// optional int32 limit_complete_distance_deduction = 9;
bool ItemJudgeRuleKaoBianTingChe::has_limit_complete_distance_deduction() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ItemJudgeRuleKaoBianTingChe::set_has_limit_complete_distance_deduction() {
  _has_bits_[0] |= 0x00000100u;
}
void ItemJudgeRuleKaoBianTingChe::clear_has_limit_complete_distance_deduction() {
  _has_bits_[0] &= ~0x00000100u;
}
void ItemJudgeRuleKaoBianTingChe::clear_limit_complete_distance_deduction() {
  limit_complete_distance_deduction_ = 0;
  clear_has_limit_complete_distance_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleKaoBianTingChe::limit_complete_distance_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_deduction)
  return limit_complete_distance_deduction_;
}
 void ItemJudgeRuleKaoBianTingChe::set_limit_complete_distance_deduction(::google::protobuf::int32 value) {
  set_has_limit_complete_distance_deduction();
  limit_complete_distance_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleKaoBianTingChe.limit_complete_distance_deduction)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleXueXiaoQuYu::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleXueXiaoQuYu::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleXueXiaoQuYu::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleXueXiaoQuYu::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleXueXiaoQuYu::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleXueXiaoQuYu::kBasicSlowdownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleXueXiaoQuYu::ItemJudgeRuleXueXiaoQuYu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleXueXiaoQuYu)
}

void ItemJudgeRuleXueXiaoQuYu::InitAsDefaultInstance() {
  basic_slowdown_ = const_cast< ::OPMessage::BasicSlowDown*>(&::OPMessage::BasicSlowDown::default_instance());
}

ItemJudgeRuleXueXiaoQuYu::ItemJudgeRuleXueXiaoQuYu(const ItemJudgeRuleXueXiaoQuYu& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleXueXiaoQuYu)
}

void ItemJudgeRuleXueXiaoQuYu::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  check_finish_type_ = 0;
  basic_slowdown_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleXueXiaoQuYu::~ItemJudgeRuleXueXiaoQuYu() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleXueXiaoQuYu)
  SharedDtor();
}

void ItemJudgeRuleXueXiaoQuYu::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_slowdown_;
  }
}

void ItemJudgeRuleXueXiaoQuYu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleXueXiaoQuYu::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleXueXiaoQuYu_descriptor_;
}

const ItemJudgeRuleXueXiaoQuYu& ItemJudgeRuleXueXiaoQuYu::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleXueXiaoQuYu* ItemJudgeRuleXueXiaoQuYu::default_instance_ = NULL;

ItemJudgeRuleXueXiaoQuYu* ItemJudgeRuleXueXiaoQuYu::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleXueXiaoQuYu* n = new ItemJudgeRuleXueXiaoQuYu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleXueXiaoQuYu::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleXueXiaoQuYu)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    check_finish_type_ = 0;
    if (has_basic_slowdown()) {
      if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleXueXiaoQuYu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleXueXiaoQuYu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_enter_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionXueXiaoQuYu check_finish_type = 5;
      case 5: {
        if (tag == 40) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionXueXiaoQuYu_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionXueXiaoQuYu >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_basic_slowdown;
        break;
      }

      // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
      case 6: {
        if (tag == 50) {
         parse_basic_slowdown:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_slowdown()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleXueXiaoQuYu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleXueXiaoQuYu)
  return false;
#undef DO_
}

void ItemJudgeRuleXueXiaoQuYu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleXueXiaoQuYu)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_end_voice(), output);
  }

  // optional .OPMessage.CheckFinishCarPositionXueXiaoQuYu check_finish_type = 5;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->check_finish_type(), output);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  if (has_basic_slowdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->basic_slowdown_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleXueXiaoQuYu)
}

::google::protobuf::uint8* ItemJudgeRuleXueXiaoQuYu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleXueXiaoQuYu)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_end_voice(), target);
  }

  // optional .OPMessage.CheckFinishCarPositionXueXiaoQuYu check_finish_type = 5;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->check_finish_type(), target);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  if (has_basic_slowdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->basic_slowdown_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleXueXiaoQuYu)
  return target;
}

int ItemJudgeRuleXueXiaoQuYu::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleXueXiaoQuYu)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional string item_enter_voice = 1;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 2;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 3;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 4;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.CheckFinishCarPositionXueXiaoQuYu check_finish_type = 5;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

    // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
    if (has_basic_slowdown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_slowdown_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleXueXiaoQuYu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleXueXiaoQuYu)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleXueXiaoQuYu* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleXueXiaoQuYu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleXueXiaoQuYu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleXueXiaoQuYu)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleXueXiaoQuYu::MergeFrom(const ItemJudgeRuleXueXiaoQuYu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleXueXiaoQuYu)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
    if (from.has_basic_slowdown()) {
      mutable_basic_slowdown()->::OPMessage::BasicSlowDown::MergeFrom(from.basic_slowdown());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleXueXiaoQuYu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleXueXiaoQuYu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleXueXiaoQuYu::CopyFrom(const ItemJudgeRuleXueXiaoQuYu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleXueXiaoQuYu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleXueXiaoQuYu::IsInitialized() const {

  return true;
}

void ItemJudgeRuleXueXiaoQuYu::Swap(ItemJudgeRuleXueXiaoQuYu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleXueXiaoQuYu::InternalSwap(ItemJudgeRuleXueXiaoQuYu* other) {
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(basic_slowdown_, other->basic_slowdown_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleXueXiaoQuYu::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleXueXiaoQuYu_descriptor_;
  metadata.reflection = ItemJudgeRuleXueXiaoQuYu_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleXueXiaoQuYu

// optional string item_enter_voice = 1;
bool ItemJudgeRuleXueXiaoQuYu::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleXueXiaoQuYu::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleXueXiaoQuYu::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleXueXiaoQuYu::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleXueXiaoQuYu::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleXueXiaoQuYu::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
}
 void ItemJudgeRuleXueXiaoQuYu::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
}
 void ItemJudgeRuleXueXiaoQuYu::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
}
 ::std::string* ItemJudgeRuleXueXiaoQuYu::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleXueXiaoQuYu::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleXueXiaoQuYu::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_enter_voice)
}

// optional string item_leave_voice = 2;
bool ItemJudgeRuleXueXiaoQuYu::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleXueXiaoQuYu::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleXueXiaoQuYu::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleXueXiaoQuYu::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleXueXiaoQuYu::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleXueXiaoQuYu::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
}
 void ItemJudgeRuleXueXiaoQuYu::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
}
 void ItemJudgeRuleXueXiaoQuYu::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
}
 ::std::string* ItemJudgeRuleXueXiaoQuYu::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleXueXiaoQuYu::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleXueXiaoQuYu::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_leave_voice)
}

// optional string item_start_voice = 3;
bool ItemJudgeRuleXueXiaoQuYu::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleXueXiaoQuYu::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleXueXiaoQuYu::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleXueXiaoQuYu::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleXueXiaoQuYu::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleXueXiaoQuYu::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
}
 void ItemJudgeRuleXueXiaoQuYu::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
}
 void ItemJudgeRuleXueXiaoQuYu::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
}
 ::std::string* ItemJudgeRuleXueXiaoQuYu::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleXueXiaoQuYu::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleXueXiaoQuYu::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_start_voice)
}

// optional string item_end_voice = 4;
bool ItemJudgeRuleXueXiaoQuYu::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleXueXiaoQuYu::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleXueXiaoQuYu::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleXueXiaoQuYu::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleXueXiaoQuYu::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleXueXiaoQuYu::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
}
 void ItemJudgeRuleXueXiaoQuYu::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
}
 void ItemJudgeRuleXueXiaoQuYu::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
}
 ::std::string* ItemJudgeRuleXueXiaoQuYu::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleXueXiaoQuYu::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleXueXiaoQuYu::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleXueXiaoQuYu.item_end_voice)
}

// optional .OPMessage.CheckFinishCarPositionXueXiaoQuYu check_finish_type = 5;
bool ItemJudgeRuleXueXiaoQuYu::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleXueXiaoQuYu::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleXueXiaoQuYu::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleXueXiaoQuYu::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionXueXiaoQuYu ItemJudgeRuleXueXiaoQuYu::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleXueXiaoQuYu.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionXueXiaoQuYu >(check_finish_type_);
}
 void ItemJudgeRuleXueXiaoQuYu::set_check_finish_type(::OPMessage::CheckFinishCarPositionXueXiaoQuYu value) {
  assert(::OPMessage::CheckFinishCarPositionXueXiaoQuYu_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleXueXiaoQuYu.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 6;
bool ItemJudgeRuleXueXiaoQuYu::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleXueXiaoQuYu::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleXueXiaoQuYu::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleXueXiaoQuYu::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
const ::OPMessage::BasicSlowDown& ItemJudgeRuleXueXiaoQuYu::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleXueXiaoQuYu.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleXueXiaoQuYu::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleXueXiaoQuYu.basic_slowdown)
  return basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleXueXiaoQuYu::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleXueXiaoQuYu.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
void ItemJudgeRuleXueXiaoQuYu::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleXueXiaoQuYu.basic_slowdown)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleLuKouZuoZhuan::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleLuKouZuoZhuan::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleLuKouZuoZhuan::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleLuKouZuoZhuan::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleLuKouZuoZhuan::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleLuKouZuoZhuan::kBasicSlowdownFieldNumber;
const int ItemJudgeRuleLuKouZuoZhuan::kItemLeftturnlampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleLuKouZuoZhuan::ItemJudgeRuleLuKouZuoZhuan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
}

void ItemJudgeRuleLuKouZuoZhuan::InitAsDefaultInstance() {
  basic_slowdown_ = const_cast< ::OPMessage::BasicSlowDown*>(&::OPMessage::BasicSlowDown::default_instance());
  item_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
}

ItemJudgeRuleLuKouZuoZhuan::ItemJudgeRuleLuKouZuoZhuan(const ItemJudgeRuleLuKouZuoZhuan& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
}

void ItemJudgeRuleLuKouZuoZhuan::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  check_finish_type_ = 0;
  basic_slowdown_ = NULL;
  item_leftturnlamp_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleLuKouZuoZhuan::~ItemJudgeRuleLuKouZuoZhuan() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
  SharedDtor();
}

void ItemJudgeRuleLuKouZuoZhuan::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_slowdown_;
    delete item_leftturnlamp_;
  }
}

void ItemJudgeRuleLuKouZuoZhuan::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleLuKouZuoZhuan::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleLuKouZuoZhuan_descriptor_;
}

const ItemJudgeRuleLuKouZuoZhuan& ItemJudgeRuleLuKouZuoZhuan::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleLuKouZuoZhuan* ItemJudgeRuleLuKouZuoZhuan::default_instance_ = NULL;

ItemJudgeRuleLuKouZuoZhuan* ItemJudgeRuleLuKouZuoZhuan::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleLuKouZuoZhuan* n = new ItemJudgeRuleLuKouZuoZhuan;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleLuKouZuoZhuan::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
  if (_has_bits_[0 / 32] & 127u) {
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    check_finish_type_ = 0;
    if (has_basic_slowdown()) {
      if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
    }
    if (has_item_leftturnlamp()) {
      if (item_leftturnlamp_ != NULL) item_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleLuKouZuoZhuan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_enter_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionLuKouZuoZhuan check_finish_type = 5;
      case 5: {
        if (tag == 40) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionLuKouZuoZhuan_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionLuKouZuoZhuan >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_basic_slowdown;
        break;
      }

      // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
      case 6: {
        if (tag == 50) {
         parse_basic_slowdown:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_slowdown()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_item_leftturnlamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 7;
      case 7: {
        if (tag == 58) {
         parse_item_leftturnlamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
  return false;
#undef DO_
}

void ItemJudgeRuleLuKouZuoZhuan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_end_voice(), output);
  }

  // optional .OPMessage.CheckFinishCarPositionLuKouZuoZhuan check_finish_type = 5;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->check_finish_type(), output);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  if (has_basic_slowdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->basic_slowdown_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 7;
  if (has_item_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->item_leftturnlamp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
}

::google::protobuf::uint8* ItemJudgeRuleLuKouZuoZhuan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_end_voice(), target);
  }

  // optional .OPMessage.CheckFinishCarPositionLuKouZuoZhuan check_finish_type = 5;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->check_finish_type(), target);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  if (has_basic_slowdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->basic_slowdown_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 7;
  if (has_item_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->item_leftturnlamp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
  return target;
}

int ItemJudgeRuleLuKouZuoZhuan::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional string item_enter_voice = 1;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 2;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 3;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 4;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.CheckFinishCarPositionLuKouZuoZhuan check_finish_type = 5;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

    // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
    if (has_basic_slowdown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_slowdown_);
    }

    // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 7;
    if (has_item_leftturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_leftturnlamp_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleLuKouZuoZhuan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleLuKouZuoZhuan* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleLuKouZuoZhuan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleLuKouZuoZhuan::MergeFrom(const ItemJudgeRuleLuKouZuoZhuan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
    if (from.has_basic_slowdown()) {
      mutable_basic_slowdown()->::OPMessage::BasicSlowDown::MergeFrom(from.basic_slowdown());
    }
    if (from.has_item_leftturnlamp()) {
      mutable_item_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.item_leftturnlamp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleLuKouZuoZhuan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleLuKouZuoZhuan::CopyFrom(const ItemJudgeRuleLuKouZuoZhuan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleLuKouZuoZhuan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleLuKouZuoZhuan::IsInitialized() const {

  return true;
}

void ItemJudgeRuleLuKouZuoZhuan::Swap(ItemJudgeRuleLuKouZuoZhuan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleLuKouZuoZhuan::InternalSwap(ItemJudgeRuleLuKouZuoZhuan* other) {
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(basic_slowdown_, other->basic_slowdown_);
  std::swap(item_leftturnlamp_, other->item_leftturnlamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleLuKouZuoZhuan::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleLuKouZuoZhuan_descriptor_;
  metadata.reflection = ItemJudgeRuleLuKouZuoZhuan_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleLuKouZuoZhuan

// optional string item_enter_voice = 1;
bool ItemJudgeRuleLuKouZuoZhuan::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleLuKouZuoZhuan::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleLuKouZuoZhuan::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouZuoZhuan::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
}
 void ItemJudgeRuleLuKouZuoZhuan::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
}
 void ItemJudgeRuleLuKouZuoZhuan::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
}
 ::std::string* ItemJudgeRuleLuKouZuoZhuan::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleLuKouZuoZhuan::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouZuoZhuan::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_enter_voice)
}

// optional string item_leave_voice = 2;
bool ItemJudgeRuleLuKouZuoZhuan::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleLuKouZuoZhuan::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleLuKouZuoZhuan::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouZuoZhuan::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
}
 void ItemJudgeRuleLuKouZuoZhuan::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
}
 void ItemJudgeRuleLuKouZuoZhuan::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
}
 ::std::string* ItemJudgeRuleLuKouZuoZhuan::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleLuKouZuoZhuan::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouZuoZhuan::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leave_voice)
}

// optional string item_start_voice = 3;
bool ItemJudgeRuleLuKouZuoZhuan::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleLuKouZuoZhuan::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleLuKouZuoZhuan::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouZuoZhuan::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
}
 void ItemJudgeRuleLuKouZuoZhuan::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
}
 void ItemJudgeRuleLuKouZuoZhuan::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
}
 ::std::string* ItemJudgeRuleLuKouZuoZhuan::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleLuKouZuoZhuan::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouZuoZhuan::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_start_voice)
}

// optional string item_end_voice = 4;
bool ItemJudgeRuleLuKouZuoZhuan::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleLuKouZuoZhuan::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleLuKouZuoZhuan::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouZuoZhuan::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
}
 void ItemJudgeRuleLuKouZuoZhuan::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
}
 void ItemJudgeRuleLuKouZuoZhuan::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
}
 ::std::string* ItemJudgeRuleLuKouZuoZhuan::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleLuKouZuoZhuan::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouZuoZhuan::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_end_voice)
}

// optional .OPMessage.CheckFinishCarPositionLuKouZuoZhuan check_finish_type = 5;
bool ItemJudgeRuleLuKouZuoZhuan::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleLuKouZuoZhuan::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionLuKouZuoZhuan ItemJudgeRuleLuKouZuoZhuan::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionLuKouZuoZhuan >(check_finish_type_);
}
 void ItemJudgeRuleLuKouZuoZhuan::set_check_finish_type(::OPMessage::CheckFinishCarPositionLuKouZuoZhuan value) {
  assert(::OPMessage::CheckFinishCarPositionLuKouZuoZhuan_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouZuoZhuan.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 6;
bool ItemJudgeRuleLuKouZuoZhuan::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleLuKouZuoZhuan::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
const ::OPMessage::BasicSlowDown& ItemJudgeRuleLuKouZuoZhuan::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleLuKouZuoZhuan::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouZuoZhuan.basic_slowdown)
  return basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleLuKouZuoZhuan::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouZuoZhuan.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
void ItemJudgeRuleLuKouZuoZhuan::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouZuoZhuan.basic_slowdown)
}

// optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 7;
bool ItemJudgeRuleLuKouZuoZhuan::has_item_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleLuKouZuoZhuan::set_has_item_leftturnlamp() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_has_item_leftturnlamp() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleLuKouZuoZhuan::clear_item_leftturnlamp() {
  if (item_leftturnlamp_ != NULL) item_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_item_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleLuKouZuoZhuan::item_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leftturnlamp)
  return item_leftturnlamp_ != NULL ? *item_leftturnlamp_ : *default_instance_->item_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleLuKouZuoZhuan::mutable_item_leftturnlamp() {
  set_has_item_leftturnlamp();
  if (item_leftturnlamp_ == NULL) {
    item_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leftturnlamp)
  return item_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleLuKouZuoZhuan::release_item_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leftturnlamp)
  clear_has_item_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = item_leftturnlamp_;
  item_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleLuKouZuoZhuan::set_allocated_item_leftturnlamp(::OPMessage::BasicLeftTurnLamp* item_leftturnlamp) {
  delete item_leftturnlamp_;
  item_leftturnlamp_ = item_leftturnlamp;
  if (item_leftturnlamp) {
    set_has_item_leftturnlamp();
  } else {
    clear_has_item_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouZuoZhuan.item_leftturnlamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleLuKouYouZhuan::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleLuKouYouZhuan::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleLuKouYouZhuan::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleLuKouYouZhuan::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleLuKouYouZhuan::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleLuKouYouZhuan::kBasicSlowdownFieldNumber;
const int ItemJudgeRuleLuKouYouZhuan::kItemRightturnlampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleLuKouYouZhuan::ItemJudgeRuleLuKouYouZhuan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleLuKouYouZhuan)
}

void ItemJudgeRuleLuKouYouZhuan::InitAsDefaultInstance() {
  basic_slowdown_ = const_cast< ::OPMessage::BasicSlowDown*>(&::OPMessage::BasicSlowDown::default_instance());
  item_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
}

ItemJudgeRuleLuKouYouZhuan::ItemJudgeRuleLuKouYouZhuan(const ItemJudgeRuleLuKouYouZhuan& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleLuKouYouZhuan)
}

void ItemJudgeRuleLuKouYouZhuan::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  check_finish_type_ = 0;
  basic_slowdown_ = NULL;
  item_rightturnlamp_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleLuKouYouZhuan::~ItemJudgeRuleLuKouYouZhuan() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleLuKouYouZhuan)
  SharedDtor();
}

void ItemJudgeRuleLuKouYouZhuan::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_slowdown_;
    delete item_rightturnlamp_;
  }
}

void ItemJudgeRuleLuKouYouZhuan::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleLuKouYouZhuan::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleLuKouYouZhuan_descriptor_;
}

const ItemJudgeRuleLuKouYouZhuan& ItemJudgeRuleLuKouYouZhuan::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleLuKouYouZhuan* ItemJudgeRuleLuKouYouZhuan::default_instance_ = NULL;

ItemJudgeRuleLuKouYouZhuan* ItemJudgeRuleLuKouYouZhuan::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleLuKouYouZhuan* n = new ItemJudgeRuleLuKouYouZhuan;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleLuKouYouZhuan::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleLuKouYouZhuan)
  if (_has_bits_[0 / 32] & 127u) {
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    check_finish_type_ = 0;
    if (has_basic_slowdown()) {
      if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
    }
    if (has_item_rightturnlamp()) {
      if (item_rightturnlamp_ != NULL) item_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleLuKouYouZhuan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleLuKouYouZhuan)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_enter_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionLuKouYouZhuan check_finish_type = 5;
      case 5: {
        if (tag == 40) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionLuKouYouZhuan_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionLuKouYouZhuan >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_basic_slowdown;
        break;
      }

      // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
      case 6: {
        if (tag == 50) {
         parse_basic_slowdown:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_slowdown()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_item_rightturnlamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 7;
      case 7: {
        if (tag == 58) {
         parse_item_rightturnlamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleLuKouYouZhuan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleLuKouYouZhuan)
  return false;
#undef DO_
}

void ItemJudgeRuleLuKouYouZhuan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleLuKouYouZhuan)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_end_voice(), output);
  }

  // optional .OPMessage.CheckFinishCarPositionLuKouYouZhuan check_finish_type = 5;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->check_finish_type(), output);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  if (has_basic_slowdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->basic_slowdown_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 7;
  if (has_item_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->item_rightturnlamp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleLuKouYouZhuan)
}

::google::protobuf::uint8* ItemJudgeRuleLuKouYouZhuan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleLuKouYouZhuan)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_end_voice(), target);
  }

  // optional .OPMessage.CheckFinishCarPositionLuKouYouZhuan check_finish_type = 5;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->check_finish_type(), target);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  if (has_basic_slowdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->basic_slowdown_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 7;
  if (has_item_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->item_rightturnlamp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleLuKouYouZhuan)
  return target;
}

int ItemJudgeRuleLuKouYouZhuan::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleLuKouYouZhuan)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional string item_enter_voice = 1;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 2;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 3;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 4;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.CheckFinishCarPositionLuKouYouZhuan check_finish_type = 5;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

    // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
    if (has_basic_slowdown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_slowdown_);
    }

    // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 7;
    if (has_item_rightturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_rightturnlamp_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleLuKouYouZhuan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleLuKouYouZhuan)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleLuKouYouZhuan* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleLuKouYouZhuan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleLuKouYouZhuan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleLuKouYouZhuan)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleLuKouYouZhuan::MergeFrom(const ItemJudgeRuleLuKouYouZhuan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleLuKouYouZhuan)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
    if (from.has_basic_slowdown()) {
      mutable_basic_slowdown()->::OPMessage::BasicSlowDown::MergeFrom(from.basic_slowdown());
    }
    if (from.has_item_rightturnlamp()) {
      mutable_item_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.item_rightturnlamp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleLuKouYouZhuan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleLuKouYouZhuan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleLuKouYouZhuan::CopyFrom(const ItemJudgeRuleLuKouYouZhuan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleLuKouYouZhuan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleLuKouYouZhuan::IsInitialized() const {

  return true;
}

void ItemJudgeRuleLuKouYouZhuan::Swap(ItemJudgeRuleLuKouYouZhuan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleLuKouYouZhuan::InternalSwap(ItemJudgeRuleLuKouYouZhuan* other) {
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(basic_slowdown_, other->basic_slowdown_);
  std::swap(item_rightturnlamp_, other->item_rightturnlamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleLuKouYouZhuan::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleLuKouYouZhuan_descriptor_;
  metadata.reflection = ItemJudgeRuleLuKouYouZhuan_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleLuKouYouZhuan

// optional string item_enter_voice = 1;
bool ItemJudgeRuleLuKouYouZhuan::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleLuKouYouZhuan::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleLuKouYouZhuan::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouYouZhuan::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
}
 void ItemJudgeRuleLuKouYouZhuan::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
}
 void ItemJudgeRuleLuKouYouZhuan::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
}
 ::std::string* ItemJudgeRuleLuKouYouZhuan::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleLuKouYouZhuan::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouYouZhuan::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_enter_voice)
}

// optional string item_leave_voice = 2;
bool ItemJudgeRuleLuKouYouZhuan::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleLuKouYouZhuan::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleLuKouYouZhuan::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouYouZhuan::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
}
 void ItemJudgeRuleLuKouYouZhuan::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
}
 void ItemJudgeRuleLuKouYouZhuan::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
}
 ::std::string* ItemJudgeRuleLuKouYouZhuan::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleLuKouYouZhuan::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouYouZhuan::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_leave_voice)
}

// optional string item_start_voice = 3;
bool ItemJudgeRuleLuKouYouZhuan::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleLuKouYouZhuan::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleLuKouYouZhuan::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouYouZhuan::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
}
 void ItemJudgeRuleLuKouYouZhuan::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
}
 void ItemJudgeRuleLuKouYouZhuan::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
}
 ::std::string* ItemJudgeRuleLuKouYouZhuan::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleLuKouYouZhuan::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouYouZhuan::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_start_voice)
}

// optional string item_end_voice = 4;
bool ItemJudgeRuleLuKouYouZhuan::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleLuKouYouZhuan::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleLuKouYouZhuan::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouYouZhuan::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
}
 void ItemJudgeRuleLuKouYouZhuan::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
}
 void ItemJudgeRuleLuKouYouZhuan::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
}
 ::std::string* ItemJudgeRuleLuKouYouZhuan::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleLuKouYouZhuan::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleLuKouYouZhuan::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_end_voice)
}

// optional .OPMessage.CheckFinishCarPositionLuKouYouZhuan check_finish_type = 5;
bool ItemJudgeRuleLuKouYouZhuan::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleLuKouYouZhuan::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionLuKouYouZhuan ItemJudgeRuleLuKouYouZhuan::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionLuKouYouZhuan >(check_finish_type_);
}
 void ItemJudgeRuleLuKouYouZhuan::set_check_finish_type(::OPMessage::CheckFinishCarPositionLuKouYouZhuan value) {
  assert(::OPMessage::CheckFinishCarPositionLuKouYouZhuan_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleLuKouYouZhuan.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 6;
bool ItemJudgeRuleLuKouYouZhuan::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleLuKouYouZhuan::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
const ::OPMessage::BasicSlowDown& ItemJudgeRuleLuKouYouZhuan::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleLuKouYouZhuan::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouYouZhuan.basic_slowdown)
  return basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleLuKouYouZhuan::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouYouZhuan.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
void ItemJudgeRuleLuKouYouZhuan::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouYouZhuan.basic_slowdown)
}

// optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 7;
bool ItemJudgeRuleLuKouYouZhuan::has_item_rightturnlamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleLuKouYouZhuan::set_has_item_rightturnlamp() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_has_item_rightturnlamp() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleLuKouYouZhuan::clear_item_rightturnlamp() {
  if (item_rightturnlamp_ != NULL) item_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_item_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleLuKouYouZhuan::item_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_rightturnlamp)
  return item_rightturnlamp_ != NULL ? *item_rightturnlamp_ : *default_instance_->item_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleLuKouYouZhuan::mutable_item_rightturnlamp() {
  set_has_item_rightturnlamp();
  if (item_rightturnlamp_ == NULL) {
    item_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_rightturnlamp)
  return item_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleLuKouYouZhuan::release_item_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_rightturnlamp)
  clear_has_item_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = item_rightturnlamp_;
  item_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleLuKouYouZhuan::set_allocated_item_rightturnlamp(::OPMessage::BasicRightTurnLamp* item_rightturnlamp) {
  delete item_rightturnlamp_;
  item_rightturnlamp_ = item_rightturnlamp;
  if (item_rightturnlamp) {
    set_has_item_rightturnlamp();
  } else {
    clear_has_item_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleLuKouYouZhuan.item_rightturnlamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleZhiXianTongGuoLuKou::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleZhiXianTongGuoLuKou::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleZhiXianTongGuoLuKou::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleZhiXianTongGuoLuKou::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleZhiXianTongGuoLuKou::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleZhiXianTongGuoLuKou::kBasicSlowdownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleZhiXianTongGuoLuKou::ItemJudgeRuleZhiXianTongGuoLuKou()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
}

void ItemJudgeRuleZhiXianTongGuoLuKou::InitAsDefaultInstance() {
  basic_slowdown_ = const_cast< ::OPMessage::BasicSlowDown*>(&::OPMessage::BasicSlowDown::default_instance());
}

ItemJudgeRuleZhiXianTongGuoLuKou::ItemJudgeRuleZhiXianTongGuoLuKou(const ItemJudgeRuleZhiXianTongGuoLuKou& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
}

void ItemJudgeRuleZhiXianTongGuoLuKou::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  check_finish_type_ = 0;
  basic_slowdown_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleZhiXianTongGuoLuKou::~ItemJudgeRuleZhiXianTongGuoLuKou() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
  SharedDtor();
}

void ItemJudgeRuleZhiXianTongGuoLuKou::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_slowdown_;
  }
}

void ItemJudgeRuleZhiXianTongGuoLuKou::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleZhiXianTongGuoLuKou::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleZhiXianTongGuoLuKou_descriptor_;
}

const ItemJudgeRuleZhiXianTongGuoLuKou& ItemJudgeRuleZhiXianTongGuoLuKou::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleZhiXianTongGuoLuKou* ItemJudgeRuleZhiXianTongGuoLuKou::default_instance_ = NULL;

ItemJudgeRuleZhiXianTongGuoLuKou* ItemJudgeRuleZhiXianTongGuoLuKou::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleZhiXianTongGuoLuKou* n = new ItemJudgeRuleZhiXianTongGuoLuKou;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleZhiXianTongGuoLuKou::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    check_finish_type_ = 0;
    if (has_basic_slowdown()) {
      if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleZhiXianTongGuoLuKou::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_enter_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionZhiXianTongGuoLuKou check_finish_type = 5;
      case 5: {
        if (tag == 40) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_basic_slowdown;
        break;
      }

      // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
      case 6: {
        if (tag == 50) {
         parse_basic_slowdown:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_slowdown()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
  return false;
#undef DO_
}

void ItemJudgeRuleZhiXianTongGuoLuKou::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_end_voice(), output);
  }

  // optional .OPMessage.CheckFinishCarPositionZhiXianTongGuoLuKou check_finish_type = 5;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->check_finish_type(), output);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  if (has_basic_slowdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->basic_slowdown_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
}

::google::protobuf::uint8* ItemJudgeRuleZhiXianTongGuoLuKou::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_end_voice(), target);
  }

  // optional .OPMessage.CheckFinishCarPositionZhiXianTongGuoLuKou check_finish_type = 5;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->check_finish_type(), target);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  if (has_basic_slowdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->basic_slowdown_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
  return target;
}

int ItemJudgeRuleZhiXianTongGuoLuKou::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional string item_enter_voice = 1;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 2;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 3;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 4;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.CheckFinishCarPositionZhiXianTongGuoLuKou check_finish_type = 5;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

    // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
    if (has_basic_slowdown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_slowdown_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleZhiXianTongGuoLuKou::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleZhiXianTongGuoLuKou* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleZhiXianTongGuoLuKou>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleZhiXianTongGuoLuKou::MergeFrom(const ItemJudgeRuleZhiXianTongGuoLuKou& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
    if (from.has_basic_slowdown()) {
      mutable_basic_slowdown()->::OPMessage::BasicSlowDown::MergeFrom(from.basic_slowdown());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleZhiXianTongGuoLuKou::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleZhiXianTongGuoLuKou::CopyFrom(const ItemJudgeRuleZhiXianTongGuoLuKou& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleZhiXianTongGuoLuKou::IsInitialized() const {

  return true;
}

void ItemJudgeRuleZhiXianTongGuoLuKou::Swap(ItemJudgeRuleZhiXianTongGuoLuKou* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleZhiXianTongGuoLuKou::InternalSwap(ItemJudgeRuleZhiXianTongGuoLuKou* other) {
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(basic_slowdown_, other->basic_slowdown_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleZhiXianTongGuoLuKou::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleZhiXianTongGuoLuKou_descriptor_;
  metadata.reflection = ItemJudgeRuleZhiXianTongGuoLuKou_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleZhiXianTongGuoLuKou

// optional string item_enter_voice = 1;
bool ItemJudgeRuleZhiXianTongGuoLuKou::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleZhiXianTongGuoLuKou::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
}
 ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_enter_voice)
}

// optional string item_leave_voice = 2;
bool ItemJudgeRuleZhiXianTongGuoLuKou::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleZhiXianTongGuoLuKou::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
}
 ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_leave_voice)
}

// optional string item_start_voice = 3;
bool ItemJudgeRuleZhiXianTongGuoLuKou::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleZhiXianTongGuoLuKou::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
}
 ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_start_voice)
}

// optional string item_end_voice = 4;
bool ItemJudgeRuleZhiXianTongGuoLuKou::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleZhiXianTongGuoLuKou::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
}
 ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZhiXianTongGuoLuKou::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.item_end_voice)
}

// optional .OPMessage.CheckFinishCarPositionZhiXianTongGuoLuKou check_finish_type = 5;
bool ItemJudgeRuleZhiXianTongGuoLuKou::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou ItemJudgeRuleZhiXianTongGuoLuKou::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou >(check_finish_type_);
}
 void ItemJudgeRuleZhiXianTongGuoLuKou::set_check_finish_type(::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou value) {
  assert(::OPMessage::CheckFinishCarPositionZhiXianTongGuoLuKou_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 6;
bool ItemJudgeRuleZhiXianTongGuoLuKou::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
const ::OPMessage::BasicSlowDown& ItemJudgeRuleZhiXianTongGuoLuKou::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleZhiXianTongGuoLuKou::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.basic_slowdown)
  return basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleZhiXianTongGuoLuKou::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
void ItemJudgeRuleZhiXianTongGuoLuKou::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou.basic_slowdown)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleGongGongQiCheZhan::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleGongGongQiCheZhan::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleGongGongQiCheZhan::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleGongGongQiCheZhan::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleGongGongQiCheZhan::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleGongGongQiCheZhan::kBasicSlowdownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleGongGongQiCheZhan::ItemJudgeRuleGongGongQiCheZhan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
}

void ItemJudgeRuleGongGongQiCheZhan::InitAsDefaultInstance() {
  basic_slowdown_ = const_cast< ::OPMessage::BasicSlowDown*>(&::OPMessage::BasicSlowDown::default_instance());
}

ItemJudgeRuleGongGongQiCheZhan::ItemJudgeRuleGongGongQiCheZhan(const ItemJudgeRuleGongGongQiCheZhan& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
}

void ItemJudgeRuleGongGongQiCheZhan::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  check_finish_type_ = 0;
  basic_slowdown_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleGongGongQiCheZhan::~ItemJudgeRuleGongGongQiCheZhan() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
  SharedDtor();
}

void ItemJudgeRuleGongGongQiCheZhan::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_slowdown_;
  }
}

void ItemJudgeRuleGongGongQiCheZhan::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleGongGongQiCheZhan::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleGongGongQiCheZhan_descriptor_;
}

const ItemJudgeRuleGongGongQiCheZhan& ItemJudgeRuleGongGongQiCheZhan::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleGongGongQiCheZhan* ItemJudgeRuleGongGongQiCheZhan::default_instance_ = NULL;

ItemJudgeRuleGongGongQiCheZhan* ItemJudgeRuleGongGongQiCheZhan::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleGongGongQiCheZhan* n = new ItemJudgeRuleGongGongQiCheZhan;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleGongGongQiCheZhan::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    check_finish_type_ = 0;
    if (has_basic_slowdown()) {
      if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleGongGongQiCheZhan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_enter_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionGongGongQiCheZhan check_finish_type = 5;
      case 5: {
        if (tag == 40) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionGongGongQiCheZhan_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionGongGongQiCheZhan >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_basic_slowdown;
        break;
      }

      // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
      case 6: {
        if (tag == 50) {
         parse_basic_slowdown:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_slowdown()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
  return false;
#undef DO_
}

void ItemJudgeRuleGongGongQiCheZhan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_end_voice(), output);
  }

  // optional .OPMessage.CheckFinishCarPositionGongGongQiCheZhan check_finish_type = 5;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->check_finish_type(), output);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  if (has_basic_slowdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->basic_slowdown_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
}

::google::protobuf::uint8* ItemJudgeRuleGongGongQiCheZhan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_end_voice(), target);
  }

  // optional .OPMessage.CheckFinishCarPositionGongGongQiCheZhan check_finish_type = 5;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->check_finish_type(), target);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  if (has_basic_slowdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->basic_slowdown_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
  return target;
}

int ItemJudgeRuleGongGongQiCheZhan::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional string item_enter_voice = 1;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 2;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 3;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 4;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.CheckFinishCarPositionGongGongQiCheZhan check_finish_type = 5;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

    // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
    if (has_basic_slowdown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_slowdown_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleGongGongQiCheZhan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleGongGongQiCheZhan* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleGongGongQiCheZhan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleGongGongQiCheZhan::MergeFrom(const ItemJudgeRuleGongGongQiCheZhan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
    if (from.has_basic_slowdown()) {
      mutable_basic_slowdown()->::OPMessage::BasicSlowDown::MergeFrom(from.basic_slowdown());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleGongGongQiCheZhan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleGongGongQiCheZhan::CopyFrom(const ItemJudgeRuleGongGongQiCheZhan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleGongGongQiCheZhan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleGongGongQiCheZhan::IsInitialized() const {

  return true;
}

void ItemJudgeRuleGongGongQiCheZhan::Swap(ItemJudgeRuleGongGongQiCheZhan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleGongGongQiCheZhan::InternalSwap(ItemJudgeRuleGongGongQiCheZhan* other) {
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(basic_slowdown_, other->basic_slowdown_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleGongGongQiCheZhan::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleGongGongQiCheZhan_descriptor_;
  metadata.reflection = ItemJudgeRuleGongGongQiCheZhan_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleGongGongQiCheZhan

// optional string item_enter_voice = 1;
bool ItemJudgeRuleGongGongQiCheZhan::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleGongGongQiCheZhan::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleGongGongQiCheZhan::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleGongGongQiCheZhan::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleGongGongQiCheZhan::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleGongGongQiCheZhan::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
}
 void ItemJudgeRuleGongGongQiCheZhan::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
}
 void ItemJudgeRuleGongGongQiCheZhan::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
}
 ::std::string* ItemJudgeRuleGongGongQiCheZhan::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleGongGongQiCheZhan::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleGongGongQiCheZhan::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_enter_voice)
}

// optional string item_leave_voice = 2;
bool ItemJudgeRuleGongGongQiCheZhan::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleGongGongQiCheZhan::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleGongGongQiCheZhan::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleGongGongQiCheZhan::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleGongGongQiCheZhan::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleGongGongQiCheZhan::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
}
 void ItemJudgeRuleGongGongQiCheZhan::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
}
 void ItemJudgeRuleGongGongQiCheZhan::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
}
 ::std::string* ItemJudgeRuleGongGongQiCheZhan::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleGongGongQiCheZhan::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleGongGongQiCheZhan::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_leave_voice)
}

// optional string item_start_voice = 3;
bool ItemJudgeRuleGongGongQiCheZhan::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleGongGongQiCheZhan::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleGongGongQiCheZhan::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleGongGongQiCheZhan::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleGongGongQiCheZhan::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleGongGongQiCheZhan::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
}
 void ItemJudgeRuleGongGongQiCheZhan::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
}
 void ItemJudgeRuleGongGongQiCheZhan::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
}
 ::std::string* ItemJudgeRuleGongGongQiCheZhan::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleGongGongQiCheZhan::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleGongGongQiCheZhan::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_start_voice)
}

// optional string item_end_voice = 4;
bool ItemJudgeRuleGongGongQiCheZhan::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleGongGongQiCheZhan::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleGongGongQiCheZhan::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleGongGongQiCheZhan::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleGongGongQiCheZhan::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleGongGongQiCheZhan::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
}
 void ItemJudgeRuleGongGongQiCheZhan::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
}
 void ItemJudgeRuleGongGongQiCheZhan::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
}
 ::std::string* ItemJudgeRuleGongGongQiCheZhan::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleGongGongQiCheZhan::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleGongGongQiCheZhan::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleGongGongQiCheZhan.item_end_voice)
}

// optional .OPMessage.CheckFinishCarPositionGongGongQiCheZhan check_finish_type = 5;
bool ItemJudgeRuleGongGongQiCheZhan::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleGongGongQiCheZhan::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleGongGongQiCheZhan::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleGongGongQiCheZhan::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionGongGongQiCheZhan ItemJudgeRuleGongGongQiCheZhan::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleGongGongQiCheZhan.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionGongGongQiCheZhan >(check_finish_type_);
}
 void ItemJudgeRuleGongGongQiCheZhan::set_check_finish_type(::OPMessage::CheckFinishCarPositionGongGongQiCheZhan value) {
  assert(::OPMessage::CheckFinishCarPositionGongGongQiCheZhan_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleGongGongQiCheZhan.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 6;
bool ItemJudgeRuleGongGongQiCheZhan::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleGongGongQiCheZhan::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleGongGongQiCheZhan::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleGongGongQiCheZhan::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
const ::OPMessage::BasicSlowDown& ItemJudgeRuleGongGongQiCheZhan::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleGongGongQiCheZhan.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleGongGongQiCheZhan::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleGongGongQiCheZhan.basic_slowdown)
  return basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleGongGongQiCheZhan::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleGongGongQiCheZhan.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
void ItemJudgeRuleGongGongQiCheZhan::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleGongGongQiCheZhan.basic_slowdown)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleRenXingHengDao::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleRenXingHengDao::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleRenXingHengDao::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleRenXingHengDao::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleRenXingHengDao::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleRenXingHengDao::kBasicSlowdownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleRenXingHengDao::ItemJudgeRuleRenXingHengDao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleRenXingHengDao)
}

void ItemJudgeRuleRenXingHengDao::InitAsDefaultInstance() {
  basic_slowdown_ = const_cast< ::OPMessage::BasicSlowDown*>(&::OPMessage::BasicSlowDown::default_instance());
}

ItemJudgeRuleRenXingHengDao::ItemJudgeRuleRenXingHengDao(const ItemJudgeRuleRenXingHengDao& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleRenXingHengDao)
}

void ItemJudgeRuleRenXingHengDao::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  check_finish_type_ = 0;
  basic_slowdown_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleRenXingHengDao::~ItemJudgeRuleRenXingHengDao() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleRenXingHengDao)
  SharedDtor();
}

void ItemJudgeRuleRenXingHengDao::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_slowdown_;
  }
}

void ItemJudgeRuleRenXingHengDao::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleRenXingHengDao::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleRenXingHengDao_descriptor_;
}

const ItemJudgeRuleRenXingHengDao& ItemJudgeRuleRenXingHengDao::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleRenXingHengDao* ItemJudgeRuleRenXingHengDao::default_instance_ = NULL;

ItemJudgeRuleRenXingHengDao* ItemJudgeRuleRenXingHengDao::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleRenXingHengDao* n = new ItemJudgeRuleRenXingHengDao;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleRenXingHengDao::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleRenXingHengDao)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    check_finish_type_ = 0;
    if (has_basic_slowdown()) {
      if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleRenXingHengDao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleRenXingHengDao)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_enter_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionRenXingHengDao check_finish_type = 5;
      case 5: {
        if (tag == 40) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionRenXingHengDao_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionRenXingHengDao >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_basic_slowdown;
        break;
      }

      // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
      case 6: {
        if (tag == 50) {
         parse_basic_slowdown:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_slowdown()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleRenXingHengDao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleRenXingHengDao)
  return false;
#undef DO_
}

void ItemJudgeRuleRenXingHengDao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleRenXingHengDao)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_end_voice(), output);
  }

  // optional .OPMessage.CheckFinishCarPositionRenXingHengDao check_finish_type = 5;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->check_finish_type(), output);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  if (has_basic_slowdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->basic_slowdown_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleRenXingHengDao)
}

::google::protobuf::uint8* ItemJudgeRuleRenXingHengDao::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleRenXingHengDao)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_end_voice(), target);
  }

  // optional .OPMessage.CheckFinishCarPositionRenXingHengDao check_finish_type = 5;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->check_finish_type(), target);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
  if (has_basic_slowdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->basic_slowdown_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleRenXingHengDao)
  return target;
}

int ItemJudgeRuleRenXingHengDao::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleRenXingHengDao)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional string item_enter_voice = 1;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 2;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 3;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 4;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.CheckFinishCarPositionRenXingHengDao check_finish_type = 5;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

    // optional .OPMessage.BasicSlowDown basic_slowdown = 6;
    if (has_basic_slowdown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_slowdown_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleRenXingHengDao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleRenXingHengDao)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleRenXingHengDao* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleRenXingHengDao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleRenXingHengDao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleRenXingHengDao)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleRenXingHengDao::MergeFrom(const ItemJudgeRuleRenXingHengDao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleRenXingHengDao)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
    if (from.has_basic_slowdown()) {
      mutable_basic_slowdown()->::OPMessage::BasicSlowDown::MergeFrom(from.basic_slowdown());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleRenXingHengDao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleRenXingHengDao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleRenXingHengDao::CopyFrom(const ItemJudgeRuleRenXingHengDao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleRenXingHengDao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleRenXingHengDao::IsInitialized() const {

  return true;
}

void ItemJudgeRuleRenXingHengDao::Swap(ItemJudgeRuleRenXingHengDao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleRenXingHengDao::InternalSwap(ItemJudgeRuleRenXingHengDao* other) {
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(basic_slowdown_, other->basic_slowdown_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleRenXingHengDao::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleRenXingHengDao_descriptor_;
  metadata.reflection = ItemJudgeRuleRenXingHengDao_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleRenXingHengDao

// optional string item_enter_voice = 1;
bool ItemJudgeRuleRenXingHengDao::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleRenXingHengDao::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleRenXingHengDao::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleRenXingHengDao::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleRenXingHengDao::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleRenXingHengDao::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
}
 void ItemJudgeRuleRenXingHengDao::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
}
 void ItemJudgeRuleRenXingHengDao::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
}
 ::std::string* ItemJudgeRuleRenXingHengDao::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleRenXingHengDao::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleRenXingHengDao::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleRenXingHengDao.item_enter_voice)
}

// optional string item_leave_voice = 2;
bool ItemJudgeRuleRenXingHengDao::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleRenXingHengDao::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleRenXingHengDao::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleRenXingHengDao::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleRenXingHengDao::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleRenXingHengDao::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
}
 void ItemJudgeRuleRenXingHengDao::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
}
 void ItemJudgeRuleRenXingHengDao::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
}
 ::std::string* ItemJudgeRuleRenXingHengDao::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleRenXingHengDao::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleRenXingHengDao::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleRenXingHengDao.item_leave_voice)
}

// optional string item_start_voice = 3;
bool ItemJudgeRuleRenXingHengDao::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleRenXingHengDao::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleRenXingHengDao::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleRenXingHengDao::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleRenXingHengDao::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleRenXingHengDao::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
}
 void ItemJudgeRuleRenXingHengDao::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
}
 void ItemJudgeRuleRenXingHengDao::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
}
 ::std::string* ItemJudgeRuleRenXingHengDao::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleRenXingHengDao::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleRenXingHengDao::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleRenXingHengDao.item_start_voice)
}

// optional string item_end_voice = 4;
bool ItemJudgeRuleRenXingHengDao::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleRenXingHengDao::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleRenXingHengDao::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleRenXingHengDao::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleRenXingHengDao::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleRenXingHengDao::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
}
 void ItemJudgeRuleRenXingHengDao::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
}
 void ItemJudgeRuleRenXingHengDao::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
}
 ::std::string* ItemJudgeRuleRenXingHengDao::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleRenXingHengDao::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleRenXingHengDao::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleRenXingHengDao.item_end_voice)
}

// optional .OPMessage.CheckFinishCarPositionRenXingHengDao check_finish_type = 5;
bool ItemJudgeRuleRenXingHengDao::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleRenXingHengDao::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleRenXingHengDao::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleRenXingHengDao::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionRenXingHengDao ItemJudgeRuleRenXingHengDao::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleRenXingHengDao.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionRenXingHengDao >(check_finish_type_);
}
 void ItemJudgeRuleRenXingHengDao::set_check_finish_type(::OPMessage::CheckFinishCarPositionRenXingHengDao value) {
  assert(::OPMessage::CheckFinishCarPositionRenXingHengDao_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleRenXingHengDao.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 6;
bool ItemJudgeRuleRenXingHengDao::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleRenXingHengDao::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleRenXingHengDao::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleRenXingHengDao::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
const ::OPMessage::BasicSlowDown& ItemJudgeRuleRenXingHengDao::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleRenXingHengDao.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleRenXingHengDao::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleRenXingHengDao.basic_slowdown)
  return basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleRenXingHengDao::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleRenXingHengDao.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
void ItemJudgeRuleRenXingHengDao::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleRenXingHengDao.basic_slowdown)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleZhiXianXingShi::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleZhiXianXingShi::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleZhiXianXingShi::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleZhiXianXingShi::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleZhiXianXingShi::kItemDirectionCheckFieldNumber;
const int ItemJudgeRuleZhiXianXingShi::kItemDirectionDeductionFieldNumber;
const int ItemJudgeRuleZhiXianXingShi::kItemDirectionAngleLimitFieldNumber;
const int ItemJudgeRuleZhiXianXingShi::kItemDirectionLastingTimeFieldNumber;
const int ItemJudgeRuleZhiXianXingShi::kItemDirectionVoiceFieldNumber;
const int ItemJudgeRuleZhiXianXingShi::kItemDistanceFieldNumber;
const int ItemJudgeRuleZhiXianXingShi::kItemTimeFieldNumber;
const int ItemJudgeRuleZhiXianXingShi::kItemSpeedFieldNumber;
const int ItemJudgeRuleZhiXianXingShi::kCheckFinishTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleZhiXianXingShi::ItemJudgeRuleZhiXianXingShi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleZhiXianXingShi)
}

void ItemJudgeRuleZhiXianXingShi::InitAsDefaultInstance() {
  item_distance_ = const_cast< ::OPMessage::ItemJudgeDistance*>(&::OPMessage::ItemJudgeDistance::default_instance());
  item_time_ = const_cast< ::OPMessage::ItemJudgeTime*>(&::OPMessage::ItemJudgeTime::default_instance());
  item_speed_ = const_cast< ::OPMessage::ItemJudgeSpeed*>(&::OPMessage::ItemJudgeSpeed::default_instance());
}

ItemJudgeRuleZhiXianXingShi::ItemJudgeRuleZhiXianXingShi(const ItemJudgeRuleZhiXianXingShi& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleZhiXianXingShi)
}

void ItemJudgeRuleZhiXianXingShi::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_direction_check_ = false;
  item_direction_deduction_ = 0;
  item_direction_angle_limit_ = 0;
  item_direction_lasting_time_ = 0;
  item_direction_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_distance_ = NULL;
  item_time_ = NULL;
  item_speed_ = NULL;
  check_finish_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleZhiXianXingShi::~ItemJudgeRuleZhiXianXingShi() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleZhiXianXingShi)
  SharedDtor();
}

void ItemJudgeRuleZhiXianXingShi::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_direction_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete item_distance_;
    delete item_time_;
    delete item_speed_;
  }
}

void ItemJudgeRuleZhiXianXingShi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleZhiXianXingShi::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleZhiXianXingShi_descriptor_;
}

const ItemJudgeRuleZhiXianXingShi& ItemJudgeRuleZhiXianXingShi::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleZhiXianXingShi* ItemJudgeRuleZhiXianXingShi::default_instance_ = NULL;

ItemJudgeRuleZhiXianXingShi* ItemJudgeRuleZhiXianXingShi::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleZhiXianXingShi* n = new ItemJudgeRuleZhiXianXingShi;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleZhiXianXingShi::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleZhiXianXingShi)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeRuleZhiXianXingShi, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeRuleZhiXianXingShi*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(item_direction_check_, item_direction_lasting_time_);
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 7936u) {
    if (has_item_direction_voice()) {
      item_direction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_distance()) {
      if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
    }
    if (has_item_time()) {
      if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
    }
    if (has_item_speed()) {
      if (item_speed_ != NULL) item_speed_->::OPMessage::ItemJudgeSpeed::Clear();
    }
    check_finish_type_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleZhiXianXingShi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleZhiXianXingShi)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_enter_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_item_direction_check;
        break;
      }

      // optional bool item_direction_check = 5;
      case 5: {
        if (tag == 40) {
         parse_item_direction_check:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &item_direction_check_)));
          set_has_item_direction_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_item_direction_deduction;
        break;
      }

      // optional int32 item_direction_deduction = 6;
      case 6: {
        if (tag == 48) {
         parse_item_direction_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_direction_deduction_)));
          set_has_item_direction_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_item_direction_angle_limit;
        break;
      }

      // optional int32 item_direction_angle_limit = 7;
      case 7: {
        if (tag == 56) {
         parse_item_direction_angle_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_direction_angle_limit_)));
          set_has_item_direction_angle_limit();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_item_direction_lasting_time;
        break;
      }

      // optional int32 item_direction_lasting_time = 8;
      case 8: {
        if (tag == 64) {
         parse_item_direction_lasting_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_direction_lasting_time_)));
          set_has_item_direction_lasting_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_item_direction_voice;
        break;
      }

      // optional string item_direction_voice = 9;
      case 9: {
        if (tag == 74) {
         parse_item_direction_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_direction_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_direction_voice().data(), this->item_direction_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_item_distance;
        break;
      }

      // optional .OPMessage.ItemJudgeDistance item_distance = 10;
      case 10: {
        if (tag == 82) {
         parse_item_distance:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_distance()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_item_time;
        break;
      }

      // optional .OPMessage.ItemJudgeTime item_time = 11;
      case 11: {
        if (tag == 90) {
         parse_item_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_item_speed;
        break;
      }

      // optional .OPMessage.ItemJudgeSpeed item_speed = 12;
      case 12: {
        if (tag == 98) {
         parse_item_speed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_speed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionZhiXianXingShi check_finish_type = 13;
      case 13: {
        if (tag == 104) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionZhiXianXingShi_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionZhiXianXingShi >(value));
          } else {
            mutable_unknown_fields()->AddVarint(13, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleZhiXianXingShi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleZhiXianXingShi)
  return false;
#undef DO_
}

void ItemJudgeRuleZhiXianXingShi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleZhiXianXingShi)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_end_voice(), output);
  }

  // optional bool item_direction_check = 5;
  if (has_item_direction_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->item_direction_check(), output);
  }

  // optional int32 item_direction_deduction = 6;
  if (has_item_direction_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->item_direction_deduction(), output);
  }

  // optional int32 item_direction_angle_limit = 7;
  if (has_item_direction_angle_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->item_direction_angle_limit(), output);
  }

  // optional int32 item_direction_lasting_time = 8;
  if (has_item_direction_lasting_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->item_direction_lasting_time(), output);
  }

  // optional string item_direction_voice = 9;
  if (has_item_direction_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_direction_voice().data(), this->item_direction_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->item_direction_voice(), output);
  }

  // optional .OPMessage.ItemJudgeDistance item_distance = 10;
  if (has_item_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->item_distance_, output);
  }

  // optional .OPMessage.ItemJudgeTime item_time = 11;
  if (has_item_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->item_time_, output);
  }

  // optional .OPMessage.ItemJudgeSpeed item_speed = 12;
  if (has_item_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->item_speed_, output);
  }

  // optional .OPMessage.CheckFinishCarPositionZhiXianXingShi check_finish_type = 13;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->check_finish_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleZhiXianXingShi)
}

::google::protobuf::uint8* ItemJudgeRuleZhiXianXingShi::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleZhiXianXingShi)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_end_voice(), target);
  }

  // optional bool item_direction_check = 5;
  if (has_item_direction_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->item_direction_check(), target);
  }

  // optional int32 item_direction_deduction = 6;
  if (has_item_direction_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->item_direction_deduction(), target);
  }

  // optional int32 item_direction_angle_limit = 7;
  if (has_item_direction_angle_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->item_direction_angle_limit(), target);
  }

  // optional int32 item_direction_lasting_time = 8;
  if (has_item_direction_lasting_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->item_direction_lasting_time(), target);
  }

  // optional string item_direction_voice = 9;
  if (has_item_direction_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_direction_voice().data(), this->item_direction_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->item_direction_voice(), target);
  }

  // optional .OPMessage.ItemJudgeDistance item_distance = 10;
  if (has_item_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->item_distance_, false, target);
  }

  // optional .OPMessage.ItemJudgeTime item_time = 11;
  if (has_item_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->item_time_, false, target);
  }

  // optional .OPMessage.ItemJudgeSpeed item_speed = 12;
  if (has_item_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->item_speed_, false, target);
  }

  // optional .OPMessage.CheckFinishCarPositionZhiXianXingShi check_finish_type = 13;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->check_finish_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleZhiXianXingShi)
  return target;
}

int ItemJudgeRuleZhiXianXingShi::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleZhiXianXingShi)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string item_enter_voice = 1;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 2;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 3;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 4;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional bool item_direction_check = 5;
    if (has_item_direction_check()) {
      total_size += 1 + 1;
    }

    // optional int32 item_direction_deduction = 6;
    if (has_item_direction_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_direction_deduction());
    }

    // optional int32 item_direction_angle_limit = 7;
    if (has_item_direction_angle_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_direction_angle_limit());
    }

    // optional int32 item_direction_lasting_time = 8;
    if (has_item_direction_lasting_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_direction_lasting_time());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional string item_direction_voice = 9;
    if (has_item_direction_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_direction_voice());
    }

    // optional .OPMessage.ItemJudgeDistance item_distance = 10;
    if (has_item_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_distance_);
    }

    // optional .OPMessage.ItemJudgeTime item_time = 11;
    if (has_item_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_time_);
    }

    // optional .OPMessage.ItemJudgeSpeed item_speed = 12;
    if (has_item_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_speed_);
    }

    // optional .OPMessage.CheckFinishCarPositionZhiXianXingShi check_finish_type = 13;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleZhiXianXingShi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleZhiXianXingShi)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleZhiXianXingShi* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleZhiXianXingShi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleZhiXianXingShi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleZhiXianXingShi)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleZhiXianXingShi::MergeFrom(const ItemJudgeRuleZhiXianXingShi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleZhiXianXingShi)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_item_direction_check()) {
      set_item_direction_check(from.item_direction_check());
    }
    if (from.has_item_direction_deduction()) {
      set_item_direction_deduction(from.item_direction_deduction());
    }
    if (from.has_item_direction_angle_limit()) {
      set_item_direction_angle_limit(from.item_direction_angle_limit());
    }
    if (from.has_item_direction_lasting_time()) {
      set_item_direction_lasting_time(from.item_direction_lasting_time());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_item_direction_voice()) {
      set_has_item_direction_voice();
      item_direction_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_direction_voice_);
    }
    if (from.has_item_distance()) {
      mutable_item_distance()->::OPMessage::ItemJudgeDistance::MergeFrom(from.item_distance());
    }
    if (from.has_item_time()) {
      mutable_item_time()->::OPMessage::ItemJudgeTime::MergeFrom(from.item_time());
    }
    if (from.has_item_speed()) {
      mutable_item_speed()->::OPMessage::ItemJudgeSpeed::MergeFrom(from.item_speed());
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleZhiXianXingShi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleZhiXianXingShi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleZhiXianXingShi::CopyFrom(const ItemJudgeRuleZhiXianXingShi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleZhiXianXingShi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleZhiXianXingShi::IsInitialized() const {

  return true;
}

void ItemJudgeRuleZhiXianXingShi::Swap(ItemJudgeRuleZhiXianXingShi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleZhiXianXingShi::InternalSwap(ItemJudgeRuleZhiXianXingShi* other) {
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(item_direction_check_, other->item_direction_check_);
  std::swap(item_direction_deduction_, other->item_direction_deduction_);
  std::swap(item_direction_angle_limit_, other->item_direction_angle_limit_);
  std::swap(item_direction_lasting_time_, other->item_direction_lasting_time_);
  item_direction_voice_.Swap(&other->item_direction_voice_);
  std::swap(item_distance_, other->item_distance_);
  std::swap(item_time_, other->item_time_);
  std::swap(item_speed_, other->item_speed_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleZhiXianXingShi::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleZhiXianXingShi_descriptor_;
  metadata.reflection = ItemJudgeRuleZhiXianXingShi_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleZhiXianXingShi

// optional string item_enter_voice = 1;
bool ItemJudgeRuleZhiXianXingShi::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleZhiXianXingShi::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleZhiXianXingShi::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleZhiXianXingShi::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleZhiXianXingShi::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianXingShi::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
}
 void ItemJudgeRuleZhiXianXingShi::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
}
 void ItemJudgeRuleZhiXianXingShi::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
}
 ::std::string* ItemJudgeRuleZhiXianXingShi::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZhiXianXingShi::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianXingShi::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_enter_voice)
}

// optional string item_leave_voice = 2;
bool ItemJudgeRuleZhiXianXingShi::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleZhiXianXingShi::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleZhiXianXingShi::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleZhiXianXingShi::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleZhiXianXingShi::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianXingShi::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
}
 void ItemJudgeRuleZhiXianXingShi::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
}
 void ItemJudgeRuleZhiXianXingShi::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
}
 ::std::string* ItemJudgeRuleZhiXianXingShi::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZhiXianXingShi::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianXingShi::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_leave_voice)
}

// optional string item_start_voice = 3;
bool ItemJudgeRuleZhiXianXingShi::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleZhiXianXingShi::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleZhiXianXingShi::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleZhiXianXingShi::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleZhiXianXingShi::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianXingShi::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
}
 void ItemJudgeRuleZhiXianXingShi::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
}
 void ItemJudgeRuleZhiXianXingShi::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
}
 ::std::string* ItemJudgeRuleZhiXianXingShi::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZhiXianXingShi::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianXingShi::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_start_voice)
}

// optional string item_end_voice = 4;
bool ItemJudgeRuleZhiXianXingShi::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleZhiXianXingShi::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleZhiXianXingShi::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleZhiXianXingShi::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleZhiXianXingShi::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianXingShi::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
}
 void ItemJudgeRuleZhiXianXingShi::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
}
 void ItemJudgeRuleZhiXianXingShi::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
}
 ::std::string* ItemJudgeRuleZhiXianXingShi::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZhiXianXingShi::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianXingShi::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_end_voice)
}

// optional bool item_direction_check = 5;
bool ItemJudgeRuleZhiXianXingShi::has_item_direction_check() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleZhiXianXingShi::set_has_item_direction_check() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleZhiXianXingShi::clear_has_item_direction_check() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleZhiXianXingShi::clear_item_direction_check() {
  item_direction_check_ = false;
  clear_has_item_direction_check();
}
 bool ItemJudgeRuleZhiXianXingShi::item_direction_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_check)
  return item_direction_check_;
}
 void ItemJudgeRuleZhiXianXingShi::set_item_direction_check(bool value) {
  set_has_item_direction_check();
  item_direction_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_check)
}

// optional int32 item_direction_deduction = 6;
bool ItemJudgeRuleZhiXianXingShi::has_item_direction_deduction() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleZhiXianXingShi::set_has_item_direction_deduction() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleZhiXianXingShi::clear_has_item_direction_deduction() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleZhiXianXingShi::clear_item_direction_deduction() {
  item_direction_deduction_ = 0;
  clear_has_item_direction_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleZhiXianXingShi::item_direction_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_deduction)
  return item_direction_deduction_;
}
 void ItemJudgeRuleZhiXianXingShi::set_item_direction_deduction(::google::protobuf::int32 value) {
  set_has_item_direction_deduction();
  item_direction_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_deduction)
}

// optional int32 item_direction_angle_limit = 7;
bool ItemJudgeRuleZhiXianXingShi::has_item_direction_angle_limit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleZhiXianXingShi::set_has_item_direction_angle_limit() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleZhiXianXingShi::clear_has_item_direction_angle_limit() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleZhiXianXingShi::clear_item_direction_angle_limit() {
  item_direction_angle_limit_ = 0;
  clear_has_item_direction_angle_limit();
}
 ::google::protobuf::int32 ItemJudgeRuleZhiXianXingShi::item_direction_angle_limit() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_angle_limit)
  return item_direction_angle_limit_;
}
 void ItemJudgeRuleZhiXianXingShi::set_item_direction_angle_limit(::google::protobuf::int32 value) {
  set_has_item_direction_angle_limit();
  item_direction_angle_limit_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_angle_limit)
}

// optional int32 item_direction_lasting_time = 8;
bool ItemJudgeRuleZhiXianXingShi::has_item_direction_lasting_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeRuleZhiXianXingShi::set_has_item_direction_lasting_time() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeRuleZhiXianXingShi::clear_has_item_direction_lasting_time() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeRuleZhiXianXingShi::clear_item_direction_lasting_time() {
  item_direction_lasting_time_ = 0;
  clear_has_item_direction_lasting_time();
}
 ::google::protobuf::int32 ItemJudgeRuleZhiXianXingShi::item_direction_lasting_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_lasting_time)
  return item_direction_lasting_time_;
}
 void ItemJudgeRuleZhiXianXingShi::set_item_direction_lasting_time(::google::protobuf::int32 value) {
  set_has_item_direction_lasting_time();
  item_direction_lasting_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_lasting_time)
}

// optional string item_direction_voice = 9;
bool ItemJudgeRuleZhiXianXingShi::has_item_direction_voice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ItemJudgeRuleZhiXianXingShi::set_has_item_direction_voice() {
  _has_bits_[0] |= 0x00000100u;
}
void ItemJudgeRuleZhiXianXingShi::clear_has_item_direction_voice() {
  _has_bits_[0] &= ~0x00000100u;
}
void ItemJudgeRuleZhiXianXingShi::clear_item_direction_voice() {
  item_direction_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_direction_voice();
}
 const ::std::string& ItemJudgeRuleZhiXianXingShi::item_direction_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
  return item_direction_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianXingShi::set_item_direction_voice(const ::std::string& value) {
  set_has_item_direction_voice();
  item_direction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
}
 void ItemJudgeRuleZhiXianXingShi::set_item_direction_voice(const char* value) {
  set_has_item_direction_voice();
  item_direction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
}
 void ItemJudgeRuleZhiXianXingShi::set_item_direction_voice(const char* value, size_t size) {
  set_has_item_direction_voice();
  item_direction_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
}
 ::std::string* ItemJudgeRuleZhiXianXingShi::mutable_item_direction_voice() {
  set_has_item_direction_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
  return item_direction_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZhiXianXingShi::release_item_direction_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
  clear_has_item_direction_voice();
  return item_direction_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZhiXianXingShi::set_allocated_item_direction_voice(::std::string* item_direction_voice) {
  if (item_direction_voice != NULL) {
    set_has_item_direction_voice();
  } else {
    clear_has_item_direction_voice();
  }
  item_direction_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_direction_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_direction_voice)
}

// optional .OPMessage.ItemJudgeDistance item_distance = 10;
bool ItemJudgeRuleZhiXianXingShi::has_item_distance() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ItemJudgeRuleZhiXianXingShi::set_has_item_distance() {
  _has_bits_[0] |= 0x00000200u;
}
void ItemJudgeRuleZhiXianXingShi::clear_has_item_distance() {
  _has_bits_[0] &= ~0x00000200u;
}
void ItemJudgeRuleZhiXianXingShi::clear_item_distance() {
  if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
  clear_has_item_distance();
}
const ::OPMessage::ItemJudgeDistance& ItemJudgeRuleZhiXianXingShi::item_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_distance)
  return item_distance_ != NULL ? *item_distance_ : *default_instance_->item_distance_;
}
::OPMessage::ItemJudgeDistance* ItemJudgeRuleZhiXianXingShi::mutable_item_distance() {
  set_has_item_distance();
  if (item_distance_ == NULL) {
    item_distance_ = new ::OPMessage::ItemJudgeDistance;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_distance)
  return item_distance_;
}
::OPMessage::ItemJudgeDistance* ItemJudgeRuleZhiXianXingShi::release_item_distance() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_distance)
  clear_has_item_distance();
  ::OPMessage::ItemJudgeDistance* temp = item_distance_;
  item_distance_ = NULL;
  return temp;
}
void ItemJudgeRuleZhiXianXingShi::set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance) {
  delete item_distance_;
  item_distance_ = item_distance;
  if (item_distance) {
    set_has_item_distance();
  } else {
    clear_has_item_distance();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_distance)
}

// optional .OPMessage.ItemJudgeTime item_time = 11;
bool ItemJudgeRuleZhiXianXingShi::has_item_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ItemJudgeRuleZhiXianXingShi::set_has_item_time() {
  _has_bits_[0] |= 0x00000400u;
}
void ItemJudgeRuleZhiXianXingShi::clear_has_item_time() {
  _has_bits_[0] &= ~0x00000400u;
}
void ItemJudgeRuleZhiXianXingShi::clear_item_time() {
  if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
  clear_has_item_time();
}
const ::OPMessage::ItemJudgeTime& ItemJudgeRuleZhiXianXingShi::item_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_time)
  return item_time_ != NULL ? *item_time_ : *default_instance_->item_time_;
}
::OPMessage::ItemJudgeTime* ItemJudgeRuleZhiXianXingShi::mutable_item_time() {
  set_has_item_time();
  if (item_time_ == NULL) {
    item_time_ = new ::OPMessage::ItemJudgeTime;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_time)
  return item_time_;
}
::OPMessage::ItemJudgeTime* ItemJudgeRuleZhiXianXingShi::release_item_time() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_time)
  clear_has_item_time();
  ::OPMessage::ItemJudgeTime* temp = item_time_;
  item_time_ = NULL;
  return temp;
}
void ItemJudgeRuleZhiXianXingShi::set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time) {
  delete item_time_;
  item_time_ = item_time;
  if (item_time) {
    set_has_item_time();
  } else {
    clear_has_item_time();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_time)
}

// optional .OPMessage.ItemJudgeSpeed item_speed = 12;
bool ItemJudgeRuleZhiXianXingShi::has_item_speed() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ItemJudgeRuleZhiXianXingShi::set_has_item_speed() {
  _has_bits_[0] |= 0x00000800u;
}
void ItemJudgeRuleZhiXianXingShi::clear_has_item_speed() {
  _has_bits_[0] &= ~0x00000800u;
}
void ItemJudgeRuleZhiXianXingShi::clear_item_speed() {
  if (item_speed_ != NULL) item_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_speed();
}
const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleZhiXianXingShi::item_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.item_speed)
  return item_speed_ != NULL ? *item_speed_ : *default_instance_->item_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleZhiXianXingShi::mutable_item_speed() {
  set_has_item_speed();
  if (item_speed_ == NULL) {
    item_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZhiXianXingShi.item_speed)
  return item_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleZhiXianXingShi::release_item_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZhiXianXingShi.item_speed)
  clear_has_item_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_speed_;
  item_speed_ = NULL;
  return temp;
}
void ItemJudgeRuleZhiXianXingShi::set_allocated_item_speed(::OPMessage::ItemJudgeSpeed* item_speed) {
  delete item_speed_;
  item_speed_ = item_speed;
  if (item_speed) {
    set_has_item_speed();
  } else {
    clear_has_item_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZhiXianXingShi.item_speed)
}

// optional .OPMessage.CheckFinishCarPositionZhiXianXingShi check_finish_type = 13;
bool ItemJudgeRuleZhiXianXingShi::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ItemJudgeRuleZhiXianXingShi::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00001000u;
}
void ItemJudgeRuleZhiXianXingShi::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00001000u;
}
void ItemJudgeRuleZhiXianXingShi::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionZhiXianXingShi ItemJudgeRuleZhiXianXingShi::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZhiXianXingShi.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionZhiXianXingShi >(check_finish_type_);
}
 void ItemJudgeRuleZhiXianXingShi::set_check_finish_type(::OPMessage::CheckFinishCarPositionZhiXianXingShi value) {
  assert(::OPMessage::CheckFinishCarPositionZhiXianXingShi_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZhiXianXingShi.check_finish_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleJiaJianDang::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemDistanceFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemTimeFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemJiajiandangWhetherCheckFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemJiajiandangAddGearFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemJiajiandangReduceGearFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemJiajiandangDeductionFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemJiajiandangVoiceFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemJiajiandangOneGearSpeedFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemJiajiandangTwoGearSpeedFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemJiajiandangThreeGearSpeedFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemJiajiandangFourGearSpeedFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemJiajiandangFiveGearSpeedFieldNumber;
const int ItemJudgeRuleJiaJianDang::kItemJiajiandangSixGearSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleJiaJianDang::ItemJudgeRuleJiaJianDang()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleJiaJianDang)
}

void ItemJudgeRuleJiaJianDang::InitAsDefaultInstance() {
  item_distance_ = const_cast< ::OPMessage::ItemJudgeDistance*>(&::OPMessage::ItemJudgeDistance::default_instance());
  item_time_ = const_cast< ::OPMessage::ItemJudgeTime*>(&::OPMessage::ItemJudgeTime::default_instance());
  item_jiajiandang_one_gear_speed_ = const_cast< ::OPMessage::ItemJudgeSpeed*>(&::OPMessage::ItemJudgeSpeed::default_instance());
  item_jiajiandang_two_gear_speed_ = const_cast< ::OPMessage::ItemJudgeSpeed*>(&::OPMessage::ItemJudgeSpeed::default_instance());
  item_jiajiandang_three_gear_speed_ = const_cast< ::OPMessage::ItemJudgeSpeed*>(&::OPMessage::ItemJudgeSpeed::default_instance());
  item_jiajiandang_four_gear_speed_ = const_cast< ::OPMessage::ItemJudgeSpeed*>(&::OPMessage::ItemJudgeSpeed::default_instance());
  item_jiajiandang_five_gear_speed_ = const_cast< ::OPMessage::ItemJudgeSpeed*>(&::OPMessage::ItemJudgeSpeed::default_instance());
  item_jiajiandang_six_gear_speed_ = const_cast< ::OPMessage::ItemJudgeSpeed*>(&::OPMessage::ItemJudgeSpeed::default_instance());
}

ItemJudgeRuleJiaJianDang::ItemJudgeRuleJiaJianDang(const ItemJudgeRuleJiaJianDang& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleJiaJianDang)
}

void ItemJudgeRuleJiaJianDang::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_distance_ = NULL;
  item_time_ = NULL;
  item_jiajiandang_whether_check_ = true;
  item_jiajiandang_add_gear_ = 0;
  item_jiajiandang_reduce_gear_ = 0;
  item_jiajiandang_deduction_ = 0;
  item_jiajiandang_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_jiajiandang_one_gear_speed_ = NULL;
  item_jiajiandang_two_gear_speed_ = NULL;
  item_jiajiandang_three_gear_speed_ = NULL;
  item_jiajiandang_four_gear_speed_ = NULL;
  item_jiajiandang_five_gear_speed_ = NULL;
  item_jiajiandang_six_gear_speed_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleJiaJianDang::~ItemJudgeRuleJiaJianDang() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleJiaJianDang)
  SharedDtor();
}

void ItemJudgeRuleJiaJianDang::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_jiajiandang_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete item_distance_;
    delete item_time_;
    delete item_jiajiandang_one_gear_speed_;
    delete item_jiajiandang_two_gear_speed_;
    delete item_jiajiandang_three_gear_speed_;
    delete item_jiajiandang_four_gear_speed_;
    delete item_jiajiandang_five_gear_speed_;
    delete item_jiajiandang_six_gear_speed_;
  }
}

void ItemJudgeRuleJiaJianDang::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleJiaJianDang::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleJiaJianDang_descriptor_;
}

const ItemJudgeRuleJiaJianDang& ItemJudgeRuleJiaJianDang::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleJiaJianDang* ItemJudgeRuleJiaJianDang::default_instance_ = NULL;

ItemJudgeRuleJiaJianDang* ItemJudgeRuleJiaJianDang::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleJiaJianDang* n = new ItemJudgeRuleJiaJianDang;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleJiaJianDang::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleJiaJianDang)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeRuleJiaJianDang, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeRuleJiaJianDang*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_distance()) {
      if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
    }
    if (has_item_time()) {
      if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
    }
    item_jiajiandang_whether_check_ = true;
    item_jiajiandang_add_gear_ = 0;
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(item_jiajiandang_reduce_gear_, item_jiajiandang_deduction_);
    if (has_item_jiajiandang_voice()) {
      item_jiajiandang_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_jiajiandang_one_gear_speed()) {
      if (item_jiajiandang_one_gear_speed_ != NULL) item_jiajiandang_one_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
    }
    if (has_item_jiajiandang_two_gear_speed()) {
      if (item_jiajiandang_two_gear_speed_ != NULL) item_jiajiandang_two_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
    }
    if (has_item_jiajiandang_three_gear_speed()) {
      if (item_jiajiandang_three_gear_speed_ != NULL) item_jiajiandang_three_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
    }
    if (has_item_jiajiandang_four_gear_speed()) {
      if (item_jiajiandang_four_gear_speed_ != NULL) item_jiajiandang_four_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
    }
    if (has_item_jiajiandang_five_gear_speed()) {
      if (item_jiajiandang_five_gear_speed_ != NULL) item_jiajiandang_five_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
    }
  }
  if (has_item_jiajiandang_six_gear_speed()) {
    if (item_jiajiandang_six_gear_speed_ != NULL) item_jiajiandang_six_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleJiaJianDang::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleJiaJianDang)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_enter_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_distance;
        break;
      }

      // optional .OPMessage.ItemJudgeDistance item_distance = 5;
      case 5: {
        if (tag == 42) {
         parse_item_distance:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_distance()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_item_time;
        break;
      }

      // optional .OPMessage.ItemJudgeTime item_time = 6;
      case 6: {
        if (tag == 50) {
         parse_item_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_item_jiajiandang_whether_check;
        break;
      }

      // optional bool item_jiajiandang_whether_check = 7 [default = true];
      case 7: {
        if (tag == 56) {
         parse_item_jiajiandang_whether_check:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &item_jiajiandang_whether_check_)));
          set_has_item_jiajiandang_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_item_jiajiandang_add_gear;
        break;
      }

      // optional .OPMessage.AddToLimitedGear item_jiajiandang_add_gear = 8;
      case 8: {
        if (tag == 64) {
         parse_item_jiajiandang_add_gear:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::AddToLimitedGear_IsValid(value)) {
            set_item_jiajiandang_add_gear(static_cast< ::OPMessage::AddToLimitedGear >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_item_jiajiandang_reduce_gear;
        break;
      }

      // optional .OPMessage.ReduceToLimitedGear item_jiajiandang_reduce_gear = 9;
      case 9: {
        if (tag == 72) {
         parse_item_jiajiandang_reduce_gear:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::ReduceToLimitedGear_IsValid(value)) {
            set_item_jiajiandang_reduce_gear(static_cast< ::OPMessage::ReduceToLimitedGear >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_item_jiajiandang_deduction;
        break;
      }

      // optional int32 item_jiajiandang_deduction = 10;
      case 10: {
        if (tag == 80) {
         parse_item_jiajiandang_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_jiajiandang_deduction_)));
          set_has_item_jiajiandang_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_item_jiajiandang_voice;
        break;
      }

      // optional string item_jiajiandang_voice = 11;
      case 11: {
        if (tag == 90) {
         parse_item_jiajiandang_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_jiajiandang_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_jiajiandang_voice().data(), this->item_jiajiandang_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_item_jiajiandang_one_gear_speed;
        break;
      }

      // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_one_gear_speed = 12;
      case 12: {
        if (tag == 98) {
         parse_item_jiajiandang_one_gear_speed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_jiajiandang_one_gear_speed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_item_jiajiandang_two_gear_speed;
        break;
      }

      // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_two_gear_speed = 13;
      case 13: {
        if (tag == 106) {
         parse_item_jiajiandang_two_gear_speed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_jiajiandang_two_gear_speed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_item_jiajiandang_three_gear_speed;
        break;
      }

      // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_three_gear_speed = 14;
      case 14: {
        if (tag == 114) {
         parse_item_jiajiandang_three_gear_speed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_jiajiandang_three_gear_speed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_item_jiajiandang_four_gear_speed;
        break;
      }

      // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_four_gear_speed = 15;
      case 15: {
        if (tag == 122) {
         parse_item_jiajiandang_four_gear_speed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_jiajiandang_four_gear_speed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_item_jiajiandang_five_gear_speed;
        break;
      }

      // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_five_gear_speed = 16;
      case 16: {
        if (tag == 130) {
         parse_item_jiajiandang_five_gear_speed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_jiajiandang_five_gear_speed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_item_jiajiandang_six_gear_speed;
        break;
      }

      // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_six_gear_speed = 17;
      case 17: {
        if (tag == 138) {
         parse_item_jiajiandang_six_gear_speed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_jiajiandang_six_gear_speed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleJiaJianDang)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleJiaJianDang)
  return false;
#undef DO_
}

void ItemJudgeRuleJiaJianDang::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleJiaJianDang)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_end_voice(), output);
  }

  // optional .OPMessage.ItemJudgeDistance item_distance = 5;
  if (has_item_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->item_distance_, output);
  }

  // optional .OPMessage.ItemJudgeTime item_time = 6;
  if (has_item_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->item_time_, output);
  }

  // optional bool item_jiajiandang_whether_check = 7 [default = true];
  if (has_item_jiajiandang_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->item_jiajiandang_whether_check(), output);
  }

  // optional .OPMessage.AddToLimitedGear item_jiajiandang_add_gear = 8;
  if (has_item_jiajiandang_add_gear()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->item_jiajiandang_add_gear(), output);
  }

  // optional .OPMessage.ReduceToLimitedGear item_jiajiandang_reduce_gear = 9;
  if (has_item_jiajiandang_reduce_gear()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->item_jiajiandang_reduce_gear(), output);
  }

  // optional int32 item_jiajiandang_deduction = 10;
  if (has_item_jiajiandang_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->item_jiajiandang_deduction(), output);
  }

  // optional string item_jiajiandang_voice = 11;
  if (has_item_jiajiandang_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_jiajiandang_voice().data(), this->item_jiajiandang_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->item_jiajiandang_voice(), output);
  }

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_one_gear_speed = 12;
  if (has_item_jiajiandang_one_gear_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->item_jiajiandang_one_gear_speed_, output);
  }

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_two_gear_speed = 13;
  if (has_item_jiajiandang_two_gear_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->item_jiajiandang_two_gear_speed_, output);
  }

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_three_gear_speed = 14;
  if (has_item_jiajiandang_three_gear_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->item_jiajiandang_three_gear_speed_, output);
  }

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_four_gear_speed = 15;
  if (has_item_jiajiandang_four_gear_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->item_jiajiandang_four_gear_speed_, output);
  }

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_five_gear_speed = 16;
  if (has_item_jiajiandang_five_gear_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->item_jiajiandang_five_gear_speed_, output);
  }

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_six_gear_speed = 17;
  if (has_item_jiajiandang_six_gear_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->item_jiajiandang_six_gear_speed_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleJiaJianDang)
}

::google::protobuf::uint8* ItemJudgeRuleJiaJianDang::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleJiaJianDang)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_end_voice(), target);
  }

  // optional .OPMessage.ItemJudgeDistance item_distance = 5;
  if (has_item_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->item_distance_, false, target);
  }

  // optional .OPMessage.ItemJudgeTime item_time = 6;
  if (has_item_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->item_time_, false, target);
  }

  // optional bool item_jiajiandang_whether_check = 7 [default = true];
  if (has_item_jiajiandang_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->item_jiajiandang_whether_check(), target);
  }

  // optional .OPMessage.AddToLimitedGear item_jiajiandang_add_gear = 8;
  if (has_item_jiajiandang_add_gear()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->item_jiajiandang_add_gear(), target);
  }

  // optional .OPMessage.ReduceToLimitedGear item_jiajiandang_reduce_gear = 9;
  if (has_item_jiajiandang_reduce_gear()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->item_jiajiandang_reduce_gear(), target);
  }

  // optional int32 item_jiajiandang_deduction = 10;
  if (has_item_jiajiandang_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->item_jiajiandang_deduction(), target);
  }

  // optional string item_jiajiandang_voice = 11;
  if (has_item_jiajiandang_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_jiajiandang_voice().data(), this->item_jiajiandang_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->item_jiajiandang_voice(), target);
  }

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_one_gear_speed = 12;
  if (has_item_jiajiandang_one_gear_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->item_jiajiandang_one_gear_speed_, false, target);
  }

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_two_gear_speed = 13;
  if (has_item_jiajiandang_two_gear_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->item_jiajiandang_two_gear_speed_, false, target);
  }

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_three_gear_speed = 14;
  if (has_item_jiajiandang_three_gear_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->item_jiajiandang_three_gear_speed_, false, target);
  }

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_four_gear_speed = 15;
  if (has_item_jiajiandang_four_gear_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->item_jiajiandang_four_gear_speed_, false, target);
  }

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_five_gear_speed = 16;
  if (has_item_jiajiandang_five_gear_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->item_jiajiandang_five_gear_speed_, false, target);
  }

  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_six_gear_speed = 17;
  if (has_item_jiajiandang_six_gear_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->item_jiajiandang_six_gear_speed_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleJiaJianDang)
  return target;
}

int ItemJudgeRuleJiaJianDang::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleJiaJianDang)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string item_enter_voice = 1;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 2;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 3;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 4;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.ItemJudgeDistance item_distance = 5;
    if (has_item_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_distance_);
    }

    // optional .OPMessage.ItemJudgeTime item_time = 6;
    if (has_item_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_time_);
    }

    // optional bool item_jiajiandang_whether_check = 7 [default = true];
    if (has_item_jiajiandang_whether_check()) {
      total_size += 1 + 1;
    }

    // optional .OPMessage.AddToLimitedGear item_jiajiandang_add_gear = 8;
    if (has_item_jiajiandang_add_gear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->item_jiajiandang_add_gear());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .OPMessage.ReduceToLimitedGear item_jiajiandang_reduce_gear = 9;
    if (has_item_jiajiandang_reduce_gear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->item_jiajiandang_reduce_gear());
    }

    // optional int32 item_jiajiandang_deduction = 10;
    if (has_item_jiajiandang_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_jiajiandang_deduction());
    }

    // optional string item_jiajiandang_voice = 11;
    if (has_item_jiajiandang_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_jiajiandang_voice());
    }

    // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_one_gear_speed = 12;
    if (has_item_jiajiandang_one_gear_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_jiajiandang_one_gear_speed_);
    }

    // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_two_gear_speed = 13;
    if (has_item_jiajiandang_two_gear_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_jiajiandang_two_gear_speed_);
    }

    // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_three_gear_speed = 14;
    if (has_item_jiajiandang_three_gear_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_jiajiandang_three_gear_speed_);
    }

    // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_four_gear_speed = 15;
    if (has_item_jiajiandang_four_gear_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_jiajiandang_four_gear_speed_);
    }

    // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_five_gear_speed = 16;
    if (has_item_jiajiandang_five_gear_speed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_jiajiandang_five_gear_speed_);
    }

  }
  // optional .OPMessage.ItemJudgeSpeed item_jiajiandang_six_gear_speed = 17;
  if (has_item_jiajiandang_six_gear_speed()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->item_jiajiandang_six_gear_speed_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleJiaJianDang::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleJiaJianDang)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleJiaJianDang* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleJiaJianDang>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleJiaJianDang)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleJiaJianDang)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleJiaJianDang::MergeFrom(const ItemJudgeRuleJiaJianDang& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleJiaJianDang)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_item_distance()) {
      mutable_item_distance()->::OPMessage::ItemJudgeDistance::MergeFrom(from.item_distance());
    }
    if (from.has_item_time()) {
      mutable_item_time()->::OPMessage::ItemJudgeTime::MergeFrom(from.item_time());
    }
    if (from.has_item_jiajiandang_whether_check()) {
      set_item_jiajiandang_whether_check(from.item_jiajiandang_whether_check());
    }
    if (from.has_item_jiajiandang_add_gear()) {
      set_item_jiajiandang_add_gear(from.item_jiajiandang_add_gear());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_item_jiajiandang_reduce_gear()) {
      set_item_jiajiandang_reduce_gear(from.item_jiajiandang_reduce_gear());
    }
    if (from.has_item_jiajiandang_deduction()) {
      set_item_jiajiandang_deduction(from.item_jiajiandang_deduction());
    }
    if (from.has_item_jiajiandang_voice()) {
      set_has_item_jiajiandang_voice();
      item_jiajiandang_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_jiajiandang_voice_);
    }
    if (from.has_item_jiajiandang_one_gear_speed()) {
      mutable_item_jiajiandang_one_gear_speed()->::OPMessage::ItemJudgeSpeed::MergeFrom(from.item_jiajiandang_one_gear_speed());
    }
    if (from.has_item_jiajiandang_two_gear_speed()) {
      mutable_item_jiajiandang_two_gear_speed()->::OPMessage::ItemJudgeSpeed::MergeFrom(from.item_jiajiandang_two_gear_speed());
    }
    if (from.has_item_jiajiandang_three_gear_speed()) {
      mutable_item_jiajiandang_three_gear_speed()->::OPMessage::ItemJudgeSpeed::MergeFrom(from.item_jiajiandang_three_gear_speed());
    }
    if (from.has_item_jiajiandang_four_gear_speed()) {
      mutable_item_jiajiandang_four_gear_speed()->::OPMessage::ItemJudgeSpeed::MergeFrom(from.item_jiajiandang_four_gear_speed());
    }
    if (from.has_item_jiajiandang_five_gear_speed()) {
      mutable_item_jiajiandang_five_gear_speed()->::OPMessage::ItemJudgeSpeed::MergeFrom(from.item_jiajiandang_five_gear_speed());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_item_jiajiandang_six_gear_speed()) {
      mutable_item_jiajiandang_six_gear_speed()->::OPMessage::ItemJudgeSpeed::MergeFrom(from.item_jiajiandang_six_gear_speed());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleJiaJianDang::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleJiaJianDang)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleJiaJianDang::CopyFrom(const ItemJudgeRuleJiaJianDang& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleJiaJianDang)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleJiaJianDang::IsInitialized() const {

  return true;
}

void ItemJudgeRuleJiaJianDang::Swap(ItemJudgeRuleJiaJianDang* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleJiaJianDang::InternalSwap(ItemJudgeRuleJiaJianDang* other) {
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(item_distance_, other->item_distance_);
  std::swap(item_time_, other->item_time_);
  std::swap(item_jiajiandang_whether_check_, other->item_jiajiandang_whether_check_);
  std::swap(item_jiajiandang_add_gear_, other->item_jiajiandang_add_gear_);
  std::swap(item_jiajiandang_reduce_gear_, other->item_jiajiandang_reduce_gear_);
  std::swap(item_jiajiandang_deduction_, other->item_jiajiandang_deduction_);
  item_jiajiandang_voice_.Swap(&other->item_jiajiandang_voice_);
  std::swap(item_jiajiandang_one_gear_speed_, other->item_jiajiandang_one_gear_speed_);
  std::swap(item_jiajiandang_two_gear_speed_, other->item_jiajiandang_two_gear_speed_);
  std::swap(item_jiajiandang_three_gear_speed_, other->item_jiajiandang_three_gear_speed_);
  std::swap(item_jiajiandang_four_gear_speed_, other->item_jiajiandang_four_gear_speed_);
  std::swap(item_jiajiandang_five_gear_speed_, other->item_jiajiandang_five_gear_speed_);
  std::swap(item_jiajiandang_six_gear_speed_, other->item_jiajiandang_six_gear_speed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleJiaJianDang::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleJiaJianDang_descriptor_;
  metadata.reflection = ItemJudgeRuleJiaJianDang_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleJiaJianDang

// optional string item_enter_voice = 1;
bool ItemJudgeRuleJiaJianDang::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleJiaJianDang::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleJiaJianDang::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleJiaJianDang::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
}
 void ItemJudgeRuleJiaJianDang::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
}
 void ItemJudgeRuleJiaJianDang::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
}
 ::std::string* ItemJudgeRuleJiaJianDang::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleJiaJianDang::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleJiaJianDang::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_enter_voice)
}

// optional string item_leave_voice = 2;
bool ItemJudgeRuleJiaJianDang::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleJiaJianDang::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleJiaJianDang::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleJiaJianDang::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
}
 void ItemJudgeRuleJiaJianDang::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
}
 void ItemJudgeRuleJiaJianDang::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
}
 ::std::string* ItemJudgeRuleJiaJianDang::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleJiaJianDang::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleJiaJianDang::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_leave_voice)
}

// optional string item_start_voice = 3;
bool ItemJudgeRuleJiaJianDang::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleJiaJianDang::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleJiaJianDang::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleJiaJianDang::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
}
 void ItemJudgeRuleJiaJianDang::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
}
 void ItemJudgeRuleJiaJianDang::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
}
 ::std::string* ItemJudgeRuleJiaJianDang::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleJiaJianDang::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleJiaJianDang::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_start_voice)
}

// optional string item_end_voice = 4;
bool ItemJudgeRuleJiaJianDang::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleJiaJianDang::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleJiaJianDang::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleJiaJianDang::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
}
 void ItemJudgeRuleJiaJianDang::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
}
 void ItemJudgeRuleJiaJianDang::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
}
 ::std::string* ItemJudgeRuleJiaJianDang::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleJiaJianDang::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleJiaJianDang::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_end_voice)
}

// optional .OPMessage.ItemJudgeDistance item_distance = 5;
bool ItemJudgeRuleJiaJianDang::has_item_distance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_distance() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_distance() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleJiaJianDang::clear_item_distance() {
  if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
  clear_has_item_distance();
}
const ::OPMessage::ItemJudgeDistance& ItemJudgeRuleJiaJianDang::item_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_distance)
  return item_distance_ != NULL ? *item_distance_ : *default_instance_->item_distance_;
}
::OPMessage::ItemJudgeDistance* ItemJudgeRuleJiaJianDang::mutable_item_distance() {
  set_has_item_distance();
  if (item_distance_ == NULL) {
    item_distance_ = new ::OPMessage::ItemJudgeDistance;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_distance)
  return item_distance_;
}
::OPMessage::ItemJudgeDistance* ItemJudgeRuleJiaJianDang::release_item_distance() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_distance)
  clear_has_item_distance();
  ::OPMessage::ItemJudgeDistance* temp = item_distance_;
  item_distance_ = NULL;
  return temp;
}
void ItemJudgeRuleJiaJianDang::set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance) {
  delete item_distance_;
  item_distance_ = item_distance;
  if (item_distance) {
    set_has_item_distance();
  } else {
    clear_has_item_distance();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_distance)
}

// optional .OPMessage.ItemJudgeTime item_time = 6;
bool ItemJudgeRuleJiaJianDang::has_item_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_time() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_time() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleJiaJianDang::clear_item_time() {
  if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
  clear_has_item_time();
}
const ::OPMessage::ItemJudgeTime& ItemJudgeRuleJiaJianDang::item_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_time)
  return item_time_ != NULL ? *item_time_ : *default_instance_->item_time_;
}
::OPMessage::ItemJudgeTime* ItemJudgeRuleJiaJianDang::mutable_item_time() {
  set_has_item_time();
  if (item_time_ == NULL) {
    item_time_ = new ::OPMessage::ItemJudgeTime;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_time)
  return item_time_;
}
::OPMessage::ItemJudgeTime* ItemJudgeRuleJiaJianDang::release_item_time() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_time)
  clear_has_item_time();
  ::OPMessage::ItemJudgeTime* temp = item_time_;
  item_time_ = NULL;
  return temp;
}
void ItemJudgeRuleJiaJianDang::set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time) {
  delete item_time_;
  item_time_ = item_time;
  if (item_time) {
    set_has_item_time();
  } else {
    clear_has_item_time();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_time)
}

// optional bool item_jiajiandang_whether_check = 7 [default = true];
bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_whether_check() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_whether_check() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_whether_check() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_whether_check() {
  item_jiajiandang_whether_check_ = true;
  clear_has_item_jiajiandang_whether_check();
}
 bool ItemJudgeRuleJiaJianDang::item_jiajiandang_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_whether_check)
  return item_jiajiandang_whether_check_;
}
 void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_whether_check(bool value) {
  set_has_item_jiajiandang_whether_check();
  item_jiajiandang_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_whether_check)
}

// optional .OPMessage.AddToLimitedGear item_jiajiandang_add_gear = 8;
bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_add_gear() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_add_gear() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_add_gear() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_add_gear() {
  item_jiajiandang_add_gear_ = 0;
  clear_has_item_jiajiandang_add_gear();
}
 ::OPMessage::AddToLimitedGear ItemJudgeRuleJiaJianDang::item_jiajiandang_add_gear() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_add_gear)
  return static_cast< ::OPMessage::AddToLimitedGear >(item_jiajiandang_add_gear_);
}
 void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_add_gear(::OPMessage::AddToLimitedGear value) {
  assert(::OPMessage::AddToLimitedGear_IsValid(value));
  set_has_item_jiajiandang_add_gear();
  item_jiajiandang_add_gear_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_add_gear)
}

// optional .OPMessage.ReduceToLimitedGear item_jiajiandang_reduce_gear = 9;
bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_reduce_gear() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_reduce_gear() {
  _has_bits_[0] |= 0x00000100u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_reduce_gear() {
  _has_bits_[0] &= ~0x00000100u;
}
void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_reduce_gear() {
  item_jiajiandang_reduce_gear_ = 0;
  clear_has_item_jiajiandang_reduce_gear();
}
 ::OPMessage::ReduceToLimitedGear ItemJudgeRuleJiaJianDang::item_jiajiandang_reduce_gear() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_reduce_gear)
  return static_cast< ::OPMessage::ReduceToLimitedGear >(item_jiajiandang_reduce_gear_);
}
 void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_reduce_gear(::OPMessage::ReduceToLimitedGear value) {
  assert(::OPMessage::ReduceToLimitedGear_IsValid(value));
  set_has_item_jiajiandang_reduce_gear();
  item_jiajiandang_reduce_gear_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_reduce_gear)
}

// optional int32 item_jiajiandang_deduction = 10;
bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_deduction() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_deduction() {
  _has_bits_[0] |= 0x00000200u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_deduction() {
  _has_bits_[0] &= ~0x00000200u;
}
void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_deduction() {
  item_jiajiandang_deduction_ = 0;
  clear_has_item_jiajiandang_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleJiaJianDang::item_jiajiandang_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_deduction)
  return item_jiajiandang_deduction_;
}
 void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_deduction(::google::protobuf::int32 value) {
  set_has_item_jiajiandang_deduction();
  item_jiajiandang_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_deduction)
}

// optional string item_jiajiandang_voice = 11;
bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_voice() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_voice() {
  _has_bits_[0] |= 0x00000400u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_voice() {
  _has_bits_[0] &= ~0x00000400u;
}
void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_voice() {
  item_jiajiandang_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_jiajiandang_voice();
}
 const ::std::string& ItemJudgeRuleJiaJianDang::item_jiajiandang_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
  return item_jiajiandang_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_voice(const ::std::string& value) {
  set_has_item_jiajiandang_voice();
  item_jiajiandang_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
}
 void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_voice(const char* value) {
  set_has_item_jiajiandang_voice();
  item_jiajiandang_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
}
 void ItemJudgeRuleJiaJianDang::set_item_jiajiandang_voice(const char* value, size_t size) {
  set_has_item_jiajiandang_voice();
  item_jiajiandang_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
}
 ::std::string* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_voice() {
  set_has_item_jiajiandang_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
  return item_jiajiandang_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
  clear_has_item_jiajiandang_voice();
  return item_jiajiandang_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_voice(::std::string* item_jiajiandang_voice) {
  if (item_jiajiandang_voice != NULL) {
    set_has_item_jiajiandang_voice();
  } else {
    clear_has_item_jiajiandang_voice();
  }
  item_jiajiandang_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_jiajiandang_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_voice)
}

// optional .OPMessage.ItemJudgeSpeed item_jiajiandang_one_gear_speed = 12;
bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_one_gear_speed() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_one_gear_speed() {
  _has_bits_[0] |= 0x00000800u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_one_gear_speed() {
  _has_bits_[0] &= ~0x00000800u;
}
void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_one_gear_speed() {
  if (item_jiajiandang_one_gear_speed_ != NULL) item_jiajiandang_one_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_jiajiandang_one_gear_speed();
}
const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleJiaJianDang::item_jiajiandang_one_gear_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_one_gear_speed)
  return item_jiajiandang_one_gear_speed_ != NULL ? *item_jiajiandang_one_gear_speed_ : *default_instance_->item_jiajiandang_one_gear_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_one_gear_speed() {
  set_has_item_jiajiandang_one_gear_speed();
  if (item_jiajiandang_one_gear_speed_ == NULL) {
    item_jiajiandang_one_gear_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_one_gear_speed)
  return item_jiajiandang_one_gear_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_one_gear_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_one_gear_speed)
  clear_has_item_jiajiandang_one_gear_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_jiajiandang_one_gear_speed_;
  item_jiajiandang_one_gear_speed_ = NULL;
  return temp;
}
void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_one_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_one_gear_speed) {
  delete item_jiajiandang_one_gear_speed_;
  item_jiajiandang_one_gear_speed_ = item_jiajiandang_one_gear_speed;
  if (item_jiajiandang_one_gear_speed) {
    set_has_item_jiajiandang_one_gear_speed();
  } else {
    clear_has_item_jiajiandang_one_gear_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_one_gear_speed)
}

// optional .OPMessage.ItemJudgeSpeed item_jiajiandang_two_gear_speed = 13;
bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_two_gear_speed() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_two_gear_speed() {
  _has_bits_[0] |= 0x00001000u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_two_gear_speed() {
  _has_bits_[0] &= ~0x00001000u;
}
void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_two_gear_speed() {
  if (item_jiajiandang_two_gear_speed_ != NULL) item_jiajiandang_two_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_jiajiandang_two_gear_speed();
}
const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleJiaJianDang::item_jiajiandang_two_gear_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_two_gear_speed)
  return item_jiajiandang_two_gear_speed_ != NULL ? *item_jiajiandang_two_gear_speed_ : *default_instance_->item_jiajiandang_two_gear_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_two_gear_speed() {
  set_has_item_jiajiandang_two_gear_speed();
  if (item_jiajiandang_two_gear_speed_ == NULL) {
    item_jiajiandang_two_gear_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_two_gear_speed)
  return item_jiajiandang_two_gear_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_two_gear_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_two_gear_speed)
  clear_has_item_jiajiandang_two_gear_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_jiajiandang_two_gear_speed_;
  item_jiajiandang_two_gear_speed_ = NULL;
  return temp;
}
void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_two_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_two_gear_speed) {
  delete item_jiajiandang_two_gear_speed_;
  item_jiajiandang_two_gear_speed_ = item_jiajiandang_two_gear_speed;
  if (item_jiajiandang_two_gear_speed) {
    set_has_item_jiajiandang_two_gear_speed();
  } else {
    clear_has_item_jiajiandang_two_gear_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_two_gear_speed)
}

// optional .OPMessage.ItemJudgeSpeed item_jiajiandang_three_gear_speed = 14;
bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_three_gear_speed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_three_gear_speed() {
  _has_bits_[0] |= 0x00002000u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_three_gear_speed() {
  _has_bits_[0] &= ~0x00002000u;
}
void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_three_gear_speed() {
  if (item_jiajiandang_three_gear_speed_ != NULL) item_jiajiandang_three_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_jiajiandang_three_gear_speed();
}
const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleJiaJianDang::item_jiajiandang_three_gear_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_three_gear_speed)
  return item_jiajiandang_three_gear_speed_ != NULL ? *item_jiajiandang_three_gear_speed_ : *default_instance_->item_jiajiandang_three_gear_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_three_gear_speed() {
  set_has_item_jiajiandang_three_gear_speed();
  if (item_jiajiandang_three_gear_speed_ == NULL) {
    item_jiajiandang_three_gear_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_three_gear_speed)
  return item_jiajiandang_three_gear_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_three_gear_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_three_gear_speed)
  clear_has_item_jiajiandang_three_gear_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_jiajiandang_three_gear_speed_;
  item_jiajiandang_three_gear_speed_ = NULL;
  return temp;
}
void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_three_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_three_gear_speed) {
  delete item_jiajiandang_three_gear_speed_;
  item_jiajiandang_three_gear_speed_ = item_jiajiandang_three_gear_speed;
  if (item_jiajiandang_three_gear_speed) {
    set_has_item_jiajiandang_three_gear_speed();
  } else {
    clear_has_item_jiajiandang_three_gear_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_three_gear_speed)
}

// optional .OPMessage.ItemJudgeSpeed item_jiajiandang_four_gear_speed = 15;
bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_four_gear_speed() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_four_gear_speed() {
  _has_bits_[0] |= 0x00004000u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_four_gear_speed() {
  _has_bits_[0] &= ~0x00004000u;
}
void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_four_gear_speed() {
  if (item_jiajiandang_four_gear_speed_ != NULL) item_jiajiandang_four_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_jiajiandang_four_gear_speed();
}
const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleJiaJianDang::item_jiajiandang_four_gear_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_four_gear_speed)
  return item_jiajiandang_four_gear_speed_ != NULL ? *item_jiajiandang_four_gear_speed_ : *default_instance_->item_jiajiandang_four_gear_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_four_gear_speed() {
  set_has_item_jiajiandang_four_gear_speed();
  if (item_jiajiandang_four_gear_speed_ == NULL) {
    item_jiajiandang_four_gear_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_four_gear_speed)
  return item_jiajiandang_four_gear_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_four_gear_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_four_gear_speed)
  clear_has_item_jiajiandang_four_gear_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_jiajiandang_four_gear_speed_;
  item_jiajiandang_four_gear_speed_ = NULL;
  return temp;
}
void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_four_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_four_gear_speed) {
  delete item_jiajiandang_four_gear_speed_;
  item_jiajiandang_four_gear_speed_ = item_jiajiandang_four_gear_speed;
  if (item_jiajiandang_four_gear_speed) {
    set_has_item_jiajiandang_four_gear_speed();
  } else {
    clear_has_item_jiajiandang_four_gear_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_four_gear_speed)
}

// optional .OPMessage.ItemJudgeSpeed item_jiajiandang_five_gear_speed = 16;
bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_five_gear_speed() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_five_gear_speed() {
  _has_bits_[0] |= 0x00008000u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_five_gear_speed() {
  _has_bits_[0] &= ~0x00008000u;
}
void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_five_gear_speed() {
  if (item_jiajiandang_five_gear_speed_ != NULL) item_jiajiandang_five_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_jiajiandang_five_gear_speed();
}
const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleJiaJianDang::item_jiajiandang_five_gear_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_five_gear_speed)
  return item_jiajiandang_five_gear_speed_ != NULL ? *item_jiajiandang_five_gear_speed_ : *default_instance_->item_jiajiandang_five_gear_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_five_gear_speed() {
  set_has_item_jiajiandang_five_gear_speed();
  if (item_jiajiandang_five_gear_speed_ == NULL) {
    item_jiajiandang_five_gear_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_five_gear_speed)
  return item_jiajiandang_five_gear_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_five_gear_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_five_gear_speed)
  clear_has_item_jiajiandang_five_gear_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_jiajiandang_five_gear_speed_;
  item_jiajiandang_five_gear_speed_ = NULL;
  return temp;
}
void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_five_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_five_gear_speed) {
  delete item_jiajiandang_five_gear_speed_;
  item_jiajiandang_five_gear_speed_ = item_jiajiandang_five_gear_speed;
  if (item_jiajiandang_five_gear_speed) {
    set_has_item_jiajiandang_five_gear_speed();
  } else {
    clear_has_item_jiajiandang_five_gear_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_five_gear_speed)
}

// optional .OPMessage.ItemJudgeSpeed item_jiajiandang_six_gear_speed = 17;
bool ItemJudgeRuleJiaJianDang::has_item_jiajiandang_six_gear_speed() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void ItemJudgeRuleJiaJianDang::set_has_item_jiajiandang_six_gear_speed() {
  _has_bits_[0] |= 0x00010000u;
}
void ItemJudgeRuleJiaJianDang::clear_has_item_jiajiandang_six_gear_speed() {
  _has_bits_[0] &= ~0x00010000u;
}
void ItemJudgeRuleJiaJianDang::clear_item_jiajiandang_six_gear_speed() {
  if (item_jiajiandang_six_gear_speed_ != NULL) item_jiajiandang_six_gear_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_jiajiandang_six_gear_speed();
}
const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleJiaJianDang::item_jiajiandang_six_gear_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_six_gear_speed)
  return item_jiajiandang_six_gear_speed_ != NULL ? *item_jiajiandang_six_gear_speed_ : *default_instance_->item_jiajiandang_six_gear_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::mutable_item_jiajiandang_six_gear_speed() {
  set_has_item_jiajiandang_six_gear_speed();
  if (item_jiajiandang_six_gear_speed_ == NULL) {
    item_jiajiandang_six_gear_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_six_gear_speed)
  return item_jiajiandang_six_gear_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleJiaJianDang::release_item_jiajiandang_six_gear_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_six_gear_speed)
  clear_has_item_jiajiandang_six_gear_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_jiajiandang_six_gear_speed_;
  item_jiajiandang_six_gear_speed_ = NULL;
  return temp;
}
void ItemJudgeRuleJiaJianDang::set_allocated_item_jiajiandang_six_gear_speed(::OPMessage::ItemJudgeSpeed* item_jiajiandang_six_gear_speed) {
  delete item_jiajiandang_six_gear_speed_;
  item_jiajiandang_six_gear_speed_ = item_jiajiandang_six_gear_speed;
  if (item_jiajiandang_six_gear_speed) {
    set_has_item_jiajiandang_six_gear_speed();
  } else {
    clear_has_item_jiajiandang_six_gear_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleJiaJianDang.item_jiajiandang_six_gear_speed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleDiaoTou::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleDiaoTou::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleDiaoTou::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleDiaoTou::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleDiaoTou::kItemLeftturnlampFieldNumber;
const int ItemJudgeRuleDiaoTou::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleDiaoTou::kBasicSlowdownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleDiaoTou::ItemJudgeRuleDiaoTou()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleDiaoTou)
}

void ItemJudgeRuleDiaoTou::InitAsDefaultInstance() {
  item_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  basic_slowdown_ = const_cast< ::OPMessage::BasicSlowDown*>(&::OPMessage::BasicSlowDown::default_instance());
}

ItemJudgeRuleDiaoTou::ItemJudgeRuleDiaoTou(const ItemJudgeRuleDiaoTou& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleDiaoTou)
}

void ItemJudgeRuleDiaoTou::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leftturnlamp_ = NULL;
  check_finish_type_ = 0;
  basic_slowdown_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleDiaoTou::~ItemJudgeRuleDiaoTou() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleDiaoTou)
  SharedDtor();
}

void ItemJudgeRuleDiaoTou::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete item_leftturnlamp_;
    delete basic_slowdown_;
  }
}

void ItemJudgeRuleDiaoTou::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleDiaoTou::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleDiaoTou_descriptor_;
}

const ItemJudgeRuleDiaoTou& ItemJudgeRuleDiaoTou::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleDiaoTou* ItemJudgeRuleDiaoTou::default_instance_ = NULL;

ItemJudgeRuleDiaoTou* ItemJudgeRuleDiaoTou::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleDiaoTou* n = new ItemJudgeRuleDiaoTou;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleDiaoTou::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleDiaoTou)
  if (_has_bits_[0 / 32] & 127u) {
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leftturnlamp()) {
      if (item_leftturnlamp_ != NULL) item_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    check_finish_type_ = 0;
    if (has_basic_slowdown()) {
      if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleDiaoTou::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleDiaoTou)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_enter_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDiaoTou.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDiaoTou.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_leftturnlamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 5;
      case 5: {
        if (tag == 42) {
         parse_item_leftturnlamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionDiaoTou check_finish_type = 6;
      case 6: {
        if (tag == 48) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionDiaoTou_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionDiaoTou >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_basic_slowdown;
        break;
      }

      // optional .OPMessage.BasicSlowDown basic_slowdown = 7;
      case 7: {
        if (tag == 58) {
         parse_basic_slowdown:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_slowdown()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleDiaoTou)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleDiaoTou)
  return false;
#undef DO_
}

void ItemJudgeRuleDiaoTou::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleDiaoTou)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDiaoTou.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDiaoTou.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_end_voice(), output);
  }

  // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 5;
  if (has_item_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->item_leftturnlamp_, output);
  }

  // optional .OPMessage.CheckFinishCarPositionDiaoTou check_finish_type = 6;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->check_finish_type(), output);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 7;
  if (has_basic_slowdown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->basic_slowdown_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleDiaoTou)
}

::google::protobuf::uint8* ItemJudgeRuleDiaoTou::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleDiaoTou)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDiaoTou.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDiaoTou.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_end_voice(), target);
  }

  // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 5;
  if (has_item_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->item_leftturnlamp_, false, target);
  }

  // optional .OPMessage.CheckFinishCarPositionDiaoTou check_finish_type = 6;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->check_finish_type(), target);
  }

  // optional .OPMessage.BasicSlowDown basic_slowdown = 7;
  if (has_basic_slowdown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->basic_slowdown_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleDiaoTou)
  return target;
}

int ItemJudgeRuleDiaoTou::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleDiaoTou)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional string item_enter_voice = 1;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 2;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 3;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 4;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 5;
    if (has_item_leftturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_leftturnlamp_);
    }

    // optional .OPMessage.CheckFinishCarPositionDiaoTou check_finish_type = 6;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

    // optional .OPMessage.BasicSlowDown basic_slowdown = 7;
    if (has_basic_slowdown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_slowdown_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleDiaoTou::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleDiaoTou)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleDiaoTou* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleDiaoTou>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleDiaoTou)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleDiaoTou)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleDiaoTou::MergeFrom(const ItemJudgeRuleDiaoTou& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleDiaoTou)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_item_leftturnlamp()) {
      mutable_item_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.item_leftturnlamp());
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
    if (from.has_basic_slowdown()) {
      mutable_basic_slowdown()->::OPMessage::BasicSlowDown::MergeFrom(from.basic_slowdown());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleDiaoTou::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleDiaoTou)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleDiaoTou::CopyFrom(const ItemJudgeRuleDiaoTou& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleDiaoTou)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleDiaoTou::IsInitialized() const {

  return true;
}

void ItemJudgeRuleDiaoTou::Swap(ItemJudgeRuleDiaoTou* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleDiaoTou::InternalSwap(ItemJudgeRuleDiaoTou* other) {
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(item_leftturnlamp_, other->item_leftturnlamp_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(basic_slowdown_, other->basic_slowdown_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleDiaoTou::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleDiaoTou_descriptor_;
  metadata.reflection = ItemJudgeRuleDiaoTou_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleDiaoTou

// optional string item_enter_voice = 1;
bool ItemJudgeRuleDiaoTou::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleDiaoTou::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleDiaoTou::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleDiaoTou::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleDiaoTou::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDiaoTou::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
}
 void ItemJudgeRuleDiaoTou::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
}
 void ItemJudgeRuleDiaoTou::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
}
 ::std::string* ItemJudgeRuleDiaoTou::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDiaoTou::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDiaoTou::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDiaoTou.item_enter_voice)
}

// optional string item_leave_voice = 2;
bool ItemJudgeRuleDiaoTou::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleDiaoTou::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleDiaoTou::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleDiaoTou::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleDiaoTou::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDiaoTou::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
}
 void ItemJudgeRuleDiaoTou::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
}
 void ItemJudgeRuleDiaoTou::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
}
 ::std::string* ItemJudgeRuleDiaoTou::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDiaoTou::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDiaoTou::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDiaoTou.item_leave_voice)
}

// optional string item_start_voice = 3;
bool ItemJudgeRuleDiaoTou::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleDiaoTou::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleDiaoTou::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleDiaoTou::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleDiaoTou::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDiaoTou::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
}
 void ItemJudgeRuleDiaoTou::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
}
 void ItemJudgeRuleDiaoTou::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
}
 ::std::string* ItemJudgeRuleDiaoTou::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDiaoTou::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDiaoTou::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDiaoTou.item_start_voice)
}

// optional string item_end_voice = 4;
bool ItemJudgeRuleDiaoTou::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleDiaoTou::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleDiaoTou::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleDiaoTou::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleDiaoTou::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDiaoTou::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
}
 void ItemJudgeRuleDiaoTou::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
}
 void ItemJudgeRuleDiaoTou::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
}
 ::std::string* ItemJudgeRuleDiaoTou::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDiaoTou::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDiaoTou::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDiaoTou.item_end_voice)
}

// optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 5;
bool ItemJudgeRuleDiaoTou::has_item_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleDiaoTou::set_has_item_leftturnlamp() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleDiaoTou::clear_has_item_leftturnlamp() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleDiaoTou::clear_item_leftturnlamp() {
  if (item_leftturnlamp_ != NULL) item_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_item_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDiaoTou::item_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.item_leftturnlamp)
  return item_leftturnlamp_ != NULL ? *item_leftturnlamp_ : *default_instance_->item_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDiaoTou::mutable_item_leftturnlamp() {
  set_has_item_leftturnlamp();
  if (item_leftturnlamp_ == NULL) {
    item_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDiaoTou.item_leftturnlamp)
  return item_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDiaoTou::release_item_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDiaoTou.item_leftturnlamp)
  clear_has_item_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = item_leftturnlamp_;
  item_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDiaoTou::set_allocated_item_leftturnlamp(::OPMessage::BasicLeftTurnLamp* item_leftturnlamp) {
  delete item_leftturnlamp_;
  item_leftturnlamp_ = item_leftturnlamp;
  if (item_leftturnlamp) {
    set_has_item_leftturnlamp();
  } else {
    clear_has_item_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDiaoTou.item_leftturnlamp)
}

// optional .OPMessage.CheckFinishCarPositionDiaoTou check_finish_type = 6;
bool ItemJudgeRuleDiaoTou::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleDiaoTou::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleDiaoTou::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleDiaoTou::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionDiaoTou ItemJudgeRuleDiaoTou::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionDiaoTou >(check_finish_type_);
}
 void ItemJudgeRuleDiaoTou::set_check_finish_type(::OPMessage::CheckFinishCarPositionDiaoTou value) {
  assert(::OPMessage::CheckFinishCarPositionDiaoTou_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDiaoTou.check_finish_type)
}

// optional .OPMessage.BasicSlowDown basic_slowdown = 7;
bool ItemJudgeRuleDiaoTou::has_basic_slowdown() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleDiaoTou::set_has_basic_slowdown() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleDiaoTou::clear_has_basic_slowdown() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleDiaoTou::clear_basic_slowdown() {
  if (basic_slowdown_ != NULL) basic_slowdown_->::OPMessage::BasicSlowDown::Clear();
  clear_has_basic_slowdown();
}
const ::OPMessage::BasicSlowDown& ItemJudgeRuleDiaoTou::basic_slowdown() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDiaoTou.basic_slowdown)
  return basic_slowdown_ != NULL ? *basic_slowdown_ : *default_instance_->basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleDiaoTou::mutable_basic_slowdown() {
  set_has_basic_slowdown();
  if (basic_slowdown_ == NULL) {
    basic_slowdown_ = new ::OPMessage::BasicSlowDown;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDiaoTou.basic_slowdown)
  return basic_slowdown_;
}
::OPMessage::BasicSlowDown* ItemJudgeRuleDiaoTou::release_basic_slowdown() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDiaoTou.basic_slowdown)
  clear_has_basic_slowdown();
  ::OPMessage::BasicSlowDown* temp = basic_slowdown_;
  basic_slowdown_ = NULL;
  return temp;
}
void ItemJudgeRuleDiaoTou::set_allocated_basic_slowdown(::OPMessage::BasicSlowDown* basic_slowdown) {
  delete basic_slowdown_;
  basic_slowdown_ = basic_slowdown;
  if (basic_slowdown) {
    set_has_basic_slowdown();
  } else {
    clear_has_basic_slowdown();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDiaoTou.basic_slowdown)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleBianGengCheDao::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleBianGengCheDao::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleBianGengCheDao::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleBianGengCheDao::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleBianGengCheDao::kItemDistanceFieldNumber;
const int ItemJudgeRuleBianGengCheDao::kItemTimeFieldNumber;
const int ItemJudgeRuleBianGengCheDao::kItemSpeedFieldNumber;
const int ItemJudgeRuleBianGengCheDao::kItemLeftturnlampFieldNumber;
const int ItemJudgeRuleBianGengCheDao::kItemRightturnlampFieldNumber;
const int ItemJudgeRuleBianGengCheDao::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleBianGengCheDao::kItemWhetherBiangengchedaoOneFieldNumber;
const int ItemJudgeRuleBianGengCheDao::kItemWhetherBiangengchedaoTwoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleBianGengCheDao::ItemJudgeRuleBianGengCheDao()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleBianGengCheDao)
}

void ItemJudgeRuleBianGengCheDao::InitAsDefaultInstance() {
  item_distance_ = const_cast< ::OPMessage::ItemJudgeDistance*>(&::OPMessage::ItemJudgeDistance::default_instance());
  item_time_ = const_cast< ::OPMessage::ItemJudgeTime*>(&::OPMessage::ItemJudgeTime::default_instance());
  item_speed_ = const_cast< ::OPMessage::ItemJudgeSpeed*>(&::OPMessage::ItemJudgeSpeed::default_instance());
  item_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  item_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
}

ItemJudgeRuleBianGengCheDao::ItemJudgeRuleBianGengCheDao(const ItemJudgeRuleBianGengCheDao& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleBianGengCheDao)
}

void ItemJudgeRuleBianGengCheDao::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_distance_ = NULL;
  item_time_ = NULL;
  item_speed_ = NULL;
  item_leftturnlamp_ = NULL;
  item_rightturnlamp_ = NULL;
  check_finish_type_ = 0;
  item_whether_biangengchedao_one_ = false;
  item_whether_biangengchedao_two_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleBianGengCheDao::~ItemJudgeRuleBianGengCheDao() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleBianGengCheDao)
  SharedDtor();
}

void ItemJudgeRuleBianGengCheDao::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete item_distance_;
    delete item_time_;
    delete item_speed_;
    delete item_leftturnlamp_;
    delete item_rightturnlamp_;
  }
}

void ItemJudgeRuleBianGengCheDao::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleBianGengCheDao::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleBianGengCheDao_descriptor_;
}

const ItemJudgeRuleBianGengCheDao& ItemJudgeRuleBianGengCheDao::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleBianGengCheDao* ItemJudgeRuleBianGengCheDao::default_instance_ = NULL;

ItemJudgeRuleBianGengCheDao* ItemJudgeRuleBianGengCheDao::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleBianGengCheDao* n = new ItemJudgeRuleBianGengCheDao;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleBianGengCheDao::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleBianGengCheDao)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeRuleBianGengCheDao, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeRuleBianGengCheDao*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_distance()) {
      if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
    }
    if (has_item_time()) {
      if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
    }
    if (has_item_speed()) {
      if (item_speed_ != NULL) item_speed_->::OPMessage::ItemJudgeSpeed::Clear();
    }
    if (has_item_leftturnlamp()) {
      if (item_leftturnlamp_ != NULL) item_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 3840u) {
    ZR_(check_finish_type_, item_whether_biangengchedao_two_);
    if (has_item_rightturnlamp()) {
      if (item_rightturnlamp_ != NULL) item_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleBianGengCheDao::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleBianGengCheDao)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_enter_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_distance;
        break;
      }

      // optional .OPMessage.ItemJudgeDistance item_distance = 5;
      case 5: {
        if (tag == 42) {
         parse_item_distance:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_distance()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_item_time;
        break;
      }

      // optional .OPMessage.ItemJudgeTime item_time = 6;
      case 6: {
        if (tag == 50) {
         parse_item_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_item_speed;
        break;
      }

      // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
      case 7: {
        if (tag == 58) {
         parse_item_speed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_speed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_item_leftturnlamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
      case 8: {
        if (tag == 66) {
         parse_item_leftturnlamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_item_rightturnlamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
      case 9: {
        if (tag == 74) {
         parse_item_rightturnlamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionBianGengCheDao check_finish_type = 10;
      case 10: {
        if (tag == 80) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionBianGengCheDao_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionBianGengCheDao >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_item_whether_biangengchedao_one;
        break;
      }

      // optional bool item_whether_biangengchedao_one = 11;
      case 11: {
        if (tag == 88) {
         parse_item_whether_biangengchedao_one:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &item_whether_biangengchedao_one_)));
          set_has_item_whether_biangengchedao_one();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_item_whether_biangengchedao_two;
        break;
      }

      // optional bool item_whether_biangengchedao_two = 12;
      case 12: {
        if (tag == 96) {
         parse_item_whether_biangengchedao_two:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &item_whether_biangengchedao_two_)));
          set_has_item_whether_biangengchedao_two();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleBianGengCheDao)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleBianGengCheDao)
  return false;
#undef DO_
}

void ItemJudgeRuleBianGengCheDao::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleBianGengCheDao)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_end_voice(), output);
  }

  // optional .OPMessage.ItemJudgeDistance item_distance = 5;
  if (has_item_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->item_distance_, output);
  }

  // optional .OPMessage.ItemJudgeTime item_time = 6;
  if (has_item_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->item_time_, output);
  }

  // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
  if (has_item_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->item_speed_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
  if (has_item_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->item_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
  if (has_item_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->item_rightturnlamp_, output);
  }

  // optional .OPMessage.CheckFinishCarPositionBianGengCheDao check_finish_type = 10;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->check_finish_type(), output);
  }

  // optional bool item_whether_biangengchedao_one = 11;
  if (has_item_whether_biangengchedao_one()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->item_whether_biangengchedao_one(), output);
  }

  // optional bool item_whether_biangengchedao_two = 12;
  if (has_item_whether_biangengchedao_two()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->item_whether_biangengchedao_two(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleBianGengCheDao)
}

::google::protobuf::uint8* ItemJudgeRuleBianGengCheDao::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleBianGengCheDao)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_end_voice(), target);
  }

  // optional .OPMessage.ItemJudgeDistance item_distance = 5;
  if (has_item_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->item_distance_, false, target);
  }

  // optional .OPMessage.ItemJudgeTime item_time = 6;
  if (has_item_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->item_time_, false, target);
  }

  // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
  if (has_item_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->item_speed_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
  if (has_item_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->item_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
  if (has_item_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->item_rightturnlamp_, false, target);
  }

  // optional .OPMessage.CheckFinishCarPositionBianGengCheDao check_finish_type = 10;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->check_finish_type(), target);
  }

  // optional bool item_whether_biangengchedao_one = 11;
  if (has_item_whether_biangengchedao_one()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->item_whether_biangengchedao_one(), target);
  }

  // optional bool item_whether_biangengchedao_two = 12;
  if (has_item_whether_biangengchedao_two()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->item_whether_biangengchedao_two(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleBianGengCheDao)
  return target;
}

int ItemJudgeRuleBianGengCheDao::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleBianGengCheDao)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string item_enter_voice = 1;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 2;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 3;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 4;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.ItemJudgeDistance item_distance = 5;
    if (has_item_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_distance_);
    }

    // optional .OPMessage.ItemJudgeTime item_time = 6;
    if (has_item_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_time_);
    }

    // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
    if (has_item_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_speed_);
    }

    // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
    if (has_item_leftturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_leftturnlamp_);
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
    if (has_item_rightturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_rightturnlamp_);
    }

    // optional .OPMessage.CheckFinishCarPositionBianGengCheDao check_finish_type = 10;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

    // optional bool item_whether_biangengchedao_one = 11;
    if (has_item_whether_biangengchedao_one()) {
      total_size += 1 + 1;
    }

    // optional bool item_whether_biangengchedao_two = 12;
    if (has_item_whether_biangengchedao_two()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleBianGengCheDao::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleBianGengCheDao)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleBianGengCheDao* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleBianGengCheDao>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleBianGengCheDao)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleBianGengCheDao)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleBianGengCheDao::MergeFrom(const ItemJudgeRuleBianGengCheDao& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleBianGengCheDao)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_item_distance()) {
      mutable_item_distance()->::OPMessage::ItemJudgeDistance::MergeFrom(from.item_distance());
    }
    if (from.has_item_time()) {
      mutable_item_time()->::OPMessage::ItemJudgeTime::MergeFrom(from.item_time());
    }
    if (from.has_item_speed()) {
      mutable_item_speed()->::OPMessage::ItemJudgeSpeed::MergeFrom(from.item_speed());
    }
    if (from.has_item_leftturnlamp()) {
      mutable_item_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.item_leftturnlamp());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_item_rightturnlamp()) {
      mutable_item_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.item_rightturnlamp());
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
    if (from.has_item_whether_biangengchedao_one()) {
      set_item_whether_biangengchedao_one(from.item_whether_biangengchedao_one());
    }
    if (from.has_item_whether_biangengchedao_two()) {
      set_item_whether_biangengchedao_two(from.item_whether_biangengchedao_two());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleBianGengCheDao::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleBianGengCheDao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleBianGengCheDao::CopyFrom(const ItemJudgeRuleBianGengCheDao& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleBianGengCheDao)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleBianGengCheDao::IsInitialized() const {

  return true;
}

void ItemJudgeRuleBianGengCheDao::Swap(ItemJudgeRuleBianGengCheDao* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleBianGengCheDao::InternalSwap(ItemJudgeRuleBianGengCheDao* other) {
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(item_distance_, other->item_distance_);
  std::swap(item_time_, other->item_time_);
  std::swap(item_speed_, other->item_speed_);
  std::swap(item_leftturnlamp_, other->item_leftturnlamp_);
  std::swap(item_rightturnlamp_, other->item_rightturnlamp_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(item_whether_biangengchedao_one_, other->item_whether_biangengchedao_one_);
  std::swap(item_whether_biangengchedao_two_, other->item_whether_biangengchedao_two_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleBianGengCheDao::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleBianGengCheDao_descriptor_;
  metadata.reflection = ItemJudgeRuleBianGengCheDao_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleBianGengCheDao

// optional string item_enter_voice = 1;
bool ItemJudgeRuleBianGengCheDao::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleBianGengCheDao::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleBianGengCheDao::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleBianGengCheDao::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleBianGengCheDao::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleBianGengCheDao::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
}
 void ItemJudgeRuleBianGengCheDao::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
}
 void ItemJudgeRuleBianGengCheDao::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
}
 ::std::string* ItemJudgeRuleBianGengCheDao::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleBianGengCheDao::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleBianGengCheDao::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_enter_voice)
}

// optional string item_leave_voice = 2;
bool ItemJudgeRuleBianGengCheDao::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleBianGengCheDao::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleBianGengCheDao::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleBianGengCheDao::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleBianGengCheDao::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleBianGengCheDao::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
}
 void ItemJudgeRuleBianGengCheDao::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
}
 void ItemJudgeRuleBianGengCheDao::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
}
 ::std::string* ItemJudgeRuleBianGengCheDao::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleBianGengCheDao::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleBianGengCheDao::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_leave_voice)
}

// optional string item_start_voice = 3;
bool ItemJudgeRuleBianGengCheDao::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleBianGengCheDao::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleBianGengCheDao::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleBianGengCheDao::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleBianGengCheDao::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleBianGengCheDao::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
}
 void ItemJudgeRuleBianGengCheDao::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
}
 void ItemJudgeRuleBianGengCheDao::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
}
 ::std::string* ItemJudgeRuleBianGengCheDao::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleBianGengCheDao::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleBianGengCheDao::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_start_voice)
}

// optional string item_end_voice = 4;
bool ItemJudgeRuleBianGengCheDao::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleBianGengCheDao::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleBianGengCheDao::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleBianGengCheDao::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleBianGengCheDao::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleBianGengCheDao::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
}
 void ItemJudgeRuleBianGengCheDao::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
}
 void ItemJudgeRuleBianGengCheDao::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
}
 ::std::string* ItemJudgeRuleBianGengCheDao::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleBianGengCheDao::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleBianGengCheDao::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_end_voice)
}

// optional .OPMessage.ItemJudgeDistance item_distance = 5;
bool ItemJudgeRuleBianGengCheDao::has_item_distance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleBianGengCheDao::set_has_item_distance() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleBianGengCheDao::clear_has_item_distance() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleBianGengCheDao::clear_item_distance() {
  if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
  clear_has_item_distance();
}
const ::OPMessage::ItemJudgeDistance& ItemJudgeRuleBianGengCheDao::item_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_distance)
  return item_distance_ != NULL ? *item_distance_ : *default_instance_->item_distance_;
}
::OPMessage::ItemJudgeDistance* ItemJudgeRuleBianGengCheDao::mutable_item_distance() {
  set_has_item_distance();
  if (item_distance_ == NULL) {
    item_distance_ = new ::OPMessage::ItemJudgeDistance;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_distance)
  return item_distance_;
}
::OPMessage::ItemJudgeDistance* ItemJudgeRuleBianGengCheDao::release_item_distance() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_distance)
  clear_has_item_distance();
  ::OPMessage::ItemJudgeDistance* temp = item_distance_;
  item_distance_ = NULL;
  return temp;
}
void ItemJudgeRuleBianGengCheDao::set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance) {
  delete item_distance_;
  item_distance_ = item_distance;
  if (item_distance) {
    set_has_item_distance();
  } else {
    clear_has_item_distance();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_distance)
}

// optional .OPMessage.ItemJudgeTime item_time = 6;
bool ItemJudgeRuleBianGengCheDao::has_item_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleBianGengCheDao::set_has_item_time() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleBianGengCheDao::clear_has_item_time() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleBianGengCheDao::clear_item_time() {
  if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
  clear_has_item_time();
}
const ::OPMessage::ItemJudgeTime& ItemJudgeRuleBianGengCheDao::item_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_time)
  return item_time_ != NULL ? *item_time_ : *default_instance_->item_time_;
}
::OPMessage::ItemJudgeTime* ItemJudgeRuleBianGengCheDao::mutable_item_time() {
  set_has_item_time();
  if (item_time_ == NULL) {
    item_time_ = new ::OPMessage::ItemJudgeTime;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_time)
  return item_time_;
}
::OPMessage::ItemJudgeTime* ItemJudgeRuleBianGengCheDao::release_item_time() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_time)
  clear_has_item_time();
  ::OPMessage::ItemJudgeTime* temp = item_time_;
  item_time_ = NULL;
  return temp;
}
void ItemJudgeRuleBianGengCheDao::set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time) {
  delete item_time_;
  item_time_ = item_time;
  if (item_time) {
    set_has_item_time();
  } else {
    clear_has_item_time();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_time)
}

// optional .OPMessage.ItemJudgeSpeed item_speed = 7;
bool ItemJudgeRuleBianGengCheDao::has_item_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleBianGengCheDao::set_has_item_speed() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleBianGengCheDao::clear_has_item_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleBianGengCheDao::clear_item_speed() {
  if (item_speed_ != NULL) item_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_speed();
}
const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleBianGengCheDao::item_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_speed)
  return item_speed_ != NULL ? *item_speed_ : *default_instance_->item_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleBianGengCheDao::mutable_item_speed() {
  set_has_item_speed();
  if (item_speed_ == NULL) {
    item_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_speed)
  return item_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleBianGengCheDao::release_item_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_speed)
  clear_has_item_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_speed_;
  item_speed_ = NULL;
  return temp;
}
void ItemJudgeRuleBianGengCheDao::set_allocated_item_speed(::OPMessage::ItemJudgeSpeed* item_speed) {
  delete item_speed_;
  item_speed_ = item_speed;
  if (item_speed) {
    set_has_item_speed();
  } else {
    clear_has_item_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_speed)
}

// optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
bool ItemJudgeRuleBianGengCheDao::has_item_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeRuleBianGengCheDao::set_has_item_leftturnlamp() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeRuleBianGengCheDao::clear_has_item_leftturnlamp() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeRuleBianGengCheDao::clear_item_leftturnlamp() {
  if (item_leftturnlamp_ != NULL) item_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_item_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleBianGengCheDao::item_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_leftturnlamp)
  return item_leftturnlamp_ != NULL ? *item_leftturnlamp_ : *default_instance_->item_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleBianGengCheDao::mutable_item_leftturnlamp() {
  set_has_item_leftturnlamp();
  if (item_leftturnlamp_ == NULL) {
    item_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_leftturnlamp)
  return item_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleBianGengCheDao::release_item_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_leftturnlamp)
  clear_has_item_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = item_leftturnlamp_;
  item_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleBianGengCheDao::set_allocated_item_leftturnlamp(::OPMessage::BasicLeftTurnLamp* item_leftturnlamp) {
  delete item_leftturnlamp_;
  item_leftturnlamp_ = item_leftturnlamp;
  if (item_leftturnlamp) {
    set_has_item_leftturnlamp();
  } else {
    clear_has_item_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_leftturnlamp)
}

// optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
bool ItemJudgeRuleBianGengCheDao::has_item_rightturnlamp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ItemJudgeRuleBianGengCheDao::set_has_item_rightturnlamp() {
  _has_bits_[0] |= 0x00000100u;
}
void ItemJudgeRuleBianGengCheDao::clear_has_item_rightturnlamp() {
  _has_bits_[0] &= ~0x00000100u;
}
void ItemJudgeRuleBianGengCheDao::clear_item_rightturnlamp() {
  if (item_rightturnlamp_ != NULL) item_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_item_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleBianGengCheDao::item_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_rightturnlamp)
  return item_rightturnlamp_ != NULL ? *item_rightturnlamp_ : *default_instance_->item_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleBianGengCheDao::mutable_item_rightturnlamp() {
  set_has_item_rightturnlamp();
  if (item_rightturnlamp_ == NULL) {
    item_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleBianGengCheDao.item_rightturnlamp)
  return item_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleBianGengCheDao::release_item_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleBianGengCheDao.item_rightturnlamp)
  clear_has_item_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = item_rightturnlamp_;
  item_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleBianGengCheDao::set_allocated_item_rightturnlamp(::OPMessage::BasicRightTurnLamp* item_rightturnlamp) {
  delete item_rightturnlamp_;
  item_rightturnlamp_ = item_rightturnlamp;
  if (item_rightturnlamp) {
    set_has_item_rightturnlamp();
  } else {
    clear_has_item_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleBianGengCheDao.item_rightturnlamp)
}

// optional .OPMessage.CheckFinishCarPositionBianGengCheDao check_finish_type = 10;
bool ItemJudgeRuleBianGengCheDao::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ItemJudgeRuleBianGengCheDao::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000200u;
}
void ItemJudgeRuleBianGengCheDao::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000200u;
}
void ItemJudgeRuleBianGengCheDao::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionBianGengCheDao ItemJudgeRuleBianGengCheDao::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionBianGengCheDao >(check_finish_type_);
}
 void ItemJudgeRuleBianGengCheDao::set_check_finish_type(::OPMessage::CheckFinishCarPositionBianGengCheDao value) {
  assert(::OPMessage::CheckFinishCarPositionBianGengCheDao_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.check_finish_type)
}

// optional bool item_whether_biangengchedao_one = 11;
bool ItemJudgeRuleBianGengCheDao::has_item_whether_biangengchedao_one() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ItemJudgeRuleBianGengCheDao::set_has_item_whether_biangengchedao_one() {
  _has_bits_[0] |= 0x00000400u;
}
void ItemJudgeRuleBianGengCheDao::clear_has_item_whether_biangengchedao_one() {
  _has_bits_[0] &= ~0x00000400u;
}
void ItemJudgeRuleBianGengCheDao::clear_item_whether_biangengchedao_one() {
  item_whether_biangengchedao_one_ = false;
  clear_has_item_whether_biangengchedao_one();
}
 bool ItemJudgeRuleBianGengCheDao::item_whether_biangengchedao_one() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_whether_biangengchedao_one)
  return item_whether_biangengchedao_one_;
}
 void ItemJudgeRuleBianGengCheDao::set_item_whether_biangengchedao_one(bool value) {
  set_has_item_whether_biangengchedao_one();
  item_whether_biangengchedao_one_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.item_whether_biangengchedao_one)
}

// optional bool item_whether_biangengchedao_two = 12;
bool ItemJudgeRuleBianGengCheDao::has_item_whether_biangengchedao_two() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ItemJudgeRuleBianGengCheDao::set_has_item_whether_biangengchedao_two() {
  _has_bits_[0] |= 0x00000800u;
}
void ItemJudgeRuleBianGengCheDao::clear_has_item_whether_biangengchedao_two() {
  _has_bits_[0] &= ~0x00000800u;
}
void ItemJudgeRuleBianGengCheDao::clear_item_whether_biangengchedao_two() {
  item_whether_biangengchedao_two_ = false;
  clear_has_item_whether_biangengchedao_two();
}
 bool ItemJudgeRuleBianGengCheDao::item_whether_biangengchedao_two() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleBianGengCheDao.item_whether_biangengchedao_two)
  return item_whether_biangengchedao_two_;
}
 void ItemJudgeRuleBianGengCheDao::set_item_whether_biangengchedao_two(bool value) {
  set_has_item_whether_biangengchedao_two();
  item_whether_biangengchedao_two_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleBianGengCheDao.item_whether_biangengchedao_two)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleChaoChe::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleChaoChe::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleChaoChe::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleChaoChe::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleChaoChe::kItemDistanceFieldNumber;
const int ItemJudgeRuleChaoChe::kItemTimeFieldNumber;
const int ItemJudgeRuleChaoChe::kItemSpeedFieldNumber;
const int ItemJudgeRuleChaoChe::kItemLeftturnlampFieldNumber;
const int ItemJudgeRuleChaoChe::kItemRightturnlampFieldNumber;
const int ItemJudgeRuleChaoChe::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleChaoChe::kItemWhetherChaocheOneFieldNumber;
const int ItemJudgeRuleChaoChe::kItemWhetherChaocheTwoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleChaoChe::ItemJudgeRuleChaoChe()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleChaoChe)
}

void ItemJudgeRuleChaoChe::InitAsDefaultInstance() {
  item_distance_ = const_cast< ::OPMessage::ItemJudgeDistance*>(&::OPMessage::ItemJudgeDistance::default_instance());
  item_time_ = const_cast< ::OPMessage::ItemJudgeTime*>(&::OPMessage::ItemJudgeTime::default_instance());
  item_speed_ = const_cast< ::OPMessage::ItemJudgeSpeed*>(&::OPMessage::ItemJudgeSpeed::default_instance());
  item_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  item_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
}

ItemJudgeRuleChaoChe::ItemJudgeRuleChaoChe(const ItemJudgeRuleChaoChe& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleChaoChe)
}

void ItemJudgeRuleChaoChe::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_distance_ = NULL;
  item_time_ = NULL;
  item_speed_ = NULL;
  item_leftturnlamp_ = NULL;
  item_rightturnlamp_ = NULL;
  check_finish_type_ = 0;
  item_whether_chaoche_one_ = false;
  item_whether_chaoche_two_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleChaoChe::~ItemJudgeRuleChaoChe() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleChaoChe)
  SharedDtor();
}

void ItemJudgeRuleChaoChe::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete item_distance_;
    delete item_time_;
    delete item_speed_;
    delete item_leftturnlamp_;
    delete item_rightturnlamp_;
  }
}

void ItemJudgeRuleChaoChe::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleChaoChe::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleChaoChe_descriptor_;
}

const ItemJudgeRuleChaoChe& ItemJudgeRuleChaoChe::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleChaoChe* ItemJudgeRuleChaoChe::default_instance_ = NULL;

ItemJudgeRuleChaoChe* ItemJudgeRuleChaoChe::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleChaoChe* n = new ItemJudgeRuleChaoChe;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleChaoChe::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleChaoChe)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeRuleChaoChe, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeRuleChaoChe*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_distance()) {
      if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
    }
    if (has_item_time()) {
      if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
    }
    if (has_item_speed()) {
      if (item_speed_ != NULL) item_speed_->::OPMessage::ItemJudgeSpeed::Clear();
    }
    if (has_item_leftturnlamp()) {
      if (item_leftturnlamp_ != NULL) item_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 3840u) {
    ZR_(check_finish_type_, item_whether_chaoche_two_);
    if (has_item_rightturnlamp()) {
      if (item_rightturnlamp_ != NULL) item_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleChaoChe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleChaoChe)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_enter_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleChaoChe.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleChaoChe.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleChaoChe.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleChaoChe.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_distance;
        break;
      }

      // optional .OPMessage.ItemJudgeDistance item_distance = 5;
      case 5: {
        if (tag == 42) {
         parse_item_distance:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_distance()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_item_time;
        break;
      }

      // optional .OPMessage.ItemJudgeTime item_time = 6;
      case 6: {
        if (tag == 50) {
         parse_item_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_item_speed;
        break;
      }

      // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
      case 7: {
        if (tag == 58) {
         parse_item_speed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_speed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_item_leftturnlamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
      case 8: {
        if (tag == 66) {
         parse_item_leftturnlamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_item_rightturnlamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
      case 9: {
        if (tag == 74) {
         parse_item_rightturnlamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionChaoChe check_finish_type = 10;
      case 10: {
        if (tag == 80) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionChaoChe_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionChaoChe >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_item_whether_chaoche_one;
        break;
      }

      // optional bool item_whether_chaoche_one = 11;
      case 11: {
        if (tag == 88) {
         parse_item_whether_chaoche_one:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &item_whether_chaoche_one_)));
          set_has_item_whether_chaoche_one();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_item_whether_chaoche_two;
        break;
      }

      // optional bool item_whether_chaoche_two = 12;
      case 12: {
        if (tag == 96) {
         parse_item_whether_chaoche_two:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &item_whether_chaoche_two_)));
          set_has_item_whether_chaoche_two();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleChaoChe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleChaoChe)
  return false;
#undef DO_
}

void ItemJudgeRuleChaoChe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleChaoChe)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleChaoChe.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleChaoChe.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleChaoChe.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleChaoChe.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_end_voice(), output);
  }

  // optional .OPMessage.ItemJudgeDistance item_distance = 5;
  if (has_item_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->item_distance_, output);
  }

  // optional .OPMessage.ItemJudgeTime item_time = 6;
  if (has_item_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->item_time_, output);
  }

  // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
  if (has_item_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->item_speed_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
  if (has_item_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->item_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
  if (has_item_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->item_rightturnlamp_, output);
  }

  // optional .OPMessage.CheckFinishCarPositionChaoChe check_finish_type = 10;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->check_finish_type(), output);
  }

  // optional bool item_whether_chaoche_one = 11;
  if (has_item_whether_chaoche_one()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->item_whether_chaoche_one(), output);
  }

  // optional bool item_whether_chaoche_two = 12;
  if (has_item_whether_chaoche_two()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->item_whether_chaoche_two(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleChaoChe)
}

::google::protobuf::uint8* ItemJudgeRuleChaoChe::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleChaoChe)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleChaoChe.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleChaoChe.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleChaoChe.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleChaoChe.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_end_voice(), target);
  }

  // optional .OPMessage.ItemJudgeDistance item_distance = 5;
  if (has_item_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->item_distance_, false, target);
  }

  // optional .OPMessage.ItemJudgeTime item_time = 6;
  if (has_item_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->item_time_, false, target);
  }

  // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
  if (has_item_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->item_speed_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
  if (has_item_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->item_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
  if (has_item_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->item_rightturnlamp_, false, target);
  }

  // optional .OPMessage.CheckFinishCarPositionChaoChe check_finish_type = 10;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->check_finish_type(), target);
  }

  // optional bool item_whether_chaoche_one = 11;
  if (has_item_whether_chaoche_one()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->item_whether_chaoche_one(), target);
  }

  // optional bool item_whether_chaoche_two = 12;
  if (has_item_whether_chaoche_two()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->item_whether_chaoche_two(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleChaoChe)
  return target;
}

int ItemJudgeRuleChaoChe::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleChaoChe)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string item_enter_voice = 1;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 2;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 3;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 4;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.ItemJudgeDistance item_distance = 5;
    if (has_item_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_distance_);
    }

    // optional .OPMessage.ItemJudgeTime item_time = 6;
    if (has_item_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_time_);
    }

    // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
    if (has_item_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_speed_);
    }

    // optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
    if (has_item_leftturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_leftturnlamp_);
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
    if (has_item_rightturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_rightturnlamp_);
    }

    // optional .OPMessage.CheckFinishCarPositionChaoChe check_finish_type = 10;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

    // optional bool item_whether_chaoche_one = 11;
    if (has_item_whether_chaoche_one()) {
      total_size += 1 + 1;
    }

    // optional bool item_whether_chaoche_two = 12;
    if (has_item_whether_chaoche_two()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleChaoChe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleChaoChe)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleChaoChe* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleChaoChe>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleChaoChe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleChaoChe)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleChaoChe::MergeFrom(const ItemJudgeRuleChaoChe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleChaoChe)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_item_distance()) {
      mutable_item_distance()->::OPMessage::ItemJudgeDistance::MergeFrom(from.item_distance());
    }
    if (from.has_item_time()) {
      mutable_item_time()->::OPMessage::ItemJudgeTime::MergeFrom(from.item_time());
    }
    if (from.has_item_speed()) {
      mutable_item_speed()->::OPMessage::ItemJudgeSpeed::MergeFrom(from.item_speed());
    }
    if (from.has_item_leftturnlamp()) {
      mutable_item_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.item_leftturnlamp());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_item_rightturnlamp()) {
      mutable_item_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.item_rightturnlamp());
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
    if (from.has_item_whether_chaoche_one()) {
      set_item_whether_chaoche_one(from.item_whether_chaoche_one());
    }
    if (from.has_item_whether_chaoche_two()) {
      set_item_whether_chaoche_two(from.item_whether_chaoche_two());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleChaoChe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleChaoChe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleChaoChe::CopyFrom(const ItemJudgeRuleChaoChe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleChaoChe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleChaoChe::IsInitialized() const {

  return true;
}

void ItemJudgeRuleChaoChe::Swap(ItemJudgeRuleChaoChe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleChaoChe::InternalSwap(ItemJudgeRuleChaoChe* other) {
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(item_distance_, other->item_distance_);
  std::swap(item_time_, other->item_time_);
  std::swap(item_speed_, other->item_speed_);
  std::swap(item_leftturnlamp_, other->item_leftturnlamp_);
  std::swap(item_rightturnlamp_, other->item_rightturnlamp_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(item_whether_chaoche_one_, other->item_whether_chaoche_one_);
  std::swap(item_whether_chaoche_two_, other->item_whether_chaoche_two_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleChaoChe::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleChaoChe_descriptor_;
  metadata.reflection = ItemJudgeRuleChaoChe_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleChaoChe

// optional string item_enter_voice = 1;
bool ItemJudgeRuleChaoChe::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleChaoChe::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleChaoChe::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleChaoChe::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleChaoChe::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleChaoChe::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
}
 void ItemJudgeRuleChaoChe::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
}
 void ItemJudgeRuleChaoChe::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
}
 ::std::string* ItemJudgeRuleChaoChe::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleChaoChe::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleChaoChe::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_enter_voice)
}

// optional string item_leave_voice = 2;
bool ItemJudgeRuleChaoChe::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleChaoChe::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleChaoChe::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleChaoChe::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleChaoChe::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleChaoChe::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
}
 void ItemJudgeRuleChaoChe::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
}
 void ItemJudgeRuleChaoChe::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
}
 ::std::string* ItemJudgeRuleChaoChe::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleChaoChe::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleChaoChe::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_leave_voice)
}

// optional string item_start_voice = 3;
bool ItemJudgeRuleChaoChe::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleChaoChe::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleChaoChe::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleChaoChe::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleChaoChe::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleChaoChe::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
}
 void ItemJudgeRuleChaoChe::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
}
 void ItemJudgeRuleChaoChe::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
}
 ::std::string* ItemJudgeRuleChaoChe::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleChaoChe::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleChaoChe::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_start_voice)
}

// optional string item_end_voice = 4;
bool ItemJudgeRuleChaoChe::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleChaoChe::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleChaoChe::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleChaoChe::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleChaoChe::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleChaoChe::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
}
 void ItemJudgeRuleChaoChe::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
}
 void ItemJudgeRuleChaoChe::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
}
 ::std::string* ItemJudgeRuleChaoChe::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleChaoChe::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleChaoChe::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_end_voice)
}

// optional .OPMessage.ItemJudgeDistance item_distance = 5;
bool ItemJudgeRuleChaoChe::has_item_distance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleChaoChe::set_has_item_distance() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleChaoChe::clear_has_item_distance() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleChaoChe::clear_item_distance() {
  if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
  clear_has_item_distance();
}
const ::OPMessage::ItemJudgeDistance& ItemJudgeRuleChaoChe::item_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_distance)
  return item_distance_ != NULL ? *item_distance_ : *default_instance_->item_distance_;
}
::OPMessage::ItemJudgeDistance* ItemJudgeRuleChaoChe::mutable_item_distance() {
  set_has_item_distance();
  if (item_distance_ == NULL) {
    item_distance_ = new ::OPMessage::ItemJudgeDistance;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_distance)
  return item_distance_;
}
::OPMessage::ItemJudgeDistance* ItemJudgeRuleChaoChe::release_item_distance() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_distance)
  clear_has_item_distance();
  ::OPMessage::ItemJudgeDistance* temp = item_distance_;
  item_distance_ = NULL;
  return temp;
}
void ItemJudgeRuleChaoChe::set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance) {
  delete item_distance_;
  item_distance_ = item_distance;
  if (item_distance) {
    set_has_item_distance();
  } else {
    clear_has_item_distance();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_distance)
}

// optional .OPMessage.ItemJudgeTime item_time = 6;
bool ItemJudgeRuleChaoChe::has_item_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleChaoChe::set_has_item_time() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleChaoChe::clear_has_item_time() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleChaoChe::clear_item_time() {
  if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
  clear_has_item_time();
}
const ::OPMessage::ItemJudgeTime& ItemJudgeRuleChaoChe::item_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_time)
  return item_time_ != NULL ? *item_time_ : *default_instance_->item_time_;
}
::OPMessage::ItemJudgeTime* ItemJudgeRuleChaoChe::mutable_item_time() {
  set_has_item_time();
  if (item_time_ == NULL) {
    item_time_ = new ::OPMessage::ItemJudgeTime;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_time)
  return item_time_;
}
::OPMessage::ItemJudgeTime* ItemJudgeRuleChaoChe::release_item_time() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_time)
  clear_has_item_time();
  ::OPMessage::ItemJudgeTime* temp = item_time_;
  item_time_ = NULL;
  return temp;
}
void ItemJudgeRuleChaoChe::set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time) {
  delete item_time_;
  item_time_ = item_time;
  if (item_time) {
    set_has_item_time();
  } else {
    clear_has_item_time();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_time)
}

// optional .OPMessage.ItemJudgeSpeed item_speed = 7;
bool ItemJudgeRuleChaoChe::has_item_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleChaoChe::set_has_item_speed() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleChaoChe::clear_has_item_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleChaoChe::clear_item_speed() {
  if (item_speed_ != NULL) item_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_speed();
}
const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleChaoChe::item_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_speed)
  return item_speed_ != NULL ? *item_speed_ : *default_instance_->item_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleChaoChe::mutable_item_speed() {
  set_has_item_speed();
  if (item_speed_ == NULL) {
    item_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_speed)
  return item_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleChaoChe::release_item_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_speed)
  clear_has_item_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_speed_;
  item_speed_ = NULL;
  return temp;
}
void ItemJudgeRuleChaoChe::set_allocated_item_speed(::OPMessage::ItemJudgeSpeed* item_speed) {
  delete item_speed_;
  item_speed_ = item_speed;
  if (item_speed) {
    set_has_item_speed();
  } else {
    clear_has_item_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_speed)
}

// optional .OPMessage.BasicLeftTurnLamp item_leftturnlamp = 8;
bool ItemJudgeRuleChaoChe::has_item_leftturnlamp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeRuleChaoChe::set_has_item_leftturnlamp() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeRuleChaoChe::clear_has_item_leftturnlamp() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeRuleChaoChe::clear_item_leftturnlamp() {
  if (item_leftturnlamp_ != NULL) item_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_item_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleChaoChe::item_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_leftturnlamp)
  return item_leftturnlamp_ != NULL ? *item_leftturnlamp_ : *default_instance_->item_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleChaoChe::mutable_item_leftturnlamp() {
  set_has_item_leftturnlamp();
  if (item_leftturnlamp_ == NULL) {
    item_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_leftturnlamp)
  return item_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleChaoChe::release_item_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_leftturnlamp)
  clear_has_item_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = item_leftturnlamp_;
  item_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleChaoChe::set_allocated_item_leftturnlamp(::OPMessage::BasicLeftTurnLamp* item_leftturnlamp) {
  delete item_leftturnlamp_;
  item_leftturnlamp_ = item_leftturnlamp;
  if (item_leftturnlamp) {
    set_has_item_leftturnlamp();
  } else {
    clear_has_item_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_leftturnlamp)
}

// optional .OPMessage.BasicRightTurnLamp item_rightturnlamp = 9;
bool ItemJudgeRuleChaoChe::has_item_rightturnlamp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ItemJudgeRuleChaoChe::set_has_item_rightturnlamp() {
  _has_bits_[0] |= 0x00000100u;
}
void ItemJudgeRuleChaoChe::clear_has_item_rightturnlamp() {
  _has_bits_[0] &= ~0x00000100u;
}
void ItemJudgeRuleChaoChe::clear_item_rightturnlamp() {
  if (item_rightturnlamp_ != NULL) item_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_item_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleChaoChe::item_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_rightturnlamp)
  return item_rightturnlamp_ != NULL ? *item_rightturnlamp_ : *default_instance_->item_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleChaoChe::mutable_item_rightturnlamp() {
  set_has_item_rightturnlamp();
  if (item_rightturnlamp_ == NULL) {
    item_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleChaoChe.item_rightturnlamp)
  return item_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleChaoChe::release_item_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleChaoChe.item_rightturnlamp)
  clear_has_item_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = item_rightturnlamp_;
  item_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleChaoChe::set_allocated_item_rightturnlamp(::OPMessage::BasicRightTurnLamp* item_rightturnlamp) {
  delete item_rightturnlamp_;
  item_rightturnlamp_ = item_rightturnlamp;
  if (item_rightturnlamp) {
    set_has_item_rightturnlamp();
  } else {
    clear_has_item_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleChaoChe.item_rightturnlamp)
}

// optional .OPMessage.CheckFinishCarPositionChaoChe check_finish_type = 10;
bool ItemJudgeRuleChaoChe::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ItemJudgeRuleChaoChe::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000200u;
}
void ItemJudgeRuleChaoChe::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000200u;
}
void ItemJudgeRuleChaoChe::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionChaoChe ItemJudgeRuleChaoChe::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionChaoChe >(check_finish_type_);
}
 void ItemJudgeRuleChaoChe::set_check_finish_type(::OPMessage::CheckFinishCarPositionChaoChe value) {
  assert(::OPMessage::CheckFinishCarPositionChaoChe_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.check_finish_type)
}

// optional bool item_whether_chaoche_one = 11;
bool ItemJudgeRuleChaoChe::has_item_whether_chaoche_one() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ItemJudgeRuleChaoChe::set_has_item_whether_chaoche_one() {
  _has_bits_[0] |= 0x00000400u;
}
void ItemJudgeRuleChaoChe::clear_has_item_whether_chaoche_one() {
  _has_bits_[0] &= ~0x00000400u;
}
void ItemJudgeRuleChaoChe::clear_item_whether_chaoche_one() {
  item_whether_chaoche_one_ = false;
  clear_has_item_whether_chaoche_one();
}
 bool ItemJudgeRuleChaoChe::item_whether_chaoche_one() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_whether_chaoche_one)
  return item_whether_chaoche_one_;
}
 void ItemJudgeRuleChaoChe::set_item_whether_chaoche_one(bool value) {
  set_has_item_whether_chaoche_one();
  item_whether_chaoche_one_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.item_whether_chaoche_one)
}

// optional bool item_whether_chaoche_two = 12;
bool ItemJudgeRuleChaoChe::has_item_whether_chaoche_two() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ItemJudgeRuleChaoChe::set_has_item_whether_chaoche_two() {
  _has_bits_[0] |= 0x00000800u;
}
void ItemJudgeRuleChaoChe::clear_has_item_whether_chaoche_two() {
  _has_bits_[0] &= ~0x00000800u;
}
void ItemJudgeRuleChaoChe::clear_item_whether_chaoche_two() {
  item_whether_chaoche_two_ = false;
  clear_has_item_whether_chaoche_two();
}
 bool ItemJudgeRuleChaoChe::item_whether_chaoche_two() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleChaoChe.item_whether_chaoche_two)
  return item_whether_chaoche_two_;
}
 void ItemJudgeRuleChaoChe::set_item_whether_chaoche_two(bool value) {
  set_has_item_whether_chaoche_two();
  item_whether_chaoche_two_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleChaoChe.item_whether_chaoche_two)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleHuiChe::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleHuiChe::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleHuiChe::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleHuiChe::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleHuiChe::kItemDistanceFieldNumber;
const int ItemJudgeRuleHuiChe::kItemTimeFieldNumber;
const int ItemJudgeRuleHuiChe::kItemSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleHuiChe::ItemJudgeRuleHuiChe()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleHuiChe)
}

void ItemJudgeRuleHuiChe::InitAsDefaultInstance() {
  item_distance_ = const_cast< ::OPMessage::ItemJudgeDistance*>(&::OPMessage::ItemJudgeDistance::default_instance());
  item_time_ = const_cast< ::OPMessage::ItemJudgeTime*>(&::OPMessage::ItemJudgeTime::default_instance());
  item_speed_ = const_cast< ::OPMessage::ItemJudgeSpeed*>(&::OPMessage::ItemJudgeSpeed::default_instance());
}

ItemJudgeRuleHuiChe::ItemJudgeRuleHuiChe(const ItemJudgeRuleHuiChe& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleHuiChe)
}

void ItemJudgeRuleHuiChe::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_distance_ = NULL;
  item_time_ = NULL;
  item_speed_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleHuiChe::~ItemJudgeRuleHuiChe() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleHuiChe)
  SharedDtor();
}

void ItemJudgeRuleHuiChe::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete item_distance_;
    delete item_time_;
    delete item_speed_;
  }
}

void ItemJudgeRuleHuiChe::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleHuiChe::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleHuiChe_descriptor_;
}

const ItemJudgeRuleHuiChe& ItemJudgeRuleHuiChe::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleHuiChe* ItemJudgeRuleHuiChe::default_instance_ = NULL;

ItemJudgeRuleHuiChe* ItemJudgeRuleHuiChe::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleHuiChe* n = new ItemJudgeRuleHuiChe;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleHuiChe::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleHuiChe)
  if (_has_bits_[0 / 32] & 127u) {
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_distance()) {
      if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
    }
    if (has_item_time()) {
      if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
    }
    if (has_item_speed()) {
      if (item_speed_ != NULL) item_speed_->::OPMessage::ItemJudgeSpeed::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleHuiChe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleHuiChe)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_enter_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleHuiChe.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleHuiChe.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleHuiChe.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleHuiChe.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_distance;
        break;
      }

      // optional .OPMessage.ItemJudgeDistance item_distance = 5;
      case 5: {
        if (tag == 42) {
         parse_item_distance:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_distance()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_item_time;
        break;
      }

      // optional .OPMessage.ItemJudgeTime item_time = 6;
      case 6: {
        if (tag == 50) {
         parse_item_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_time()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_item_speed;
        break;
      }

      // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
      case 7: {
        if (tag == 58) {
         parse_item_speed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_speed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleHuiChe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleHuiChe)
  return false;
#undef DO_
}

void ItemJudgeRuleHuiChe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleHuiChe)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleHuiChe.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleHuiChe.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleHuiChe.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleHuiChe.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_end_voice(), output);
  }

  // optional .OPMessage.ItemJudgeDistance item_distance = 5;
  if (has_item_distance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->item_distance_, output);
  }

  // optional .OPMessage.ItemJudgeTime item_time = 6;
  if (has_item_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->item_time_, output);
  }

  // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
  if (has_item_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->item_speed_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleHuiChe)
}

::google::protobuf::uint8* ItemJudgeRuleHuiChe::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleHuiChe)
  // optional string item_enter_voice = 1;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleHuiChe.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 2;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleHuiChe.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 3;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleHuiChe.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 4;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleHuiChe.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_end_voice(), target);
  }

  // optional .OPMessage.ItemJudgeDistance item_distance = 5;
  if (has_item_distance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->item_distance_, false, target);
  }

  // optional .OPMessage.ItemJudgeTime item_time = 6;
  if (has_item_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->item_time_, false, target);
  }

  // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
  if (has_item_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->item_speed_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleHuiChe)
  return target;
}

int ItemJudgeRuleHuiChe::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleHuiChe)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional string item_enter_voice = 1;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 2;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 3;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 4;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.ItemJudgeDistance item_distance = 5;
    if (has_item_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_distance_);
    }

    // optional .OPMessage.ItemJudgeTime item_time = 6;
    if (has_item_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_time_);
    }

    // optional .OPMessage.ItemJudgeSpeed item_speed = 7;
    if (has_item_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_speed_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleHuiChe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleHuiChe)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleHuiChe* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleHuiChe>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleHuiChe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleHuiChe)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleHuiChe::MergeFrom(const ItemJudgeRuleHuiChe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleHuiChe)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_item_distance()) {
      mutable_item_distance()->::OPMessage::ItemJudgeDistance::MergeFrom(from.item_distance());
    }
    if (from.has_item_time()) {
      mutable_item_time()->::OPMessage::ItemJudgeTime::MergeFrom(from.item_time());
    }
    if (from.has_item_speed()) {
      mutable_item_speed()->::OPMessage::ItemJudgeSpeed::MergeFrom(from.item_speed());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleHuiChe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleHuiChe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleHuiChe::CopyFrom(const ItemJudgeRuleHuiChe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleHuiChe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleHuiChe::IsInitialized() const {

  return true;
}

void ItemJudgeRuleHuiChe::Swap(ItemJudgeRuleHuiChe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleHuiChe::InternalSwap(ItemJudgeRuleHuiChe* other) {
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(item_distance_, other->item_distance_);
  std::swap(item_time_, other->item_time_);
  std::swap(item_speed_, other->item_speed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleHuiChe::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleHuiChe_descriptor_;
  metadata.reflection = ItemJudgeRuleHuiChe_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleHuiChe

// optional string item_enter_voice = 1;
bool ItemJudgeRuleHuiChe::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleHuiChe::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleHuiChe::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleHuiChe::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleHuiChe::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleHuiChe::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
}
 void ItemJudgeRuleHuiChe::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
}
 void ItemJudgeRuleHuiChe::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
}
 ::std::string* ItemJudgeRuleHuiChe::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleHuiChe::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleHuiChe::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_enter_voice)
}

// optional string item_leave_voice = 2;
bool ItemJudgeRuleHuiChe::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleHuiChe::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleHuiChe::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleHuiChe::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleHuiChe::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleHuiChe::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
}
 void ItemJudgeRuleHuiChe::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
}
 void ItemJudgeRuleHuiChe::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
}
 ::std::string* ItemJudgeRuleHuiChe::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleHuiChe::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleHuiChe::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_leave_voice)
}

// optional string item_start_voice = 3;
bool ItemJudgeRuleHuiChe::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleHuiChe::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleHuiChe::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleHuiChe::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleHuiChe::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleHuiChe::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
}
 void ItemJudgeRuleHuiChe::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
}
 void ItemJudgeRuleHuiChe::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
}
 ::std::string* ItemJudgeRuleHuiChe::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleHuiChe::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleHuiChe::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_start_voice)
}

// optional string item_end_voice = 4;
bool ItemJudgeRuleHuiChe::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleHuiChe::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleHuiChe::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleHuiChe::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleHuiChe::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleHuiChe::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
}
 void ItemJudgeRuleHuiChe::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
}
 void ItemJudgeRuleHuiChe::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
}
 ::std::string* ItemJudgeRuleHuiChe::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleHuiChe::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleHuiChe::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_end_voice)
}

// optional .OPMessage.ItemJudgeDistance item_distance = 5;
bool ItemJudgeRuleHuiChe::has_item_distance() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleHuiChe::set_has_item_distance() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleHuiChe::clear_has_item_distance() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleHuiChe::clear_item_distance() {
  if (item_distance_ != NULL) item_distance_->::OPMessage::ItemJudgeDistance::Clear();
  clear_has_item_distance();
}
const ::OPMessage::ItemJudgeDistance& ItemJudgeRuleHuiChe::item_distance() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_distance)
  return item_distance_ != NULL ? *item_distance_ : *default_instance_->item_distance_;
}
::OPMessage::ItemJudgeDistance* ItemJudgeRuleHuiChe::mutable_item_distance() {
  set_has_item_distance();
  if (item_distance_ == NULL) {
    item_distance_ = new ::OPMessage::ItemJudgeDistance;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_distance)
  return item_distance_;
}
::OPMessage::ItemJudgeDistance* ItemJudgeRuleHuiChe::release_item_distance() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_distance)
  clear_has_item_distance();
  ::OPMessage::ItemJudgeDistance* temp = item_distance_;
  item_distance_ = NULL;
  return temp;
}
void ItemJudgeRuleHuiChe::set_allocated_item_distance(::OPMessage::ItemJudgeDistance* item_distance) {
  delete item_distance_;
  item_distance_ = item_distance;
  if (item_distance) {
    set_has_item_distance();
  } else {
    clear_has_item_distance();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_distance)
}

// optional .OPMessage.ItemJudgeTime item_time = 6;
bool ItemJudgeRuleHuiChe::has_item_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleHuiChe::set_has_item_time() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleHuiChe::clear_has_item_time() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleHuiChe::clear_item_time() {
  if (item_time_ != NULL) item_time_->::OPMessage::ItemJudgeTime::Clear();
  clear_has_item_time();
}
const ::OPMessage::ItemJudgeTime& ItemJudgeRuleHuiChe::item_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_time)
  return item_time_ != NULL ? *item_time_ : *default_instance_->item_time_;
}
::OPMessage::ItemJudgeTime* ItemJudgeRuleHuiChe::mutable_item_time() {
  set_has_item_time();
  if (item_time_ == NULL) {
    item_time_ = new ::OPMessage::ItemJudgeTime;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_time)
  return item_time_;
}
::OPMessage::ItemJudgeTime* ItemJudgeRuleHuiChe::release_item_time() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_time)
  clear_has_item_time();
  ::OPMessage::ItemJudgeTime* temp = item_time_;
  item_time_ = NULL;
  return temp;
}
void ItemJudgeRuleHuiChe::set_allocated_item_time(::OPMessage::ItemJudgeTime* item_time) {
  delete item_time_;
  item_time_ = item_time;
  if (item_time) {
    set_has_item_time();
  } else {
    clear_has_item_time();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_time)
}

// optional .OPMessage.ItemJudgeSpeed item_speed = 7;
bool ItemJudgeRuleHuiChe::has_item_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleHuiChe::set_has_item_speed() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleHuiChe::clear_has_item_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleHuiChe::clear_item_speed() {
  if (item_speed_ != NULL) item_speed_->::OPMessage::ItemJudgeSpeed::Clear();
  clear_has_item_speed();
}
const ::OPMessage::ItemJudgeSpeed& ItemJudgeRuleHuiChe::item_speed() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleHuiChe.item_speed)
  return item_speed_ != NULL ? *item_speed_ : *default_instance_->item_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleHuiChe::mutable_item_speed() {
  set_has_item_speed();
  if (item_speed_ == NULL) {
    item_speed_ = new ::OPMessage::ItemJudgeSpeed;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleHuiChe.item_speed)
  return item_speed_;
}
::OPMessage::ItemJudgeSpeed* ItemJudgeRuleHuiChe::release_item_speed() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleHuiChe.item_speed)
  clear_has_item_speed();
  ::OPMessage::ItemJudgeSpeed* temp = item_speed_;
  item_speed_ = NULL;
  return temp;
}
void ItemJudgeRuleHuiChe::set_allocated_item_speed(::OPMessage::ItemJudgeSpeed* item_speed) {
  delete item_speed_;
  item_speed_ = item_speed;
  if (item_speed) {
    set_has_item_speed();
  } else {
    clear_has_item_speed();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleHuiChe.item_speed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleZjzw::kBasicEventCheckFieldNumber;
const int ItemJudgeRuleZjzw::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleZjzw::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleZjzw::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleZjzw::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleZjzw::kJudgePointsTypeFieldNumber;
const int ItemJudgeRuleZjzw::kCheckStartTypeFieldNumber;
const int ItemJudgeRuleZjzw::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleZjzw::kCarPressLineWhetherCheckFieldNumber;
const int ItemJudgeRuleZjzw::kCarPressLineDeductionFieldNumber;
const int ItemJudgeRuleZjzw::kCarPressLineVoiceFieldNumber;
const int ItemJudgeRuleZjzw::kInAreaAgainFieldNumber;
const int ItemJudgeRuleZjzw::kEventCheckLeftTurnLampFieldNumber;
const int ItemJudgeRuleZjzw::kEventCheckRightTurnLampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleZjzw::ItemJudgeRuleZjzw()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleZjzw)
}

void ItemJudgeRuleZjzw::InitAsDefaultInstance() {
  basic_event_check_ = const_cast< ::OPMessage::ItemJudgeBasic*>(&::OPMessage::ItemJudgeBasic::default_instance());
  event_check_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  event_check_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
}

ItemJudgeRuleZjzw::ItemJudgeRuleZjzw(const ItemJudgeRuleZjzw& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleZjzw)
}

void ItemJudgeRuleZjzw::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  basic_event_check_ = NULL;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  judge_points_type_ = 0;
  check_start_type_ = 0;
  check_finish_type_ = 0;
  car_pressline_whether_check_ = true;
  car_pressline_deduction_ = 100;
  car_pressline_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  in_area_again_ = false;
  event_check_leftturnlamp_ = NULL;
  event_check_rightturnlamp_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleZjzw::~ItemJudgeRuleZjzw() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleZjzw)
  SharedDtor();
}

void ItemJudgeRuleZjzw::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_pressline_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_event_check_;
    delete event_check_leftturnlamp_;
    delete event_check_rightturnlamp_;
  }
}

void ItemJudgeRuleZjzw::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleZjzw::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleZjzw_descriptor_;
}

const ItemJudgeRuleZjzw& ItemJudgeRuleZjzw::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleZjzw* ItemJudgeRuleZjzw::default_instance_ = NULL;

ItemJudgeRuleZjzw* ItemJudgeRuleZjzw::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleZjzw* n = new ItemJudgeRuleZjzw;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleZjzw::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleZjzw)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeRuleZjzw, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeRuleZjzw*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(judge_points_type_, check_finish_type_);
    if (has_basic_event_check()) {
      if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
    }
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 16128u) {
    car_pressline_whether_check_ = true;
    car_pressline_deduction_ = 100;
    if (has_car_pressline_voice()) {
      car_pressline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    in_area_again_ = false;
    if (has_event_check_leftturnlamp()) {
      if (event_check_leftturnlamp_ != NULL) event_check_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_event_check_rightturnlamp()) {
      if (event_check_rightturnlamp_ != NULL) event_check_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleZjzw::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleZjzw)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_event_check()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_enter_voice;
        break;
      }

      // optional string item_enter_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_enter_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZjzw.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZjzw.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZjzw.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZjzw.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_judge_points_type;
        break;
      }

      // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
      case 6: {
        if (tag == 48) {
         parse_judge_points_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::enum_judge_points_IsValid(value)) {
            set_judge_points_type(static_cast< ::OPMessage::enum_judge_points >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_check_start_type;
        break;
      }

      // optional .OPMessage.CheckStartCarPositionZjzw check_start_type = 7;
      case 7: {
        if (tag == 56) {
         parse_check_start_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckStartCarPositionZjzw_IsValid(value)) {
            set_check_start_type(static_cast< ::OPMessage::CheckStartCarPositionZjzw >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionZjzw check_finish_type = 8;
      case 8: {
        if (tag == 64) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionZjzw_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionZjzw >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_car_PressLine_whether_check;
        break;
      }

      // optional bool car_PressLine_whether_check = 9 [default = true];
      case 9: {
        if (tag == 72) {
         parse_car_PressLine_whether_check:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &car_pressline_whether_check_)));
          set_has_car_pressline_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_car_PressLine_deduction;
        break;
      }

      // optional int32 car_PressLine_deduction = 10 [default = 100];
      case 10: {
        if (tag == 80) {
         parse_car_PressLine_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_pressline_deduction_)));
          set_has_car_pressline_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_car_PressLine_voice;
        break;
      }

      // optional string car_PressLine_voice = 11;
      case 11: {
        if (tag == 90) {
         parse_car_PressLine_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_pressline_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_pressline_voice().data(), this->car_pressline_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_in_area_again;
        break;
      }

      // optional bool in_area_again = 12 [default = false];
      case 12: {
        if (tag == 96) {
         parse_in_area_again:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_area_again_)));
          set_has_in_area_again();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_event_check_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 13;
      case 13: {
        if (tag == 106) {
         parse_event_check_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_event_check_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_rightTurnLamp = 14;
      case 14: {
        if (tag == 114) {
         parse_event_check_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleZjzw)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleZjzw)
  return false;
#undef DO_
}

void ItemJudgeRuleZjzw::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleZjzw)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basic_event_check_, output);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZjzw.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZjzw.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZjzw.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZjzw.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->item_end_voice(), output);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->judge_points_type(), output);
  }

  // optional .OPMessage.CheckStartCarPositionZjzw check_start_type = 7;
  if (has_check_start_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->check_start_type(), output);
  }

  // optional .OPMessage.CheckFinishCarPositionZjzw check_finish_type = 8;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->check_finish_type(), output);
  }

  // optional bool car_PressLine_whether_check = 9 [default = true];
  if (has_car_pressline_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->car_pressline_whether_check(), output);
  }

  // optional int32 car_PressLine_deduction = 10 [default = 100];
  if (has_car_pressline_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->car_pressline_deduction(), output);
  }

  // optional string car_PressLine_voice = 11;
  if (has_car_pressline_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_pressline_voice().data(), this->car_pressline_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->car_pressline_voice(), output);
  }

  // optional bool in_area_again = 12 [default = false];
  if (has_in_area_again()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->in_area_again(), output);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 13;
  if (has_event_check_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->event_check_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_rightTurnLamp = 14;
  if (has_event_check_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->event_check_rightturnlamp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleZjzw)
}

::google::protobuf::uint8* ItemJudgeRuleZjzw::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleZjzw)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basic_event_check_, false, target);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZjzw.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZjzw.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZjzw.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZjzw.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->item_end_voice(), target);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->judge_points_type(), target);
  }

  // optional .OPMessage.CheckStartCarPositionZjzw check_start_type = 7;
  if (has_check_start_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->check_start_type(), target);
  }

  // optional .OPMessage.CheckFinishCarPositionZjzw check_finish_type = 8;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->check_finish_type(), target);
  }

  // optional bool car_PressLine_whether_check = 9 [default = true];
  if (has_car_pressline_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->car_pressline_whether_check(), target);
  }

  // optional int32 car_PressLine_deduction = 10 [default = 100];
  if (has_car_pressline_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->car_pressline_deduction(), target);
  }

  // optional string car_PressLine_voice = 11;
  if (has_car_pressline_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_pressline_voice().data(), this->car_pressline_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->car_pressline_voice(), target);
  }

  // optional bool in_area_again = 12 [default = false];
  if (has_in_area_again()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->in_area_again(), target);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 13;
  if (has_event_check_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->event_check_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_rightTurnLamp = 14;
  if (has_event_check_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->event_check_rightturnlamp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleZjzw)
  return target;
}

int ItemJudgeRuleZjzw::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleZjzw)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
    if (has_basic_event_check()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_event_check_);
    }

    // optional string item_enter_voice = 2;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 3;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 4;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 5;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
    if (has_judge_points_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->judge_points_type());
    }

    // optional .OPMessage.CheckStartCarPositionZjzw check_start_type = 7;
    if (has_check_start_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_start_type());
    }

    // optional .OPMessage.CheckFinishCarPositionZjzw check_finish_type = 8;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional bool car_PressLine_whether_check = 9 [default = true];
    if (has_car_pressline_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 car_PressLine_deduction = 10 [default = 100];
    if (has_car_pressline_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_pressline_deduction());
    }

    // optional string car_PressLine_voice = 11;
    if (has_car_pressline_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_pressline_voice());
    }

    // optional bool in_area_again = 12 [default = false];
    if (has_in_area_again()) {
      total_size += 1 + 1;
    }

    // optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 13;
    if (has_event_check_leftturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_leftturnlamp_);
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_rightTurnLamp = 14;
    if (has_event_check_rightturnlamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_rightturnlamp_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleZjzw::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleZjzw)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleZjzw* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleZjzw>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleZjzw)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleZjzw)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleZjzw::MergeFrom(const ItemJudgeRuleZjzw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleZjzw)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_basic_event_check()) {
      mutable_basic_event_check()->::OPMessage::ItemJudgeBasic::MergeFrom(from.basic_event_check());
    }
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_judge_points_type()) {
      set_judge_points_type(from.judge_points_type());
    }
    if (from.has_check_start_type()) {
      set_check_start_type(from.check_start_type());
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_car_pressline_whether_check()) {
      set_car_pressline_whether_check(from.car_pressline_whether_check());
    }
    if (from.has_car_pressline_deduction()) {
      set_car_pressline_deduction(from.car_pressline_deduction());
    }
    if (from.has_car_pressline_voice()) {
      set_has_car_pressline_voice();
      car_pressline_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_pressline_voice_);
    }
    if (from.has_in_area_again()) {
      set_in_area_again(from.in_area_again());
    }
    if (from.has_event_check_leftturnlamp()) {
      mutable_event_check_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.event_check_leftturnlamp());
    }
    if (from.has_event_check_rightturnlamp()) {
      mutable_event_check_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_rightturnlamp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleZjzw::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleZjzw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleZjzw::CopyFrom(const ItemJudgeRuleZjzw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleZjzw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleZjzw::IsInitialized() const {

  return true;
}

void ItemJudgeRuleZjzw::Swap(ItemJudgeRuleZjzw* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleZjzw::InternalSwap(ItemJudgeRuleZjzw* other) {
  std::swap(basic_event_check_, other->basic_event_check_);
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(judge_points_type_, other->judge_points_type_);
  std::swap(check_start_type_, other->check_start_type_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(car_pressline_whether_check_, other->car_pressline_whether_check_);
  std::swap(car_pressline_deduction_, other->car_pressline_deduction_);
  car_pressline_voice_.Swap(&other->car_pressline_voice_);
  std::swap(in_area_again_, other->in_area_again_);
  std::swap(event_check_leftturnlamp_, other->event_check_leftturnlamp_);
  std::swap(event_check_rightturnlamp_, other->event_check_rightturnlamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleZjzw::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleZjzw_descriptor_;
  metadata.reflection = ItemJudgeRuleZjzw_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleZjzw

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
bool ItemJudgeRuleZjzw::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleZjzw::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleZjzw::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleZjzw::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleZjzw::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleZjzw::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.basic_event_check)
  return basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleZjzw::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
void ItemJudgeRuleZjzw::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.basic_event_check)
}

// optional string item_enter_voice = 2;
bool ItemJudgeRuleZjzw::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleZjzw::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleZjzw::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleZjzw::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleZjzw::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZjzw::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
}
 void ItemJudgeRuleZjzw::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
}
 void ItemJudgeRuleZjzw::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
}
 ::std::string* ItemJudgeRuleZjzw::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZjzw::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZjzw::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.item_enter_voice)
}

// optional string item_leave_voice = 3;
bool ItemJudgeRuleZjzw::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleZjzw::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleZjzw::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleZjzw::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleZjzw::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZjzw::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
}
 void ItemJudgeRuleZjzw::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
}
 void ItemJudgeRuleZjzw::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
}
 ::std::string* ItemJudgeRuleZjzw::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZjzw::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZjzw::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.item_leave_voice)
}

// optional string item_start_voice = 4;
bool ItemJudgeRuleZjzw::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleZjzw::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleZjzw::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleZjzw::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleZjzw::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZjzw::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
}
 void ItemJudgeRuleZjzw::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
}
 void ItemJudgeRuleZjzw::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
}
 ::std::string* ItemJudgeRuleZjzw::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZjzw::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZjzw::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.item_start_voice)
}

// optional string item_end_voice = 5;
bool ItemJudgeRuleZjzw::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleZjzw::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleZjzw::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleZjzw::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleZjzw::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZjzw::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
}
 void ItemJudgeRuleZjzw::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
}
 void ItemJudgeRuleZjzw::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
}
 ::std::string* ItemJudgeRuleZjzw::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZjzw::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZjzw::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
bool ItemJudgeRuleZjzw::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleZjzw::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleZjzw::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleZjzw::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
 ::OPMessage::enum_judge_points ItemJudgeRuleZjzw::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
 void ItemJudgeRuleZjzw::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.judge_points_type)
}

// optional .OPMessage.CheckStartCarPositionZjzw check_start_type = 7;
bool ItemJudgeRuleZjzw::has_check_start_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleZjzw::set_has_check_start_type() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleZjzw::clear_has_check_start_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleZjzw::clear_check_start_type() {
  check_start_type_ = 0;
  clear_has_check_start_type();
}
 ::OPMessage::CheckStartCarPositionZjzw ItemJudgeRuleZjzw::check_start_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.check_start_type)
  return static_cast< ::OPMessage::CheckStartCarPositionZjzw >(check_start_type_);
}
 void ItemJudgeRuleZjzw::set_check_start_type(::OPMessage::CheckStartCarPositionZjzw value) {
  assert(::OPMessage::CheckStartCarPositionZjzw_IsValid(value));
  set_has_check_start_type();
  check_start_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.check_start_type)
}

// optional .OPMessage.CheckFinishCarPositionZjzw check_finish_type = 8;
bool ItemJudgeRuleZjzw::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeRuleZjzw::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeRuleZjzw::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeRuleZjzw::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionZjzw ItemJudgeRuleZjzw::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionZjzw >(check_finish_type_);
}
 void ItemJudgeRuleZjzw::set_check_finish_type(::OPMessage::CheckFinishCarPositionZjzw value) {
  assert(::OPMessage::CheckFinishCarPositionZjzw_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.check_finish_type)
}

// optional bool car_PressLine_whether_check = 9 [default = true];
bool ItemJudgeRuleZjzw::has_car_pressline_whether_check() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ItemJudgeRuleZjzw::set_has_car_pressline_whether_check() {
  _has_bits_[0] |= 0x00000100u;
}
void ItemJudgeRuleZjzw::clear_has_car_pressline_whether_check() {
  _has_bits_[0] &= ~0x00000100u;
}
void ItemJudgeRuleZjzw::clear_car_pressline_whether_check() {
  car_pressline_whether_check_ = true;
  clear_has_car_pressline_whether_check();
}
 bool ItemJudgeRuleZjzw::car_pressline_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.car_PressLine_whether_check)
  return car_pressline_whether_check_;
}
 void ItemJudgeRuleZjzw::set_car_pressline_whether_check(bool value) {
  set_has_car_pressline_whether_check();
  car_pressline_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.car_PressLine_whether_check)
}

// optional int32 car_PressLine_deduction = 10 [default = 100];
bool ItemJudgeRuleZjzw::has_car_pressline_deduction() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ItemJudgeRuleZjzw::set_has_car_pressline_deduction() {
  _has_bits_[0] |= 0x00000200u;
}
void ItemJudgeRuleZjzw::clear_has_car_pressline_deduction() {
  _has_bits_[0] &= ~0x00000200u;
}
void ItemJudgeRuleZjzw::clear_car_pressline_deduction() {
  car_pressline_deduction_ = 100;
  clear_has_car_pressline_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleZjzw::car_pressline_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.car_PressLine_deduction)
  return car_pressline_deduction_;
}
 void ItemJudgeRuleZjzw::set_car_pressline_deduction(::google::protobuf::int32 value) {
  set_has_car_pressline_deduction();
  car_pressline_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.car_PressLine_deduction)
}

// optional string car_PressLine_voice = 11;
bool ItemJudgeRuleZjzw::has_car_pressline_voice() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ItemJudgeRuleZjzw::set_has_car_pressline_voice() {
  _has_bits_[0] |= 0x00000400u;
}
void ItemJudgeRuleZjzw::clear_has_car_pressline_voice() {
  _has_bits_[0] &= ~0x00000400u;
}
void ItemJudgeRuleZjzw::clear_car_pressline_voice() {
  car_pressline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_pressline_voice();
}
 const ::std::string& ItemJudgeRuleZjzw::car_pressline_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
  return car_pressline_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZjzw::set_car_pressline_voice(const ::std::string& value) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
}
 void ItemJudgeRuleZjzw::set_car_pressline_voice(const char* value) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
}
 void ItemJudgeRuleZjzw::set_car_pressline_voice(const char* value, size_t size) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
}
 ::std::string* ItemJudgeRuleZjzw::mutable_car_pressline_voice() {
  set_has_car_pressline_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
  return car_pressline_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleZjzw::release_car_pressline_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
  clear_has_car_pressline_voice();
  return car_pressline_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleZjzw::set_allocated_car_pressline_voice(::std::string* car_pressline_voice) {
  if (car_pressline_voice != NULL) {
    set_has_car_pressline_voice();
  } else {
    clear_has_car_pressline_voice();
  }
  car_pressline_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_pressline_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.car_PressLine_voice)
}

// optional bool in_area_again = 12 [default = false];
bool ItemJudgeRuleZjzw::has_in_area_again() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ItemJudgeRuleZjzw::set_has_in_area_again() {
  _has_bits_[0] |= 0x00000800u;
}
void ItemJudgeRuleZjzw::clear_has_in_area_again() {
  _has_bits_[0] &= ~0x00000800u;
}
void ItemJudgeRuleZjzw::clear_in_area_again() {
  in_area_again_ = false;
  clear_has_in_area_again();
}
 bool ItemJudgeRuleZjzw::in_area_again() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.in_area_again)
  return in_area_again_;
}
 void ItemJudgeRuleZjzw::set_in_area_again(bool value) {
  set_has_in_area_again();
  in_area_again_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleZjzw.in_area_again)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_leftTurnLamp = 13;
bool ItemJudgeRuleZjzw::has_event_check_leftturnlamp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ItemJudgeRuleZjzw::set_has_event_check_leftturnlamp() {
  _has_bits_[0] |= 0x00001000u;
}
void ItemJudgeRuleZjzw::clear_has_event_check_leftturnlamp() {
  _has_bits_[0] &= ~0x00001000u;
}
void ItemJudgeRuleZjzw::clear_event_check_leftturnlamp() {
  if (event_check_leftturnlamp_ != NULL) event_check_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleZjzw::event_check_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.event_check_leftTurnLamp)
  return event_check_leftturnlamp_ != NULL ? *event_check_leftturnlamp_ : *default_instance_->event_check_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleZjzw::mutable_event_check_leftturnlamp() {
  set_has_event_check_leftturnlamp();
  if (event_check_leftturnlamp_ == NULL) {
    event_check_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.event_check_leftTurnLamp)
  return event_check_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleZjzw::release_event_check_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.event_check_leftTurnLamp)
  clear_has_event_check_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_leftturnlamp_;
  event_check_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleZjzw::set_allocated_event_check_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_leftturnlamp) {
  delete event_check_leftturnlamp_;
  event_check_leftturnlamp_ = event_check_leftturnlamp;
  if (event_check_leftturnlamp) {
    set_has_event_check_leftturnlamp();
  } else {
    clear_has_event_check_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.event_check_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_rightTurnLamp = 14;
bool ItemJudgeRuleZjzw::has_event_check_rightturnlamp() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ItemJudgeRuleZjzw::set_has_event_check_rightturnlamp() {
  _has_bits_[0] |= 0x00002000u;
}
void ItemJudgeRuleZjzw::clear_has_event_check_rightturnlamp() {
  _has_bits_[0] &= ~0x00002000u;
}
void ItemJudgeRuleZjzw::clear_event_check_rightturnlamp() {
  if (event_check_rightturnlamp_ != NULL) event_check_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleZjzw::event_check_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleZjzw.event_check_rightTurnLamp)
  return event_check_rightturnlamp_ != NULL ? *event_check_rightturnlamp_ : *default_instance_->event_check_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleZjzw::mutable_event_check_rightturnlamp() {
  set_has_event_check_rightturnlamp();
  if (event_check_rightturnlamp_ == NULL) {
    event_check_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleZjzw.event_check_rightTurnLamp)
  return event_check_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleZjzw::release_event_check_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleZjzw.event_check_rightTurnLamp)
  clear_has_event_check_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_rightturnlamp_;
  event_check_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleZjzw::set_allocated_event_check_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rightturnlamp) {
  delete event_check_rightturnlamp_;
  event_check_rightturnlamp_ = event_check_rightturnlamp;
  if (event_check_rightturnlamp) {
    set_has_event_check_rightturnlamp();
  } else {
    clear_has_event_check_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleZjzw.event_check_rightTurnLamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleQxxs::kBasicEventCheckFieldNumber;
const int ItemJudgeRuleQxxs::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleQxxs::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleQxxs::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleQxxs::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleQxxs::kJudgePointsTypeFieldNumber;
const int ItemJudgeRuleQxxs::kCheckStartTypeFieldNumber;
const int ItemJudgeRuleQxxs::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleQxxs::kCarPressLineWhetherCheckFieldNumber;
const int ItemJudgeRuleQxxs::kCarPressLineDeductionFieldNumber;
const int ItemJudgeRuleQxxs::kCarPressLineVoiceFieldNumber;
const int ItemJudgeRuleQxxs::kInAreaAgainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleQxxs::ItemJudgeRuleQxxs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleQxxs)
}

void ItemJudgeRuleQxxs::InitAsDefaultInstance() {
  basic_event_check_ = const_cast< ::OPMessage::ItemJudgeBasic*>(&::OPMessage::ItemJudgeBasic::default_instance());
}

ItemJudgeRuleQxxs::ItemJudgeRuleQxxs(const ItemJudgeRuleQxxs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleQxxs)
}

void ItemJudgeRuleQxxs::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  basic_event_check_ = NULL;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  judge_points_type_ = 0;
  check_start_type_ = 0;
  check_finish_type_ = 0;
  car_pressline_whether_check_ = true;
  car_pressline_deduction_ = 100;
  car_pressline_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  in_area_again_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleQxxs::~ItemJudgeRuleQxxs() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleQxxs)
  SharedDtor();
}

void ItemJudgeRuleQxxs::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_pressline_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_event_check_;
  }
}

void ItemJudgeRuleQxxs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleQxxs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleQxxs_descriptor_;
}

const ItemJudgeRuleQxxs& ItemJudgeRuleQxxs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleQxxs* ItemJudgeRuleQxxs::default_instance_ = NULL;

ItemJudgeRuleQxxs* ItemJudgeRuleQxxs::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleQxxs* n = new ItemJudgeRuleQxxs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleQxxs::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleQxxs)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeRuleQxxs, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeRuleQxxs*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(judge_points_type_, check_finish_type_);
    if (has_basic_event_check()) {
      if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
    }
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 3840u) {
    car_pressline_whether_check_ = true;
    car_pressline_deduction_ = 100;
    if (has_car_pressline_voice()) {
      car_pressline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    in_area_again_ = false;
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleQxxs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleQxxs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_event_check()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_enter_voice;
        break;
      }

      // optional string item_enter_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_enter_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleQxxs.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleQxxs.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleQxxs.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleQxxs.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_judge_points_type;
        break;
      }

      // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
      case 6: {
        if (tag == 48) {
         parse_judge_points_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::enum_judge_points_IsValid(value)) {
            set_judge_points_type(static_cast< ::OPMessage::enum_judge_points >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_check_start_type;
        break;
      }

      // optional .OPMessage.CheckStartCarPositionQxxs check_start_type = 7;
      case 7: {
        if (tag == 56) {
         parse_check_start_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckStartCarPositionQxxs_IsValid(value)) {
            set_check_start_type(static_cast< ::OPMessage::CheckStartCarPositionQxxs >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionQxxs check_finish_type = 8;
      case 8: {
        if (tag == 64) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionQxxs_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionQxxs >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_car_PressLine_whether_check;
        break;
      }

      // optional bool car_PressLine_whether_check = 9 [default = true];
      case 9: {
        if (tag == 72) {
         parse_car_PressLine_whether_check:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &car_pressline_whether_check_)));
          set_has_car_pressline_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_car_PressLine_deduction;
        break;
      }

      // optional int32 car_PressLine_deduction = 10 [default = 100];
      case 10: {
        if (tag == 80) {
         parse_car_PressLine_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_pressline_deduction_)));
          set_has_car_pressline_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_car_PressLine_voice;
        break;
      }

      // optional string car_PressLine_voice = 11;
      case 11: {
        if (tag == 90) {
         parse_car_PressLine_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_pressline_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_pressline_voice().data(), this->car_pressline_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_in_area_again;
        break;
      }

      // optional bool in_area_again = 12 [default = false];
      case 12: {
        if (tag == 96) {
         parse_in_area_again:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_area_again_)));
          set_has_in_area_again();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleQxxs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleQxxs)
  return false;
#undef DO_
}

void ItemJudgeRuleQxxs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleQxxs)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basic_event_check_, output);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQxxs.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQxxs.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQxxs.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQxxs.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->item_end_voice(), output);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->judge_points_type(), output);
  }

  // optional .OPMessage.CheckStartCarPositionQxxs check_start_type = 7;
  if (has_check_start_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->check_start_type(), output);
  }

  // optional .OPMessage.CheckFinishCarPositionQxxs check_finish_type = 8;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->check_finish_type(), output);
  }

  // optional bool car_PressLine_whether_check = 9 [default = true];
  if (has_car_pressline_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->car_pressline_whether_check(), output);
  }

  // optional int32 car_PressLine_deduction = 10 [default = 100];
  if (has_car_pressline_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->car_pressline_deduction(), output);
  }

  // optional string car_PressLine_voice = 11;
  if (has_car_pressline_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_pressline_voice().data(), this->car_pressline_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->car_pressline_voice(), output);
  }

  // optional bool in_area_again = 12 [default = false];
  if (has_in_area_again()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->in_area_again(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleQxxs)
}

::google::protobuf::uint8* ItemJudgeRuleQxxs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleQxxs)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basic_event_check_, false, target);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQxxs.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQxxs.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQxxs.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQxxs.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->item_end_voice(), target);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->judge_points_type(), target);
  }

  // optional .OPMessage.CheckStartCarPositionQxxs check_start_type = 7;
  if (has_check_start_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->check_start_type(), target);
  }

  // optional .OPMessage.CheckFinishCarPositionQxxs check_finish_type = 8;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->check_finish_type(), target);
  }

  // optional bool car_PressLine_whether_check = 9 [default = true];
  if (has_car_pressline_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->car_pressline_whether_check(), target);
  }

  // optional int32 car_PressLine_deduction = 10 [default = 100];
  if (has_car_pressline_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->car_pressline_deduction(), target);
  }

  // optional string car_PressLine_voice = 11;
  if (has_car_pressline_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_pressline_voice().data(), this->car_pressline_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->car_pressline_voice(), target);
  }

  // optional bool in_area_again = 12 [default = false];
  if (has_in_area_again()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->in_area_again(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleQxxs)
  return target;
}

int ItemJudgeRuleQxxs::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleQxxs)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
    if (has_basic_event_check()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_event_check_);
    }

    // optional string item_enter_voice = 2;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 3;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 4;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 5;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
    if (has_judge_points_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->judge_points_type());
    }

    // optional .OPMessage.CheckStartCarPositionQxxs check_start_type = 7;
    if (has_check_start_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_start_type());
    }

    // optional .OPMessage.CheckFinishCarPositionQxxs check_finish_type = 8;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional bool car_PressLine_whether_check = 9 [default = true];
    if (has_car_pressline_whether_check()) {
      total_size += 1 + 1;
    }

    // optional int32 car_PressLine_deduction = 10 [default = 100];
    if (has_car_pressline_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_pressline_deduction());
    }

    // optional string car_PressLine_voice = 11;
    if (has_car_pressline_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_pressline_voice());
    }

    // optional bool in_area_again = 12 [default = false];
    if (has_in_area_again()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleQxxs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleQxxs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleQxxs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleQxxs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleQxxs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleQxxs)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleQxxs::MergeFrom(const ItemJudgeRuleQxxs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleQxxs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_basic_event_check()) {
      mutable_basic_event_check()->::OPMessage::ItemJudgeBasic::MergeFrom(from.basic_event_check());
    }
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_judge_points_type()) {
      set_judge_points_type(from.judge_points_type());
    }
    if (from.has_check_start_type()) {
      set_check_start_type(from.check_start_type());
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_car_pressline_whether_check()) {
      set_car_pressline_whether_check(from.car_pressline_whether_check());
    }
    if (from.has_car_pressline_deduction()) {
      set_car_pressline_deduction(from.car_pressline_deduction());
    }
    if (from.has_car_pressline_voice()) {
      set_has_car_pressline_voice();
      car_pressline_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_pressline_voice_);
    }
    if (from.has_in_area_again()) {
      set_in_area_again(from.in_area_again());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleQxxs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleQxxs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleQxxs::CopyFrom(const ItemJudgeRuleQxxs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleQxxs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleQxxs::IsInitialized() const {

  return true;
}

void ItemJudgeRuleQxxs::Swap(ItemJudgeRuleQxxs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleQxxs::InternalSwap(ItemJudgeRuleQxxs* other) {
  std::swap(basic_event_check_, other->basic_event_check_);
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(judge_points_type_, other->judge_points_type_);
  std::swap(check_start_type_, other->check_start_type_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(car_pressline_whether_check_, other->car_pressline_whether_check_);
  std::swap(car_pressline_deduction_, other->car_pressline_deduction_);
  car_pressline_voice_.Swap(&other->car_pressline_voice_);
  std::swap(in_area_again_, other->in_area_again_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleQxxs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleQxxs_descriptor_;
  metadata.reflection = ItemJudgeRuleQxxs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleQxxs

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
bool ItemJudgeRuleQxxs::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleQxxs::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleQxxs::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleQxxs::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleQxxs::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleQxxs::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQxxs.basic_event_check)
  return basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleQxxs::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQxxs.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
void ItemJudgeRuleQxxs::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQxxs.basic_event_check)
}

// optional string item_enter_voice = 2;
bool ItemJudgeRuleQxxs::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleQxxs::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleQxxs::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleQxxs::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleQxxs::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQxxs::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
}
 void ItemJudgeRuleQxxs::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
}
 void ItemJudgeRuleQxxs::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
}
 ::std::string* ItemJudgeRuleQxxs::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleQxxs::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQxxs::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQxxs.item_enter_voice)
}

// optional string item_leave_voice = 3;
bool ItemJudgeRuleQxxs::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleQxxs::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleQxxs::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleQxxs::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleQxxs::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQxxs::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
}
 void ItemJudgeRuleQxxs::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
}
 void ItemJudgeRuleQxxs::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
}
 ::std::string* ItemJudgeRuleQxxs::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleQxxs::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQxxs::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQxxs.item_leave_voice)
}

// optional string item_start_voice = 4;
bool ItemJudgeRuleQxxs::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleQxxs::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleQxxs::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleQxxs::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleQxxs::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQxxs::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
}
 void ItemJudgeRuleQxxs::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
}
 void ItemJudgeRuleQxxs::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
}
 ::std::string* ItemJudgeRuleQxxs::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleQxxs::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQxxs::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQxxs.item_start_voice)
}

// optional string item_end_voice = 5;
bool ItemJudgeRuleQxxs::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleQxxs::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleQxxs::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleQxxs::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleQxxs::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQxxs::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
}
 void ItemJudgeRuleQxxs::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
}
 void ItemJudgeRuleQxxs::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
}
 ::std::string* ItemJudgeRuleQxxs::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleQxxs::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQxxs::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQxxs.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
bool ItemJudgeRuleQxxs::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleQxxs::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleQxxs::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleQxxs::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
 ::OPMessage::enum_judge_points ItemJudgeRuleQxxs::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
 void ItemJudgeRuleQxxs::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.judge_points_type)
}

// optional .OPMessage.CheckStartCarPositionQxxs check_start_type = 7;
bool ItemJudgeRuleQxxs::has_check_start_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleQxxs::set_has_check_start_type() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleQxxs::clear_has_check_start_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleQxxs::clear_check_start_type() {
  check_start_type_ = 0;
  clear_has_check_start_type();
}
 ::OPMessage::CheckStartCarPositionQxxs ItemJudgeRuleQxxs::check_start_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.check_start_type)
  return static_cast< ::OPMessage::CheckStartCarPositionQxxs >(check_start_type_);
}
 void ItemJudgeRuleQxxs::set_check_start_type(::OPMessage::CheckStartCarPositionQxxs value) {
  assert(::OPMessage::CheckStartCarPositionQxxs_IsValid(value));
  set_has_check_start_type();
  check_start_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.check_start_type)
}

// optional .OPMessage.CheckFinishCarPositionQxxs check_finish_type = 8;
bool ItemJudgeRuleQxxs::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeRuleQxxs::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeRuleQxxs::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeRuleQxxs::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionQxxs ItemJudgeRuleQxxs::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionQxxs >(check_finish_type_);
}
 void ItemJudgeRuleQxxs::set_check_finish_type(::OPMessage::CheckFinishCarPositionQxxs value) {
  assert(::OPMessage::CheckFinishCarPositionQxxs_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.check_finish_type)
}

// optional bool car_PressLine_whether_check = 9 [default = true];
bool ItemJudgeRuleQxxs::has_car_pressline_whether_check() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ItemJudgeRuleQxxs::set_has_car_pressline_whether_check() {
  _has_bits_[0] |= 0x00000100u;
}
void ItemJudgeRuleQxxs::clear_has_car_pressline_whether_check() {
  _has_bits_[0] &= ~0x00000100u;
}
void ItemJudgeRuleQxxs::clear_car_pressline_whether_check() {
  car_pressline_whether_check_ = true;
  clear_has_car_pressline_whether_check();
}
 bool ItemJudgeRuleQxxs::car_pressline_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.car_PressLine_whether_check)
  return car_pressline_whether_check_;
}
 void ItemJudgeRuleQxxs::set_car_pressline_whether_check(bool value) {
  set_has_car_pressline_whether_check();
  car_pressline_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.car_PressLine_whether_check)
}

// optional int32 car_PressLine_deduction = 10 [default = 100];
bool ItemJudgeRuleQxxs::has_car_pressline_deduction() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ItemJudgeRuleQxxs::set_has_car_pressline_deduction() {
  _has_bits_[0] |= 0x00000200u;
}
void ItemJudgeRuleQxxs::clear_has_car_pressline_deduction() {
  _has_bits_[0] &= ~0x00000200u;
}
void ItemJudgeRuleQxxs::clear_car_pressline_deduction() {
  car_pressline_deduction_ = 100;
  clear_has_car_pressline_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleQxxs::car_pressline_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.car_PressLine_deduction)
  return car_pressline_deduction_;
}
 void ItemJudgeRuleQxxs::set_car_pressline_deduction(::google::protobuf::int32 value) {
  set_has_car_pressline_deduction();
  car_pressline_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.car_PressLine_deduction)
}

// optional string car_PressLine_voice = 11;
bool ItemJudgeRuleQxxs::has_car_pressline_voice() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ItemJudgeRuleQxxs::set_has_car_pressline_voice() {
  _has_bits_[0] |= 0x00000400u;
}
void ItemJudgeRuleQxxs::clear_has_car_pressline_voice() {
  _has_bits_[0] &= ~0x00000400u;
}
void ItemJudgeRuleQxxs::clear_car_pressline_voice() {
  car_pressline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_pressline_voice();
}
 const ::std::string& ItemJudgeRuleQxxs::car_pressline_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
  return car_pressline_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQxxs::set_car_pressline_voice(const ::std::string& value) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
}
 void ItemJudgeRuleQxxs::set_car_pressline_voice(const char* value) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
}
 void ItemJudgeRuleQxxs::set_car_pressline_voice(const char* value, size_t size) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
}
 ::std::string* ItemJudgeRuleQxxs::mutable_car_pressline_voice() {
  set_has_car_pressline_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
  return car_pressline_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleQxxs::release_car_pressline_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
  clear_has_car_pressline_voice();
  return car_pressline_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleQxxs::set_allocated_car_pressline_voice(::std::string* car_pressline_voice) {
  if (car_pressline_voice != NULL) {
    set_has_car_pressline_voice();
  } else {
    clear_has_car_pressline_voice();
  }
  car_pressline_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_pressline_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleQxxs.car_PressLine_voice)
}

// optional bool in_area_again = 12 [default = false];
bool ItemJudgeRuleQxxs::has_in_area_again() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ItemJudgeRuleQxxs::set_has_in_area_again() {
  _has_bits_[0] |= 0x00000800u;
}
void ItemJudgeRuleQxxs::clear_has_in_area_again() {
  _has_bits_[0] &= ~0x00000800u;
}
void ItemJudgeRuleQxxs::clear_in_area_again() {
  in_area_again_ = false;
  clear_has_in_area_again();
}
 bool ItemJudgeRuleQxxs::in_area_again() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleQxxs.in_area_again)
  return in_area_again_;
}
 void ItemJudgeRuleQxxs::set_in_area_again(bool value) {
  set_has_in_area_again();
  in_area_again_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleQxxs.in_area_again)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CftcPressLine::kCarRunPressline3VoiceFieldNumber;
const int CftcPressLine::kCarRunPressline3DeductionFieldNumber;
const int CftcPressLine::kCarRunPressline4VoiceFieldNumber;
const int CftcPressLine::kCarRunPressline4DeductionFieldNumber;
const int CftcPressLine::kCarRunPressline7VoiceFieldNumber;
const int CftcPressLine::kCarRunPressline7DeductionFieldNumber;
const int CftcPressLine::kCarRunPressline5VoiceFieldNumber;
const int CftcPressLine::kCarRunPressline5DeductionFieldNumber;
const int CftcPressLine::kCarRunPressline9VoiceFieldNumber;
const int CftcPressLine::kCarRunPressline9DeductionFieldNumber;
const int CftcPressLine::kCarPresslineNumsMutexFieldNumber;
const int CftcPressLine::kCarRunPressline2VoiceFieldNumber;
const int CftcPressLine::kCarRunPressline2DeductionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CftcPressLine::CftcPressLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.CftcPressLine)
}

void CftcPressLine::InitAsDefaultInstance() {
}

CftcPressLine::CftcPressLine(const CftcPressLine& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.CftcPressLine)
}

void CftcPressLine::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  car_run_pressline_3_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_3_deduction_ = 0;
  car_run_pressline_4_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_4_deduction_ = 0;
  car_run_pressline_7_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_7_deduction_ = 0;
  car_run_pressline_5_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_5_deduction_ = 0;
  car_run_pressline_9_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_9_deduction_ = 0;
  car_run_pressline_2_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_2_deduction_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CftcPressLine::~CftcPressLine() {
  // @@protoc_insertion_point(destructor:OPMessage.CftcPressLine)
  SharedDtor();
}

void CftcPressLine::SharedDtor() {
  car_run_pressline_3_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_4_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_7_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_5_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_9_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_2_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CftcPressLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CftcPressLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CftcPressLine_descriptor_;
}

const CftcPressLine& CftcPressLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

CftcPressLine* CftcPressLine::default_instance_ = NULL;

CftcPressLine* CftcPressLine::New(::google::protobuf::Arena* arena) const {
  CftcPressLine* n = new CftcPressLine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CftcPressLine::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.CftcPressLine)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CftcPressLine, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CftcPressLine*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(car_run_pressline_3_deduction_, car_run_pressline_4_deduction_);
    ZR_(car_run_pressline_7_deduction_, car_run_pressline_5_deduction_);
    if (has_car_run_pressline_3_voice()) {
      car_run_pressline_3_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_run_pressline_4_voice()) {
      car_run_pressline_4_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_run_pressline_7_voice()) {
      car_run_pressline_7_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_run_pressline_5_voice()) {
      car_run_pressline_5_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 6912u) {
    ZR_(car_run_pressline_9_deduction_, car_run_pressline_2_deduction_);
    if (has_car_run_pressline_9_voice()) {
      car_run_pressline_9_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_run_pressline_2_voice()) {
      car_run_pressline_2_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  car_pressline_nums_mutex_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CftcPressLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.CftcPressLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string car_run_pressline_3_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_pressline_3_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_pressline_3_voice().data(), this->car_run_pressline_3_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.CftcPressLine.car_run_pressline_3_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_car_run_pressline_3_deduction;
        break;
      }

      // optional int32 car_run_pressline_3_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_car_run_pressline_3_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_pressline_3_deduction_)));
          set_has_car_run_pressline_3_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_car_run_pressline_4_voice;
        break;
      }

      // optional string car_run_pressline_4_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_car_run_pressline_4_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_pressline_4_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_pressline_4_voice().data(), this->car_run_pressline_4_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.CftcPressLine.car_run_pressline_4_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_car_run_pressline_4_deduction;
        break;
      }

      // optional int32 car_run_pressline_4_deduction = 4;
      case 4: {
        if (tag == 32) {
         parse_car_run_pressline_4_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_pressline_4_deduction_)));
          set_has_car_run_pressline_4_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_car_run_pressline_7_voice;
        break;
      }

      // optional string car_run_pressline_7_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_car_run_pressline_7_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_pressline_7_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_pressline_7_voice().data(), this->car_run_pressline_7_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.CftcPressLine.car_run_pressline_7_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_car_run_pressline_7_deduction;
        break;
      }

      // optional int32 car_run_pressline_7_deduction = 6;
      case 6: {
        if (tag == 48) {
         parse_car_run_pressline_7_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_pressline_7_deduction_)));
          set_has_car_run_pressline_7_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_car_run_pressline_5_voice;
        break;
      }

      // optional string car_run_pressline_5_voice = 7;
      case 7: {
        if (tag == 58) {
         parse_car_run_pressline_5_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_pressline_5_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_pressline_5_voice().data(), this->car_run_pressline_5_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.CftcPressLine.car_run_pressline_5_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_car_run_pressline_5_deduction;
        break;
      }

      // optional int32 car_run_pressline_5_deduction = 8;
      case 8: {
        if (tag == 64) {
         parse_car_run_pressline_5_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_pressline_5_deduction_)));
          set_has_car_run_pressline_5_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_car_run_pressline_9_voice;
        break;
      }

      // optional string car_run_pressline_9_voice = 9;
      case 9: {
        if (tag == 74) {
         parse_car_run_pressline_9_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_pressline_9_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_pressline_9_voice().data(), this->car_run_pressline_9_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.CftcPressLine.car_run_pressline_9_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_car_run_pressline_9_deduction;
        break;
      }

      // optional int32 car_run_pressline_9_deduction = 10;
      case 10: {
        if (tag == 80) {
         parse_car_run_pressline_9_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_pressline_9_deduction_)));
          set_has_car_run_pressline_9_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_car_pressline_nums_mutex;
        break;
      }

      // repeated int32 car_pressline_nums_mutex = 11;
      case 11: {
        if (tag == 88) {
         parse_car_pressline_nums_mutex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 88, input, this->mutable_car_pressline_nums_mutex())));
        } else if (tag == 90) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_car_pressline_nums_mutex())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_car_pressline_nums_mutex;
        if (input->ExpectTag(98)) goto parse_car_run_pressline_2_voice;
        break;
      }

      // optional string car_run_pressline_2_voice = 12;
      case 12: {
        if (tag == 98) {
         parse_car_run_pressline_2_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_pressline_2_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_pressline_2_voice().data(), this->car_run_pressline_2_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.CftcPressLine.car_run_pressline_2_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_car_run_pressline_2_deduction;
        break;
      }

      // optional int32 car_run_pressline_2_deduction = 13;
      case 13: {
        if (tag == 104) {
         parse_car_run_pressline_2_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_pressline_2_deduction_)));
          set_has_car_run_pressline_2_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.CftcPressLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.CftcPressLine)
  return false;
#undef DO_
}

void CftcPressLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.CftcPressLine)
  // optional string car_run_pressline_3_voice = 1;
  if (has_car_run_pressline_3_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_3_voice().data(), this->car_run_pressline_3_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.CftcPressLine.car_run_pressline_3_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->car_run_pressline_3_voice(), output);
  }

  // optional int32 car_run_pressline_3_deduction = 2;
  if (has_car_run_pressline_3_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->car_run_pressline_3_deduction(), output);
  }

  // optional string car_run_pressline_4_voice = 3;
  if (has_car_run_pressline_4_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_4_voice().data(), this->car_run_pressline_4_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.CftcPressLine.car_run_pressline_4_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->car_run_pressline_4_voice(), output);
  }

  // optional int32 car_run_pressline_4_deduction = 4;
  if (has_car_run_pressline_4_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->car_run_pressline_4_deduction(), output);
  }

  // optional string car_run_pressline_7_voice = 5;
  if (has_car_run_pressline_7_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_7_voice().data(), this->car_run_pressline_7_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.CftcPressLine.car_run_pressline_7_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->car_run_pressline_7_voice(), output);
  }

  // optional int32 car_run_pressline_7_deduction = 6;
  if (has_car_run_pressline_7_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->car_run_pressline_7_deduction(), output);
  }

  // optional string car_run_pressline_5_voice = 7;
  if (has_car_run_pressline_5_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_5_voice().data(), this->car_run_pressline_5_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.CftcPressLine.car_run_pressline_5_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->car_run_pressline_5_voice(), output);
  }

  // optional int32 car_run_pressline_5_deduction = 8;
  if (has_car_run_pressline_5_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->car_run_pressline_5_deduction(), output);
  }

  // optional string car_run_pressline_9_voice = 9;
  if (has_car_run_pressline_9_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_9_voice().data(), this->car_run_pressline_9_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.CftcPressLine.car_run_pressline_9_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->car_run_pressline_9_voice(), output);
  }

  // optional int32 car_run_pressline_9_deduction = 10;
  if (has_car_run_pressline_9_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->car_run_pressline_9_deduction(), output);
  }

  // repeated int32 car_pressline_nums_mutex = 11;
  for (int i = 0; i < this->car_pressline_nums_mutex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      11, this->car_pressline_nums_mutex(i), output);
  }

  // optional string car_run_pressline_2_voice = 12;
  if (has_car_run_pressline_2_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_2_voice().data(), this->car_run_pressline_2_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.CftcPressLine.car_run_pressline_2_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->car_run_pressline_2_voice(), output);
  }

  // optional int32 car_run_pressline_2_deduction = 13;
  if (has_car_run_pressline_2_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->car_run_pressline_2_deduction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.CftcPressLine)
}

::google::protobuf::uint8* CftcPressLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.CftcPressLine)
  // optional string car_run_pressline_3_voice = 1;
  if (has_car_run_pressline_3_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_3_voice().data(), this->car_run_pressline_3_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.CftcPressLine.car_run_pressline_3_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->car_run_pressline_3_voice(), target);
  }

  // optional int32 car_run_pressline_3_deduction = 2;
  if (has_car_run_pressline_3_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->car_run_pressline_3_deduction(), target);
  }

  // optional string car_run_pressline_4_voice = 3;
  if (has_car_run_pressline_4_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_4_voice().data(), this->car_run_pressline_4_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.CftcPressLine.car_run_pressline_4_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->car_run_pressline_4_voice(), target);
  }

  // optional int32 car_run_pressline_4_deduction = 4;
  if (has_car_run_pressline_4_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->car_run_pressline_4_deduction(), target);
  }

  // optional string car_run_pressline_7_voice = 5;
  if (has_car_run_pressline_7_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_7_voice().data(), this->car_run_pressline_7_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.CftcPressLine.car_run_pressline_7_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->car_run_pressline_7_voice(), target);
  }

  // optional int32 car_run_pressline_7_deduction = 6;
  if (has_car_run_pressline_7_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->car_run_pressline_7_deduction(), target);
  }

  // optional string car_run_pressline_5_voice = 7;
  if (has_car_run_pressline_5_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_5_voice().data(), this->car_run_pressline_5_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.CftcPressLine.car_run_pressline_5_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->car_run_pressline_5_voice(), target);
  }

  // optional int32 car_run_pressline_5_deduction = 8;
  if (has_car_run_pressline_5_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->car_run_pressline_5_deduction(), target);
  }

  // optional string car_run_pressline_9_voice = 9;
  if (has_car_run_pressline_9_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_9_voice().data(), this->car_run_pressline_9_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.CftcPressLine.car_run_pressline_9_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->car_run_pressline_9_voice(), target);
  }

  // optional int32 car_run_pressline_9_deduction = 10;
  if (has_car_run_pressline_9_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->car_run_pressline_9_deduction(), target);
  }

  // repeated int32 car_pressline_nums_mutex = 11;
  for (int i = 0; i < this->car_pressline_nums_mutex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(11, this->car_pressline_nums_mutex(i), target);
  }

  // optional string car_run_pressline_2_voice = 12;
  if (has_car_run_pressline_2_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_2_voice().data(), this->car_run_pressline_2_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.CftcPressLine.car_run_pressline_2_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->car_run_pressline_2_voice(), target);
  }

  // optional int32 car_run_pressline_2_deduction = 13;
  if (has_car_run_pressline_2_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->car_run_pressline_2_deduction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.CftcPressLine)
  return target;
}

int CftcPressLine::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.CftcPressLine)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string car_run_pressline_3_voice = 1;
    if (has_car_run_pressline_3_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_pressline_3_voice());
    }

    // optional int32 car_run_pressline_3_deduction = 2;
    if (has_car_run_pressline_3_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_pressline_3_deduction());
    }

    // optional string car_run_pressline_4_voice = 3;
    if (has_car_run_pressline_4_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_pressline_4_voice());
    }

    // optional int32 car_run_pressline_4_deduction = 4;
    if (has_car_run_pressline_4_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_pressline_4_deduction());
    }

    // optional string car_run_pressline_7_voice = 5;
    if (has_car_run_pressline_7_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_pressline_7_voice());
    }

    // optional int32 car_run_pressline_7_deduction = 6;
    if (has_car_run_pressline_7_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_pressline_7_deduction());
    }

    // optional string car_run_pressline_5_voice = 7;
    if (has_car_run_pressline_5_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_pressline_5_voice());
    }

    // optional int32 car_run_pressline_5_deduction = 8;
    if (has_car_run_pressline_5_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_pressline_5_deduction());
    }

  }
  if (_has_bits_[8 / 32] & 6912u) {
    // optional string car_run_pressline_9_voice = 9;
    if (has_car_run_pressline_9_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_pressline_9_voice());
    }

    // optional int32 car_run_pressline_9_deduction = 10;
    if (has_car_run_pressline_9_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_pressline_9_deduction());
    }

    // optional string car_run_pressline_2_voice = 12;
    if (has_car_run_pressline_2_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_pressline_2_voice());
    }

    // optional int32 car_run_pressline_2_deduction = 13;
    if (has_car_run_pressline_2_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_pressline_2_deduction());
    }

  }
  // repeated int32 car_pressline_nums_mutex = 11;
  {
    int data_size = 0;
    for (int i = 0; i < this->car_pressline_nums_mutex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->car_pressline_nums_mutex(i));
    }
    total_size += 1 * this->car_pressline_nums_mutex_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CftcPressLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.CftcPressLine)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CftcPressLine* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CftcPressLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.CftcPressLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.CftcPressLine)
    MergeFrom(*source);
  }
}

void CftcPressLine::MergeFrom(const CftcPressLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.CftcPressLine)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  car_pressline_nums_mutex_.MergeFrom(from.car_pressline_nums_mutex_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_car_run_pressline_3_voice()) {
      set_has_car_run_pressline_3_voice();
      car_run_pressline_3_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_pressline_3_voice_);
    }
    if (from.has_car_run_pressline_3_deduction()) {
      set_car_run_pressline_3_deduction(from.car_run_pressline_3_deduction());
    }
    if (from.has_car_run_pressline_4_voice()) {
      set_has_car_run_pressline_4_voice();
      car_run_pressline_4_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_pressline_4_voice_);
    }
    if (from.has_car_run_pressline_4_deduction()) {
      set_car_run_pressline_4_deduction(from.car_run_pressline_4_deduction());
    }
    if (from.has_car_run_pressline_7_voice()) {
      set_has_car_run_pressline_7_voice();
      car_run_pressline_7_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_pressline_7_voice_);
    }
    if (from.has_car_run_pressline_7_deduction()) {
      set_car_run_pressline_7_deduction(from.car_run_pressline_7_deduction());
    }
    if (from.has_car_run_pressline_5_voice()) {
      set_has_car_run_pressline_5_voice();
      car_run_pressline_5_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_pressline_5_voice_);
    }
    if (from.has_car_run_pressline_5_deduction()) {
      set_car_run_pressline_5_deduction(from.car_run_pressline_5_deduction());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_car_run_pressline_9_voice()) {
      set_has_car_run_pressline_9_voice();
      car_run_pressline_9_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_pressline_9_voice_);
    }
    if (from.has_car_run_pressline_9_deduction()) {
      set_car_run_pressline_9_deduction(from.car_run_pressline_9_deduction());
    }
    if (from.has_car_run_pressline_2_voice()) {
      set_has_car_run_pressline_2_voice();
      car_run_pressline_2_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_pressline_2_voice_);
    }
    if (from.has_car_run_pressline_2_deduction()) {
      set_car_run_pressline_2_deduction(from.car_run_pressline_2_deduction());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CftcPressLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.CftcPressLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CftcPressLine::CopyFrom(const CftcPressLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.CftcPressLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CftcPressLine::IsInitialized() const {

  return true;
}

void CftcPressLine::Swap(CftcPressLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CftcPressLine::InternalSwap(CftcPressLine* other) {
  car_run_pressline_3_voice_.Swap(&other->car_run_pressline_3_voice_);
  std::swap(car_run_pressline_3_deduction_, other->car_run_pressline_3_deduction_);
  car_run_pressline_4_voice_.Swap(&other->car_run_pressline_4_voice_);
  std::swap(car_run_pressline_4_deduction_, other->car_run_pressline_4_deduction_);
  car_run_pressline_7_voice_.Swap(&other->car_run_pressline_7_voice_);
  std::swap(car_run_pressline_7_deduction_, other->car_run_pressline_7_deduction_);
  car_run_pressline_5_voice_.Swap(&other->car_run_pressline_5_voice_);
  std::swap(car_run_pressline_5_deduction_, other->car_run_pressline_5_deduction_);
  car_run_pressline_9_voice_.Swap(&other->car_run_pressline_9_voice_);
  std::swap(car_run_pressline_9_deduction_, other->car_run_pressline_9_deduction_);
  car_pressline_nums_mutex_.UnsafeArenaSwap(&other->car_pressline_nums_mutex_);
  car_run_pressline_2_voice_.Swap(&other->car_run_pressline_2_voice_);
  std::swap(car_run_pressline_2_deduction_, other->car_run_pressline_2_deduction_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CftcPressLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CftcPressLine_descriptor_;
  metadata.reflection = CftcPressLine_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CftcPressLine

// optional string car_run_pressline_3_voice = 1;
bool CftcPressLine::has_car_run_pressline_3_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CftcPressLine::set_has_car_run_pressline_3_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void CftcPressLine::clear_has_car_run_pressline_3_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void CftcPressLine::clear_car_run_pressline_3_voice() {
  car_run_pressline_3_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_3_voice();
}
 const ::std::string& CftcPressLine::car_run_pressline_3_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_3_voice)
  return car_run_pressline_3_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CftcPressLine::set_car_run_pressline_3_voice(const ::std::string& value) {
  set_has_car_run_pressline_3_voice();
  car_run_pressline_3_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_3_voice)
}
 void CftcPressLine::set_car_run_pressline_3_voice(const char* value) {
  set_has_car_run_pressline_3_voice();
  car_run_pressline_3_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.CftcPressLine.car_run_pressline_3_voice)
}
 void CftcPressLine::set_car_run_pressline_3_voice(const char* value, size_t size) {
  set_has_car_run_pressline_3_voice();
  car_run_pressline_3_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.CftcPressLine.car_run_pressline_3_voice)
}
 ::std::string* CftcPressLine::mutable_car_run_pressline_3_voice() {
  set_has_car_run_pressline_3_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.CftcPressLine.car_run_pressline_3_voice)
  return car_run_pressline_3_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CftcPressLine::release_car_run_pressline_3_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.CftcPressLine.car_run_pressline_3_voice)
  clear_has_car_run_pressline_3_voice();
  return car_run_pressline_3_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CftcPressLine::set_allocated_car_run_pressline_3_voice(::std::string* car_run_pressline_3_voice) {
  if (car_run_pressline_3_voice != NULL) {
    set_has_car_run_pressline_3_voice();
  } else {
    clear_has_car_run_pressline_3_voice();
  }
  car_run_pressline_3_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_3_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CftcPressLine.car_run_pressline_3_voice)
}

// optional int32 car_run_pressline_3_deduction = 2;
bool CftcPressLine::has_car_run_pressline_3_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CftcPressLine::set_has_car_run_pressline_3_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void CftcPressLine::clear_has_car_run_pressline_3_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void CftcPressLine::clear_car_run_pressline_3_deduction() {
  car_run_pressline_3_deduction_ = 0;
  clear_has_car_run_pressline_3_deduction();
}
 ::google::protobuf::int32 CftcPressLine::car_run_pressline_3_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_3_deduction)
  return car_run_pressline_3_deduction_;
}
 void CftcPressLine::set_car_run_pressline_3_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_3_deduction();
  car_run_pressline_3_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_3_deduction)
}

// optional string car_run_pressline_4_voice = 3;
bool CftcPressLine::has_car_run_pressline_4_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CftcPressLine::set_has_car_run_pressline_4_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void CftcPressLine::clear_has_car_run_pressline_4_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void CftcPressLine::clear_car_run_pressline_4_voice() {
  car_run_pressline_4_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_4_voice();
}
 const ::std::string& CftcPressLine::car_run_pressline_4_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_4_voice)
  return car_run_pressline_4_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CftcPressLine::set_car_run_pressline_4_voice(const ::std::string& value) {
  set_has_car_run_pressline_4_voice();
  car_run_pressline_4_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_4_voice)
}
 void CftcPressLine::set_car_run_pressline_4_voice(const char* value) {
  set_has_car_run_pressline_4_voice();
  car_run_pressline_4_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.CftcPressLine.car_run_pressline_4_voice)
}
 void CftcPressLine::set_car_run_pressline_4_voice(const char* value, size_t size) {
  set_has_car_run_pressline_4_voice();
  car_run_pressline_4_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.CftcPressLine.car_run_pressline_4_voice)
}
 ::std::string* CftcPressLine::mutable_car_run_pressline_4_voice() {
  set_has_car_run_pressline_4_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.CftcPressLine.car_run_pressline_4_voice)
  return car_run_pressline_4_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CftcPressLine::release_car_run_pressline_4_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.CftcPressLine.car_run_pressline_4_voice)
  clear_has_car_run_pressline_4_voice();
  return car_run_pressline_4_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CftcPressLine::set_allocated_car_run_pressline_4_voice(::std::string* car_run_pressline_4_voice) {
  if (car_run_pressline_4_voice != NULL) {
    set_has_car_run_pressline_4_voice();
  } else {
    clear_has_car_run_pressline_4_voice();
  }
  car_run_pressline_4_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_4_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CftcPressLine.car_run_pressline_4_voice)
}

// optional int32 car_run_pressline_4_deduction = 4;
bool CftcPressLine::has_car_run_pressline_4_deduction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CftcPressLine::set_has_car_run_pressline_4_deduction() {
  _has_bits_[0] |= 0x00000008u;
}
void CftcPressLine::clear_has_car_run_pressline_4_deduction() {
  _has_bits_[0] &= ~0x00000008u;
}
void CftcPressLine::clear_car_run_pressline_4_deduction() {
  car_run_pressline_4_deduction_ = 0;
  clear_has_car_run_pressline_4_deduction();
}
 ::google::protobuf::int32 CftcPressLine::car_run_pressline_4_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_4_deduction)
  return car_run_pressline_4_deduction_;
}
 void CftcPressLine::set_car_run_pressline_4_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_4_deduction();
  car_run_pressline_4_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_4_deduction)
}

// optional string car_run_pressline_7_voice = 5;
bool CftcPressLine::has_car_run_pressline_7_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CftcPressLine::set_has_car_run_pressline_7_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void CftcPressLine::clear_has_car_run_pressline_7_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void CftcPressLine::clear_car_run_pressline_7_voice() {
  car_run_pressline_7_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_7_voice();
}
 const ::std::string& CftcPressLine::car_run_pressline_7_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_7_voice)
  return car_run_pressline_7_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CftcPressLine::set_car_run_pressline_7_voice(const ::std::string& value) {
  set_has_car_run_pressline_7_voice();
  car_run_pressline_7_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_7_voice)
}
 void CftcPressLine::set_car_run_pressline_7_voice(const char* value) {
  set_has_car_run_pressline_7_voice();
  car_run_pressline_7_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.CftcPressLine.car_run_pressline_7_voice)
}
 void CftcPressLine::set_car_run_pressline_7_voice(const char* value, size_t size) {
  set_has_car_run_pressline_7_voice();
  car_run_pressline_7_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.CftcPressLine.car_run_pressline_7_voice)
}
 ::std::string* CftcPressLine::mutable_car_run_pressline_7_voice() {
  set_has_car_run_pressline_7_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.CftcPressLine.car_run_pressline_7_voice)
  return car_run_pressline_7_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CftcPressLine::release_car_run_pressline_7_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.CftcPressLine.car_run_pressline_7_voice)
  clear_has_car_run_pressline_7_voice();
  return car_run_pressline_7_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CftcPressLine::set_allocated_car_run_pressline_7_voice(::std::string* car_run_pressline_7_voice) {
  if (car_run_pressline_7_voice != NULL) {
    set_has_car_run_pressline_7_voice();
  } else {
    clear_has_car_run_pressline_7_voice();
  }
  car_run_pressline_7_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_7_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CftcPressLine.car_run_pressline_7_voice)
}

// optional int32 car_run_pressline_7_deduction = 6;
bool CftcPressLine::has_car_run_pressline_7_deduction() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CftcPressLine::set_has_car_run_pressline_7_deduction() {
  _has_bits_[0] |= 0x00000020u;
}
void CftcPressLine::clear_has_car_run_pressline_7_deduction() {
  _has_bits_[0] &= ~0x00000020u;
}
void CftcPressLine::clear_car_run_pressline_7_deduction() {
  car_run_pressline_7_deduction_ = 0;
  clear_has_car_run_pressline_7_deduction();
}
 ::google::protobuf::int32 CftcPressLine::car_run_pressline_7_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_7_deduction)
  return car_run_pressline_7_deduction_;
}
 void CftcPressLine::set_car_run_pressline_7_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_7_deduction();
  car_run_pressline_7_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_7_deduction)
}

// optional string car_run_pressline_5_voice = 7;
bool CftcPressLine::has_car_run_pressline_5_voice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CftcPressLine::set_has_car_run_pressline_5_voice() {
  _has_bits_[0] |= 0x00000040u;
}
void CftcPressLine::clear_has_car_run_pressline_5_voice() {
  _has_bits_[0] &= ~0x00000040u;
}
void CftcPressLine::clear_car_run_pressline_5_voice() {
  car_run_pressline_5_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_5_voice();
}
 const ::std::string& CftcPressLine::car_run_pressline_5_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_5_voice)
  return car_run_pressline_5_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CftcPressLine::set_car_run_pressline_5_voice(const ::std::string& value) {
  set_has_car_run_pressline_5_voice();
  car_run_pressline_5_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_5_voice)
}
 void CftcPressLine::set_car_run_pressline_5_voice(const char* value) {
  set_has_car_run_pressline_5_voice();
  car_run_pressline_5_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.CftcPressLine.car_run_pressline_5_voice)
}
 void CftcPressLine::set_car_run_pressline_5_voice(const char* value, size_t size) {
  set_has_car_run_pressline_5_voice();
  car_run_pressline_5_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.CftcPressLine.car_run_pressline_5_voice)
}
 ::std::string* CftcPressLine::mutable_car_run_pressline_5_voice() {
  set_has_car_run_pressline_5_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.CftcPressLine.car_run_pressline_5_voice)
  return car_run_pressline_5_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CftcPressLine::release_car_run_pressline_5_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.CftcPressLine.car_run_pressline_5_voice)
  clear_has_car_run_pressline_5_voice();
  return car_run_pressline_5_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CftcPressLine::set_allocated_car_run_pressline_5_voice(::std::string* car_run_pressline_5_voice) {
  if (car_run_pressline_5_voice != NULL) {
    set_has_car_run_pressline_5_voice();
  } else {
    clear_has_car_run_pressline_5_voice();
  }
  car_run_pressline_5_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_5_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CftcPressLine.car_run_pressline_5_voice)
}

// optional int32 car_run_pressline_5_deduction = 8;
bool CftcPressLine::has_car_run_pressline_5_deduction() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CftcPressLine::set_has_car_run_pressline_5_deduction() {
  _has_bits_[0] |= 0x00000080u;
}
void CftcPressLine::clear_has_car_run_pressline_5_deduction() {
  _has_bits_[0] &= ~0x00000080u;
}
void CftcPressLine::clear_car_run_pressline_5_deduction() {
  car_run_pressline_5_deduction_ = 0;
  clear_has_car_run_pressline_5_deduction();
}
 ::google::protobuf::int32 CftcPressLine::car_run_pressline_5_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_5_deduction)
  return car_run_pressline_5_deduction_;
}
 void CftcPressLine::set_car_run_pressline_5_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_5_deduction();
  car_run_pressline_5_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_5_deduction)
}

// optional string car_run_pressline_9_voice = 9;
bool CftcPressLine::has_car_run_pressline_9_voice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CftcPressLine::set_has_car_run_pressline_9_voice() {
  _has_bits_[0] |= 0x00000100u;
}
void CftcPressLine::clear_has_car_run_pressline_9_voice() {
  _has_bits_[0] &= ~0x00000100u;
}
void CftcPressLine::clear_car_run_pressline_9_voice() {
  car_run_pressline_9_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_9_voice();
}
 const ::std::string& CftcPressLine::car_run_pressline_9_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_9_voice)
  return car_run_pressline_9_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CftcPressLine::set_car_run_pressline_9_voice(const ::std::string& value) {
  set_has_car_run_pressline_9_voice();
  car_run_pressline_9_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_9_voice)
}
 void CftcPressLine::set_car_run_pressline_9_voice(const char* value) {
  set_has_car_run_pressline_9_voice();
  car_run_pressline_9_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.CftcPressLine.car_run_pressline_9_voice)
}
 void CftcPressLine::set_car_run_pressline_9_voice(const char* value, size_t size) {
  set_has_car_run_pressline_9_voice();
  car_run_pressline_9_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.CftcPressLine.car_run_pressline_9_voice)
}
 ::std::string* CftcPressLine::mutable_car_run_pressline_9_voice() {
  set_has_car_run_pressline_9_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.CftcPressLine.car_run_pressline_9_voice)
  return car_run_pressline_9_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CftcPressLine::release_car_run_pressline_9_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.CftcPressLine.car_run_pressline_9_voice)
  clear_has_car_run_pressline_9_voice();
  return car_run_pressline_9_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CftcPressLine::set_allocated_car_run_pressline_9_voice(::std::string* car_run_pressline_9_voice) {
  if (car_run_pressline_9_voice != NULL) {
    set_has_car_run_pressline_9_voice();
  } else {
    clear_has_car_run_pressline_9_voice();
  }
  car_run_pressline_9_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_9_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CftcPressLine.car_run_pressline_9_voice)
}

// optional int32 car_run_pressline_9_deduction = 10;
bool CftcPressLine::has_car_run_pressline_9_deduction() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CftcPressLine::set_has_car_run_pressline_9_deduction() {
  _has_bits_[0] |= 0x00000200u;
}
void CftcPressLine::clear_has_car_run_pressline_9_deduction() {
  _has_bits_[0] &= ~0x00000200u;
}
void CftcPressLine::clear_car_run_pressline_9_deduction() {
  car_run_pressline_9_deduction_ = 0;
  clear_has_car_run_pressline_9_deduction();
}
 ::google::protobuf::int32 CftcPressLine::car_run_pressline_9_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_9_deduction)
  return car_run_pressline_9_deduction_;
}
 void CftcPressLine::set_car_run_pressline_9_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_9_deduction();
  car_run_pressline_9_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_9_deduction)
}

// repeated int32 car_pressline_nums_mutex = 11;
int CftcPressLine::car_pressline_nums_mutex_size() const {
  return car_pressline_nums_mutex_.size();
}
void CftcPressLine::clear_car_pressline_nums_mutex() {
  car_pressline_nums_mutex_.Clear();
}
 ::google::protobuf::int32 CftcPressLine::car_pressline_nums_mutex(int index) const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_pressline_nums_mutex)
  return car_pressline_nums_mutex_.Get(index);
}
 void CftcPressLine::set_car_pressline_nums_mutex(int index, ::google::protobuf::int32 value) {
  car_pressline_nums_mutex_.Set(index, value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_pressline_nums_mutex)
}
 void CftcPressLine::add_car_pressline_nums_mutex(::google::protobuf::int32 value) {
  car_pressline_nums_mutex_.Add(value);
  // @@protoc_insertion_point(field_add:OPMessage.CftcPressLine.car_pressline_nums_mutex)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CftcPressLine::car_pressline_nums_mutex() const {
  // @@protoc_insertion_point(field_list:OPMessage.CftcPressLine.car_pressline_nums_mutex)
  return car_pressline_nums_mutex_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CftcPressLine::mutable_car_pressline_nums_mutex() {
  // @@protoc_insertion_point(field_mutable_list:OPMessage.CftcPressLine.car_pressline_nums_mutex)
  return &car_pressline_nums_mutex_;
}

// optional string car_run_pressline_2_voice = 12;
bool CftcPressLine::has_car_run_pressline_2_voice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CftcPressLine::set_has_car_run_pressline_2_voice() {
  _has_bits_[0] |= 0x00000800u;
}
void CftcPressLine::clear_has_car_run_pressline_2_voice() {
  _has_bits_[0] &= ~0x00000800u;
}
void CftcPressLine::clear_car_run_pressline_2_voice() {
  car_run_pressline_2_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_2_voice();
}
 const ::std::string& CftcPressLine::car_run_pressline_2_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_2_voice)
  return car_run_pressline_2_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CftcPressLine::set_car_run_pressline_2_voice(const ::std::string& value) {
  set_has_car_run_pressline_2_voice();
  car_run_pressline_2_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_2_voice)
}
 void CftcPressLine::set_car_run_pressline_2_voice(const char* value) {
  set_has_car_run_pressline_2_voice();
  car_run_pressline_2_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.CftcPressLine.car_run_pressline_2_voice)
}
 void CftcPressLine::set_car_run_pressline_2_voice(const char* value, size_t size) {
  set_has_car_run_pressline_2_voice();
  car_run_pressline_2_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.CftcPressLine.car_run_pressline_2_voice)
}
 ::std::string* CftcPressLine::mutable_car_run_pressline_2_voice() {
  set_has_car_run_pressline_2_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.CftcPressLine.car_run_pressline_2_voice)
  return car_run_pressline_2_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CftcPressLine::release_car_run_pressline_2_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.CftcPressLine.car_run_pressline_2_voice)
  clear_has_car_run_pressline_2_voice();
  return car_run_pressline_2_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CftcPressLine::set_allocated_car_run_pressline_2_voice(::std::string* car_run_pressline_2_voice) {
  if (car_run_pressline_2_voice != NULL) {
    set_has_car_run_pressline_2_voice();
  } else {
    clear_has_car_run_pressline_2_voice();
  }
  car_run_pressline_2_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_2_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CftcPressLine.car_run_pressline_2_voice)
}

// optional int32 car_run_pressline_2_deduction = 13;
bool CftcPressLine::has_car_run_pressline_2_deduction() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CftcPressLine::set_has_car_run_pressline_2_deduction() {
  _has_bits_[0] |= 0x00001000u;
}
void CftcPressLine::clear_has_car_run_pressline_2_deduction() {
  _has_bits_[0] &= ~0x00001000u;
}
void CftcPressLine::clear_car_run_pressline_2_deduction() {
  car_run_pressline_2_deduction_ = 0;
  clear_has_car_run_pressline_2_deduction();
}
 ::google::protobuf::int32 CftcPressLine::car_run_pressline_2_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.CftcPressLine.car_run_pressline_2_deduction)
  return car_run_pressline_2_deduction_;
}
 void CftcPressLine::set_car_run_pressline_2_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_2_deduction();
  car_run_pressline_2_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.CftcPressLine.car_run_pressline_2_deduction)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleCftc::kBasicEventCheckFieldNumber;
const int ItemJudgeRuleCftc::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleCftc::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleCftc::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleCftc::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleCftc::kJudgePointsTypeFieldNumber;
const int ItemJudgeRuleCftc::kCheckStartTypeFieldNumber;
const int ItemJudgeRuleCftc::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleCftc::kCarRunErrorWhetherCheckFieldNumber;
const int ItemJudgeRuleCftc::kCarRunErrorVoiceFieldNumber;
const int ItemJudgeRuleCftc::kCarRunErrorDeductionFieldNumber;
const int ItemJudgeRuleCftc::kCarRkCheckRightVoiceFieldNumber;
const int ItemJudgeRuleCftc::kCarRkCheckFailVoiceFieldNumber;
const int ItemJudgeRuleCftc::kCarRkCheckFailDeductionFieldNumber;
const int ItemJudgeRuleCftc::kForwardingPresslineFieldNumber;
const int ItemJudgeRuleCftc::kEventCheckRkingRightTurnLampFieldNumber;
const int ItemJudgeRuleCftc::kRkingPresslineFieldNumber;
const int ItemJudgeRuleCftc::kEventCheckCkingLeftTurnLampFieldNumber;
const int ItemJudgeRuleCftc::kCkingPresslineFieldNumber;
const int ItemJudgeRuleCftc::kCarRunNotStaffCommandVoiceFieldNumber;
const int ItemJudgeRuleCftc::kCarRunNotStaffCommandDeductionFieldNumber;
const int ItemJudgeRuleCftc::kInAreaAgainFieldNumber;
const int ItemJudgeRuleCftc::kCarRkCheckDelayTimeFieldNumber;
const int ItemJudgeRuleCftc::kEventCheckForwardingRightTurnLampFieldNumber;
const int ItemJudgeRuleCftc::kEventCheckWaitrkLeftTurnLampFieldNumber;
const int ItemJudgeRuleCftc::kEventCheckWaitrkRightTurnLampFieldNumber;
const int ItemJudgeRuleCftc::kEventCheckRkendLeftTurnLampFieldNumber;
const int ItemJudgeRuleCftc::kEventCheckRkendRightTurnLampFieldNumber;
const int ItemJudgeRuleCftc::kCarwheelForwardingPresslineFieldNumber;
const int ItemJudgeRuleCftc::kCarwheelRkingPresslineFieldNumber;
const int ItemJudgeRuleCftc::kCarwheelCkingPresslineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleCftc::ItemJudgeRuleCftc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleCftc)
}

void ItemJudgeRuleCftc::InitAsDefaultInstance() {
  basic_event_check_ = const_cast< ::OPMessage::ItemJudgeBasic*>(&::OPMessage::ItemJudgeBasic::default_instance());
  forwarding_pressline_ = const_cast< ::OPMessage::CftcPressLine*>(&::OPMessage::CftcPressLine::default_instance());
  event_check_rking_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  rking_pressline_ = const_cast< ::OPMessage::CftcPressLine*>(&::OPMessage::CftcPressLine::default_instance());
  event_check_cking_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  cking_pressline_ = const_cast< ::OPMessage::CftcPressLine*>(&::OPMessage::CftcPressLine::default_instance());
  event_check_forwarding_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  event_check_waitrk_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  event_check_waitrk_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  event_check_rkend_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  event_check_rkend_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  carwheel_forwarding_pressline_ = const_cast< ::OPMessage::CftcPressLine*>(&::OPMessage::CftcPressLine::default_instance());
  carwheel_rking_pressline_ = const_cast< ::OPMessage::CftcPressLine*>(&::OPMessage::CftcPressLine::default_instance());
  carwheel_cking_pressline_ = const_cast< ::OPMessage::CftcPressLine*>(&::OPMessage::CftcPressLine::default_instance());
}

ItemJudgeRuleCftc::ItemJudgeRuleCftc(const ItemJudgeRuleCftc& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleCftc)
}

void ItemJudgeRuleCftc::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  basic_event_check_ = NULL;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  judge_points_type_ = 0;
  check_start_type_ = 0;
  check_finish_type_ = 0;
  car_run_error_whether_check_ = true;
  car_run_error_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_error_deduction_ = 0;
  car_rk_check_right_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_rk_check_fail_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_rk_check_fail_deduction_ = 0;
  forwarding_pressline_ = NULL;
  event_check_rking_rightturnlamp_ = NULL;
  rking_pressline_ = NULL;
  event_check_cking_leftturnlamp_ = NULL;
  cking_pressline_ = NULL;
  car_run_not_staff_command_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_not_staff_command_deduction_ = 0;
  in_area_again_ = false;
  car_rk_check_delay_time_ = 0;
  event_check_forwarding_rightturnlamp_ = NULL;
  event_check_waitrk_leftturnlamp_ = NULL;
  event_check_waitrk_rightturnlamp_ = NULL;
  event_check_rkend_leftturnlamp_ = NULL;
  event_check_rkend_rightturnlamp_ = NULL;
  carwheel_forwarding_pressline_ = NULL;
  carwheel_rking_pressline_ = NULL;
  carwheel_cking_pressline_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleCftc::~ItemJudgeRuleCftc() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleCftc)
  SharedDtor();
}

void ItemJudgeRuleCftc::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_error_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_rk_check_right_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_rk_check_fail_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_not_staff_command_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_event_check_;
    delete forwarding_pressline_;
    delete event_check_rking_rightturnlamp_;
    delete rking_pressline_;
    delete event_check_cking_leftturnlamp_;
    delete cking_pressline_;
    delete event_check_forwarding_rightturnlamp_;
    delete event_check_waitrk_leftturnlamp_;
    delete event_check_waitrk_rightturnlamp_;
    delete event_check_rkend_leftturnlamp_;
    delete event_check_rkend_rightturnlamp_;
    delete carwheel_forwarding_pressline_;
    delete carwheel_rking_pressline_;
    delete carwheel_cking_pressline_;
  }
}

void ItemJudgeRuleCftc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleCftc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleCftc_descriptor_;
}

const ItemJudgeRuleCftc& ItemJudgeRuleCftc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleCftc* ItemJudgeRuleCftc::default_instance_ = NULL;

ItemJudgeRuleCftc* ItemJudgeRuleCftc::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleCftc* n = new ItemJudgeRuleCftc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleCftc::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleCftc)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeRuleCftc, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeRuleCftc*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(judge_points_type_, check_finish_type_);
    if (has_basic_event_check()) {
      if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
    }
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    car_run_error_whether_check_ = true;
    if (has_car_run_error_voice()) {
      car_run_error_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_run_error_deduction_ = 0;
    if (has_car_rk_check_right_voice()) {
      car_rk_check_right_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_rk_check_fail_voice()) {
      car_rk_check_fail_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_rk_check_fail_deduction_ = 0;
    if (has_forwarding_pressline()) {
      if (forwarding_pressline_ != NULL) forwarding_pressline_->::OPMessage::CftcPressLine::Clear();
    }
    if (has_event_check_rking_rightturnlamp()) {
      if (event_check_rking_rightturnlamp_ != NULL) event_check_rking_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 16711680u) {
    ZR_(car_run_not_staff_command_deduction_, car_rk_check_delay_time_);
    if (has_rking_pressline()) {
      if (rking_pressline_ != NULL) rking_pressline_->::OPMessage::CftcPressLine::Clear();
    }
    if (has_event_check_cking_leftturnlamp()) {
      if (event_check_cking_leftturnlamp_ != NULL) event_check_cking_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_cking_pressline()) {
      if (cking_pressline_ != NULL) cking_pressline_->::OPMessage::CftcPressLine::Clear();
    }
    if (has_car_run_not_staff_command_voice()) {
      car_run_not_staff_command_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    in_area_again_ = false;
    if (has_event_check_forwarding_rightturnlamp()) {
      if (event_check_forwarding_rightturnlamp_ != NULL) event_check_forwarding_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
  }
  if (_has_bits_[24 / 32] & 2130706432u) {
    if (has_event_check_waitrk_leftturnlamp()) {
      if (event_check_waitrk_leftturnlamp_ != NULL) event_check_waitrk_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_event_check_waitrk_rightturnlamp()) {
      if (event_check_waitrk_rightturnlamp_ != NULL) event_check_waitrk_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
    if (has_event_check_rkend_leftturnlamp()) {
      if (event_check_rkend_leftturnlamp_ != NULL) event_check_rkend_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_event_check_rkend_rightturnlamp()) {
      if (event_check_rkend_rightturnlamp_ != NULL) event_check_rkend_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
    if (has_carwheel_forwarding_pressline()) {
      if (carwheel_forwarding_pressline_ != NULL) carwheel_forwarding_pressline_->::OPMessage::CftcPressLine::Clear();
    }
    if (has_carwheel_rking_pressline()) {
      if (carwheel_rking_pressline_ != NULL) carwheel_rking_pressline_->::OPMessage::CftcPressLine::Clear();
    }
    if (has_carwheel_cking_pressline()) {
      if (carwheel_cking_pressline_ != NULL) carwheel_cking_pressline_->::OPMessage::CftcPressLine::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleCftc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleCftc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_event_check()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_enter_voice;
        break;
      }

      // optional string item_enter_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_enter_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleCftc.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleCftc.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleCftc.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleCftc.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_judge_points_type;
        break;
      }

      // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
      case 6: {
        if (tag == 48) {
         parse_judge_points_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::enum_judge_points_IsValid(value)) {
            set_judge_points_type(static_cast< ::OPMessage::enum_judge_points >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_check_start_type;
        break;
      }

      // optional .OPMessage.CheckStartCarPositionCftc check_start_type = 7;
      case 7: {
        if (tag == 56) {
         parse_check_start_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckStartCarPositionCftc_IsValid(value)) {
            set_check_start_type(static_cast< ::OPMessage::CheckStartCarPositionCftc >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionCftc check_finish_type = 8;
      case 8: {
        if (tag == 64) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionCftc_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionCftc >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_car_run_error_whether_check;
        break;
      }

      // optional bool car_run_error_whether_check = 9 [default = true];
      case 9: {
        if (tag == 72) {
         parse_car_run_error_whether_check:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &car_run_error_whether_check_)));
          set_has_car_run_error_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_car_run_error_voice;
        break;
      }

      // optional string car_run_error_voice = 10;
      case 10: {
        if (tag == 82) {
         parse_car_run_error_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_error_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_error_voice().data(), this->car_run_error_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleCftc.car_run_error_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_car_run_error_deduction;
        break;
      }

      // optional int32 car_run_error_deduction = 11;
      case 11: {
        if (tag == 88) {
         parse_car_run_error_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_error_deduction_)));
          set_has_car_run_error_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_car_rk_check_right_voice;
        break;
      }

      // optional string car_rk_check_right_voice = 12;
      case 12: {
        if (tag == 98) {
         parse_car_rk_check_right_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_rk_check_right_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_rk_check_right_voice().data(), this->car_rk_check_right_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_car_rk_check_fail_voice;
        break;
      }

      // optional string car_rk_check_fail_voice = 13;
      case 13: {
        if (tag == 106) {
         parse_car_rk_check_fail_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_rk_check_fail_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_rk_check_fail_voice().data(), this->car_rk_check_fail_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_car_rk_check_fail_deduction;
        break;
      }

      // optional int32 car_rk_check_fail_deduction = 14;
      case 14: {
        if (tag == 112) {
         parse_car_rk_check_fail_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_rk_check_fail_deduction_)));
          set_has_car_rk_check_fail_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_forwarding_pressline;
        break;
      }

      // optional .OPMessage.CftcPressLine forwarding_pressline = 15;
      case 15: {
        if (tag == 122) {
         parse_forwarding_pressline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_forwarding_pressline()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_event_check_rking_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_rking_rightTurnLamp = 16;
      case 16: {
        if (tag == 130) {
         parse_event_check_rking_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_rking_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_rking_pressline;
        break;
      }

      // optional .OPMessage.CftcPressLine rking_pressline = 17;
      case 17: {
        if (tag == 138) {
         parse_rking_pressline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rking_pressline()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_event_check_cking_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 18;
      case 18: {
        if (tag == 146) {
         parse_event_check_cking_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_cking_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_cking_pressline;
        break;
      }

      // optional .OPMessage.CftcPressLine cking_pressline = 19;
      case 19: {
        if (tag == 154) {
         parse_cking_pressline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cking_pressline()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_car_run_not_staff_command_voice;
        break;
      }

      // optional string car_run_not_staff_command_voice = 20;
      case 20: {
        if (tag == 162) {
         parse_car_run_not_staff_command_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_not_staff_command_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_not_staff_command_voice().data(), this->car_run_not_staff_command_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_car_run_not_staff_command_deduction;
        break;
      }

      // optional int32 car_run_not_staff_command_deduction = 21;
      case 21: {
        if (tag == 168) {
         parse_car_run_not_staff_command_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_not_staff_command_deduction_)));
          set_has_car_run_not_staff_command_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_in_area_again;
        break;
      }

      // optional bool in_area_again = 22 [default = false];
      case 22: {
        if (tag == 176) {
         parse_in_area_again:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_area_again_)));
          set_has_in_area_again();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_car_rk_check_delay_time;
        break;
      }

      // optional int32 car_rk_check_delay_time = 23 [default = 0];
      case 23: {
        if (tag == 184) {
         parse_car_rk_check_delay_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_rk_check_delay_time_)));
          set_has_car_rk_check_delay_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_event_check_forwarding_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 24;
      case 24: {
        if (tag == 194) {
         parse_event_check_forwarding_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_forwarding_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_event_check_waitrk_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_leftTurnLamp = 25;
      case 25: {
        if (tag == 202) {
         parse_event_check_waitrk_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_waitrk_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_event_check_waitrk_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_rightTurnLamp = 26;
      case 26: {
        if (tag == 210) {
         parse_event_check_waitrk_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_waitrk_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_event_check_rkend_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_leftTurnLamp = 27;
      case 27: {
        if (tag == 218) {
         parse_event_check_rkend_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_rkend_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_event_check_rkend_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_rkend_rightTurnLamp = 28;
      case 28: {
        if (tag == 226) {
         parse_event_check_rkend_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_rkend_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_carwheel_forwarding_pressline;
        break;
      }

      // optional .OPMessage.CftcPressLine carwheel_forwarding_pressline = 29;
      case 29: {
        if (tag == 234) {
         parse_carwheel_forwarding_pressline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_carwheel_forwarding_pressline()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(242)) goto parse_carwheel_rking_pressline;
        break;
      }

      // optional .OPMessage.CftcPressLine carwheel_rking_pressline = 30;
      case 30: {
        if (tag == 242) {
         parse_carwheel_rking_pressline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_carwheel_rking_pressline()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_carwheel_cking_pressline;
        break;
      }

      // optional .OPMessage.CftcPressLine carwheel_cking_pressline = 31;
      case 31: {
        if (tag == 250) {
         parse_carwheel_cking_pressline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_carwheel_cking_pressline()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleCftc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleCftc)
  return false;
#undef DO_
}

void ItemJudgeRuleCftc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleCftc)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basic_event_check_, output);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->item_end_voice(), output);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->judge_points_type(), output);
  }

  // optional .OPMessage.CheckStartCarPositionCftc check_start_type = 7;
  if (has_check_start_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->check_start_type(), output);
  }

  // optional .OPMessage.CheckFinishCarPositionCftc check_finish_type = 8;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->check_finish_type(), output);
  }

  // optional bool car_run_error_whether_check = 9 [default = true];
  if (has_car_run_error_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->car_run_error_whether_check(), output);
  }

  // optional string car_run_error_voice = 10;
  if (has_car_run_error_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_error_voice().data(), this->car_run_error_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.car_run_error_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->car_run_error_voice(), output);
  }

  // optional int32 car_run_error_deduction = 11;
  if (has_car_run_error_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->car_run_error_deduction(), output);
  }

  // optional string car_rk_check_right_voice = 12;
  if (has_car_rk_check_right_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_rk_check_right_voice().data(), this->car_rk_check_right_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->car_rk_check_right_voice(), output);
  }

  // optional string car_rk_check_fail_voice = 13;
  if (has_car_rk_check_fail_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_rk_check_fail_voice().data(), this->car_rk_check_fail_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->car_rk_check_fail_voice(), output);
  }

  // optional int32 car_rk_check_fail_deduction = 14;
  if (has_car_rk_check_fail_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->car_rk_check_fail_deduction(), output);
  }

  // optional .OPMessage.CftcPressLine forwarding_pressline = 15;
  if (has_forwarding_pressline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->forwarding_pressline_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_rking_rightTurnLamp = 16;
  if (has_event_check_rking_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->event_check_rking_rightturnlamp_, output);
  }

  // optional .OPMessage.CftcPressLine rking_pressline = 17;
  if (has_rking_pressline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->rking_pressline_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 18;
  if (has_event_check_cking_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->event_check_cking_leftturnlamp_, output);
  }

  // optional .OPMessage.CftcPressLine cking_pressline = 19;
  if (has_cking_pressline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->cking_pressline_, output);
  }

  // optional string car_run_not_staff_command_voice = 20;
  if (has_car_run_not_staff_command_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_not_staff_command_voice().data(), this->car_run_not_staff_command_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->car_run_not_staff_command_voice(), output);
  }

  // optional int32 car_run_not_staff_command_deduction = 21;
  if (has_car_run_not_staff_command_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->car_run_not_staff_command_deduction(), output);
  }

  // optional bool in_area_again = 22 [default = false];
  if (has_in_area_again()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->in_area_again(), output);
  }

  // optional int32 car_rk_check_delay_time = 23 [default = 0];
  if (has_car_rk_check_delay_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->car_rk_check_delay_time(), output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 24;
  if (has_event_check_forwarding_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, *this->event_check_forwarding_rightturnlamp_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_leftTurnLamp = 25;
  if (has_event_check_waitrk_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, *this->event_check_waitrk_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_rightTurnLamp = 26;
  if (has_event_check_waitrk_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, *this->event_check_waitrk_rightturnlamp_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_leftTurnLamp = 27;
  if (has_event_check_rkend_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, *this->event_check_rkend_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_rkend_rightTurnLamp = 28;
  if (has_event_check_rkend_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, *this->event_check_rkend_rightturnlamp_, output);
  }

  // optional .OPMessage.CftcPressLine carwheel_forwarding_pressline = 29;
  if (has_carwheel_forwarding_pressline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, *this->carwheel_forwarding_pressline_, output);
  }

  // optional .OPMessage.CftcPressLine carwheel_rking_pressline = 30;
  if (has_carwheel_rking_pressline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->carwheel_rking_pressline_, output);
  }

  // optional .OPMessage.CftcPressLine carwheel_cking_pressline = 31;
  if (has_carwheel_cking_pressline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, *this->carwheel_cking_pressline_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleCftc)
}

::google::protobuf::uint8* ItemJudgeRuleCftc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleCftc)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basic_event_check_, false, target);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->item_end_voice(), target);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->judge_points_type(), target);
  }

  // optional .OPMessage.CheckStartCarPositionCftc check_start_type = 7;
  if (has_check_start_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->check_start_type(), target);
  }

  // optional .OPMessage.CheckFinishCarPositionCftc check_finish_type = 8;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->check_finish_type(), target);
  }

  // optional bool car_run_error_whether_check = 9 [default = true];
  if (has_car_run_error_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->car_run_error_whether_check(), target);
  }

  // optional string car_run_error_voice = 10;
  if (has_car_run_error_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_error_voice().data(), this->car_run_error_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.car_run_error_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->car_run_error_voice(), target);
  }

  // optional int32 car_run_error_deduction = 11;
  if (has_car_run_error_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->car_run_error_deduction(), target);
  }

  // optional string car_rk_check_right_voice = 12;
  if (has_car_rk_check_right_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_rk_check_right_voice().data(), this->car_rk_check_right_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->car_rk_check_right_voice(), target);
  }

  // optional string car_rk_check_fail_voice = 13;
  if (has_car_rk_check_fail_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_rk_check_fail_voice().data(), this->car_rk_check_fail_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->car_rk_check_fail_voice(), target);
  }

  // optional int32 car_rk_check_fail_deduction = 14;
  if (has_car_rk_check_fail_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->car_rk_check_fail_deduction(), target);
  }

  // optional .OPMessage.CftcPressLine forwarding_pressline = 15;
  if (has_forwarding_pressline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->forwarding_pressline_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_rking_rightTurnLamp = 16;
  if (has_event_check_rking_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->event_check_rking_rightturnlamp_, false, target);
  }

  // optional .OPMessage.CftcPressLine rking_pressline = 17;
  if (has_rking_pressline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->rking_pressline_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 18;
  if (has_event_check_cking_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->event_check_cking_leftturnlamp_, false, target);
  }

  // optional .OPMessage.CftcPressLine cking_pressline = 19;
  if (has_cking_pressline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *this->cking_pressline_, false, target);
  }

  // optional string car_run_not_staff_command_voice = 20;
  if (has_car_run_not_staff_command_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_not_staff_command_voice().data(), this->car_run_not_staff_command_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->car_run_not_staff_command_voice(), target);
  }

  // optional int32 car_run_not_staff_command_deduction = 21;
  if (has_car_run_not_staff_command_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->car_run_not_staff_command_deduction(), target);
  }

  // optional bool in_area_again = 22 [default = false];
  if (has_in_area_again()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->in_area_again(), target);
  }

  // optional int32 car_rk_check_delay_time = 23 [default = 0];
  if (has_car_rk_check_delay_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->car_rk_check_delay_time(), target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 24;
  if (has_event_check_forwarding_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        24, *this->event_check_forwarding_rightturnlamp_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_leftTurnLamp = 25;
  if (has_event_check_waitrk_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, *this->event_check_waitrk_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_rightTurnLamp = 26;
  if (has_event_check_waitrk_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        26, *this->event_check_waitrk_rightturnlamp_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_leftTurnLamp = 27;
  if (has_event_check_rkend_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, *this->event_check_rkend_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_rkend_rightTurnLamp = 28;
  if (has_event_check_rkend_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28, *this->event_check_rkend_rightturnlamp_, false, target);
  }

  // optional .OPMessage.CftcPressLine carwheel_forwarding_pressline = 29;
  if (has_carwheel_forwarding_pressline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        29, *this->carwheel_forwarding_pressline_, false, target);
  }

  // optional .OPMessage.CftcPressLine carwheel_rking_pressline = 30;
  if (has_carwheel_rking_pressline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30, *this->carwheel_rking_pressline_, false, target);
  }

  // optional .OPMessage.CftcPressLine carwheel_cking_pressline = 31;
  if (has_carwheel_cking_pressline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        31, *this->carwheel_cking_pressline_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleCftc)
  return target;
}

int ItemJudgeRuleCftc::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleCftc)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
    if (has_basic_event_check()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_event_check_);
    }

    // optional string item_enter_voice = 2;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 3;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 4;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 5;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
    if (has_judge_points_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->judge_points_type());
    }

    // optional .OPMessage.CheckStartCarPositionCftc check_start_type = 7;
    if (has_check_start_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_start_type());
    }

    // optional .OPMessage.CheckFinishCarPositionCftc check_finish_type = 8;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool car_run_error_whether_check = 9 [default = true];
    if (has_car_run_error_whether_check()) {
      total_size += 1 + 1;
    }

    // optional string car_run_error_voice = 10;
    if (has_car_run_error_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_error_voice());
    }

    // optional int32 car_run_error_deduction = 11;
    if (has_car_run_error_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_error_deduction());
    }

    // optional string car_rk_check_right_voice = 12;
    if (has_car_rk_check_right_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_rk_check_right_voice());
    }

    // optional string car_rk_check_fail_voice = 13;
    if (has_car_rk_check_fail_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_rk_check_fail_voice());
    }

    // optional int32 car_rk_check_fail_deduction = 14;
    if (has_car_rk_check_fail_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_rk_check_fail_deduction());
    }

    // optional .OPMessage.CftcPressLine forwarding_pressline = 15;
    if (has_forwarding_pressline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->forwarding_pressline_);
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_rking_rightTurnLamp = 16;
    if (has_event_check_rking_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_rking_rightturnlamp_);
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional .OPMessage.CftcPressLine rking_pressline = 17;
    if (has_rking_pressline()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->rking_pressline_);
    }

    // optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 18;
    if (has_event_check_cking_leftturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_cking_leftturnlamp_);
    }

    // optional .OPMessage.CftcPressLine cking_pressline = 19;
    if (has_cking_pressline()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cking_pressline_);
    }

    // optional string car_run_not_staff_command_voice = 20;
    if (has_car_run_not_staff_command_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_not_staff_command_voice());
    }

    // optional int32 car_run_not_staff_command_deduction = 21;
    if (has_car_run_not_staff_command_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_not_staff_command_deduction());
    }

    // optional bool in_area_again = 22 [default = false];
    if (has_in_area_again()) {
      total_size += 2 + 1;
    }

    // optional int32 car_rk_check_delay_time = 23 [default = 0];
    if (has_car_rk_check_delay_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_rk_check_delay_time());
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 24;
    if (has_event_check_forwarding_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_forwarding_rightturnlamp_);
    }

  }
  if (_has_bits_[24 / 32] & 2130706432u) {
    // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_leftTurnLamp = 25;
    if (has_event_check_waitrk_leftturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_waitrk_leftturnlamp_);
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_rightTurnLamp = 26;
    if (has_event_check_waitrk_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_waitrk_rightturnlamp_);
    }

    // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_leftTurnLamp = 27;
    if (has_event_check_rkend_leftturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_rkend_leftturnlamp_);
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_rkend_rightTurnLamp = 28;
    if (has_event_check_rkend_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_rkend_rightturnlamp_);
    }

    // optional .OPMessage.CftcPressLine carwheel_forwarding_pressline = 29;
    if (has_carwheel_forwarding_pressline()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->carwheel_forwarding_pressline_);
    }

    // optional .OPMessage.CftcPressLine carwheel_rking_pressline = 30;
    if (has_carwheel_rking_pressline()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->carwheel_rking_pressline_);
    }

    // optional .OPMessage.CftcPressLine carwheel_cking_pressline = 31;
    if (has_carwheel_cking_pressline()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->carwheel_cking_pressline_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleCftc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleCftc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleCftc* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleCftc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleCftc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleCftc)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleCftc::MergeFrom(const ItemJudgeRuleCftc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleCftc)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_basic_event_check()) {
      mutable_basic_event_check()->::OPMessage::ItemJudgeBasic::MergeFrom(from.basic_event_check());
    }
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_judge_points_type()) {
      set_judge_points_type(from.judge_points_type());
    }
    if (from.has_check_start_type()) {
      set_check_start_type(from.check_start_type());
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_car_run_error_whether_check()) {
      set_car_run_error_whether_check(from.car_run_error_whether_check());
    }
    if (from.has_car_run_error_voice()) {
      set_has_car_run_error_voice();
      car_run_error_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_error_voice_);
    }
    if (from.has_car_run_error_deduction()) {
      set_car_run_error_deduction(from.car_run_error_deduction());
    }
    if (from.has_car_rk_check_right_voice()) {
      set_has_car_rk_check_right_voice();
      car_rk_check_right_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_rk_check_right_voice_);
    }
    if (from.has_car_rk_check_fail_voice()) {
      set_has_car_rk_check_fail_voice();
      car_rk_check_fail_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_rk_check_fail_voice_);
    }
    if (from.has_car_rk_check_fail_deduction()) {
      set_car_rk_check_fail_deduction(from.car_rk_check_fail_deduction());
    }
    if (from.has_forwarding_pressline()) {
      mutable_forwarding_pressline()->::OPMessage::CftcPressLine::MergeFrom(from.forwarding_pressline());
    }
    if (from.has_event_check_rking_rightturnlamp()) {
      mutable_event_check_rking_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_rking_rightturnlamp());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_rking_pressline()) {
      mutable_rking_pressline()->::OPMessage::CftcPressLine::MergeFrom(from.rking_pressline());
    }
    if (from.has_event_check_cking_leftturnlamp()) {
      mutable_event_check_cking_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.event_check_cking_leftturnlamp());
    }
    if (from.has_cking_pressline()) {
      mutable_cking_pressline()->::OPMessage::CftcPressLine::MergeFrom(from.cking_pressline());
    }
    if (from.has_car_run_not_staff_command_voice()) {
      set_has_car_run_not_staff_command_voice();
      car_run_not_staff_command_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_not_staff_command_voice_);
    }
    if (from.has_car_run_not_staff_command_deduction()) {
      set_car_run_not_staff_command_deduction(from.car_run_not_staff_command_deduction());
    }
    if (from.has_in_area_again()) {
      set_in_area_again(from.in_area_again());
    }
    if (from.has_car_rk_check_delay_time()) {
      set_car_rk_check_delay_time(from.car_rk_check_delay_time());
    }
    if (from.has_event_check_forwarding_rightturnlamp()) {
      mutable_event_check_forwarding_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_forwarding_rightturnlamp());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_event_check_waitrk_leftturnlamp()) {
      mutable_event_check_waitrk_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.event_check_waitrk_leftturnlamp());
    }
    if (from.has_event_check_waitrk_rightturnlamp()) {
      mutable_event_check_waitrk_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_waitrk_rightturnlamp());
    }
    if (from.has_event_check_rkend_leftturnlamp()) {
      mutable_event_check_rkend_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.event_check_rkend_leftturnlamp());
    }
    if (from.has_event_check_rkend_rightturnlamp()) {
      mutable_event_check_rkend_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_rkend_rightturnlamp());
    }
    if (from.has_carwheel_forwarding_pressline()) {
      mutable_carwheel_forwarding_pressline()->::OPMessage::CftcPressLine::MergeFrom(from.carwheel_forwarding_pressline());
    }
    if (from.has_carwheel_rking_pressline()) {
      mutable_carwheel_rking_pressline()->::OPMessage::CftcPressLine::MergeFrom(from.carwheel_rking_pressline());
    }
    if (from.has_carwheel_cking_pressline()) {
      mutable_carwheel_cking_pressline()->::OPMessage::CftcPressLine::MergeFrom(from.carwheel_cking_pressline());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleCftc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleCftc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleCftc::CopyFrom(const ItemJudgeRuleCftc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleCftc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleCftc::IsInitialized() const {

  return true;
}

void ItemJudgeRuleCftc::Swap(ItemJudgeRuleCftc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleCftc::InternalSwap(ItemJudgeRuleCftc* other) {
  std::swap(basic_event_check_, other->basic_event_check_);
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(judge_points_type_, other->judge_points_type_);
  std::swap(check_start_type_, other->check_start_type_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(car_run_error_whether_check_, other->car_run_error_whether_check_);
  car_run_error_voice_.Swap(&other->car_run_error_voice_);
  std::swap(car_run_error_deduction_, other->car_run_error_deduction_);
  car_rk_check_right_voice_.Swap(&other->car_rk_check_right_voice_);
  car_rk_check_fail_voice_.Swap(&other->car_rk_check_fail_voice_);
  std::swap(car_rk_check_fail_deduction_, other->car_rk_check_fail_deduction_);
  std::swap(forwarding_pressline_, other->forwarding_pressline_);
  std::swap(event_check_rking_rightturnlamp_, other->event_check_rking_rightturnlamp_);
  std::swap(rking_pressline_, other->rking_pressline_);
  std::swap(event_check_cking_leftturnlamp_, other->event_check_cking_leftturnlamp_);
  std::swap(cking_pressline_, other->cking_pressline_);
  car_run_not_staff_command_voice_.Swap(&other->car_run_not_staff_command_voice_);
  std::swap(car_run_not_staff_command_deduction_, other->car_run_not_staff_command_deduction_);
  std::swap(in_area_again_, other->in_area_again_);
  std::swap(car_rk_check_delay_time_, other->car_rk_check_delay_time_);
  std::swap(event_check_forwarding_rightturnlamp_, other->event_check_forwarding_rightturnlamp_);
  std::swap(event_check_waitrk_leftturnlamp_, other->event_check_waitrk_leftturnlamp_);
  std::swap(event_check_waitrk_rightturnlamp_, other->event_check_waitrk_rightturnlamp_);
  std::swap(event_check_rkend_leftturnlamp_, other->event_check_rkend_leftturnlamp_);
  std::swap(event_check_rkend_rightturnlamp_, other->event_check_rkend_rightturnlamp_);
  std::swap(carwheel_forwarding_pressline_, other->carwheel_forwarding_pressline_);
  std::swap(carwheel_rking_pressline_, other->carwheel_rking_pressline_);
  std::swap(carwheel_cking_pressline_, other->carwheel_cking_pressline_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleCftc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleCftc_descriptor_;
  metadata.reflection = ItemJudgeRuleCftc_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleCftc

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
bool ItemJudgeRuleCftc::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleCftc::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleCftc::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleCftc::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleCftc::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleCftc::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.basic_event_check)
  return basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleCftc::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.basic_event_check)
}

// optional string item_enter_voice = 2;
bool ItemJudgeRuleCftc::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleCftc::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleCftc::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleCftc::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleCftc::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
}
 void ItemJudgeRuleCftc::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
}
 void ItemJudgeRuleCftc::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
}
 ::std::string* ItemJudgeRuleCftc::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleCftc::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.item_enter_voice)
}

// optional string item_leave_voice = 3;
bool ItemJudgeRuleCftc::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleCftc::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleCftc::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleCftc::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleCftc::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
}
 void ItemJudgeRuleCftc::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
}
 void ItemJudgeRuleCftc::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
}
 ::std::string* ItemJudgeRuleCftc::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleCftc::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.item_leave_voice)
}

// optional string item_start_voice = 4;
bool ItemJudgeRuleCftc::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleCftc::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleCftc::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleCftc::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleCftc::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.item_start_voice)
}
 void ItemJudgeRuleCftc::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.item_start_voice)
}
 void ItemJudgeRuleCftc::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.item_start_voice)
}
 ::std::string* ItemJudgeRuleCftc::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleCftc::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.item_start_voice)
}

// optional string item_end_voice = 5;
bool ItemJudgeRuleCftc::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleCftc::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleCftc::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleCftc::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleCftc::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.item_end_voice)
}
 void ItemJudgeRuleCftc::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.item_end_voice)
}
 void ItemJudgeRuleCftc::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.item_end_voice)
}
 ::std::string* ItemJudgeRuleCftc::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleCftc::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
bool ItemJudgeRuleCftc::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleCftc::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleCftc::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleCftc::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
 ::OPMessage::enum_judge_points ItemJudgeRuleCftc::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
 void ItemJudgeRuleCftc::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.judge_points_type)
}

// optional .OPMessage.CheckStartCarPositionCftc check_start_type = 7;
bool ItemJudgeRuleCftc::has_check_start_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleCftc::set_has_check_start_type() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleCftc::clear_has_check_start_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleCftc::clear_check_start_type() {
  check_start_type_ = 0;
  clear_has_check_start_type();
}
 ::OPMessage::CheckStartCarPositionCftc ItemJudgeRuleCftc::check_start_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.check_start_type)
  return static_cast< ::OPMessage::CheckStartCarPositionCftc >(check_start_type_);
}
 void ItemJudgeRuleCftc::set_check_start_type(::OPMessage::CheckStartCarPositionCftc value) {
  assert(::OPMessage::CheckStartCarPositionCftc_IsValid(value));
  set_has_check_start_type();
  check_start_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.check_start_type)
}

// optional .OPMessage.CheckFinishCarPositionCftc check_finish_type = 8;
bool ItemJudgeRuleCftc::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeRuleCftc::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeRuleCftc::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeRuleCftc::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionCftc ItemJudgeRuleCftc::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionCftc >(check_finish_type_);
}
 void ItemJudgeRuleCftc::set_check_finish_type(::OPMessage::CheckFinishCarPositionCftc value) {
  assert(::OPMessage::CheckFinishCarPositionCftc_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.check_finish_type)
}

// optional bool car_run_error_whether_check = 9 [default = true];
bool ItemJudgeRuleCftc::has_car_run_error_whether_check() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ItemJudgeRuleCftc::set_has_car_run_error_whether_check() {
  _has_bits_[0] |= 0x00000100u;
}
void ItemJudgeRuleCftc::clear_has_car_run_error_whether_check() {
  _has_bits_[0] &= ~0x00000100u;
}
void ItemJudgeRuleCftc::clear_car_run_error_whether_check() {
  car_run_error_whether_check_ = true;
  clear_has_car_run_error_whether_check();
}
 bool ItemJudgeRuleCftc::car_run_error_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_run_error_whether_check)
  return car_run_error_whether_check_;
}
 void ItemJudgeRuleCftc::set_car_run_error_whether_check(bool value) {
  set_has_car_run_error_whether_check();
  car_run_error_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_run_error_whether_check)
}

// optional string car_run_error_voice = 10;
bool ItemJudgeRuleCftc::has_car_run_error_voice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ItemJudgeRuleCftc::set_has_car_run_error_voice() {
  _has_bits_[0] |= 0x00000200u;
}
void ItemJudgeRuleCftc::clear_has_car_run_error_voice() {
  _has_bits_[0] &= ~0x00000200u;
}
void ItemJudgeRuleCftc::clear_car_run_error_voice() {
  car_run_error_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_error_voice();
}
 const ::std::string& ItemJudgeRuleCftc::car_run_error_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
  return car_run_error_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_car_run_error_voice(const ::std::string& value) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
}
 void ItemJudgeRuleCftc::set_car_run_error_voice(const char* value) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
}
 void ItemJudgeRuleCftc::set_car_run_error_voice(const char* value, size_t size) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
}
 ::std::string* ItemJudgeRuleCftc::mutable_car_run_error_voice() {
  set_has_car_run_error_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
  return car_run_error_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleCftc::release_car_run_error_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
  clear_has_car_run_error_voice();
  return car_run_error_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_allocated_car_run_error_voice(::std::string* car_run_error_voice) {
  if (car_run_error_voice != NULL) {
    set_has_car_run_error_voice();
  } else {
    clear_has_car_run_error_voice();
  }
  car_run_error_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_error_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.car_run_error_voice)
}

// optional int32 car_run_error_deduction = 11;
bool ItemJudgeRuleCftc::has_car_run_error_deduction() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ItemJudgeRuleCftc::set_has_car_run_error_deduction() {
  _has_bits_[0] |= 0x00000400u;
}
void ItemJudgeRuleCftc::clear_has_car_run_error_deduction() {
  _has_bits_[0] &= ~0x00000400u;
}
void ItemJudgeRuleCftc::clear_car_run_error_deduction() {
  car_run_error_deduction_ = 0;
  clear_has_car_run_error_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleCftc::car_run_error_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_run_error_deduction)
  return car_run_error_deduction_;
}
 void ItemJudgeRuleCftc::set_car_run_error_deduction(::google::protobuf::int32 value) {
  set_has_car_run_error_deduction();
  car_run_error_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_run_error_deduction)
}

// optional string car_rk_check_right_voice = 12;
bool ItemJudgeRuleCftc::has_car_rk_check_right_voice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ItemJudgeRuleCftc::set_has_car_rk_check_right_voice() {
  _has_bits_[0] |= 0x00000800u;
}
void ItemJudgeRuleCftc::clear_has_car_rk_check_right_voice() {
  _has_bits_[0] &= ~0x00000800u;
}
void ItemJudgeRuleCftc::clear_car_rk_check_right_voice() {
  car_rk_check_right_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_rk_check_right_voice();
}
 const ::std::string& ItemJudgeRuleCftc::car_rk_check_right_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
  return car_rk_check_right_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_car_rk_check_right_voice(const ::std::string& value) {
  set_has_car_rk_check_right_voice();
  car_rk_check_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
}
 void ItemJudgeRuleCftc::set_car_rk_check_right_voice(const char* value) {
  set_has_car_rk_check_right_voice();
  car_rk_check_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
}
 void ItemJudgeRuleCftc::set_car_rk_check_right_voice(const char* value, size_t size) {
  set_has_car_rk_check_right_voice();
  car_rk_check_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
}
 ::std::string* ItemJudgeRuleCftc::mutable_car_rk_check_right_voice() {
  set_has_car_rk_check_right_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
  return car_rk_check_right_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleCftc::release_car_rk_check_right_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
  clear_has_car_rk_check_right_voice();
  return car_rk_check_right_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_allocated_car_rk_check_right_voice(::std::string* car_rk_check_right_voice) {
  if (car_rk_check_right_voice != NULL) {
    set_has_car_rk_check_right_voice();
  } else {
    clear_has_car_rk_check_right_voice();
  }
  car_rk_check_right_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_rk_check_right_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.car_rk_check_right_voice)
}

// optional string car_rk_check_fail_voice = 13;
bool ItemJudgeRuleCftc::has_car_rk_check_fail_voice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ItemJudgeRuleCftc::set_has_car_rk_check_fail_voice() {
  _has_bits_[0] |= 0x00001000u;
}
void ItemJudgeRuleCftc::clear_has_car_rk_check_fail_voice() {
  _has_bits_[0] &= ~0x00001000u;
}
void ItemJudgeRuleCftc::clear_car_rk_check_fail_voice() {
  car_rk_check_fail_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_rk_check_fail_voice();
}
 const ::std::string& ItemJudgeRuleCftc::car_rk_check_fail_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
  return car_rk_check_fail_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_car_rk_check_fail_voice(const ::std::string& value) {
  set_has_car_rk_check_fail_voice();
  car_rk_check_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
}
 void ItemJudgeRuleCftc::set_car_rk_check_fail_voice(const char* value) {
  set_has_car_rk_check_fail_voice();
  car_rk_check_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
}
 void ItemJudgeRuleCftc::set_car_rk_check_fail_voice(const char* value, size_t size) {
  set_has_car_rk_check_fail_voice();
  car_rk_check_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
}
 ::std::string* ItemJudgeRuleCftc::mutable_car_rk_check_fail_voice() {
  set_has_car_rk_check_fail_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
  return car_rk_check_fail_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleCftc::release_car_rk_check_fail_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
  clear_has_car_rk_check_fail_voice();
  return car_rk_check_fail_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_allocated_car_rk_check_fail_voice(::std::string* car_rk_check_fail_voice) {
  if (car_rk_check_fail_voice != NULL) {
    set_has_car_rk_check_fail_voice();
  } else {
    clear_has_car_rk_check_fail_voice();
  }
  car_rk_check_fail_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_rk_check_fail_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_voice)
}

// optional int32 car_rk_check_fail_deduction = 14;
bool ItemJudgeRuleCftc::has_car_rk_check_fail_deduction() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ItemJudgeRuleCftc::set_has_car_rk_check_fail_deduction() {
  _has_bits_[0] |= 0x00002000u;
}
void ItemJudgeRuleCftc::clear_has_car_rk_check_fail_deduction() {
  _has_bits_[0] &= ~0x00002000u;
}
void ItemJudgeRuleCftc::clear_car_rk_check_fail_deduction() {
  car_rk_check_fail_deduction_ = 0;
  clear_has_car_rk_check_fail_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleCftc::car_rk_check_fail_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_deduction)
  return car_rk_check_fail_deduction_;
}
 void ItemJudgeRuleCftc::set_car_rk_check_fail_deduction(::google::protobuf::int32 value) {
  set_has_car_rk_check_fail_deduction();
  car_rk_check_fail_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_rk_check_fail_deduction)
}

// optional .OPMessage.CftcPressLine forwarding_pressline = 15;
bool ItemJudgeRuleCftc::has_forwarding_pressline() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void ItemJudgeRuleCftc::set_has_forwarding_pressline() {
  _has_bits_[0] |= 0x00004000u;
}
void ItemJudgeRuleCftc::clear_has_forwarding_pressline() {
  _has_bits_[0] &= ~0x00004000u;
}
void ItemJudgeRuleCftc::clear_forwarding_pressline() {
  if (forwarding_pressline_ != NULL) forwarding_pressline_->::OPMessage::CftcPressLine::Clear();
  clear_has_forwarding_pressline();
}
const ::OPMessage::CftcPressLine& ItemJudgeRuleCftc::forwarding_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.forwarding_pressline)
  return forwarding_pressline_ != NULL ? *forwarding_pressline_ : *default_instance_->forwarding_pressline_;
}
::OPMessage::CftcPressLine* ItemJudgeRuleCftc::mutable_forwarding_pressline() {
  set_has_forwarding_pressline();
  if (forwarding_pressline_ == NULL) {
    forwarding_pressline_ = new ::OPMessage::CftcPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.forwarding_pressline)
  return forwarding_pressline_;
}
::OPMessage::CftcPressLine* ItemJudgeRuleCftc::release_forwarding_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.forwarding_pressline)
  clear_has_forwarding_pressline();
  ::OPMessage::CftcPressLine* temp = forwarding_pressline_;
  forwarding_pressline_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_forwarding_pressline(::OPMessage::CftcPressLine* forwarding_pressline) {
  delete forwarding_pressline_;
  forwarding_pressline_ = forwarding_pressline;
  if (forwarding_pressline) {
    set_has_forwarding_pressline();
  } else {
    clear_has_forwarding_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.forwarding_pressline)
}

// optional .OPMessage.BasicRightTurnLamp event_check_rking_rightTurnLamp = 16;
bool ItemJudgeRuleCftc::has_event_check_rking_rightturnlamp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void ItemJudgeRuleCftc::set_has_event_check_rking_rightturnlamp() {
  _has_bits_[0] |= 0x00008000u;
}
void ItemJudgeRuleCftc::clear_has_event_check_rking_rightturnlamp() {
  _has_bits_[0] &= ~0x00008000u;
}
void ItemJudgeRuleCftc::clear_event_check_rking_rightturnlamp() {
  if (event_check_rking_rightturnlamp_ != NULL) event_check_rking_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_rking_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleCftc::event_check_rking_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_rking_rightTurnLamp)
  return event_check_rking_rightturnlamp_ != NULL ? *event_check_rking_rightturnlamp_ : *default_instance_->event_check_rking_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::mutable_event_check_rking_rightturnlamp() {
  set_has_event_check_rking_rightturnlamp();
  if (event_check_rking_rightturnlamp_ == NULL) {
    event_check_rking_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_rking_rightTurnLamp)
  return event_check_rking_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::release_event_check_rking_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_rking_rightTurnLamp)
  clear_has_event_check_rking_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_rking_rightturnlamp_;
  event_check_rking_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_event_check_rking_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rking_rightturnlamp) {
  delete event_check_rking_rightturnlamp_;
  event_check_rking_rightturnlamp_ = event_check_rking_rightturnlamp;
  if (event_check_rking_rightturnlamp) {
    set_has_event_check_rking_rightturnlamp();
  } else {
    clear_has_event_check_rking_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_rking_rightTurnLamp)
}

// optional .OPMessage.CftcPressLine rking_pressline = 17;
bool ItemJudgeRuleCftc::has_rking_pressline() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void ItemJudgeRuleCftc::set_has_rking_pressline() {
  _has_bits_[0] |= 0x00010000u;
}
void ItemJudgeRuleCftc::clear_has_rking_pressline() {
  _has_bits_[0] &= ~0x00010000u;
}
void ItemJudgeRuleCftc::clear_rking_pressline() {
  if (rking_pressline_ != NULL) rking_pressline_->::OPMessage::CftcPressLine::Clear();
  clear_has_rking_pressline();
}
const ::OPMessage::CftcPressLine& ItemJudgeRuleCftc::rking_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.rking_pressline)
  return rking_pressline_ != NULL ? *rking_pressline_ : *default_instance_->rking_pressline_;
}
::OPMessage::CftcPressLine* ItemJudgeRuleCftc::mutable_rking_pressline() {
  set_has_rking_pressline();
  if (rking_pressline_ == NULL) {
    rking_pressline_ = new ::OPMessage::CftcPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.rking_pressline)
  return rking_pressline_;
}
::OPMessage::CftcPressLine* ItemJudgeRuleCftc::release_rking_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.rking_pressline)
  clear_has_rking_pressline();
  ::OPMessage::CftcPressLine* temp = rking_pressline_;
  rking_pressline_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_rking_pressline(::OPMessage::CftcPressLine* rking_pressline) {
  delete rking_pressline_;
  rking_pressline_ = rking_pressline;
  if (rking_pressline) {
    set_has_rking_pressline();
  } else {
    clear_has_rking_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.rking_pressline)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 18;
bool ItemJudgeRuleCftc::has_event_check_cking_leftturnlamp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void ItemJudgeRuleCftc::set_has_event_check_cking_leftturnlamp() {
  _has_bits_[0] |= 0x00020000u;
}
void ItemJudgeRuleCftc::clear_has_event_check_cking_leftturnlamp() {
  _has_bits_[0] &= ~0x00020000u;
}
void ItemJudgeRuleCftc::clear_event_check_cking_leftturnlamp() {
  if (event_check_cking_leftturnlamp_ != NULL) event_check_cking_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_cking_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleCftc::event_check_cking_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_cking_leftTurnLamp)
  return event_check_cking_leftturnlamp_ != NULL ? *event_check_cking_leftturnlamp_ : *default_instance_->event_check_cking_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleCftc::mutable_event_check_cking_leftturnlamp() {
  set_has_event_check_cking_leftturnlamp();
  if (event_check_cking_leftturnlamp_ == NULL) {
    event_check_cking_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_cking_leftTurnLamp)
  return event_check_cking_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleCftc::release_event_check_cking_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_cking_leftTurnLamp)
  clear_has_event_check_cking_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_cking_leftturnlamp_;
  event_check_cking_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_event_check_cking_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_cking_leftturnlamp) {
  delete event_check_cking_leftturnlamp_;
  event_check_cking_leftturnlamp_ = event_check_cking_leftturnlamp;
  if (event_check_cking_leftturnlamp) {
    set_has_event_check_cking_leftturnlamp();
  } else {
    clear_has_event_check_cking_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_cking_leftTurnLamp)
}

// optional .OPMessage.CftcPressLine cking_pressline = 19;
bool ItemJudgeRuleCftc::has_cking_pressline() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void ItemJudgeRuleCftc::set_has_cking_pressline() {
  _has_bits_[0] |= 0x00040000u;
}
void ItemJudgeRuleCftc::clear_has_cking_pressline() {
  _has_bits_[0] &= ~0x00040000u;
}
void ItemJudgeRuleCftc::clear_cking_pressline() {
  if (cking_pressline_ != NULL) cking_pressline_->::OPMessage::CftcPressLine::Clear();
  clear_has_cking_pressline();
}
const ::OPMessage::CftcPressLine& ItemJudgeRuleCftc::cking_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.cking_pressline)
  return cking_pressline_ != NULL ? *cking_pressline_ : *default_instance_->cking_pressline_;
}
::OPMessage::CftcPressLine* ItemJudgeRuleCftc::mutable_cking_pressline() {
  set_has_cking_pressline();
  if (cking_pressline_ == NULL) {
    cking_pressline_ = new ::OPMessage::CftcPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.cking_pressline)
  return cking_pressline_;
}
::OPMessage::CftcPressLine* ItemJudgeRuleCftc::release_cking_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.cking_pressline)
  clear_has_cking_pressline();
  ::OPMessage::CftcPressLine* temp = cking_pressline_;
  cking_pressline_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_cking_pressline(::OPMessage::CftcPressLine* cking_pressline) {
  delete cking_pressline_;
  cking_pressline_ = cking_pressline;
  if (cking_pressline) {
    set_has_cking_pressline();
  } else {
    clear_has_cking_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.cking_pressline)
}

// optional string car_run_not_staff_command_voice = 20;
bool ItemJudgeRuleCftc::has_car_run_not_staff_command_voice() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void ItemJudgeRuleCftc::set_has_car_run_not_staff_command_voice() {
  _has_bits_[0] |= 0x00080000u;
}
void ItemJudgeRuleCftc::clear_has_car_run_not_staff_command_voice() {
  _has_bits_[0] &= ~0x00080000u;
}
void ItemJudgeRuleCftc::clear_car_run_not_staff_command_voice() {
  car_run_not_staff_command_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_not_staff_command_voice();
}
 const ::std::string& ItemJudgeRuleCftc::car_run_not_staff_command_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
  return car_run_not_staff_command_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_car_run_not_staff_command_voice(const ::std::string& value) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
}
 void ItemJudgeRuleCftc::set_car_run_not_staff_command_voice(const char* value) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
}
 void ItemJudgeRuleCftc::set_car_run_not_staff_command_voice(const char* value, size_t size) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
}
 ::std::string* ItemJudgeRuleCftc::mutable_car_run_not_staff_command_voice() {
  set_has_car_run_not_staff_command_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
  return car_run_not_staff_command_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleCftc::release_car_run_not_staff_command_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
  clear_has_car_run_not_staff_command_voice();
  return car_run_not_staff_command_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleCftc::set_allocated_car_run_not_staff_command_voice(::std::string* car_run_not_staff_command_voice) {
  if (car_run_not_staff_command_voice != NULL) {
    set_has_car_run_not_staff_command_voice();
  } else {
    clear_has_car_run_not_staff_command_voice();
  }
  car_run_not_staff_command_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_not_staff_command_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_voice)
}

// optional int32 car_run_not_staff_command_deduction = 21;
bool ItemJudgeRuleCftc::has_car_run_not_staff_command_deduction() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void ItemJudgeRuleCftc::set_has_car_run_not_staff_command_deduction() {
  _has_bits_[0] |= 0x00100000u;
}
void ItemJudgeRuleCftc::clear_has_car_run_not_staff_command_deduction() {
  _has_bits_[0] &= ~0x00100000u;
}
void ItemJudgeRuleCftc::clear_car_run_not_staff_command_deduction() {
  car_run_not_staff_command_deduction_ = 0;
  clear_has_car_run_not_staff_command_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleCftc::car_run_not_staff_command_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_deduction)
  return car_run_not_staff_command_deduction_;
}
 void ItemJudgeRuleCftc::set_car_run_not_staff_command_deduction(::google::protobuf::int32 value) {
  set_has_car_run_not_staff_command_deduction();
  car_run_not_staff_command_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_run_not_staff_command_deduction)
}

// optional bool in_area_again = 22 [default = false];
bool ItemJudgeRuleCftc::has_in_area_again() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void ItemJudgeRuleCftc::set_has_in_area_again() {
  _has_bits_[0] |= 0x00200000u;
}
void ItemJudgeRuleCftc::clear_has_in_area_again() {
  _has_bits_[0] &= ~0x00200000u;
}
void ItemJudgeRuleCftc::clear_in_area_again() {
  in_area_again_ = false;
  clear_has_in_area_again();
}
 bool ItemJudgeRuleCftc::in_area_again() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.in_area_again)
  return in_area_again_;
}
 void ItemJudgeRuleCftc::set_in_area_again(bool value) {
  set_has_in_area_again();
  in_area_again_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.in_area_again)
}

// optional int32 car_rk_check_delay_time = 23 [default = 0];
bool ItemJudgeRuleCftc::has_car_rk_check_delay_time() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void ItemJudgeRuleCftc::set_has_car_rk_check_delay_time() {
  _has_bits_[0] |= 0x00400000u;
}
void ItemJudgeRuleCftc::clear_has_car_rk_check_delay_time() {
  _has_bits_[0] &= ~0x00400000u;
}
void ItemJudgeRuleCftc::clear_car_rk_check_delay_time() {
  car_rk_check_delay_time_ = 0;
  clear_has_car_rk_check_delay_time();
}
 ::google::protobuf::int32 ItemJudgeRuleCftc::car_rk_check_delay_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.car_rk_check_delay_time)
  return car_rk_check_delay_time_;
}
 void ItemJudgeRuleCftc::set_car_rk_check_delay_time(::google::protobuf::int32 value) {
  set_has_car_rk_check_delay_time();
  car_rk_check_delay_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleCftc.car_rk_check_delay_time)
}

// optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 24;
bool ItemJudgeRuleCftc::has_event_check_forwarding_rightturnlamp() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void ItemJudgeRuleCftc::set_has_event_check_forwarding_rightturnlamp() {
  _has_bits_[0] |= 0x00800000u;
}
void ItemJudgeRuleCftc::clear_has_event_check_forwarding_rightturnlamp() {
  _has_bits_[0] &= ~0x00800000u;
}
void ItemJudgeRuleCftc::clear_event_check_forwarding_rightturnlamp() {
  if (event_check_forwarding_rightturnlamp_ != NULL) event_check_forwarding_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_forwarding_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleCftc::event_check_forwarding_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_forwarding_rightTurnLamp)
  return event_check_forwarding_rightturnlamp_ != NULL ? *event_check_forwarding_rightturnlamp_ : *default_instance_->event_check_forwarding_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::mutable_event_check_forwarding_rightturnlamp() {
  set_has_event_check_forwarding_rightturnlamp();
  if (event_check_forwarding_rightturnlamp_ == NULL) {
    event_check_forwarding_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_forwarding_rightTurnLamp)
  return event_check_forwarding_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::release_event_check_forwarding_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_forwarding_rightTurnLamp)
  clear_has_event_check_forwarding_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_forwarding_rightturnlamp_;
  event_check_forwarding_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_event_check_forwarding_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_forwarding_rightturnlamp) {
  delete event_check_forwarding_rightturnlamp_;
  event_check_forwarding_rightturnlamp_ = event_check_forwarding_rightturnlamp;
  if (event_check_forwarding_rightturnlamp) {
    set_has_event_check_forwarding_rightturnlamp();
  } else {
    clear_has_event_check_forwarding_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_forwarding_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_leftTurnLamp = 25;
bool ItemJudgeRuleCftc::has_event_check_waitrk_leftturnlamp() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void ItemJudgeRuleCftc::set_has_event_check_waitrk_leftturnlamp() {
  _has_bits_[0] |= 0x01000000u;
}
void ItemJudgeRuleCftc::clear_has_event_check_waitrk_leftturnlamp() {
  _has_bits_[0] &= ~0x01000000u;
}
void ItemJudgeRuleCftc::clear_event_check_waitrk_leftturnlamp() {
  if (event_check_waitrk_leftturnlamp_ != NULL) event_check_waitrk_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_waitrk_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleCftc::event_check_waitrk_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_leftTurnLamp)
  return event_check_waitrk_leftturnlamp_ != NULL ? *event_check_waitrk_leftturnlamp_ : *default_instance_->event_check_waitrk_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleCftc::mutable_event_check_waitrk_leftturnlamp() {
  set_has_event_check_waitrk_leftturnlamp();
  if (event_check_waitrk_leftturnlamp_ == NULL) {
    event_check_waitrk_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_leftTurnLamp)
  return event_check_waitrk_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleCftc::release_event_check_waitrk_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_leftTurnLamp)
  clear_has_event_check_waitrk_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_waitrk_leftturnlamp_;
  event_check_waitrk_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_event_check_waitrk_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_waitrk_leftturnlamp) {
  delete event_check_waitrk_leftturnlamp_;
  event_check_waitrk_leftturnlamp_ = event_check_waitrk_leftturnlamp;
  if (event_check_waitrk_leftturnlamp) {
    set_has_event_check_waitrk_leftturnlamp();
  } else {
    clear_has_event_check_waitrk_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_waitrk_rightTurnLamp = 26;
bool ItemJudgeRuleCftc::has_event_check_waitrk_rightturnlamp() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void ItemJudgeRuleCftc::set_has_event_check_waitrk_rightturnlamp() {
  _has_bits_[0] |= 0x02000000u;
}
void ItemJudgeRuleCftc::clear_has_event_check_waitrk_rightturnlamp() {
  _has_bits_[0] &= ~0x02000000u;
}
void ItemJudgeRuleCftc::clear_event_check_waitrk_rightturnlamp() {
  if (event_check_waitrk_rightturnlamp_ != NULL) event_check_waitrk_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_waitrk_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleCftc::event_check_waitrk_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_rightTurnLamp)
  return event_check_waitrk_rightturnlamp_ != NULL ? *event_check_waitrk_rightturnlamp_ : *default_instance_->event_check_waitrk_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::mutable_event_check_waitrk_rightturnlamp() {
  set_has_event_check_waitrk_rightturnlamp();
  if (event_check_waitrk_rightturnlamp_ == NULL) {
    event_check_waitrk_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_rightTurnLamp)
  return event_check_waitrk_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::release_event_check_waitrk_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_rightTurnLamp)
  clear_has_event_check_waitrk_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_waitrk_rightturnlamp_;
  event_check_waitrk_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_event_check_waitrk_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_waitrk_rightturnlamp) {
  delete event_check_waitrk_rightturnlamp_;
  event_check_waitrk_rightturnlamp_ = event_check_waitrk_rightturnlamp;
  if (event_check_waitrk_rightturnlamp) {
    set_has_event_check_waitrk_rightturnlamp();
  } else {
    clear_has_event_check_waitrk_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_waitrk_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_rkend_leftTurnLamp = 27;
bool ItemJudgeRuleCftc::has_event_check_rkend_leftturnlamp() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void ItemJudgeRuleCftc::set_has_event_check_rkend_leftturnlamp() {
  _has_bits_[0] |= 0x04000000u;
}
void ItemJudgeRuleCftc::clear_has_event_check_rkend_leftturnlamp() {
  _has_bits_[0] &= ~0x04000000u;
}
void ItemJudgeRuleCftc::clear_event_check_rkend_leftturnlamp() {
  if (event_check_rkend_leftturnlamp_ != NULL) event_check_rkend_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_rkend_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleCftc::event_check_rkend_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_rkend_leftTurnLamp)
  return event_check_rkend_leftturnlamp_ != NULL ? *event_check_rkend_leftturnlamp_ : *default_instance_->event_check_rkend_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleCftc::mutable_event_check_rkend_leftturnlamp() {
  set_has_event_check_rkend_leftturnlamp();
  if (event_check_rkend_leftturnlamp_ == NULL) {
    event_check_rkend_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_rkend_leftTurnLamp)
  return event_check_rkend_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleCftc::release_event_check_rkend_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_rkend_leftTurnLamp)
  clear_has_event_check_rkend_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_rkend_leftturnlamp_;
  event_check_rkend_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_event_check_rkend_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_rkend_leftturnlamp) {
  delete event_check_rkend_leftturnlamp_;
  event_check_rkend_leftturnlamp_ = event_check_rkend_leftturnlamp;
  if (event_check_rkend_leftturnlamp) {
    set_has_event_check_rkend_leftturnlamp();
  } else {
    clear_has_event_check_rkend_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_rkend_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_rkend_rightTurnLamp = 28;
bool ItemJudgeRuleCftc::has_event_check_rkend_rightturnlamp() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
void ItemJudgeRuleCftc::set_has_event_check_rkend_rightturnlamp() {
  _has_bits_[0] |= 0x08000000u;
}
void ItemJudgeRuleCftc::clear_has_event_check_rkend_rightturnlamp() {
  _has_bits_[0] &= ~0x08000000u;
}
void ItemJudgeRuleCftc::clear_event_check_rkend_rightturnlamp() {
  if (event_check_rkend_rightturnlamp_ != NULL) event_check_rkend_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_rkend_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleCftc::event_check_rkend_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.event_check_rkend_rightTurnLamp)
  return event_check_rkend_rightturnlamp_ != NULL ? *event_check_rkend_rightturnlamp_ : *default_instance_->event_check_rkend_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::mutable_event_check_rkend_rightturnlamp() {
  set_has_event_check_rkend_rightturnlamp();
  if (event_check_rkend_rightturnlamp_ == NULL) {
    event_check_rkend_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.event_check_rkend_rightTurnLamp)
  return event_check_rkend_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleCftc::release_event_check_rkend_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.event_check_rkend_rightTurnLamp)
  clear_has_event_check_rkend_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_rkend_rightturnlamp_;
  event_check_rkend_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_event_check_rkend_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rkend_rightturnlamp) {
  delete event_check_rkend_rightturnlamp_;
  event_check_rkend_rightturnlamp_ = event_check_rkend_rightturnlamp;
  if (event_check_rkend_rightturnlamp) {
    set_has_event_check_rkend_rightturnlamp();
  } else {
    clear_has_event_check_rkend_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.event_check_rkend_rightTurnLamp)
}

// optional .OPMessage.CftcPressLine carwheel_forwarding_pressline = 29;
bool ItemJudgeRuleCftc::has_carwheel_forwarding_pressline() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
void ItemJudgeRuleCftc::set_has_carwheel_forwarding_pressline() {
  _has_bits_[0] |= 0x10000000u;
}
void ItemJudgeRuleCftc::clear_has_carwheel_forwarding_pressline() {
  _has_bits_[0] &= ~0x10000000u;
}
void ItemJudgeRuleCftc::clear_carwheel_forwarding_pressline() {
  if (carwheel_forwarding_pressline_ != NULL) carwheel_forwarding_pressline_->::OPMessage::CftcPressLine::Clear();
  clear_has_carwheel_forwarding_pressline();
}
const ::OPMessage::CftcPressLine& ItemJudgeRuleCftc::carwheel_forwarding_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.carwheel_forwarding_pressline)
  return carwheel_forwarding_pressline_ != NULL ? *carwheel_forwarding_pressline_ : *default_instance_->carwheel_forwarding_pressline_;
}
::OPMessage::CftcPressLine* ItemJudgeRuleCftc::mutable_carwheel_forwarding_pressline() {
  set_has_carwheel_forwarding_pressline();
  if (carwheel_forwarding_pressline_ == NULL) {
    carwheel_forwarding_pressline_ = new ::OPMessage::CftcPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.carwheel_forwarding_pressline)
  return carwheel_forwarding_pressline_;
}
::OPMessage::CftcPressLine* ItemJudgeRuleCftc::release_carwheel_forwarding_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.carwheel_forwarding_pressline)
  clear_has_carwheel_forwarding_pressline();
  ::OPMessage::CftcPressLine* temp = carwheel_forwarding_pressline_;
  carwheel_forwarding_pressline_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_carwheel_forwarding_pressline(::OPMessage::CftcPressLine* carwheel_forwarding_pressline) {
  delete carwheel_forwarding_pressline_;
  carwheel_forwarding_pressline_ = carwheel_forwarding_pressline;
  if (carwheel_forwarding_pressline) {
    set_has_carwheel_forwarding_pressline();
  } else {
    clear_has_carwheel_forwarding_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.carwheel_forwarding_pressline)
}

// optional .OPMessage.CftcPressLine carwheel_rking_pressline = 30;
bool ItemJudgeRuleCftc::has_carwheel_rking_pressline() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
void ItemJudgeRuleCftc::set_has_carwheel_rking_pressline() {
  _has_bits_[0] |= 0x20000000u;
}
void ItemJudgeRuleCftc::clear_has_carwheel_rking_pressline() {
  _has_bits_[0] &= ~0x20000000u;
}
void ItemJudgeRuleCftc::clear_carwheel_rking_pressline() {
  if (carwheel_rking_pressline_ != NULL) carwheel_rking_pressline_->::OPMessage::CftcPressLine::Clear();
  clear_has_carwheel_rking_pressline();
}
const ::OPMessage::CftcPressLine& ItemJudgeRuleCftc::carwheel_rking_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.carwheel_rking_pressline)
  return carwheel_rking_pressline_ != NULL ? *carwheel_rking_pressline_ : *default_instance_->carwheel_rking_pressline_;
}
::OPMessage::CftcPressLine* ItemJudgeRuleCftc::mutable_carwheel_rking_pressline() {
  set_has_carwheel_rking_pressline();
  if (carwheel_rking_pressline_ == NULL) {
    carwheel_rking_pressline_ = new ::OPMessage::CftcPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.carwheel_rking_pressline)
  return carwheel_rking_pressline_;
}
::OPMessage::CftcPressLine* ItemJudgeRuleCftc::release_carwheel_rking_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.carwheel_rking_pressline)
  clear_has_carwheel_rking_pressline();
  ::OPMessage::CftcPressLine* temp = carwheel_rking_pressline_;
  carwheel_rking_pressline_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_carwheel_rking_pressline(::OPMessage::CftcPressLine* carwheel_rking_pressline) {
  delete carwheel_rking_pressline_;
  carwheel_rking_pressline_ = carwheel_rking_pressline;
  if (carwheel_rking_pressline) {
    set_has_carwheel_rking_pressline();
  } else {
    clear_has_carwheel_rking_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.carwheel_rking_pressline)
}

// optional .OPMessage.CftcPressLine carwheel_cking_pressline = 31;
bool ItemJudgeRuleCftc::has_carwheel_cking_pressline() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
void ItemJudgeRuleCftc::set_has_carwheel_cking_pressline() {
  _has_bits_[0] |= 0x40000000u;
}
void ItemJudgeRuleCftc::clear_has_carwheel_cking_pressline() {
  _has_bits_[0] &= ~0x40000000u;
}
void ItemJudgeRuleCftc::clear_carwheel_cking_pressline() {
  if (carwheel_cking_pressline_ != NULL) carwheel_cking_pressline_->::OPMessage::CftcPressLine::Clear();
  clear_has_carwheel_cking_pressline();
}
const ::OPMessage::CftcPressLine& ItemJudgeRuleCftc::carwheel_cking_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleCftc.carwheel_cking_pressline)
  return carwheel_cking_pressline_ != NULL ? *carwheel_cking_pressline_ : *default_instance_->carwheel_cking_pressline_;
}
::OPMessage::CftcPressLine* ItemJudgeRuleCftc::mutable_carwheel_cking_pressline() {
  set_has_carwheel_cking_pressline();
  if (carwheel_cking_pressline_ == NULL) {
    carwheel_cking_pressline_ = new ::OPMessage::CftcPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleCftc.carwheel_cking_pressline)
  return carwheel_cking_pressline_;
}
::OPMessage::CftcPressLine* ItemJudgeRuleCftc::release_carwheel_cking_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleCftc.carwheel_cking_pressline)
  clear_has_carwheel_cking_pressline();
  ::OPMessage::CftcPressLine* temp = carwheel_cking_pressline_;
  carwheel_cking_pressline_ = NULL;
  return temp;
}
void ItemJudgeRuleCftc::set_allocated_carwheel_cking_pressline(::OPMessage::CftcPressLine* carwheel_cking_pressline) {
  delete carwheel_cking_pressline_;
  carwheel_cking_pressline_ = carwheel_cking_pressline;
  if (carwheel_cking_pressline) {
    set_has_carwheel_cking_pressline();
  } else {
    clear_has_carwheel_cking_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleCftc.carwheel_cking_pressline)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleSpqb::kBasicEventCheckFieldNumber;
const int ItemJudgeRuleSpqb::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kJudgePointsTypeFieldNumber;
const int ItemJudgeRuleSpqb::kCheckStartTypeFieldNumber;
const int ItemJudgeRuleSpqb::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleSpqb::kCarRunErrorWhetherCheckFieldNumber;
const int ItemJudgeRuleSpqb::kCarRunErrorVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kCarRunErrorDeductionFieldNumber;
const int ItemJudgeRuleSpqb::kCarDdHeadRightVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kCarDdHeadMore50CmVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kCarDdHeadMore50CmDeductionFieldNumber;
const int ItemJudgeRuleSpqb::kCarDdHeadNotMore50CmVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kCarDdHeadNotMore50CmDeductionFieldNumber;
const int ItemJudgeRuleSpqb::kCarDdCarWheelPressLineDeductionFieldNumber;
const int ItemJudgeRuleSpqb::kCarDdCarWheelPressLineVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kCarDdRightLineMore30CmLess50CmVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kCarDdRightLineMore30CmLess50CmDeductionFieldNumber;
const int ItemJudgeRuleSpqb::kCarDdRightLineMore50CmVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kCarDdRightLineMore50CmDeductionFieldNumber;
const int ItemJudgeRuleSpqb::kCarHlDistanceMore30CmVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kCarHlDistanceMore30CmDeductionFieldNumber;
const int ItemJudgeRuleSpqb::kCarHlDistanceLess30CmVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kCarHlDistanceLess30CmDeductionFieldNumber;
const int ItemJudgeRuleSpqb::kCarQbTimeoutNumFieldNumber;
const int ItemJudgeRuleSpqb::kCarQbTimeoutVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kCarQbTimeoutDeductionFieldNumber;
const int ItemJudgeRuleSpqb::kCarPressLineWhetherCheckFieldNumber;
const int ItemJudgeRuleSpqb::kCarPressLineDeductionFieldNumber;
const int ItemJudgeRuleSpqb::kCarPressLineVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kCarRunNotStaffCommandVoiceFieldNumber;
const int ItemJudgeRuleSpqb::kCarRunNotStaffCommandDeductionFieldNumber;
const int ItemJudgeRuleSpqb::kEventCheckCkingLeftTurnLampFieldNumber;
const int ItemJudgeRuleSpqb::kInAreaAgainFieldNumber;
const int ItemJudgeRuleSpqb::kEventCheckForwardingRightTurnLampFieldNumber;
const int ItemJudgeRuleSpqb::kEventCheckWaitqbLeftTurnLampFieldNumber;
const int ItemJudgeRuleSpqb::kEventCheckWaitqbRightTurnLampFieldNumber;
const int ItemJudgeRuleSpqb::kEventCheckWaitqbHandBrakeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleSpqb::ItemJudgeRuleSpqb()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleSpqb)
}

void ItemJudgeRuleSpqb::InitAsDefaultInstance() {
  basic_event_check_ = const_cast< ::OPMessage::ItemJudgeBasic*>(&::OPMessage::ItemJudgeBasic::default_instance());
  event_check_cking_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  event_check_forwarding_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  event_check_waitqb_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  event_check_waitqb_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  event_check_waitqb_handbrake_ = const_cast< ::OPMessage::BasicHandBrake*>(&::OPMessage::BasicHandBrake::default_instance());
}

ItemJudgeRuleSpqb::ItemJudgeRuleSpqb(const ItemJudgeRuleSpqb& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleSpqb)
}

void ItemJudgeRuleSpqb::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  basic_event_check_ = NULL;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  judge_points_type_ = 0;
  check_start_type_ = 0;
  check_finish_type_ = 0;
  car_run_error_whether_check_ = true;
  car_run_error_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_error_deduction_ = 0;
  car_dd_head_right_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_dd_head_more_50cm_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_dd_head_more_50cm_deduction_ = 0;
  car_dd_head_not_more_50cm_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_dd_head_not_more_50cm_deduction_ = 0;
  car_dd_carwheel_pressline_deduction_ = 100;
  car_dd_carwheel_pressline_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_dd_right_line_more_30cm_less_50cm_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_dd_right_line_more_30cm_less_50cm_deduction_ = 0;
  car_dd_right_line_more_50cm_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_dd_right_line_more_50cm_deduction_ = 0;
  car_hl_distance_more_30cm_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_hl_distance_more_30cm_deduction_ = 0;
  car_hl_distance_less_30cm_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_hl_distance_less_30cm_deduction_ = 0;
  car_qb_timeout_num_ = 0;
  car_qb_timeout_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_qb_timeout_deduction_ = 0;
  car_pressline_whether_check_ = true;
  car_pressline_deduction_ = 100;
  car_pressline_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_not_staff_command_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_not_staff_command_deduction_ = 0;
  event_check_cking_leftturnlamp_ = NULL;
  in_area_again_ = false;
  event_check_forwarding_rightturnlamp_ = NULL;
  event_check_waitqb_leftturnlamp_ = NULL;
  event_check_waitqb_rightturnlamp_ = NULL;
  event_check_waitqb_handbrake_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleSpqb::~ItemJudgeRuleSpqb() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleSpqb)
  SharedDtor();
}

void ItemJudgeRuleSpqb::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_error_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_dd_head_right_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_dd_head_more_50cm_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_dd_head_not_more_50cm_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_dd_carwheel_pressline_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_dd_right_line_more_30cm_less_50cm_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_dd_right_line_more_50cm_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_hl_distance_more_30cm_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_hl_distance_less_30cm_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_qb_timeout_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_pressline_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_not_staff_command_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_event_check_;
    delete event_check_cking_leftturnlamp_;
    delete event_check_forwarding_rightturnlamp_;
    delete event_check_waitqb_leftturnlamp_;
    delete event_check_waitqb_rightturnlamp_;
    delete event_check_waitqb_handbrake_;
  }
}

void ItemJudgeRuleSpqb::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleSpqb::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleSpqb_descriptor_;
}

const ItemJudgeRuleSpqb& ItemJudgeRuleSpqb::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleSpqb* ItemJudgeRuleSpqb::default_instance_ = NULL;

ItemJudgeRuleSpqb* ItemJudgeRuleSpqb::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleSpqb* n = new ItemJudgeRuleSpqb;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleSpqb::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleSpqb)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeRuleSpqb, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeRuleSpqb*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(judge_points_type_, check_finish_type_);
    if (has_basic_event_check()) {
      if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
    }
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ZR_(car_dd_head_more_50cm_deduction_, car_dd_head_not_more_50cm_deduction_);
    car_run_error_whether_check_ = true;
    if (has_car_run_error_voice()) {
      car_run_error_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_run_error_deduction_ = 0;
    if (has_car_dd_head_right_voice()) {
      car_dd_head_right_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_dd_head_more_50cm_voice()) {
      car_dd_head_more_50cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_dd_head_not_more_50cm_voice()) {
      car_dd_head_not_more_50cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[16 / 32] & 16711680u) {
    ZR_(car_dd_right_line_more_50cm_deduction_, car_hl_distance_more_30cm_deduction_);
    car_dd_carwheel_pressline_deduction_ = 100;
    if (has_car_dd_carwheel_pressline_voice()) {
      car_dd_carwheel_pressline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_dd_right_line_more_30cm_less_50cm_voice()) {
      car_dd_right_line_more_30cm_less_50cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_dd_right_line_more_30cm_less_50cm_deduction_ = 0;
    if (has_car_dd_right_line_more_50cm_voice()) {
      car_dd_right_line_more_50cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_hl_distance_more_30cm_voice()) {
      car_hl_distance_more_30cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    ZR_(car_qb_timeout_num_, car_qb_timeout_deduction_);
    if (has_car_hl_distance_less_30cm_voice()) {
      car_hl_distance_less_30cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_hl_distance_less_30cm_deduction_ = 0;
    if (has_car_qb_timeout_voice()) {
      car_qb_timeout_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_pressline_whether_check_ = true;
    car_pressline_deduction_ = 100;
    if (has_car_pressline_voice()) {
      car_pressline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[32 / 32] & 255u) {
    if (has_car_run_not_staff_command_voice()) {
      car_run_not_staff_command_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_run_not_staff_command_deduction_ = 0;
    if (has_event_check_cking_leftturnlamp()) {
      if (event_check_cking_leftturnlamp_ != NULL) event_check_cking_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    in_area_again_ = false;
    if (has_event_check_forwarding_rightturnlamp()) {
      if (event_check_forwarding_rightturnlamp_ != NULL) event_check_forwarding_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
    if (has_event_check_waitqb_leftturnlamp()) {
      if (event_check_waitqb_leftturnlamp_ != NULL) event_check_waitqb_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_event_check_waitqb_rightturnlamp()) {
      if (event_check_waitqb_rightturnlamp_ != NULL) event_check_waitqb_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
    if (has_event_check_waitqb_handbrake()) {
      if (event_check_waitqb_handbrake_ != NULL) event_check_waitqb_handbrake_->::OPMessage::BasicHandBrake::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleSpqb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleSpqb)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_event_check()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_enter_voice;
        break;
      }

      // optional string item_enter_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_enter_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_judge_points_type;
        break;
      }

      // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
      case 6: {
        if (tag == 48) {
         parse_judge_points_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::enum_judge_points_IsValid(value)) {
            set_judge_points_type(static_cast< ::OPMessage::enum_judge_points >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_check_start_type;
        break;
      }

      // optional .OPMessage.CheckStartCarPositionSpqb check_start_type = 7;
      case 7: {
        if (tag == 56) {
         parse_check_start_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckStartCarPositionSpqb_IsValid(value)) {
            set_check_start_type(static_cast< ::OPMessage::CheckStartCarPositionSpqb >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionSpqb check_finish_type = 8;
      case 8: {
        if (tag == 64) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionSpqb_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionSpqb >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_car_run_error_whether_check;
        break;
      }

      // optional bool car_run_error_whether_check = 9 [default = true];
      case 9: {
        if (tag == 72) {
         parse_car_run_error_whether_check:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &car_run_error_whether_check_)));
          set_has_car_run_error_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_car_run_error_voice;
        break;
      }

      // optional string car_run_error_voice = 10;
      case 10: {
        if (tag == 82) {
         parse_car_run_error_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_error_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_error_voice().data(), this->car_run_error_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.car_run_error_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_car_run_error_deduction;
        break;
      }

      // optional int32 car_run_error_deduction = 11;
      case 11: {
        if (tag == 88) {
         parse_car_run_error_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_error_deduction_)));
          set_has_car_run_error_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_car_dd_head_right_voice;
        break;
      }

      // optional string car_dd_head_right_voice = 12;
      case 12: {
        if (tag == 98) {
         parse_car_dd_head_right_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_dd_head_right_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_dd_head_right_voice().data(), this->car_dd_head_right_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_car_dd_head_more_50cm_voice;
        break;
      }

      // optional string car_dd_head_more_50cm_voice = 13;
      case 13: {
        if (tag == 106) {
         parse_car_dd_head_more_50cm_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_dd_head_more_50cm_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_dd_head_more_50cm_voice().data(), this->car_dd_head_more_50cm_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_car_dd_head_more_50cm_deduction;
        break;
      }

      // optional int32 car_dd_head_more_50cm_deduction = 14;
      case 14: {
        if (tag == 112) {
         parse_car_dd_head_more_50cm_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_dd_head_more_50cm_deduction_)));
          set_has_car_dd_head_more_50cm_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_car_dd_head_not_more_50cm_voice;
        break;
      }

      // optional string car_dd_head_not_more_50cm_voice = 15;
      case 15: {
        if (tag == 122) {
         parse_car_dd_head_not_more_50cm_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_dd_head_not_more_50cm_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_dd_head_not_more_50cm_voice().data(), this->car_dd_head_not_more_50cm_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_car_dd_head_not_more_50cm_deduction;
        break;
      }

      // optional int32 car_dd_head_not_more_50cm_deduction = 16;
      case 16: {
        if (tag == 128) {
         parse_car_dd_head_not_more_50cm_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_dd_head_not_more_50cm_deduction_)));
          set_has_car_dd_head_not_more_50cm_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_car_dd_carWheel_PressLine_deduction;
        break;
      }

      // optional int32 car_dd_carWheel_PressLine_deduction = 17 [default = 100];
      case 17: {
        if (tag == 136) {
         parse_car_dd_carWheel_PressLine_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_dd_carwheel_pressline_deduction_)));
          set_has_car_dd_carwheel_pressline_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_car_dd_carWheel_PressLine_voice;
        break;
      }

      // optional string car_dd_carWheel_PressLine_voice = 18;
      case 18: {
        if (tag == 146) {
         parse_car_dd_carWheel_PressLine_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_dd_carwheel_pressline_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_dd_carwheel_pressline_voice().data(), this->car_dd_carwheel_pressline_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_car_dd_right_line_more_30cm_less_50cm_voice;
        break;
      }

      // optional string car_dd_right_line_more_30cm_less_50cm_voice = 19;
      case 19: {
        if (tag == 154) {
         parse_car_dd_right_line_more_30cm_less_50cm_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_dd_right_line_more_30cm_less_50cm_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_dd_right_line_more_30cm_less_50cm_voice().data(), this->car_dd_right_line_more_30cm_less_50cm_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_car_dd_right_line_more_30cm_less_50cm_deduction;
        break;
      }

      // optional int32 car_dd_right_line_more_30cm_less_50cm_deduction = 20;
      case 20: {
        if (tag == 160) {
         parse_car_dd_right_line_more_30cm_less_50cm_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_dd_right_line_more_30cm_less_50cm_deduction_)));
          set_has_car_dd_right_line_more_30cm_less_50cm_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_car_dd_right_line_more_50cm_voice;
        break;
      }

      // optional string car_dd_right_line_more_50cm_voice = 21;
      case 21: {
        if (tag == 170) {
         parse_car_dd_right_line_more_50cm_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_dd_right_line_more_50cm_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_dd_right_line_more_50cm_voice().data(), this->car_dd_right_line_more_50cm_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(176)) goto parse_car_dd_right_line_more_50cm_deduction;
        break;
      }

      // optional int32 car_dd_right_line_more_50cm_deduction = 22;
      case 22: {
        if (tag == 176) {
         parse_car_dd_right_line_more_50cm_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_dd_right_line_more_50cm_deduction_)));
          set_has_car_dd_right_line_more_50cm_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_car_hl_distance_more_30cm_voice;
        break;
      }

      // optional string car_hl_distance_more_30cm_voice = 23;
      case 23: {
        if (tag == 186) {
         parse_car_hl_distance_more_30cm_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_hl_distance_more_30cm_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_hl_distance_more_30cm_voice().data(), this->car_hl_distance_more_30cm_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_car_hl_distance_more_30cm_deduction;
        break;
      }

      // optional int32 car_hl_distance_more_30cm_deduction = 24;
      case 24: {
        if (tag == 192) {
         parse_car_hl_distance_more_30cm_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_hl_distance_more_30cm_deduction_)));
          set_has_car_hl_distance_more_30cm_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_car_hl_distance_less_30cm_voice;
        break;
      }

      // optional string car_hl_distance_less_30cm_voice = 25;
      case 25: {
        if (tag == 202) {
         parse_car_hl_distance_less_30cm_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_hl_distance_less_30cm_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_hl_distance_less_30cm_voice().data(), this->car_hl_distance_less_30cm_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_car_hl_distance_less_30cm_deduction;
        break;
      }

      // optional int32 car_hl_distance_less_30cm_deduction = 26;
      case 26: {
        if (tag == 208) {
         parse_car_hl_distance_less_30cm_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_hl_distance_less_30cm_deduction_)));
          set_has_car_hl_distance_less_30cm_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_car_qb_timeout_num;
        break;
      }

      // optional int32 car_qb_timeout_num = 27;
      case 27: {
        if (tag == 216) {
         parse_car_qb_timeout_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_qb_timeout_num_)));
          set_has_car_qb_timeout_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_car_qb_timeout_voice;
        break;
      }

      // optional string car_qb_timeout_voice = 28;
      case 28: {
        if (tag == 226) {
         parse_car_qb_timeout_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_qb_timeout_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_qb_timeout_voice().data(), this->car_qb_timeout_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(232)) goto parse_car_qb_timeout_deduction;
        break;
      }

      // optional int32 car_qb_timeout_deduction = 29;
      case 29: {
        if (tag == 232) {
         parse_car_qb_timeout_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_qb_timeout_deduction_)));
          set_has_car_qb_timeout_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(240)) goto parse_car_PressLine_whether_check;
        break;
      }

      // optional bool car_PressLine_whether_check = 30 [default = true];
      case 30: {
        if (tag == 240) {
         parse_car_PressLine_whether_check:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &car_pressline_whether_check_)));
          set_has_car_pressline_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(248)) goto parse_car_PressLine_deduction;
        break;
      }

      // optional int32 car_PressLine_deduction = 31 [default = 100];
      case 31: {
        if (tag == 248) {
         parse_car_PressLine_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_pressline_deduction_)));
          set_has_car_pressline_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(258)) goto parse_car_PressLine_voice;
        break;
      }

      // optional string car_PressLine_voice = 32;
      case 32: {
        if (tag == 258) {
         parse_car_PressLine_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_pressline_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_pressline_voice().data(), this->car_pressline_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(266)) goto parse_car_run_not_staff_command_voice;
        break;
      }

      // optional string car_run_not_staff_command_voice = 33;
      case 33: {
        if (tag == 266) {
         parse_car_run_not_staff_command_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_not_staff_command_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_not_staff_command_voice().data(), this->car_run_not_staff_command_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(272)) goto parse_car_run_not_staff_command_deduction;
        break;
      }

      // optional int32 car_run_not_staff_command_deduction = 34;
      case 34: {
        if (tag == 272) {
         parse_car_run_not_staff_command_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_not_staff_command_deduction_)));
          set_has_car_run_not_staff_command_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(282)) goto parse_event_check_cking_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 35;
      case 35: {
        if (tag == 282) {
         parse_event_check_cking_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_cking_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(288)) goto parse_in_area_again;
        break;
      }

      // optional bool in_area_again = 36 [default = false];
      case 36: {
        if (tag == 288) {
         parse_in_area_again:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_area_again_)));
          set_has_in_area_again();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(298)) goto parse_event_check_forwarding_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 37;
      case 37: {
        if (tag == 298) {
         parse_event_check_forwarding_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_forwarding_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(306)) goto parse_event_check_waitqb_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp event_check_waitqb_leftTurnLamp = 38;
      case 38: {
        if (tag == 306) {
         parse_event_check_waitqb_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_waitqb_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(314)) goto parse_event_check_waitqb_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_waitqb_rightTurnLamp = 39;
      case 39: {
        if (tag == 314) {
         parse_event_check_waitqb_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_waitqb_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(322)) goto parse_event_check_waitqb_handBrake;
        break;
      }

      // optional .OPMessage.BasicHandBrake event_check_waitqb_handBrake = 40;
      case 40: {
        if (tag == 322) {
         parse_event_check_waitqb_handBrake:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_waitqb_handbrake()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleSpqb)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleSpqb)
  return false;
#undef DO_
}

void ItemJudgeRuleSpqb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleSpqb)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basic_event_check_, output);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->item_end_voice(), output);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->judge_points_type(), output);
  }

  // optional .OPMessage.CheckStartCarPositionSpqb check_start_type = 7;
  if (has_check_start_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->check_start_type(), output);
  }

  // optional .OPMessage.CheckFinishCarPositionSpqb check_finish_type = 8;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->check_finish_type(), output);
  }

  // optional bool car_run_error_whether_check = 9 [default = true];
  if (has_car_run_error_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->car_run_error_whether_check(), output);
  }

  // optional string car_run_error_voice = 10;
  if (has_car_run_error_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_error_voice().data(), this->car_run_error_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_run_error_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->car_run_error_voice(), output);
  }

  // optional int32 car_run_error_deduction = 11;
  if (has_car_run_error_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->car_run_error_deduction(), output);
  }

  // optional string car_dd_head_right_voice = 12;
  if (has_car_dd_head_right_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_dd_head_right_voice().data(), this->car_dd_head_right_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->car_dd_head_right_voice(), output);
  }

  // optional string car_dd_head_more_50cm_voice = 13;
  if (has_car_dd_head_more_50cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_dd_head_more_50cm_voice().data(), this->car_dd_head_more_50cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->car_dd_head_more_50cm_voice(), output);
  }

  // optional int32 car_dd_head_more_50cm_deduction = 14;
  if (has_car_dd_head_more_50cm_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->car_dd_head_more_50cm_deduction(), output);
  }

  // optional string car_dd_head_not_more_50cm_voice = 15;
  if (has_car_dd_head_not_more_50cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_dd_head_not_more_50cm_voice().data(), this->car_dd_head_not_more_50cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->car_dd_head_not_more_50cm_voice(), output);
  }

  // optional int32 car_dd_head_not_more_50cm_deduction = 16;
  if (has_car_dd_head_not_more_50cm_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->car_dd_head_not_more_50cm_deduction(), output);
  }

  // optional int32 car_dd_carWheel_PressLine_deduction = 17 [default = 100];
  if (has_car_dd_carwheel_pressline_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->car_dd_carwheel_pressline_deduction(), output);
  }

  // optional string car_dd_carWheel_PressLine_voice = 18;
  if (has_car_dd_carwheel_pressline_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_dd_carwheel_pressline_voice().data(), this->car_dd_carwheel_pressline_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->car_dd_carwheel_pressline_voice(), output);
  }

  // optional string car_dd_right_line_more_30cm_less_50cm_voice = 19;
  if (has_car_dd_right_line_more_30cm_less_50cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_dd_right_line_more_30cm_less_50cm_voice().data(), this->car_dd_right_line_more_30cm_less_50cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->car_dd_right_line_more_30cm_less_50cm_voice(), output);
  }

  // optional int32 car_dd_right_line_more_30cm_less_50cm_deduction = 20;
  if (has_car_dd_right_line_more_30cm_less_50cm_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->car_dd_right_line_more_30cm_less_50cm_deduction(), output);
  }

  // optional string car_dd_right_line_more_50cm_voice = 21;
  if (has_car_dd_right_line_more_50cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_dd_right_line_more_50cm_voice().data(), this->car_dd_right_line_more_50cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->car_dd_right_line_more_50cm_voice(), output);
  }

  // optional int32 car_dd_right_line_more_50cm_deduction = 22;
  if (has_car_dd_right_line_more_50cm_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->car_dd_right_line_more_50cm_deduction(), output);
  }

  // optional string car_hl_distance_more_30cm_voice = 23;
  if (has_car_hl_distance_more_30cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_hl_distance_more_30cm_voice().data(), this->car_hl_distance_more_30cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->car_hl_distance_more_30cm_voice(), output);
  }

  // optional int32 car_hl_distance_more_30cm_deduction = 24;
  if (has_car_hl_distance_more_30cm_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->car_hl_distance_more_30cm_deduction(), output);
  }

  // optional string car_hl_distance_less_30cm_voice = 25;
  if (has_car_hl_distance_less_30cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_hl_distance_less_30cm_voice().data(), this->car_hl_distance_less_30cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->car_hl_distance_less_30cm_voice(), output);
  }

  // optional int32 car_hl_distance_less_30cm_deduction = 26;
  if (has_car_hl_distance_less_30cm_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->car_hl_distance_less_30cm_deduction(), output);
  }

  // optional int32 car_qb_timeout_num = 27;
  if (has_car_qb_timeout_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->car_qb_timeout_num(), output);
  }

  // optional string car_qb_timeout_voice = 28;
  if (has_car_qb_timeout_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_qb_timeout_voice().data(), this->car_qb_timeout_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->car_qb_timeout_voice(), output);
  }

  // optional int32 car_qb_timeout_deduction = 29;
  if (has_car_qb_timeout_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->car_qb_timeout_deduction(), output);
  }

  // optional bool car_PressLine_whether_check = 30 [default = true];
  if (has_car_pressline_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(30, this->car_pressline_whether_check(), output);
  }

  // optional int32 car_PressLine_deduction = 31 [default = 100];
  if (has_car_pressline_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->car_pressline_deduction(), output);
  }

  // optional string car_PressLine_voice = 32;
  if (has_car_pressline_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_pressline_voice().data(), this->car_pressline_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      32, this->car_pressline_voice(), output);
  }

  // optional string car_run_not_staff_command_voice = 33;
  if (has_car_run_not_staff_command_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_not_staff_command_voice().data(), this->car_run_not_staff_command_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->car_run_not_staff_command_voice(), output);
  }

  // optional int32 car_run_not_staff_command_deduction = 34;
  if (has_car_run_not_staff_command_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->car_run_not_staff_command_deduction(), output);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 35;
  if (has_event_check_cking_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, *this->event_check_cking_leftturnlamp_, output);
  }

  // optional bool in_area_again = 36 [default = false];
  if (has_in_area_again()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(36, this->in_area_again(), output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 37;
  if (has_event_check_forwarding_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, *this->event_check_forwarding_rightturnlamp_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_waitqb_leftTurnLamp = 38;
  if (has_event_check_waitqb_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, *this->event_check_waitqb_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_waitqb_rightTurnLamp = 39;
  if (has_event_check_waitqb_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, *this->event_check_waitqb_rightturnlamp_, output);
  }

  // optional .OPMessage.BasicHandBrake event_check_waitqb_handBrake = 40;
  if (has_event_check_waitqb_handbrake()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, *this->event_check_waitqb_handbrake_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleSpqb)
}

::google::protobuf::uint8* ItemJudgeRuleSpqb::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleSpqb)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basic_event_check_, false, target);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->item_end_voice(), target);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->judge_points_type(), target);
  }

  // optional .OPMessage.CheckStartCarPositionSpqb check_start_type = 7;
  if (has_check_start_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->check_start_type(), target);
  }

  // optional .OPMessage.CheckFinishCarPositionSpqb check_finish_type = 8;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->check_finish_type(), target);
  }

  // optional bool car_run_error_whether_check = 9 [default = true];
  if (has_car_run_error_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->car_run_error_whether_check(), target);
  }

  // optional string car_run_error_voice = 10;
  if (has_car_run_error_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_error_voice().data(), this->car_run_error_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_run_error_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->car_run_error_voice(), target);
  }

  // optional int32 car_run_error_deduction = 11;
  if (has_car_run_error_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->car_run_error_deduction(), target);
  }

  // optional string car_dd_head_right_voice = 12;
  if (has_car_dd_head_right_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_dd_head_right_voice().data(), this->car_dd_head_right_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->car_dd_head_right_voice(), target);
  }

  // optional string car_dd_head_more_50cm_voice = 13;
  if (has_car_dd_head_more_50cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_dd_head_more_50cm_voice().data(), this->car_dd_head_more_50cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->car_dd_head_more_50cm_voice(), target);
  }

  // optional int32 car_dd_head_more_50cm_deduction = 14;
  if (has_car_dd_head_more_50cm_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->car_dd_head_more_50cm_deduction(), target);
  }

  // optional string car_dd_head_not_more_50cm_voice = 15;
  if (has_car_dd_head_not_more_50cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_dd_head_not_more_50cm_voice().data(), this->car_dd_head_not_more_50cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->car_dd_head_not_more_50cm_voice(), target);
  }

  // optional int32 car_dd_head_not_more_50cm_deduction = 16;
  if (has_car_dd_head_not_more_50cm_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->car_dd_head_not_more_50cm_deduction(), target);
  }

  // optional int32 car_dd_carWheel_PressLine_deduction = 17 [default = 100];
  if (has_car_dd_carwheel_pressline_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->car_dd_carwheel_pressline_deduction(), target);
  }

  // optional string car_dd_carWheel_PressLine_voice = 18;
  if (has_car_dd_carwheel_pressline_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_dd_carwheel_pressline_voice().data(), this->car_dd_carwheel_pressline_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->car_dd_carwheel_pressline_voice(), target);
  }

  // optional string car_dd_right_line_more_30cm_less_50cm_voice = 19;
  if (has_car_dd_right_line_more_30cm_less_50cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_dd_right_line_more_30cm_less_50cm_voice().data(), this->car_dd_right_line_more_30cm_less_50cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->car_dd_right_line_more_30cm_less_50cm_voice(), target);
  }

  // optional int32 car_dd_right_line_more_30cm_less_50cm_deduction = 20;
  if (has_car_dd_right_line_more_30cm_less_50cm_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->car_dd_right_line_more_30cm_less_50cm_deduction(), target);
  }

  // optional string car_dd_right_line_more_50cm_voice = 21;
  if (has_car_dd_right_line_more_50cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_dd_right_line_more_50cm_voice().data(), this->car_dd_right_line_more_50cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->car_dd_right_line_more_50cm_voice(), target);
  }

  // optional int32 car_dd_right_line_more_50cm_deduction = 22;
  if (has_car_dd_right_line_more_50cm_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->car_dd_right_line_more_50cm_deduction(), target);
  }

  // optional string car_hl_distance_more_30cm_voice = 23;
  if (has_car_hl_distance_more_30cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_hl_distance_more_30cm_voice().data(), this->car_hl_distance_more_30cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->car_hl_distance_more_30cm_voice(), target);
  }

  // optional int32 car_hl_distance_more_30cm_deduction = 24;
  if (has_car_hl_distance_more_30cm_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->car_hl_distance_more_30cm_deduction(), target);
  }

  // optional string car_hl_distance_less_30cm_voice = 25;
  if (has_car_hl_distance_less_30cm_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_hl_distance_less_30cm_voice().data(), this->car_hl_distance_less_30cm_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->car_hl_distance_less_30cm_voice(), target);
  }

  // optional int32 car_hl_distance_less_30cm_deduction = 26;
  if (has_car_hl_distance_less_30cm_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->car_hl_distance_less_30cm_deduction(), target);
  }

  // optional int32 car_qb_timeout_num = 27;
  if (has_car_qb_timeout_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->car_qb_timeout_num(), target);
  }

  // optional string car_qb_timeout_voice = 28;
  if (has_car_qb_timeout_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_qb_timeout_voice().data(), this->car_qb_timeout_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->car_qb_timeout_voice(), target);
  }

  // optional int32 car_qb_timeout_deduction = 29;
  if (has_car_qb_timeout_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->car_qb_timeout_deduction(), target);
  }

  // optional bool car_PressLine_whether_check = 30 [default = true];
  if (has_car_pressline_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(30, this->car_pressline_whether_check(), target);
  }

  // optional int32 car_PressLine_deduction = 31 [default = 100];
  if (has_car_pressline_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->car_pressline_deduction(), target);
  }

  // optional string car_PressLine_voice = 32;
  if (has_car_pressline_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_pressline_voice().data(), this->car_pressline_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->car_pressline_voice(), target);
  }

  // optional string car_run_not_staff_command_voice = 33;
  if (has_car_run_not_staff_command_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_not_staff_command_voice().data(), this->car_run_not_staff_command_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->car_run_not_staff_command_voice(), target);
  }

  // optional int32 car_run_not_staff_command_deduction = 34;
  if (has_car_run_not_staff_command_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->car_run_not_staff_command_deduction(), target);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 35;
  if (has_event_check_cking_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        35, *this->event_check_cking_leftturnlamp_, false, target);
  }

  // optional bool in_area_again = 36 [default = false];
  if (has_in_area_again()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(36, this->in_area_again(), target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 37;
  if (has_event_check_forwarding_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        37, *this->event_check_forwarding_rightturnlamp_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_waitqb_leftTurnLamp = 38;
  if (has_event_check_waitqb_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        38, *this->event_check_waitqb_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_waitqb_rightTurnLamp = 39;
  if (has_event_check_waitqb_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        39, *this->event_check_waitqb_rightturnlamp_, false, target);
  }

  // optional .OPMessage.BasicHandBrake event_check_waitqb_handBrake = 40;
  if (has_event_check_waitqb_handbrake()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        40, *this->event_check_waitqb_handbrake_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleSpqb)
  return target;
}

int ItemJudgeRuleSpqb::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleSpqb)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
    if (has_basic_event_check()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_event_check_);
    }

    // optional string item_enter_voice = 2;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 3;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 4;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 5;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
    if (has_judge_points_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->judge_points_type());
    }

    // optional .OPMessage.CheckStartCarPositionSpqb check_start_type = 7;
    if (has_check_start_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_start_type());
    }

    // optional .OPMessage.CheckFinishCarPositionSpqb check_finish_type = 8;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool car_run_error_whether_check = 9 [default = true];
    if (has_car_run_error_whether_check()) {
      total_size += 1 + 1;
    }

    // optional string car_run_error_voice = 10;
    if (has_car_run_error_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_error_voice());
    }

    // optional int32 car_run_error_deduction = 11;
    if (has_car_run_error_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_error_deduction());
    }

    // optional string car_dd_head_right_voice = 12;
    if (has_car_dd_head_right_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_dd_head_right_voice());
    }

    // optional string car_dd_head_more_50cm_voice = 13;
    if (has_car_dd_head_more_50cm_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_dd_head_more_50cm_voice());
    }

    // optional int32 car_dd_head_more_50cm_deduction = 14;
    if (has_car_dd_head_more_50cm_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_dd_head_more_50cm_deduction());
    }

    // optional string car_dd_head_not_more_50cm_voice = 15;
    if (has_car_dd_head_not_more_50cm_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_dd_head_not_more_50cm_voice());
    }

    // optional int32 car_dd_head_not_more_50cm_deduction = 16;
    if (has_car_dd_head_not_more_50cm_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_dd_head_not_more_50cm_deduction());
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional int32 car_dd_carWheel_PressLine_deduction = 17 [default = 100];
    if (has_car_dd_carwheel_pressline_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_dd_carwheel_pressline_deduction());
    }

    // optional string car_dd_carWheel_PressLine_voice = 18;
    if (has_car_dd_carwheel_pressline_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_dd_carwheel_pressline_voice());
    }

    // optional string car_dd_right_line_more_30cm_less_50cm_voice = 19;
    if (has_car_dd_right_line_more_30cm_less_50cm_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_dd_right_line_more_30cm_less_50cm_voice());
    }

    // optional int32 car_dd_right_line_more_30cm_less_50cm_deduction = 20;
    if (has_car_dd_right_line_more_30cm_less_50cm_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_dd_right_line_more_30cm_less_50cm_deduction());
    }

    // optional string car_dd_right_line_more_50cm_voice = 21;
    if (has_car_dd_right_line_more_50cm_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_dd_right_line_more_50cm_voice());
    }

    // optional int32 car_dd_right_line_more_50cm_deduction = 22;
    if (has_car_dd_right_line_more_50cm_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_dd_right_line_more_50cm_deduction());
    }

    // optional string car_hl_distance_more_30cm_voice = 23;
    if (has_car_hl_distance_more_30cm_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_hl_distance_more_30cm_voice());
    }

    // optional int32 car_hl_distance_more_30cm_deduction = 24;
    if (has_car_hl_distance_more_30cm_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_hl_distance_more_30cm_deduction());
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional string car_hl_distance_less_30cm_voice = 25;
    if (has_car_hl_distance_less_30cm_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_hl_distance_less_30cm_voice());
    }

    // optional int32 car_hl_distance_less_30cm_deduction = 26;
    if (has_car_hl_distance_less_30cm_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_hl_distance_less_30cm_deduction());
    }

    // optional int32 car_qb_timeout_num = 27;
    if (has_car_qb_timeout_num()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_qb_timeout_num());
    }

    // optional string car_qb_timeout_voice = 28;
    if (has_car_qb_timeout_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_qb_timeout_voice());
    }

    // optional int32 car_qb_timeout_deduction = 29;
    if (has_car_qb_timeout_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_qb_timeout_deduction());
    }

    // optional bool car_PressLine_whether_check = 30 [default = true];
    if (has_car_pressline_whether_check()) {
      total_size += 2 + 1;
    }

    // optional int32 car_PressLine_deduction = 31 [default = 100];
    if (has_car_pressline_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_pressline_deduction());
    }

    // optional string car_PressLine_voice = 32;
    if (has_car_pressline_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_pressline_voice());
    }

  }
  if (_has_bits_[32 / 32] & 255u) {
    // optional string car_run_not_staff_command_voice = 33;
    if (has_car_run_not_staff_command_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_not_staff_command_voice());
    }

    // optional int32 car_run_not_staff_command_deduction = 34;
    if (has_car_run_not_staff_command_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_not_staff_command_deduction());
    }

    // optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 35;
    if (has_event_check_cking_leftturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_cking_leftturnlamp_);
    }

    // optional bool in_area_again = 36 [default = false];
    if (has_in_area_again()) {
      total_size += 2 + 1;
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 37;
    if (has_event_check_forwarding_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_forwarding_rightturnlamp_);
    }

    // optional .OPMessage.BasicLeftTurnLamp event_check_waitqb_leftTurnLamp = 38;
    if (has_event_check_waitqb_leftturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_waitqb_leftturnlamp_);
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_waitqb_rightTurnLamp = 39;
    if (has_event_check_waitqb_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_waitqb_rightturnlamp_);
    }

    // optional .OPMessage.BasicHandBrake event_check_waitqb_handBrake = 40;
    if (has_event_check_waitqb_handbrake()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_waitqb_handbrake_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleSpqb::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleSpqb)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleSpqb* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleSpqb>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleSpqb)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleSpqb)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleSpqb::MergeFrom(const ItemJudgeRuleSpqb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleSpqb)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_basic_event_check()) {
      mutable_basic_event_check()->::OPMessage::ItemJudgeBasic::MergeFrom(from.basic_event_check());
    }
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_judge_points_type()) {
      set_judge_points_type(from.judge_points_type());
    }
    if (from.has_check_start_type()) {
      set_check_start_type(from.check_start_type());
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_car_run_error_whether_check()) {
      set_car_run_error_whether_check(from.car_run_error_whether_check());
    }
    if (from.has_car_run_error_voice()) {
      set_has_car_run_error_voice();
      car_run_error_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_error_voice_);
    }
    if (from.has_car_run_error_deduction()) {
      set_car_run_error_deduction(from.car_run_error_deduction());
    }
    if (from.has_car_dd_head_right_voice()) {
      set_has_car_dd_head_right_voice();
      car_dd_head_right_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_dd_head_right_voice_);
    }
    if (from.has_car_dd_head_more_50cm_voice()) {
      set_has_car_dd_head_more_50cm_voice();
      car_dd_head_more_50cm_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_dd_head_more_50cm_voice_);
    }
    if (from.has_car_dd_head_more_50cm_deduction()) {
      set_car_dd_head_more_50cm_deduction(from.car_dd_head_more_50cm_deduction());
    }
    if (from.has_car_dd_head_not_more_50cm_voice()) {
      set_has_car_dd_head_not_more_50cm_voice();
      car_dd_head_not_more_50cm_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_dd_head_not_more_50cm_voice_);
    }
    if (from.has_car_dd_head_not_more_50cm_deduction()) {
      set_car_dd_head_not_more_50cm_deduction(from.car_dd_head_not_more_50cm_deduction());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_car_dd_carwheel_pressline_deduction()) {
      set_car_dd_carwheel_pressline_deduction(from.car_dd_carwheel_pressline_deduction());
    }
    if (from.has_car_dd_carwheel_pressline_voice()) {
      set_has_car_dd_carwheel_pressline_voice();
      car_dd_carwheel_pressline_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_dd_carwheel_pressline_voice_);
    }
    if (from.has_car_dd_right_line_more_30cm_less_50cm_voice()) {
      set_has_car_dd_right_line_more_30cm_less_50cm_voice();
      car_dd_right_line_more_30cm_less_50cm_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_dd_right_line_more_30cm_less_50cm_voice_);
    }
    if (from.has_car_dd_right_line_more_30cm_less_50cm_deduction()) {
      set_car_dd_right_line_more_30cm_less_50cm_deduction(from.car_dd_right_line_more_30cm_less_50cm_deduction());
    }
    if (from.has_car_dd_right_line_more_50cm_voice()) {
      set_has_car_dd_right_line_more_50cm_voice();
      car_dd_right_line_more_50cm_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_dd_right_line_more_50cm_voice_);
    }
    if (from.has_car_dd_right_line_more_50cm_deduction()) {
      set_car_dd_right_line_more_50cm_deduction(from.car_dd_right_line_more_50cm_deduction());
    }
    if (from.has_car_hl_distance_more_30cm_voice()) {
      set_has_car_hl_distance_more_30cm_voice();
      car_hl_distance_more_30cm_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_hl_distance_more_30cm_voice_);
    }
    if (from.has_car_hl_distance_more_30cm_deduction()) {
      set_car_hl_distance_more_30cm_deduction(from.car_hl_distance_more_30cm_deduction());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_car_hl_distance_less_30cm_voice()) {
      set_has_car_hl_distance_less_30cm_voice();
      car_hl_distance_less_30cm_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_hl_distance_less_30cm_voice_);
    }
    if (from.has_car_hl_distance_less_30cm_deduction()) {
      set_car_hl_distance_less_30cm_deduction(from.car_hl_distance_less_30cm_deduction());
    }
    if (from.has_car_qb_timeout_num()) {
      set_car_qb_timeout_num(from.car_qb_timeout_num());
    }
    if (from.has_car_qb_timeout_voice()) {
      set_has_car_qb_timeout_voice();
      car_qb_timeout_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_qb_timeout_voice_);
    }
    if (from.has_car_qb_timeout_deduction()) {
      set_car_qb_timeout_deduction(from.car_qb_timeout_deduction());
    }
    if (from.has_car_pressline_whether_check()) {
      set_car_pressline_whether_check(from.car_pressline_whether_check());
    }
    if (from.has_car_pressline_deduction()) {
      set_car_pressline_deduction(from.car_pressline_deduction());
    }
    if (from.has_car_pressline_voice()) {
      set_has_car_pressline_voice();
      car_pressline_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_pressline_voice_);
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_car_run_not_staff_command_voice()) {
      set_has_car_run_not_staff_command_voice();
      car_run_not_staff_command_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_not_staff_command_voice_);
    }
    if (from.has_car_run_not_staff_command_deduction()) {
      set_car_run_not_staff_command_deduction(from.car_run_not_staff_command_deduction());
    }
    if (from.has_event_check_cking_leftturnlamp()) {
      mutable_event_check_cking_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.event_check_cking_leftturnlamp());
    }
    if (from.has_in_area_again()) {
      set_in_area_again(from.in_area_again());
    }
    if (from.has_event_check_forwarding_rightturnlamp()) {
      mutable_event_check_forwarding_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_forwarding_rightturnlamp());
    }
    if (from.has_event_check_waitqb_leftturnlamp()) {
      mutable_event_check_waitqb_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.event_check_waitqb_leftturnlamp());
    }
    if (from.has_event_check_waitqb_rightturnlamp()) {
      mutable_event_check_waitqb_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_waitqb_rightturnlamp());
    }
    if (from.has_event_check_waitqb_handbrake()) {
      mutable_event_check_waitqb_handbrake()->::OPMessage::BasicHandBrake::MergeFrom(from.event_check_waitqb_handbrake());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleSpqb::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleSpqb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleSpqb::CopyFrom(const ItemJudgeRuleSpqb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleSpqb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleSpqb::IsInitialized() const {

  return true;
}

void ItemJudgeRuleSpqb::Swap(ItemJudgeRuleSpqb* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleSpqb::InternalSwap(ItemJudgeRuleSpqb* other) {
  std::swap(basic_event_check_, other->basic_event_check_);
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(judge_points_type_, other->judge_points_type_);
  std::swap(check_start_type_, other->check_start_type_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(car_run_error_whether_check_, other->car_run_error_whether_check_);
  car_run_error_voice_.Swap(&other->car_run_error_voice_);
  std::swap(car_run_error_deduction_, other->car_run_error_deduction_);
  car_dd_head_right_voice_.Swap(&other->car_dd_head_right_voice_);
  car_dd_head_more_50cm_voice_.Swap(&other->car_dd_head_more_50cm_voice_);
  std::swap(car_dd_head_more_50cm_deduction_, other->car_dd_head_more_50cm_deduction_);
  car_dd_head_not_more_50cm_voice_.Swap(&other->car_dd_head_not_more_50cm_voice_);
  std::swap(car_dd_head_not_more_50cm_deduction_, other->car_dd_head_not_more_50cm_deduction_);
  std::swap(car_dd_carwheel_pressline_deduction_, other->car_dd_carwheel_pressline_deduction_);
  car_dd_carwheel_pressline_voice_.Swap(&other->car_dd_carwheel_pressline_voice_);
  car_dd_right_line_more_30cm_less_50cm_voice_.Swap(&other->car_dd_right_line_more_30cm_less_50cm_voice_);
  std::swap(car_dd_right_line_more_30cm_less_50cm_deduction_, other->car_dd_right_line_more_30cm_less_50cm_deduction_);
  car_dd_right_line_more_50cm_voice_.Swap(&other->car_dd_right_line_more_50cm_voice_);
  std::swap(car_dd_right_line_more_50cm_deduction_, other->car_dd_right_line_more_50cm_deduction_);
  car_hl_distance_more_30cm_voice_.Swap(&other->car_hl_distance_more_30cm_voice_);
  std::swap(car_hl_distance_more_30cm_deduction_, other->car_hl_distance_more_30cm_deduction_);
  car_hl_distance_less_30cm_voice_.Swap(&other->car_hl_distance_less_30cm_voice_);
  std::swap(car_hl_distance_less_30cm_deduction_, other->car_hl_distance_less_30cm_deduction_);
  std::swap(car_qb_timeout_num_, other->car_qb_timeout_num_);
  car_qb_timeout_voice_.Swap(&other->car_qb_timeout_voice_);
  std::swap(car_qb_timeout_deduction_, other->car_qb_timeout_deduction_);
  std::swap(car_pressline_whether_check_, other->car_pressline_whether_check_);
  std::swap(car_pressline_deduction_, other->car_pressline_deduction_);
  car_pressline_voice_.Swap(&other->car_pressline_voice_);
  car_run_not_staff_command_voice_.Swap(&other->car_run_not_staff_command_voice_);
  std::swap(car_run_not_staff_command_deduction_, other->car_run_not_staff_command_deduction_);
  std::swap(event_check_cking_leftturnlamp_, other->event_check_cking_leftturnlamp_);
  std::swap(in_area_again_, other->in_area_again_);
  std::swap(event_check_forwarding_rightturnlamp_, other->event_check_forwarding_rightturnlamp_);
  std::swap(event_check_waitqb_leftturnlamp_, other->event_check_waitqb_leftturnlamp_);
  std::swap(event_check_waitqb_rightturnlamp_, other->event_check_waitqb_rightturnlamp_);
  std::swap(event_check_waitqb_handbrake_, other->event_check_waitqb_handbrake_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  std::swap(_has_bits_[1], other->_has_bits_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleSpqb::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleSpqb_descriptor_;
  metadata.reflection = ItemJudgeRuleSpqb_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleSpqb

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
bool ItemJudgeRuleSpqb::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleSpqb::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleSpqb::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleSpqb::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleSpqb::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleSpqb::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.basic_event_check)
  return basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleSpqb::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
void ItemJudgeRuleSpqb::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.basic_event_check)
}

// optional string item_enter_voice = 2;
bool ItemJudgeRuleSpqb::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleSpqb::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleSpqb::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleSpqb::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
}
 void ItemJudgeRuleSpqb::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
}
 void ItemJudgeRuleSpqb::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.item_enter_voice)
}

// optional string item_leave_voice = 3;
bool ItemJudgeRuleSpqb::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleSpqb::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleSpqb::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleSpqb::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
}
 void ItemJudgeRuleSpqb::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
}
 void ItemJudgeRuleSpqb::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.item_leave_voice)
}

// optional string item_start_voice = 4;
bool ItemJudgeRuleSpqb::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleSpqb::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleSpqb::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleSpqb::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
}
 void ItemJudgeRuleSpqb::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
}
 void ItemJudgeRuleSpqb::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.item_start_voice)
}

// optional string item_end_voice = 5;
bool ItemJudgeRuleSpqb::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleSpqb::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleSpqb::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleSpqb::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
}
 void ItemJudgeRuleSpqb::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
}
 void ItemJudgeRuleSpqb::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
bool ItemJudgeRuleSpqb::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleSpqb::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleSpqb::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleSpqb::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
 ::OPMessage::enum_judge_points ItemJudgeRuleSpqb::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
 void ItemJudgeRuleSpqb::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.judge_points_type)
}

// optional .OPMessage.CheckStartCarPositionSpqb check_start_type = 7;
bool ItemJudgeRuleSpqb::has_check_start_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleSpqb::set_has_check_start_type() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleSpqb::clear_has_check_start_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleSpqb::clear_check_start_type() {
  check_start_type_ = 0;
  clear_has_check_start_type();
}
 ::OPMessage::CheckStartCarPositionSpqb ItemJudgeRuleSpqb::check_start_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.check_start_type)
  return static_cast< ::OPMessage::CheckStartCarPositionSpqb >(check_start_type_);
}
 void ItemJudgeRuleSpqb::set_check_start_type(::OPMessage::CheckStartCarPositionSpqb value) {
  assert(::OPMessage::CheckStartCarPositionSpqb_IsValid(value));
  set_has_check_start_type();
  check_start_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.check_start_type)
}

// optional .OPMessage.CheckFinishCarPositionSpqb check_finish_type = 8;
bool ItemJudgeRuleSpqb::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeRuleSpqb::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeRuleSpqb::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeRuleSpqb::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionSpqb ItemJudgeRuleSpqb::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionSpqb >(check_finish_type_);
}
 void ItemJudgeRuleSpqb::set_check_finish_type(::OPMessage::CheckFinishCarPositionSpqb value) {
  assert(::OPMessage::CheckFinishCarPositionSpqb_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.check_finish_type)
}

// optional bool car_run_error_whether_check = 9 [default = true];
bool ItemJudgeRuleSpqb::has_car_run_error_whether_check() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_run_error_whether_check() {
  _has_bits_[0] |= 0x00000100u;
}
void ItemJudgeRuleSpqb::clear_has_car_run_error_whether_check() {
  _has_bits_[0] &= ~0x00000100u;
}
void ItemJudgeRuleSpqb::clear_car_run_error_whether_check() {
  car_run_error_whether_check_ = true;
  clear_has_car_run_error_whether_check();
}
 bool ItemJudgeRuleSpqb::car_run_error_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_run_error_whether_check)
  return car_run_error_whether_check_;
}
 void ItemJudgeRuleSpqb::set_car_run_error_whether_check(bool value) {
  set_has_car_run_error_whether_check();
  car_run_error_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_run_error_whether_check)
}

// optional string car_run_error_voice = 10;
bool ItemJudgeRuleSpqb::has_car_run_error_voice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_run_error_voice() {
  _has_bits_[0] |= 0x00000200u;
}
void ItemJudgeRuleSpqb::clear_has_car_run_error_voice() {
  _has_bits_[0] &= ~0x00000200u;
}
void ItemJudgeRuleSpqb::clear_car_run_error_voice() {
  car_run_error_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_error_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::car_run_error_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
  return car_run_error_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_car_run_error_voice(const ::std::string& value) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
}
 void ItemJudgeRuleSpqb::set_car_run_error_voice(const char* value) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
}
 void ItemJudgeRuleSpqb::set_car_run_error_voice(const char* value, size_t size) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_car_run_error_voice() {
  set_has_car_run_error_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
  return car_run_error_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_car_run_error_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
  clear_has_car_run_error_voice();
  return car_run_error_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_car_run_error_voice(::std::string* car_run_error_voice) {
  if (car_run_error_voice != NULL) {
    set_has_car_run_error_voice();
  } else {
    clear_has_car_run_error_voice();
  }
  car_run_error_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_error_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_run_error_voice)
}

// optional int32 car_run_error_deduction = 11;
bool ItemJudgeRuleSpqb::has_car_run_error_deduction() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_run_error_deduction() {
  _has_bits_[0] |= 0x00000400u;
}
void ItemJudgeRuleSpqb::clear_has_car_run_error_deduction() {
  _has_bits_[0] &= ~0x00000400u;
}
void ItemJudgeRuleSpqb::clear_car_run_error_deduction() {
  car_run_error_deduction_ = 0;
  clear_has_car_run_error_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleSpqb::car_run_error_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_run_error_deduction)
  return car_run_error_deduction_;
}
 void ItemJudgeRuleSpqb::set_car_run_error_deduction(::google::protobuf::int32 value) {
  set_has_car_run_error_deduction();
  car_run_error_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_run_error_deduction)
}

// optional string car_dd_head_right_voice = 12;
bool ItemJudgeRuleSpqb::has_car_dd_head_right_voice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_dd_head_right_voice() {
  _has_bits_[0] |= 0x00000800u;
}
void ItemJudgeRuleSpqb::clear_has_car_dd_head_right_voice() {
  _has_bits_[0] &= ~0x00000800u;
}
void ItemJudgeRuleSpqb::clear_car_dd_head_right_voice() {
  car_dd_head_right_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_dd_head_right_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::car_dd_head_right_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
  return car_dd_head_right_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_car_dd_head_right_voice(const ::std::string& value) {
  set_has_car_dd_head_right_voice();
  car_dd_head_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
}
 void ItemJudgeRuleSpqb::set_car_dd_head_right_voice(const char* value) {
  set_has_car_dd_head_right_voice();
  car_dd_head_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
}
 void ItemJudgeRuleSpqb::set_car_dd_head_right_voice(const char* value, size_t size) {
  set_has_car_dd_head_right_voice();
  car_dd_head_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_car_dd_head_right_voice() {
  set_has_car_dd_head_right_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
  return car_dd_head_right_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_car_dd_head_right_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
  clear_has_car_dd_head_right_voice();
  return car_dd_head_right_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_car_dd_head_right_voice(::std::string* car_dd_head_right_voice) {
  if (car_dd_head_right_voice != NULL) {
    set_has_car_dd_head_right_voice();
  } else {
    clear_has_car_dd_head_right_voice();
  }
  car_dd_head_right_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_dd_head_right_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_dd_head_right_voice)
}

// optional string car_dd_head_more_50cm_voice = 13;
bool ItemJudgeRuleSpqb::has_car_dd_head_more_50cm_voice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_dd_head_more_50cm_voice() {
  _has_bits_[0] |= 0x00001000u;
}
void ItemJudgeRuleSpqb::clear_has_car_dd_head_more_50cm_voice() {
  _has_bits_[0] &= ~0x00001000u;
}
void ItemJudgeRuleSpqb::clear_car_dd_head_more_50cm_voice() {
  car_dd_head_more_50cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_dd_head_more_50cm_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::car_dd_head_more_50cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
  return car_dd_head_more_50cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_car_dd_head_more_50cm_voice(const ::std::string& value) {
  set_has_car_dd_head_more_50cm_voice();
  car_dd_head_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
}
 void ItemJudgeRuleSpqb::set_car_dd_head_more_50cm_voice(const char* value) {
  set_has_car_dd_head_more_50cm_voice();
  car_dd_head_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
}
 void ItemJudgeRuleSpqb::set_car_dd_head_more_50cm_voice(const char* value, size_t size) {
  set_has_car_dd_head_more_50cm_voice();
  car_dd_head_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_car_dd_head_more_50cm_voice() {
  set_has_car_dd_head_more_50cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
  return car_dd_head_more_50cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_car_dd_head_more_50cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
  clear_has_car_dd_head_more_50cm_voice();
  return car_dd_head_more_50cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_car_dd_head_more_50cm_voice(::std::string* car_dd_head_more_50cm_voice) {
  if (car_dd_head_more_50cm_voice != NULL) {
    set_has_car_dd_head_more_50cm_voice();
  } else {
    clear_has_car_dd_head_more_50cm_voice();
  }
  car_dd_head_more_50cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_dd_head_more_50cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_voice)
}

// optional int32 car_dd_head_more_50cm_deduction = 14;
bool ItemJudgeRuleSpqb::has_car_dd_head_more_50cm_deduction() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_dd_head_more_50cm_deduction() {
  _has_bits_[0] |= 0x00002000u;
}
void ItemJudgeRuleSpqb::clear_has_car_dd_head_more_50cm_deduction() {
  _has_bits_[0] &= ~0x00002000u;
}
void ItemJudgeRuleSpqb::clear_car_dd_head_more_50cm_deduction() {
  car_dd_head_more_50cm_deduction_ = 0;
  clear_has_car_dd_head_more_50cm_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleSpqb::car_dd_head_more_50cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_deduction)
  return car_dd_head_more_50cm_deduction_;
}
 void ItemJudgeRuleSpqb::set_car_dd_head_more_50cm_deduction(::google::protobuf::int32 value) {
  set_has_car_dd_head_more_50cm_deduction();
  car_dd_head_more_50cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_head_more_50cm_deduction)
}

// optional string car_dd_head_not_more_50cm_voice = 15;
bool ItemJudgeRuleSpqb::has_car_dd_head_not_more_50cm_voice() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_dd_head_not_more_50cm_voice() {
  _has_bits_[0] |= 0x00004000u;
}
void ItemJudgeRuleSpqb::clear_has_car_dd_head_not_more_50cm_voice() {
  _has_bits_[0] &= ~0x00004000u;
}
void ItemJudgeRuleSpqb::clear_car_dd_head_not_more_50cm_voice() {
  car_dd_head_not_more_50cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_dd_head_not_more_50cm_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::car_dd_head_not_more_50cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
  return car_dd_head_not_more_50cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_car_dd_head_not_more_50cm_voice(const ::std::string& value) {
  set_has_car_dd_head_not_more_50cm_voice();
  car_dd_head_not_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
}
 void ItemJudgeRuleSpqb::set_car_dd_head_not_more_50cm_voice(const char* value) {
  set_has_car_dd_head_not_more_50cm_voice();
  car_dd_head_not_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
}
 void ItemJudgeRuleSpqb::set_car_dd_head_not_more_50cm_voice(const char* value, size_t size) {
  set_has_car_dd_head_not_more_50cm_voice();
  car_dd_head_not_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_car_dd_head_not_more_50cm_voice() {
  set_has_car_dd_head_not_more_50cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
  return car_dd_head_not_more_50cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_car_dd_head_not_more_50cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
  clear_has_car_dd_head_not_more_50cm_voice();
  return car_dd_head_not_more_50cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_car_dd_head_not_more_50cm_voice(::std::string* car_dd_head_not_more_50cm_voice) {
  if (car_dd_head_not_more_50cm_voice != NULL) {
    set_has_car_dd_head_not_more_50cm_voice();
  } else {
    clear_has_car_dd_head_not_more_50cm_voice();
  }
  car_dd_head_not_more_50cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_dd_head_not_more_50cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_voice)
}

// optional int32 car_dd_head_not_more_50cm_deduction = 16;
bool ItemJudgeRuleSpqb::has_car_dd_head_not_more_50cm_deduction() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_dd_head_not_more_50cm_deduction() {
  _has_bits_[0] |= 0x00008000u;
}
void ItemJudgeRuleSpqb::clear_has_car_dd_head_not_more_50cm_deduction() {
  _has_bits_[0] &= ~0x00008000u;
}
void ItemJudgeRuleSpqb::clear_car_dd_head_not_more_50cm_deduction() {
  car_dd_head_not_more_50cm_deduction_ = 0;
  clear_has_car_dd_head_not_more_50cm_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleSpqb::car_dd_head_not_more_50cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_deduction)
  return car_dd_head_not_more_50cm_deduction_;
}
 void ItemJudgeRuleSpqb::set_car_dd_head_not_more_50cm_deduction(::google::protobuf::int32 value) {
  set_has_car_dd_head_not_more_50cm_deduction();
  car_dd_head_not_more_50cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_head_not_more_50cm_deduction)
}

// optional int32 car_dd_carWheel_PressLine_deduction = 17 [default = 100];
bool ItemJudgeRuleSpqb::has_car_dd_carwheel_pressline_deduction() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_dd_carwheel_pressline_deduction() {
  _has_bits_[0] |= 0x00010000u;
}
void ItemJudgeRuleSpqb::clear_has_car_dd_carwheel_pressline_deduction() {
  _has_bits_[0] &= ~0x00010000u;
}
void ItemJudgeRuleSpqb::clear_car_dd_carwheel_pressline_deduction() {
  car_dd_carwheel_pressline_deduction_ = 100;
  clear_has_car_dd_carwheel_pressline_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleSpqb::car_dd_carwheel_pressline_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_deduction)
  return car_dd_carwheel_pressline_deduction_;
}
 void ItemJudgeRuleSpqb::set_car_dd_carwheel_pressline_deduction(::google::protobuf::int32 value) {
  set_has_car_dd_carwheel_pressline_deduction();
  car_dd_carwheel_pressline_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_deduction)
}

// optional string car_dd_carWheel_PressLine_voice = 18;
bool ItemJudgeRuleSpqb::has_car_dd_carwheel_pressline_voice() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_dd_carwheel_pressline_voice() {
  _has_bits_[0] |= 0x00020000u;
}
void ItemJudgeRuleSpqb::clear_has_car_dd_carwheel_pressline_voice() {
  _has_bits_[0] &= ~0x00020000u;
}
void ItemJudgeRuleSpqb::clear_car_dd_carwheel_pressline_voice() {
  car_dd_carwheel_pressline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_dd_carwheel_pressline_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::car_dd_carwheel_pressline_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
  return car_dd_carwheel_pressline_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_car_dd_carwheel_pressline_voice(const ::std::string& value) {
  set_has_car_dd_carwheel_pressline_voice();
  car_dd_carwheel_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
}
 void ItemJudgeRuleSpqb::set_car_dd_carwheel_pressline_voice(const char* value) {
  set_has_car_dd_carwheel_pressline_voice();
  car_dd_carwheel_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
}
 void ItemJudgeRuleSpqb::set_car_dd_carwheel_pressline_voice(const char* value, size_t size) {
  set_has_car_dd_carwheel_pressline_voice();
  car_dd_carwheel_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_car_dd_carwheel_pressline_voice() {
  set_has_car_dd_carwheel_pressline_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
  return car_dd_carwheel_pressline_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_car_dd_carwheel_pressline_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
  clear_has_car_dd_carwheel_pressline_voice();
  return car_dd_carwheel_pressline_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_car_dd_carwheel_pressline_voice(::std::string* car_dd_carwheel_pressline_voice) {
  if (car_dd_carwheel_pressline_voice != NULL) {
    set_has_car_dd_carwheel_pressline_voice();
  } else {
    clear_has_car_dd_carwheel_pressline_voice();
  }
  car_dd_carwheel_pressline_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_dd_carwheel_pressline_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_dd_carWheel_PressLine_voice)
}

// optional string car_dd_right_line_more_30cm_less_50cm_voice = 19;
bool ItemJudgeRuleSpqb::has_car_dd_right_line_more_30cm_less_50cm_voice() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_dd_right_line_more_30cm_less_50cm_voice() {
  _has_bits_[0] |= 0x00040000u;
}
void ItemJudgeRuleSpqb::clear_has_car_dd_right_line_more_30cm_less_50cm_voice() {
  _has_bits_[0] &= ~0x00040000u;
}
void ItemJudgeRuleSpqb::clear_car_dd_right_line_more_30cm_less_50cm_voice() {
  car_dd_right_line_more_30cm_less_50cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_dd_right_line_more_30cm_less_50cm_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::car_dd_right_line_more_30cm_less_50cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
  return car_dd_right_line_more_30cm_less_50cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_car_dd_right_line_more_30cm_less_50cm_voice(const ::std::string& value) {
  set_has_car_dd_right_line_more_30cm_less_50cm_voice();
  car_dd_right_line_more_30cm_less_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
}
 void ItemJudgeRuleSpqb::set_car_dd_right_line_more_30cm_less_50cm_voice(const char* value) {
  set_has_car_dd_right_line_more_30cm_less_50cm_voice();
  car_dd_right_line_more_30cm_less_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
}
 void ItemJudgeRuleSpqb::set_car_dd_right_line_more_30cm_less_50cm_voice(const char* value, size_t size) {
  set_has_car_dd_right_line_more_30cm_less_50cm_voice();
  car_dd_right_line_more_30cm_less_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_car_dd_right_line_more_30cm_less_50cm_voice() {
  set_has_car_dd_right_line_more_30cm_less_50cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
  return car_dd_right_line_more_30cm_less_50cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_car_dd_right_line_more_30cm_less_50cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
  clear_has_car_dd_right_line_more_30cm_less_50cm_voice();
  return car_dd_right_line_more_30cm_less_50cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_car_dd_right_line_more_30cm_less_50cm_voice(::std::string* car_dd_right_line_more_30cm_less_50cm_voice) {
  if (car_dd_right_line_more_30cm_less_50cm_voice != NULL) {
    set_has_car_dd_right_line_more_30cm_less_50cm_voice();
  } else {
    clear_has_car_dd_right_line_more_30cm_less_50cm_voice();
  }
  car_dd_right_line_more_30cm_less_50cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_dd_right_line_more_30cm_less_50cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_voice)
}

// optional int32 car_dd_right_line_more_30cm_less_50cm_deduction = 20;
bool ItemJudgeRuleSpqb::has_car_dd_right_line_more_30cm_less_50cm_deduction() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_dd_right_line_more_30cm_less_50cm_deduction() {
  _has_bits_[0] |= 0x00080000u;
}
void ItemJudgeRuleSpqb::clear_has_car_dd_right_line_more_30cm_less_50cm_deduction() {
  _has_bits_[0] &= ~0x00080000u;
}
void ItemJudgeRuleSpqb::clear_car_dd_right_line_more_30cm_less_50cm_deduction() {
  car_dd_right_line_more_30cm_less_50cm_deduction_ = 0;
  clear_has_car_dd_right_line_more_30cm_less_50cm_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleSpqb::car_dd_right_line_more_30cm_less_50cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_deduction)
  return car_dd_right_line_more_30cm_less_50cm_deduction_;
}
 void ItemJudgeRuleSpqb::set_car_dd_right_line_more_30cm_less_50cm_deduction(::google::protobuf::int32 value) {
  set_has_car_dd_right_line_more_30cm_less_50cm_deduction();
  car_dd_right_line_more_30cm_less_50cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_30cm_less_50cm_deduction)
}

// optional string car_dd_right_line_more_50cm_voice = 21;
bool ItemJudgeRuleSpqb::has_car_dd_right_line_more_50cm_voice() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_dd_right_line_more_50cm_voice() {
  _has_bits_[0] |= 0x00100000u;
}
void ItemJudgeRuleSpqb::clear_has_car_dd_right_line_more_50cm_voice() {
  _has_bits_[0] &= ~0x00100000u;
}
void ItemJudgeRuleSpqb::clear_car_dd_right_line_more_50cm_voice() {
  car_dd_right_line_more_50cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_dd_right_line_more_50cm_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::car_dd_right_line_more_50cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
  return car_dd_right_line_more_50cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_car_dd_right_line_more_50cm_voice(const ::std::string& value) {
  set_has_car_dd_right_line_more_50cm_voice();
  car_dd_right_line_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
}
 void ItemJudgeRuleSpqb::set_car_dd_right_line_more_50cm_voice(const char* value) {
  set_has_car_dd_right_line_more_50cm_voice();
  car_dd_right_line_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
}
 void ItemJudgeRuleSpqb::set_car_dd_right_line_more_50cm_voice(const char* value, size_t size) {
  set_has_car_dd_right_line_more_50cm_voice();
  car_dd_right_line_more_50cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_car_dd_right_line_more_50cm_voice() {
  set_has_car_dd_right_line_more_50cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
  return car_dd_right_line_more_50cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_car_dd_right_line_more_50cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
  clear_has_car_dd_right_line_more_50cm_voice();
  return car_dd_right_line_more_50cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_car_dd_right_line_more_50cm_voice(::std::string* car_dd_right_line_more_50cm_voice) {
  if (car_dd_right_line_more_50cm_voice != NULL) {
    set_has_car_dd_right_line_more_50cm_voice();
  } else {
    clear_has_car_dd_right_line_more_50cm_voice();
  }
  car_dd_right_line_more_50cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_dd_right_line_more_50cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_voice)
}

// optional int32 car_dd_right_line_more_50cm_deduction = 22;
bool ItemJudgeRuleSpqb::has_car_dd_right_line_more_50cm_deduction() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_dd_right_line_more_50cm_deduction() {
  _has_bits_[0] |= 0x00200000u;
}
void ItemJudgeRuleSpqb::clear_has_car_dd_right_line_more_50cm_deduction() {
  _has_bits_[0] &= ~0x00200000u;
}
void ItemJudgeRuleSpqb::clear_car_dd_right_line_more_50cm_deduction() {
  car_dd_right_line_more_50cm_deduction_ = 0;
  clear_has_car_dd_right_line_more_50cm_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleSpqb::car_dd_right_line_more_50cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_deduction)
  return car_dd_right_line_more_50cm_deduction_;
}
 void ItemJudgeRuleSpqb::set_car_dd_right_line_more_50cm_deduction(::google::protobuf::int32 value) {
  set_has_car_dd_right_line_more_50cm_deduction();
  car_dd_right_line_more_50cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_dd_right_line_more_50cm_deduction)
}

// optional string car_hl_distance_more_30cm_voice = 23;
bool ItemJudgeRuleSpqb::has_car_hl_distance_more_30cm_voice() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_hl_distance_more_30cm_voice() {
  _has_bits_[0] |= 0x00400000u;
}
void ItemJudgeRuleSpqb::clear_has_car_hl_distance_more_30cm_voice() {
  _has_bits_[0] &= ~0x00400000u;
}
void ItemJudgeRuleSpqb::clear_car_hl_distance_more_30cm_voice() {
  car_hl_distance_more_30cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_hl_distance_more_30cm_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::car_hl_distance_more_30cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
  return car_hl_distance_more_30cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_car_hl_distance_more_30cm_voice(const ::std::string& value) {
  set_has_car_hl_distance_more_30cm_voice();
  car_hl_distance_more_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
}
 void ItemJudgeRuleSpqb::set_car_hl_distance_more_30cm_voice(const char* value) {
  set_has_car_hl_distance_more_30cm_voice();
  car_hl_distance_more_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
}
 void ItemJudgeRuleSpqb::set_car_hl_distance_more_30cm_voice(const char* value, size_t size) {
  set_has_car_hl_distance_more_30cm_voice();
  car_hl_distance_more_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_car_hl_distance_more_30cm_voice() {
  set_has_car_hl_distance_more_30cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
  return car_hl_distance_more_30cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_car_hl_distance_more_30cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
  clear_has_car_hl_distance_more_30cm_voice();
  return car_hl_distance_more_30cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_car_hl_distance_more_30cm_voice(::std::string* car_hl_distance_more_30cm_voice) {
  if (car_hl_distance_more_30cm_voice != NULL) {
    set_has_car_hl_distance_more_30cm_voice();
  } else {
    clear_has_car_hl_distance_more_30cm_voice();
  }
  car_hl_distance_more_30cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_hl_distance_more_30cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_voice)
}

// optional int32 car_hl_distance_more_30cm_deduction = 24;
bool ItemJudgeRuleSpqb::has_car_hl_distance_more_30cm_deduction() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_hl_distance_more_30cm_deduction() {
  _has_bits_[0] |= 0x00800000u;
}
void ItemJudgeRuleSpqb::clear_has_car_hl_distance_more_30cm_deduction() {
  _has_bits_[0] &= ~0x00800000u;
}
void ItemJudgeRuleSpqb::clear_car_hl_distance_more_30cm_deduction() {
  car_hl_distance_more_30cm_deduction_ = 0;
  clear_has_car_hl_distance_more_30cm_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleSpqb::car_hl_distance_more_30cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_deduction)
  return car_hl_distance_more_30cm_deduction_;
}
 void ItemJudgeRuleSpqb::set_car_hl_distance_more_30cm_deduction(::google::protobuf::int32 value) {
  set_has_car_hl_distance_more_30cm_deduction();
  car_hl_distance_more_30cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_more_30cm_deduction)
}

// optional string car_hl_distance_less_30cm_voice = 25;
bool ItemJudgeRuleSpqb::has_car_hl_distance_less_30cm_voice() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_hl_distance_less_30cm_voice() {
  _has_bits_[0] |= 0x01000000u;
}
void ItemJudgeRuleSpqb::clear_has_car_hl_distance_less_30cm_voice() {
  _has_bits_[0] &= ~0x01000000u;
}
void ItemJudgeRuleSpqb::clear_car_hl_distance_less_30cm_voice() {
  car_hl_distance_less_30cm_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_hl_distance_less_30cm_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::car_hl_distance_less_30cm_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
  return car_hl_distance_less_30cm_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_car_hl_distance_less_30cm_voice(const ::std::string& value) {
  set_has_car_hl_distance_less_30cm_voice();
  car_hl_distance_less_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
}
 void ItemJudgeRuleSpqb::set_car_hl_distance_less_30cm_voice(const char* value) {
  set_has_car_hl_distance_less_30cm_voice();
  car_hl_distance_less_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
}
 void ItemJudgeRuleSpqb::set_car_hl_distance_less_30cm_voice(const char* value, size_t size) {
  set_has_car_hl_distance_less_30cm_voice();
  car_hl_distance_less_30cm_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_car_hl_distance_less_30cm_voice() {
  set_has_car_hl_distance_less_30cm_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
  return car_hl_distance_less_30cm_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_car_hl_distance_less_30cm_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
  clear_has_car_hl_distance_less_30cm_voice();
  return car_hl_distance_less_30cm_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_car_hl_distance_less_30cm_voice(::std::string* car_hl_distance_less_30cm_voice) {
  if (car_hl_distance_less_30cm_voice != NULL) {
    set_has_car_hl_distance_less_30cm_voice();
  } else {
    clear_has_car_hl_distance_less_30cm_voice();
  }
  car_hl_distance_less_30cm_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_hl_distance_less_30cm_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_voice)
}

// optional int32 car_hl_distance_less_30cm_deduction = 26;
bool ItemJudgeRuleSpqb::has_car_hl_distance_less_30cm_deduction() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_hl_distance_less_30cm_deduction() {
  _has_bits_[0] |= 0x02000000u;
}
void ItemJudgeRuleSpqb::clear_has_car_hl_distance_less_30cm_deduction() {
  _has_bits_[0] &= ~0x02000000u;
}
void ItemJudgeRuleSpqb::clear_car_hl_distance_less_30cm_deduction() {
  car_hl_distance_less_30cm_deduction_ = 0;
  clear_has_car_hl_distance_less_30cm_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleSpqb::car_hl_distance_less_30cm_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_deduction)
  return car_hl_distance_less_30cm_deduction_;
}
 void ItemJudgeRuleSpqb::set_car_hl_distance_less_30cm_deduction(::google::protobuf::int32 value) {
  set_has_car_hl_distance_less_30cm_deduction();
  car_hl_distance_less_30cm_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_hl_distance_less_30cm_deduction)
}

// optional int32 car_qb_timeout_num = 27;
bool ItemJudgeRuleSpqb::has_car_qb_timeout_num() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_qb_timeout_num() {
  _has_bits_[0] |= 0x04000000u;
}
void ItemJudgeRuleSpqb::clear_has_car_qb_timeout_num() {
  _has_bits_[0] &= ~0x04000000u;
}
void ItemJudgeRuleSpqb::clear_car_qb_timeout_num() {
  car_qb_timeout_num_ = 0;
  clear_has_car_qb_timeout_num();
}
 ::google::protobuf::int32 ItemJudgeRuleSpqb::car_qb_timeout_num() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_num)
  return car_qb_timeout_num_;
}
 void ItemJudgeRuleSpqb::set_car_qb_timeout_num(::google::protobuf::int32 value) {
  set_has_car_qb_timeout_num();
  car_qb_timeout_num_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_num)
}

// optional string car_qb_timeout_voice = 28;
bool ItemJudgeRuleSpqb::has_car_qb_timeout_voice() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_qb_timeout_voice() {
  _has_bits_[0] |= 0x08000000u;
}
void ItemJudgeRuleSpqb::clear_has_car_qb_timeout_voice() {
  _has_bits_[0] &= ~0x08000000u;
}
void ItemJudgeRuleSpqb::clear_car_qb_timeout_voice() {
  car_qb_timeout_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_qb_timeout_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::car_qb_timeout_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
  return car_qb_timeout_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_car_qb_timeout_voice(const ::std::string& value) {
  set_has_car_qb_timeout_voice();
  car_qb_timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
}
 void ItemJudgeRuleSpqb::set_car_qb_timeout_voice(const char* value) {
  set_has_car_qb_timeout_voice();
  car_qb_timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
}
 void ItemJudgeRuleSpqb::set_car_qb_timeout_voice(const char* value, size_t size) {
  set_has_car_qb_timeout_voice();
  car_qb_timeout_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_car_qb_timeout_voice() {
  set_has_car_qb_timeout_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
  return car_qb_timeout_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_car_qb_timeout_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
  clear_has_car_qb_timeout_voice();
  return car_qb_timeout_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_car_qb_timeout_voice(::std::string* car_qb_timeout_voice) {
  if (car_qb_timeout_voice != NULL) {
    set_has_car_qb_timeout_voice();
  } else {
    clear_has_car_qb_timeout_voice();
  }
  car_qb_timeout_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_qb_timeout_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_voice)
}

// optional int32 car_qb_timeout_deduction = 29;
bool ItemJudgeRuleSpqb::has_car_qb_timeout_deduction() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_qb_timeout_deduction() {
  _has_bits_[0] |= 0x10000000u;
}
void ItemJudgeRuleSpqb::clear_has_car_qb_timeout_deduction() {
  _has_bits_[0] &= ~0x10000000u;
}
void ItemJudgeRuleSpqb::clear_car_qb_timeout_deduction() {
  car_qb_timeout_deduction_ = 0;
  clear_has_car_qb_timeout_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleSpqb::car_qb_timeout_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_deduction)
  return car_qb_timeout_deduction_;
}
 void ItemJudgeRuleSpqb::set_car_qb_timeout_deduction(::google::protobuf::int32 value) {
  set_has_car_qb_timeout_deduction();
  car_qb_timeout_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_qb_timeout_deduction)
}

// optional bool car_PressLine_whether_check = 30 [default = true];
bool ItemJudgeRuleSpqb::has_car_pressline_whether_check() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_pressline_whether_check() {
  _has_bits_[0] |= 0x20000000u;
}
void ItemJudgeRuleSpqb::clear_has_car_pressline_whether_check() {
  _has_bits_[0] &= ~0x20000000u;
}
void ItemJudgeRuleSpqb::clear_car_pressline_whether_check() {
  car_pressline_whether_check_ = true;
  clear_has_car_pressline_whether_check();
}
 bool ItemJudgeRuleSpqb::car_pressline_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_PressLine_whether_check)
  return car_pressline_whether_check_;
}
 void ItemJudgeRuleSpqb::set_car_pressline_whether_check(bool value) {
  set_has_car_pressline_whether_check();
  car_pressline_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_PressLine_whether_check)
}

// optional int32 car_PressLine_deduction = 31 [default = 100];
bool ItemJudgeRuleSpqb::has_car_pressline_deduction() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_pressline_deduction() {
  _has_bits_[0] |= 0x40000000u;
}
void ItemJudgeRuleSpqb::clear_has_car_pressline_deduction() {
  _has_bits_[0] &= ~0x40000000u;
}
void ItemJudgeRuleSpqb::clear_car_pressline_deduction() {
  car_pressline_deduction_ = 100;
  clear_has_car_pressline_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleSpqb::car_pressline_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_PressLine_deduction)
  return car_pressline_deduction_;
}
 void ItemJudgeRuleSpqb::set_car_pressline_deduction(::google::protobuf::int32 value) {
  set_has_car_pressline_deduction();
  car_pressline_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_PressLine_deduction)
}

// optional string car_PressLine_voice = 32;
bool ItemJudgeRuleSpqb::has_car_pressline_voice() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_pressline_voice() {
  _has_bits_[0] |= 0x80000000u;
}
void ItemJudgeRuleSpqb::clear_has_car_pressline_voice() {
  _has_bits_[0] &= ~0x80000000u;
}
void ItemJudgeRuleSpqb::clear_car_pressline_voice() {
  car_pressline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_pressline_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::car_pressline_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
  return car_pressline_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_car_pressline_voice(const ::std::string& value) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
}
 void ItemJudgeRuleSpqb::set_car_pressline_voice(const char* value) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
}
 void ItemJudgeRuleSpqb::set_car_pressline_voice(const char* value, size_t size) {
  set_has_car_pressline_voice();
  car_pressline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_car_pressline_voice() {
  set_has_car_pressline_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
  return car_pressline_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_car_pressline_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
  clear_has_car_pressline_voice();
  return car_pressline_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_car_pressline_voice(::std::string* car_pressline_voice) {
  if (car_pressline_voice != NULL) {
    set_has_car_pressline_voice();
  } else {
    clear_has_car_pressline_voice();
  }
  car_pressline_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_pressline_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_PressLine_voice)
}

// optional string car_run_not_staff_command_voice = 33;
bool ItemJudgeRuleSpqb::has_car_run_not_staff_command_voice() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_run_not_staff_command_voice() {
  _has_bits_[1] |= 0x00000001u;
}
void ItemJudgeRuleSpqb::clear_has_car_run_not_staff_command_voice() {
  _has_bits_[1] &= ~0x00000001u;
}
void ItemJudgeRuleSpqb::clear_car_run_not_staff_command_voice() {
  car_run_not_staff_command_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_not_staff_command_voice();
}
 const ::std::string& ItemJudgeRuleSpqb::car_run_not_staff_command_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
  return car_run_not_staff_command_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_car_run_not_staff_command_voice(const ::std::string& value) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
}
 void ItemJudgeRuleSpqb::set_car_run_not_staff_command_voice(const char* value) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
}
 void ItemJudgeRuleSpqb::set_car_run_not_staff_command_voice(const char* value, size_t size) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
}
 ::std::string* ItemJudgeRuleSpqb::mutable_car_run_not_staff_command_voice() {
  set_has_car_run_not_staff_command_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
  return car_run_not_staff_command_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleSpqb::release_car_run_not_staff_command_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
  clear_has_car_run_not_staff_command_voice();
  return car_run_not_staff_command_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleSpqb::set_allocated_car_run_not_staff_command_voice(::std::string* car_run_not_staff_command_voice) {
  if (car_run_not_staff_command_voice != NULL) {
    set_has_car_run_not_staff_command_voice();
  } else {
    clear_has_car_run_not_staff_command_voice();
  }
  car_run_not_staff_command_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_not_staff_command_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_voice)
}

// optional int32 car_run_not_staff_command_deduction = 34;
bool ItemJudgeRuleSpqb::has_car_run_not_staff_command_deduction() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
void ItemJudgeRuleSpqb::set_has_car_run_not_staff_command_deduction() {
  _has_bits_[1] |= 0x00000002u;
}
void ItemJudgeRuleSpqb::clear_has_car_run_not_staff_command_deduction() {
  _has_bits_[1] &= ~0x00000002u;
}
void ItemJudgeRuleSpqb::clear_car_run_not_staff_command_deduction() {
  car_run_not_staff_command_deduction_ = 0;
  clear_has_car_run_not_staff_command_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleSpqb::car_run_not_staff_command_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_deduction)
  return car_run_not_staff_command_deduction_;
}
 void ItemJudgeRuleSpqb::set_car_run_not_staff_command_deduction(::google::protobuf::int32 value) {
  set_has_car_run_not_staff_command_deduction();
  car_run_not_staff_command_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.car_run_not_staff_command_deduction)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_cking_leftTurnLamp = 35;
bool ItemJudgeRuleSpqb::has_event_check_cking_leftturnlamp() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
void ItemJudgeRuleSpqb::set_has_event_check_cking_leftturnlamp() {
  _has_bits_[1] |= 0x00000004u;
}
void ItemJudgeRuleSpqb::clear_has_event_check_cking_leftturnlamp() {
  _has_bits_[1] &= ~0x00000004u;
}
void ItemJudgeRuleSpqb::clear_event_check_cking_leftturnlamp() {
  if (event_check_cking_leftturnlamp_ != NULL) event_check_cking_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_cking_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleSpqb::event_check_cking_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.event_check_cking_leftTurnLamp)
  return event_check_cking_leftturnlamp_ != NULL ? *event_check_cking_leftturnlamp_ : *default_instance_->event_check_cking_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleSpqb::mutable_event_check_cking_leftturnlamp() {
  set_has_event_check_cking_leftturnlamp();
  if (event_check_cking_leftturnlamp_ == NULL) {
    event_check_cking_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.event_check_cking_leftTurnLamp)
  return event_check_cking_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleSpqb::release_event_check_cking_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.event_check_cking_leftTurnLamp)
  clear_has_event_check_cking_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_cking_leftturnlamp_;
  event_check_cking_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleSpqb::set_allocated_event_check_cking_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_cking_leftturnlamp) {
  delete event_check_cking_leftturnlamp_;
  event_check_cking_leftturnlamp_ = event_check_cking_leftturnlamp;
  if (event_check_cking_leftturnlamp) {
    set_has_event_check_cking_leftturnlamp();
  } else {
    clear_has_event_check_cking_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.event_check_cking_leftTurnLamp)
}

// optional bool in_area_again = 36 [default = false];
bool ItemJudgeRuleSpqb::has_in_area_again() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
void ItemJudgeRuleSpqb::set_has_in_area_again() {
  _has_bits_[1] |= 0x00000008u;
}
void ItemJudgeRuleSpqb::clear_has_in_area_again() {
  _has_bits_[1] &= ~0x00000008u;
}
void ItemJudgeRuleSpqb::clear_in_area_again() {
  in_area_again_ = false;
  clear_has_in_area_again();
}
 bool ItemJudgeRuleSpqb::in_area_again() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.in_area_again)
  return in_area_again_;
}
 void ItemJudgeRuleSpqb::set_in_area_again(bool value) {
  set_has_in_area_again();
  in_area_again_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleSpqb.in_area_again)
}

// optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 37;
bool ItemJudgeRuleSpqb::has_event_check_forwarding_rightturnlamp() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
void ItemJudgeRuleSpqb::set_has_event_check_forwarding_rightturnlamp() {
  _has_bits_[1] |= 0x00000010u;
}
void ItemJudgeRuleSpqb::clear_has_event_check_forwarding_rightturnlamp() {
  _has_bits_[1] &= ~0x00000010u;
}
void ItemJudgeRuleSpqb::clear_event_check_forwarding_rightturnlamp() {
  if (event_check_forwarding_rightturnlamp_ != NULL) event_check_forwarding_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_forwarding_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleSpqb::event_check_forwarding_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.event_check_forwarding_rightTurnLamp)
  return event_check_forwarding_rightturnlamp_ != NULL ? *event_check_forwarding_rightturnlamp_ : *default_instance_->event_check_forwarding_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleSpqb::mutable_event_check_forwarding_rightturnlamp() {
  set_has_event_check_forwarding_rightturnlamp();
  if (event_check_forwarding_rightturnlamp_ == NULL) {
    event_check_forwarding_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.event_check_forwarding_rightTurnLamp)
  return event_check_forwarding_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleSpqb::release_event_check_forwarding_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.event_check_forwarding_rightTurnLamp)
  clear_has_event_check_forwarding_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_forwarding_rightturnlamp_;
  event_check_forwarding_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleSpqb::set_allocated_event_check_forwarding_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_forwarding_rightturnlamp) {
  delete event_check_forwarding_rightturnlamp_;
  event_check_forwarding_rightturnlamp_ = event_check_forwarding_rightturnlamp;
  if (event_check_forwarding_rightturnlamp) {
    set_has_event_check_forwarding_rightturnlamp();
  } else {
    clear_has_event_check_forwarding_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.event_check_forwarding_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_waitqb_leftTurnLamp = 38;
bool ItemJudgeRuleSpqb::has_event_check_waitqb_leftturnlamp() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
void ItemJudgeRuleSpqb::set_has_event_check_waitqb_leftturnlamp() {
  _has_bits_[1] |= 0x00000020u;
}
void ItemJudgeRuleSpqb::clear_has_event_check_waitqb_leftturnlamp() {
  _has_bits_[1] &= ~0x00000020u;
}
void ItemJudgeRuleSpqb::clear_event_check_waitqb_leftturnlamp() {
  if (event_check_waitqb_leftturnlamp_ != NULL) event_check_waitqb_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_waitqb_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleSpqb::event_check_waitqb_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_leftTurnLamp)
  return event_check_waitqb_leftturnlamp_ != NULL ? *event_check_waitqb_leftturnlamp_ : *default_instance_->event_check_waitqb_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleSpqb::mutable_event_check_waitqb_leftturnlamp() {
  set_has_event_check_waitqb_leftturnlamp();
  if (event_check_waitqb_leftturnlamp_ == NULL) {
    event_check_waitqb_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_leftTurnLamp)
  return event_check_waitqb_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleSpqb::release_event_check_waitqb_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_leftTurnLamp)
  clear_has_event_check_waitqb_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_waitqb_leftturnlamp_;
  event_check_waitqb_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleSpqb::set_allocated_event_check_waitqb_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_waitqb_leftturnlamp) {
  delete event_check_waitqb_leftturnlamp_;
  event_check_waitqb_leftturnlamp_ = event_check_waitqb_leftturnlamp;
  if (event_check_waitqb_leftturnlamp) {
    set_has_event_check_waitqb_leftturnlamp();
  } else {
    clear_has_event_check_waitqb_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_waitqb_rightTurnLamp = 39;
bool ItemJudgeRuleSpqb::has_event_check_waitqb_rightturnlamp() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
void ItemJudgeRuleSpqb::set_has_event_check_waitqb_rightturnlamp() {
  _has_bits_[1] |= 0x00000040u;
}
void ItemJudgeRuleSpqb::clear_has_event_check_waitqb_rightturnlamp() {
  _has_bits_[1] &= ~0x00000040u;
}
void ItemJudgeRuleSpqb::clear_event_check_waitqb_rightturnlamp() {
  if (event_check_waitqb_rightturnlamp_ != NULL) event_check_waitqb_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_waitqb_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleSpqb::event_check_waitqb_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_rightTurnLamp)
  return event_check_waitqb_rightturnlamp_ != NULL ? *event_check_waitqb_rightturnlamp_ : *default_instance_->event_check_waitqb_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleSpqb::mutable_event_check_waitqb_rightturnlamp() {
  set_has_event_check_waitqb_rightturnlamp();
  if (event_check_waitqb_rightturnlamp_ == NULL) {
    event_check_waitqb_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_rightTurnLamp)
  return event_check_waitqb_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleSpqb::release_event_check_waitqb_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_rightTurnLamp)
  clear_has_event_check_waitqb_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_waitqb_rightturnlamp_;
  event_check_waitqb_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleSpqb::set_allocated_event_check_waitqb_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_waitqb_rightturnlamp) {
  delete event_check_waitqb_rightturnlamp_;
  event_check_waitqb_rightturnlamp_ = event_check_waitqb_rightturnlamp;
  if (event_check_waitqb_rightturnlamp) {
    set_has_event_check_waitqb_rightturnlamp();
  } else {
    clear_has_event_check_waitqb_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_rightTurnLamp)
}

// optional .OPMessage.BasicHandBrake event_check_waitqb_handBrake = 40;
bool ItemJudgeRuleSpqb::has_event_check_waitqb_handbrake() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
void ItemJudgeRuleSpqb::set_has_event_check_waitqb_handbrake() {
  _has_bits_[1] |= 0x00000080u;
}
void ItemJudgeRuleSpqb::clear_has_event_check_waitqb_handbrake() {
  _has_bits_[1] &= ~0x00000080u;
}
void ItemJudgeRuleSpqb::clear_event_check_waitqb_handbrake() {
  if (event_check_waitqb_handbrake_ != NULL) event_check_waitqb_handbrake_->::OPMessage::BasicHandBrake::Clear();
  clear_has_event_check_waitqb_handbrake();
}
const ::OPMessage::BasicHandBrake& ItemJudgeRuleSpqb::event_check_waitqb_handbrake() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_handBrake)
  return event_check_waitqb_handbrake_ != NULL ? *event_check_waitqb_handbrake_ : *default_instance_->event_check_waitqb_handbrake_;
}
::OPMessage::BasicHandBrake* ItemJudgeRuleSpqb::mutable_event_check_waitqb_handbrake() {
  set_has_event_check_waitqb_handbrake();
  if (event_check_waitqb_handbrake_ == NULL) {
    event_check_waitqb_handbrake_ = new ::OPMessage::BasicHandBrake;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_handBrake)
  return event_check_waitqb_handbrake_;
}
::OPMessage::BasicHandBrake* ItemJudgeRuleSpqb::release_event_check_waitqb_handbrake() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_handBrake)
  clear_has_event_check_waitqb_handbrake();
  ::OPMessage::BasicHandBrake* temp = event_check_waitqb_handbrake_;
  event_check_waitqb_handbrake_ = NULL;
  return temp;
}
void ItemJudgeRuleSpqb::set_allocated_event_check_waitqb_handbrake(::OPMessage::BasicHandBrake* event_check_waitqb_handbrake) {
  delete event_check_waitqb_handbrake_;
  event_check_waitqb_handbrake_ = event_check_waitqb_handbrake;
  if (event_check_waitqb_handbrake) {
    set_has_event_check_waitqb_handbrake();
  } else {
    clear_has_event_check_waitqb_handbrake();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleSpqb.event_check_waitqb_handBrake)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DcrkPressLine::kCarRunPressline3VoiceFieldNumber;
const int DcrkPressLine::kCarRunPressline3DeductionFieldNumber;
const int DcrkPressLine::kCarRunPressline4VoiceFieldNumber;
const int DcrkPressLine::kCarRunPressline4DeductionFieldNumber;
const int DcrkPressLine::kCarRunPressline8VoiceFieldNumber;
const int DcrkPressLine::kCarRunPressline8DeductionFieldNumber;
const int DcrkPressLine::kCarRunPressline7VoiceFieldNumber;
const int DcrkPressLine::kCarRunPressline7DeductionFieldNumber;
const int DcrkPressLine::kCarRunPressline5VoiceFieldNumber;
const int DcrkPressLine::kCarRunPressline5DeductionFieldNumber;
const int DcrkPressLine::kCarRunPressline6VoiceFieldNumber;
const int DcrkPressLine::kCarRunPressline6DeductionFieldNumber;
const int DcrkPressLine::kCarPresslineNumsMutexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DcrkPressLine::DcrkPressLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.DcrkPressLine)
}

void DcrkPressLine::InitAsDefaultInstance() {
}

DcrkPressLine::DcrkPressLine(const DcrkPressLine& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.DcrkPressLine)
}

void DcrkPressLine::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  car_run_pressline_3_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_3_deduction_ = 0;
  car_run_pressline_4_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_4_deduction_ = 0;
  car_run_pressline_8_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_8_deduction_ = 0;
  car_run_pressline_7_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_7_deduction_ = 0;
  car_run_pressline_5_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_5_deduction_ = 0;
  car_run_pressline_6_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_6_deduction_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DcrkPressLine::~DcrkPressLine() {
  // @@protoc_insertion_point(destructor:OPMessage.DcrkPressLine)
  SharedDtor();
}

void DcrkPressLine::SharedDtor() {
  car_run_pressline_3_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_4_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_8_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_7_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_5_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_pressline_6_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DcrkPressLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DcrkPressLine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DcrkPressLine_descriptor_;
}

const DcrkPressLine& DcrkPressLine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

DcrkPressLine* DcrkPressLine::default_instance_ = NULL;

DcrkPressLine* DcrkPressLine::New(::google::protobuf::Arena* arena) const {
  DcrkPressLine* n = new DcrkPressLine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DcrkPressLine::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.DcrkPressLine)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(DcrkPressLine, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DcrkPressLine*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(car_run_pressline_3_deduction_, car_run_pressline_4_deduction_);
    ZR_(car_run_pressline_8_deduction_, car_run_pressline_7_deduction_);
    if (has_car_run_pressline_3_voice()) {
      car_run_pressline_3_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_run_pressline_4_voice()) {
      car_run_pressline_4_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_run_pressline_8_voice()) {
      car_run_pressline_8_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_run_pressline_7_voice()) {
      car_run_pressline_7_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 3840u) {
    ZR_(car_run_pressline_5_deduction_, car_run_pressline_6_deduction_);
    if (has_car_run_pressline_5_voice()) {
      car_run_pressline_5_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_run_pressline_6_voice()) {
      car_run_pressline_6_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  car_pressline_nums_mutex_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DcrkPressLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.DcrkPressLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string car_run_pressline_3_voice = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_pressline_3_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_pressline_3_voice().data(), this->car_run_pressline_3_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.DcrkPressLine.car_run_pressline_3_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_car_run_pressline_3_deduction;
        break;
      }

      // optional int32 car_run_pressline_3_deduction = 2;
      case 2: {
        if (tag == 16) {
         parse_car_run_pressline_3_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_pressline_3_deduction_)));
          set_has_car_run_pressline_3_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_car_run_pressline_4_voice;
        break;
      }

      // optional string car_run_pressline_4_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_car_run_pressline_4_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_pressline_4_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_pressline_4_voice().data(), this->car_run_pressline_4_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.DcrkPressLine.car_run_pressline_4_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_car_run_pressline_4_deduction;
        break;
      }

      // optional int32 car_run_pressline_4_deduction = 4;
      case 4: {
        if (tag == 32) {
         parse_car_run_pressline_4_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_pressline_4_deduction_)));
          set_has_car_run_pressline_4_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_car_run_pressline_8_voice;
        break;
      }

      // optional string car_run_pressline_8_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_car_run_pressline_8_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_pressline_8_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_pressline_8_voice().data(), this->car_run_pressline_8_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.DcrkPressLine.car_run_pressline_8_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_car_run_pressline_8_deduction;
        break;
      }

      // optional int32 car_run_pressline_8_deduction = 6;
      case 6: {
        if (tag == 48) {
         parse_car_run_pressline_8_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_pressline_8_deduction_)));
          set_has_car_run_pressline_8_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_car_run_pressline_7_voice;
        break;
      }

      // optional string car_run_pressline_7_voice = 7;
      case 7: {
        if (tag == 58) {
         parse_car_run_pressline_7_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_pressline_7_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_pressline_7_voice().data(), this->car_run_pressline_7_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.DcrkPressLine.car_run_pressline_7_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_car_run_pressline_7_deduction;
        break;
      }

      // optional int32 car_run_pressline_7_deduction = 8;
      case 8: {
        if (tag == 64) {
         parse_car_run_pressline_7_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_pressline_7_deduction_)));
          set_has_car_run_pressline_7_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_car_run_pressline_5_voice;
        break;
      }

      // optional string car_run_pressline_5_voice = 9;
      case 9: {
        if (tag == 74) {
         parse_car_run_pressline_5_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_pressline_5_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_pressline_5_voice().data(), this->car_run_pressline_5_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.DcrkPressLine.car_run_pressline_5_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_car_run_pressline_5_deduction;
        break;
      }

      // optional int32 car_run_pressline_5_deduction = 10;
      case 10: {
        if (tag == 80) {
         parse_car_run_pressline_5_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_pressline_5_deduction_)));
          set_has_car_run_pressline_5_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_car_run_pressline_6_voice;
        break;
      }

      // optional string car_run_pressline_6_voice = 11;
      case 11: {
        if (tag == 90) {
         parse_car_run_pressline_6_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_pressline_6_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_pressline_6_voice().data(), this->car_run_pressline_6_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.DcrkPressLine.car_run_pressline_6_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_car_run_pressline_6_deduction;
        break;
      }

      // optional int32 car_run_pressline_6_deduction = 12;
      case 12: {
        if (tag == 96) {
         parse_car_run_pressline_6_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_pressline_6_deduction_)));
          set_has_car_run_pressline_6_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_car_pressline_nums_mutex;
        break;
      }

      // repeated int32 car_pressline_nums_mutex = 13;
      case 13: {
        if (tag == 104) {
         parse_car_pressline_nums_mutex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 104, input, this->mutable_car_pressline_nums_mutex())));
        } else if (tag == 106) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_car_pressline_nums_mutex())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_car_pressline_nums_mutex;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.DcrkPressLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.DcrkPressLine)
  return false;
#undef DO_
}

void DcrkPressLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.DcrkPressLine)
  // optional string car_run_pressline_3_voice = 1;
  if (has_car_run_pressline_3_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_3_voice().data(), this->car_run_pressline_3_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.DcrkPressLine.car_run_pressline_3_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->car_run_pressline_3_voice(), output);
  }

  // optional int32 car_run_pressline_3_deduction = 2;
  if (has_car_run_pressline_3_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->car_run_pressline_3_deduction(), output);
  }

  // optional string car_run_pressline_4_voice = 3;
  if (has_car_run_pressline_4_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_4_voice().data(), this->car_run_pressline_4_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.DcrkPressLine.car_run_pressline_4_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->car_run_pressline_4_voice(), output);
  }

  // optional int32 car_run_pressline_4_deduction = 4;
  if (has_car_run_pressline_4_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->car_run_pressline_4_deduction(), output);
  }

  // optional string car_run_pressline_8_voice = 5;
  if (has_car_run_pressline_8_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_8_voice().data(), this->car_run_pressline_8_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.DcrkPressLine.car_run_pressline_8_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->car_run_pressline_8_voice(), output);
  }

  // optional int32 car_run_pressline_8_deduction = 6;
  if (has_car_run_pressline_8_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->car_run_pressline_8_deduction(), output);
  }

  // optional string car_run_pressline_7_voice = 7;
  if (has_car_run_pressline_7_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_7_voice().data(), this->car_run_pressline_7_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.DcrkPressLine.car_run_pressline_7_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->car_run_pressline_7_voice(), output);
  }

  // optional int32 car_run_pressline_7_deduction = 8;
  if (has_car_run_pressline_7_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->car_run_pressline_7_deduction(), output);
  }

  // optional string car_run_pressline_5_voice = 9;
  if (has_car_run_pressline_5_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_5_voice().data(), this->car_run_pressline_5_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.DcrkPressLine.car_run_pressline_5_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->car_run_pressline_5_voice(), output);
  }

  // optional int32 car_run_pressline_5_deduction = 10;
  if (has_car_run_pressline_5_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->car_run_pressline_5_deduction(), output);
  }

  // optional string car_run_pressline_6_voice = 11;
  if (has_car_run_pressline_6_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_6_voice().data(), this->car_run_pressline_6_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.DcrkPressLine.car_run_pressline_6_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->car_run_pressline_6_voice(), output);
  }

  // optional int32 car_run_pressline_6_deduction = 12;
  if (has_car_run_pressline_6_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->car_run_pressline_6_deduction(), output);
  }

  // repeated int32 car_pressline_nums_mutex = 13;
  for (int i = 0; i < this->car_pressline_nums_mutex_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      13, this->car_pressline_nums_mutex(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.DcrkPressLine)
}

::google::protobuf::uint8* DcrkPressLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.DcrkPressLine)
  // optional string car_run_pressline_3_voice = 1;
  if (has_car_run_pressline_3_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_3_voice().data(), this->car_run_pressline_3_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.DcrkPressLine.car_run_pressline_3_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->car_run_pressline_3_voice(), target);
  }

  // optional int32 car_run_pressline_3_deduction = 2;
  if (has_car_run_pressline_3_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->car_run_pressline_3_deduction(), target);
  }

  // optional string car_run_pressline_4_voice = 3;
  if (has_car_run_pressline_4_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_4_voice().data(), this->car_run_pressline_4_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.DcrkPressLine.car_run_pressline_4_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->car_run_pressline_4_voice(), target);
  }

  // optional int32 car_run_pressline_4_deduction = 4;
  if (has_car_run_pressline_4_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->car_run_pressline_4_deduction(), target);
  }

  // optional string car_run_pressline_8_voice = 5;
  if (has_car_run_pressline_8_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_8_voice().data(), this->car_run_pressline_8_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.DcrkPressLine.car_run_pressline_8_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->car_run_pressline_8_voice(), target);
  }

  // optional int32 car_run_pressline_8_deduction = 6;
  if (has_car_run_pressline_8_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->car_run_pressline_8_deduction(), target);
  }

  // optional string car_run_pressline_7_voice = 7;
  if (has_car_run_pressline_7_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_7_voice().data(), this->car_run_pressline_7_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.DcrkPressLine.car_run_pressline_7_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->car_run_pressline_7_voice(), target);
  }

  // optional int32 car_run_pressline_7_deduction = 8;
  if (has_car_run_pressline_7_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->car_run_pressline_7_deduction(), target);
  }

  // optional string car_run_pressline_5_voice = 9;
  if (has_car_run_pressline_5_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_5_voice().data(), this->car_run_pressline_5_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.DcrkPressLine.car_run_pressline_5_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->car_run_pressline_5_voice(), target);
  }

  // optional int32 car_run_pressline_5_deduction = 10;
  if (has_car_run_pressline_5_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->car_run_pressline_5_deduction(), target);
  }

  // optional string car_run_pressline_6_voice = 11;
  if (has_car_run_pressline_6_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_pressline_6_voice().data(), this->car_run_pressline_6_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.DcrkPressLine.car_run_pressline_6_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->car_run_pressline_6_voice(), target);
  }

  // optional int32 car_run_pressline_6_deduction = 12;
  if (has_car_run_pressline_6_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->car_run_pressline_6_deduction(), target);
  }

  // repeated int32 car_pressline_nums_mutex = 13;
  for (int i = 0; i < this->car_pressline_nums_mutex_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(13, this->car_pressline_nums_mutex(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.DcrkPressLine)
  return target;
}

int DcrkPressLine::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.DcrkPressLine)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional string car_run_pressline_3_voice = 1;
    if (has_car_run_pressline_3_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_pressline_3_voice());
    }

    // optional int32 car_run_pressline_3_deduction = 2;
    if (has_car_run_pressline_3_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_pressline_3_deduction());
    }

    // optional string car_run_pressline_4_voice = 3;
    if (has_car_run_pressline_4_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_pressline_4_voice());
    }

    // optional int32 car_run_pressline_4_deduction = 4;
    if (has_car_run_pressline_4_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_pressline_4_deduction());
    }

    // optional string car_run_pressline_8_voice = 5;
    if (has_car_run_pressline_8_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_pressline_8_voice());
    }

    // optional int32 car_run_pressline_8_deduction = 6;
    if (has_car_run_pressline_8_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_pressline_8_deduction());
    }

    // optional string car_run_pressline_7_voice = 7;
    if (has_car_run_pressline_7_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_pressline_7_voice());
    }

    // optional int32 car_run_pressline_7_deduction = 8;
    if (has_car_run_pressline_7_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_pressline_7_deduction());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional string car_run_pressline_5_voice = 9;
    if (has_car_run_pressline_5_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_pressline_5_voice());
    }

    // optional int32 car_run_pressline_5_deduction = 10;
    if (has_car_run_pressline_5_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_pressline_5_deduction());
    }

    // optional string car_run_pressline_6_voice = 11;
    if (has_car_run_pressline_6_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_pressline_6_voice());
    }

    // optional int32 car_run_pressline_6_deduction = 12;
    if (has_car_run_pressline_6_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_pressline_6_deduction());
    }

  }
  // repeated int32 car_pressline_nums_mutex = 13;
  {
    int data_size = 0;
    for (int i = 0; i < this->car_pressline_nums_mutex_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->car_pressline_nums_mutex(i));
    }
    total_size += 1 * this->car_pressline_nums_mutex_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DcrkPressLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.DcrkPressLine)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DcrkPressLine* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DcrkPressLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.DcrkPressLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.DcrkPressLine)
    MergeFrom(*source);
  }
}

void DcrkPressLine::MergeFrom(const DcrkPressLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.DcrkPressLine)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  car_pressline_nums_mutex_.MergeFrom(from.car_pressline_nums_mutex_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_car_run_pressline_3_voice()) {
      set_has_car_run_pressline_3_voice();
      car_run_pressline_3_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_pressline_3_voice_);
    }
    if (from.has_car_run_pressline_3_deduction()) {
      set_car_run_pressline_3_deduction(from.car_run_pressline_3_deduction());
    }
    if (from.has_car_run_pressline_4_voice()) {
      set_has_car_run_pressline_4_voice();
      car_run_pressline_4_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_pressline_4_voice_);
    }
    if (from.has_car_run_pressline_4_deduction()) {
      set_car_run_pressline_4_deduction(from.car_run_pressline_4_deduction());
    }
    if (from.has_car_run_pressline_8_voice()) {
      set_has_car_run_pressline_8_voice();
      car_run_pressline_8_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_pressline_8_voice_);
    }
    if (from.has_car_run_pressline_8_deduction()) {
      set_car_run_pressline_8_deduction(from.car_run_pressline_8_deduction());
    }
    if (from.has_car_run_pressline_7_voice()) {
      set_has_car_run_pressline_7_voice();
      car_run_pressline_7_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_pressline_7_voice_);
    }
    if (from.has_car_run_pressline_7_deduction()) {
      set_car_run_pressline_7_deduction(from.car_run_pressline_7_deduction());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_car_run_pressline_5_voice()) {
      set_has_car_run_pressline_5_voice();
      car_run_pressline_5_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_pressline_5_voice_);
    }
    if (from.has_car_run_pressline_5_deduction()) {
      set_car_run_pressline_5_deduction(from.car_run_pressline_5_deduction());
    }
    if (from.has_car_run_pressline_6_voice()) {
      set_has_car_run_pressline_6_voice();
      car_run_pressline_6_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_pressline_6_voice_);
    }
    if (from.has_car_run_pressline_6_deduction()) {
      set_car_run_pressline_6_deduction(from.car_run_pressline_6_deduction());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DcrkPressLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.DcrkPressLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DcrkPressLine::CopyFrom(const DcrkPressLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.DcrkPressLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DcrkPressLine::IsInitialized() const {

  return true;
}

void DcrkPressLine::Swap(DcrkPressLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DcrkPressLine::InternalSwap(DcrkPressLine* other) {
  car_run_pressline_3_voice_.Swap(&other->car_run_pressline_3_voice_);
  std::swap(car_run_pressline_3_deduction_, other->car_run_pressline_3_deduction_);
  car_run_pressline_4_voice_.Swap(&other->car_run_pressline_4_voice_);
  std::swap(car_run_pressline_4_deduction_, other->car_run_pressline_4_deduction_);
  car_run_pressline_8_voice_.Swap(&other->car_run_pressline_8_voice_);
  std::swap(car_run_pressline_8_deduction_, other->car_run_pressline_8_deduction_);
  car_run_pressline_7_voice_.Swap(&other->car_run_pressline_7_voice_);
  std::swap(car_run_pressline_7_deduction_, other->car_run_pressline_7_deduction_);
  car_run_pressline_5_voice_.Swap(&other->car_run_pressline_5_voice_);
  std::swap(car_run_pressline_5_deduction_, other->car_run_pressline_5_deduction_);
  car_run_pressline_6_voice_.Swap(&other->car_run_pressline_6_voice_);
  std::swap(car_run_pressline_6_deduction_, other->car_run_pressline_6_deduction_);
  car_pressline_nums_mutex_.UnsafeArenaSwap(&other->car_pressline_nums_mutex_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DcrkPressLine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DcrkPressLine_descriptor_;
  metadata.reflection = DcrkPressLine_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DcrkPressLine

// optional string car_run_pressline_3_voice = 1;
bool DcrkPressLine::has_car_run_pressline_3_voice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DcrkPressLine::set_has_car_run_pressline_3_voice() {
  _has_bits_[0] |= 0x00000001u;
}
void DcrkPressLine::clear_has_car_run_pressline_3_voice() {
  _has_bits_[0] &= ~0x00000001u;
}
void DcrkPressLine::clear_car_run_pressline_3_voice() {
  car_run_pressline_3_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_3_voice();
}
 const ::std::string& DcrkPressLine::car_run_pressline_3_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
  return car_run_pressline_3_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DcrkPressLine::set_car_run_pressline_3_voice(const ::std::string& value) {
  set_has_car_run_pressline_3_voice();
  car_run_pressline_3_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
}
 void DcrkPressLine::set_car_run_pressline_3_voice(const char* value) {
  set_has_car_run_pressline_3_voice();
  car_run_pressline_3_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
}
 void DcrkPressLine::set_car_run_pressline_3_voice(const char* value, size_t size) {
  set_has_car_run_pressline_3_voice();
  car_run_pressline_3_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
}
 ::std::string* DcrkPressLine::mutable_car_run_pressline_3_voice() {
  set_has_car_run_pressline_3_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
  return car_run_pressline_3_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DcrkPressLine::release_car_run_pressline_3_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
  clear_has_car_run_pressline_3_voice();
  return car_run_pressline_3_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DcrkPressLine::set_allocated_car_run_pressline_3_voice(::std::string* car_run_pressline_3_voice) {
  if (car_run_pressline_3_voice != NULL) {
    set_has_car_run_pressline_3_voice();
  } else {
    clear_has_car_run_pressline_3_voice();
  }
  car_run_pressline_3_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_3_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.DcrkPressLine.car_run_pressline_3_voice)
}

// optional int32 car_run_pressline_3_deduction = 2;
bool DcrkPressLine::has_car_run_pressline_3_deduction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DcrkPressLine::set_has_car_run_pressline_3_deduction() {
  _has_bits_[0] |= 0x00000002u;
}
void DcrkPressLine::clear_has_car_run_pressline_3_deduction() {
  _has_bits_[0] &= ~0x00000002u;
}
void DcrkPressLine::clear_car_run_pressline_3_deduction() {
  car_run_pressline_3_deduction_ = 0;
  clear_has_car_run_pressline_3_deduction();
}
 ::google::protobuf::int32 DcrkPressLine::car_run_pressline_3_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_3_deduction)
  return car_run_pressline_3_deduction_;
}
 void DcrkPressLine::set_car_run_pressline_3_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_3_deduction();
  car_run_pressline_3_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_3_deduction)
}

// optional string car_run_pressline_4_voice = 3;
bool DcrkPressLine::has_car_run_pressline_4_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DcrkPressLine::set_has_car_run_pressline_4_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void DcrkPressLine::clear_has_car_run_pressline_4_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void DcrkPressLine::clear_car_run_pressline_4_voice() {
  car_run_pressline_4_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_4_voice();
}
 const ::std::string& DcrkPressLine::car_run_pressline_4_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
  return car_run_pressline_4_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DcrkPressLine::set_car_run_pressline_4_voice(const ::std::string& value) {
  set_has_car_run_pressline_4_voice();
  car_run_pressline_4_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
}
 void DcrkPressLine::set_car_run_pressline_4_voice(const char* value) {
  set_has_car_run_pressline_4_voice();
  car_run_pressline_4_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
}
 void DcrkPressLine::set_car_run_pressline_4_voice(const char* value, size_t size) {
  set_has_car_run_pressline_4_voice();
  car_run_pressline_4_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
}
 ::std::string* DcrkPressLine::mutable_car_run_pressline_4_voice() {
  set_has_car_run_pressline_4_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
  return car_run_pressline_4_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DcrkPressLine::release_car_run_pressline_4_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
  clear_has_car_run_pressline_4_voice();
  return car_run_pressline_4_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DcrkPressLine::set_allocated_car_run_pressline_4_voice(::std::string* car_run_pressline_4_voice) {
  if (car_run_pressline_4_voice != NULL) {
    set_has_car_run_pressline_4_voice();
  } else {
    clear_has_car_run_pressline_4_voice();
  }
  car_run_pressline_4_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_4_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.DcrkPressLine.car_run_pressline_4_voice)
}

// optional int32 car_run_pressline_4_deduction = 4;
bool DcrkPressLine::has_car_run_pressline_4_deduction() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DcrkPressLine::set_has_car_run_pressline_4_deduction() {
  _has_bits_[0] |= 0x00000008u;
}
void DcrkPressLine::clear_has_car_run_pressline_4_deduction() {
  _has_bits_[0] &= ~0x00000008u;
}
void DcrkPressLine::clear_car_run_pressline_4_deduction() {
  car_run_pressline_4_deduction_ = 0;
  clear_has_car_run_pressline_4_deduction();
}
 ::google::protobuf::int32 DcrkPressLine::car_run_pressline_4_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_4_deduction)
  return car_run_pressline_4_deduction_;
}
 void DcrkPressLine::set_car_run_pressline_4_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_4_deduction();
  car_run_pressline_4_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_4_deduction)
}

// optional string car_run_pressline_8_voice = 5;
bool DcrkPressLine::has_car_run_pressline_8_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DcrkPressLine::set_has_car_run_pressline_8_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void DcrkPressLine::clear_has_car_run_pressline_8_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void DcrkPressLine::clear_car_run_pressline_8_voice() {
  car_run_pressline_8_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_8_voice();
}
 const ::std::string& DcrkPressLine::car_run_pressline_8_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
  return car_run_pressline_8_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DcrkPressLine::set_car_run_pressline_8_voice(const ::std::string& value) {
  set_has_car_run_pressline_8_voice();
  car_run_pressline_8_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
}
 void DcrkPressLine::set_car_run_pressline_8_voice(const char* value) {
  set_has_car_run_pressline_8_voice();
  car_run_pressline_8_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
}
 void DcrkPressLine::set_car_run_pressline_8_voice(const char* value, size_t size) {
  set_has_car_run_pressline_8_voice();
  car_run_pressline_8_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
}
 ::std::string* DcrkPressLine::mutable_car_run_pressline_8_voice() {
  set_has_car_run_pressline_8_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
  return car_run_pressline_8_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DcrkPressLine::release_car_run_pressline_8_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
  clear_has_car_run_pressline_8_voice();
  return car_run_pressline_8_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DcrkPressLine::set_allocated_car_run_pressline_8_voice(::std::string* car_run_pressline_8_voice) {
  if (car_run_pressline_8_voice != NULL) {
    set_has_car_run_pressline_8_voice();
  } else {
    clear_has_car_run_pressline_8_voice();
  }
  car_run_pressline_8_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_8_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.DcrkPressLine.car_run_pressline_8_voice)
}

// optional int32 car_run_pressline_8_deduction = 6;
bool DcrkPressLine::has_car_run_pressline_8_deduction() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DcrkPressLine::set_has_car_run_pressline_8_deduction() {
  _has_bits_[0] |= 0x00000020u;
}
void DcrkPressLine::clear_has_car_run_pressline_8_deduction() {
  _has_bits_[0] &= ~0x00000020u;
}
void DcrkPressLine::clear_car_run_pressline_8_deduction() {
  car_run_pressline_8_deduction_ = 0;
  clear_has_car_run_pressline_8_deduction();
}
 ::google::protobuf::int32 DcrkPressLine::car_run_pressline_8_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_8_deduction)
  return car_run_pressline_8_deduction_;
}
 void DcrkPressLine::set_car_run_pressline_8_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_8_deduction();
  car_run_pressline_8_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_8_deduction)
}

// optional string car_run_pressline_7_voice = 7;
bool DcrkPressLine::has_car_run_pressline_7_voice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DcrkPressLine::set_has_car_run_pressline_7_voice() {
  _has_bits_[0] |= 0x00000040u;
}
void DcrkPressLine::clear_has_car_run_pressline_7_voice() {
  _has_bits_[0] &= ~0x00000040u;
}
void DcrkPressLine::clear_car_run_pressline_7_voice() {
  car_run_pressline_7_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_7_voice();
}
 const ::std::string& DcrkPressLine::car_run_pressline_7_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
  return car_run_pressline_7_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DcrkPressLine::set_car_run_pressline_7_voice(const ::std::string& value) {
  set_has_car_run_pressline_7_voice();
  car_run_pressline_7_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
}
 void DcrkPressLine::set_car_run_pressline_7_voice(const char* value) {
  set_has_car_run_pressline_7_voice();
  car_run_pressline_7_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
}
 void DcrkPressLine::set_car_run_pressline_7_voice(const char* value, size_t size) {
  set_has_car_run_pressline_7_voice();
  car_run_pressline_7_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
}
 ::std::string* DcrkPressLine::mutable_car_run_pressline_7_voice() {
  set_has_car_run_pressline_7_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
  return car_run_pressline_7_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DcrkPressLine::release_car_run_pressline_7_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
  clear_has_car_run_pressline_7_voice();
  return car_run_pressline_7_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DcrkPressLine::set_allocated_car_run_pressline_7_voice(::std::string* car_run_pressline_7_voice) {
  if (car_run_pressline_7_voice != NULL) {
    set_has_car_run_pressline_7_voice();
  } else {
    clear_has_car_run_pressline_7_voice();
  }
  car_run_pressline_7_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_7_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.DcrkPressLine.car_run_pressline_7_voice)
}

// optional int32 car_run_pressline_7_deduction = 8;
bool DcrkPressLine::has_car_run_pressline_7_deduction() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void DcrkPressLine::set_has_car_run_pressline_7_deduction() {
  _has_bits_[0] |= 0x00000080u;
}
void DcrkPressLine::clear_has_car_run_pressline_7_deduction() {
  _has_bits_[0] &= ~0x00000080u;
}
void DcrkPressLine::clear_car_run_pressline_7_deduction() {
  car_run_pressline_7_deduction_ = 0;
  clear_has_car_run_pressline_7_deduction();
}
 ::google::protobuf::int32 DcrkPressLine::car_run_pressline_7_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_7_deduction)
  return car_run_pressline_7_deduction_;
}
 void DcrkPressLine::set_car_run_pressline_7_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_7_deduction();
  car_run_pressline_7_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_7_deduction)
}

// optional string car_run_pressline_5_voice = 9;
bool DcrkPressLine::has_car_run_pressline_5_voice() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void DcrkPressLine::set_has_car_run_pressline_5_voice() {
  _has_bits_[0] |= 0x00000100u;
}
void DcrkPressLine::clear_has_car_run_pressline_5_voice() {
  _has_bits_[0] &= ~0x00000100u;
}
void DcrkPressLine::clear_car_run_pressline_5_voice() {
  car_run_pressline_5_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_5_voice();
}
 const ::std::string& DcrkPressLine::car_run_pressline_5_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
  return car_run_pressline_5_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DcrkPressLine::set_car_run_pressline_5_voice(const ::std::string& value) {
  set_has_car_run_pressline_5_voice();
  car_run_pressline_5_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
}
 void DcrkPressLine::set_car_run_pressline_5_voice(const char* value) {
  set_has_car_run_pressline_5_voice();
  car_run_pressline_5_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
}
 void DcrkPressLine::set_car_run_pressline_5_voice(const char* value, size_t size) {
  set_has_car_run_pressline_5_voice();
  car_run_pressline_5_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
}
 ::std::string* DcrkPressLine::mutable_car_run_pressline_5_voice() {
  set_has_car_run_pressline_5_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
  return car_run_pressline_5_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DcrkPressLine::release_car_run_pressline_5_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
  clear_has_car_run_pressline_5_voice();
  return car_run_pressline_5_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DcrkPressLine::set_allocated_car_run_pressline_5_voice(::std::string* car_run_pressline_5_voice) {
  if (car_run_pressline_5_voice != NULL) {
    set_has_car_run_pressline_5_voice();
  } else {
    clear_has_car_run_pressline_5_voice();
  }
  car_run_pressline_5_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_5_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.DcrkPressLine.car_run_pressline_5_voice)
}

// optional int32 car_run_pressline_5_deduction = 10;
bool DcrkPressLine::has_car_run_pressline_5_deduction() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void DcrkPressLine::set_has_car_run_pressline_5_deduction() {
  _has_bits_[0] |= 0x00000200u;
}
void DcrkPressLine::clear_has_car_run_pressline_5_deduction() {
  _has_bits_[0] &= ~0x00000200u;
}
void DcrkPressLine::clear_car_run_pressline_5_deduction() {
  car_run_pressline_5_deduction_ = 0;
  clear_has_car_run_pressline_5_deduction();
}
 ::google::protobuf::int32 DcrkPressLine::car_run_pressline_5_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_5_deduction)
  return car_run_pressline_5_deduction_;
}
 void DcrkPressLine::set_car_run_pressline_5_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_5_deduction();
  car_run_pressline_5_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_5_deduction)
}

// optional string car_run_pressline_6_voice = 11;
bool DcrkPressLine::has_car_run_pressline_6_voice() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void DcrkPressLine::set_has_car_run_pressline_6_voice() {
  _has_bits_[0] |= 0x00000400u;
}
void DcrkPressLine::clear_has_car_run_pressline_6_voice() {
  _has_bits_[0] &= ~0x00000400u;
}
void DcrkPressLine::clear_car_run_pressline_6_voice() {
  car_run_pressline_6_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_pressline_6_voice();
}
 const ::std::string& DcrkPressLine::car_run_pressline_6_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
  return car_run_pressline_6_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DcrkPressLine::set_car_run_pressline_6_voice(const ::std::string& value) {
  set_has_car_run_pressline_6_voice();
  car_run_pressline_6_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
}
 void DcrkPressLine::set_car_run_pressline_6_voice(const char* value) {
  set_has_car_run_pressline_6_voice();
  car_run_pressline_6_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
}
 void DcrkPressLine::set_car_run_pressline_6_voice(const char* value, size_t size) {
  set_has_car_run_pressline_6_voice();
  car_run_pressline_6_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
}
 ::std::string* DcrkPressLine::mutable_car_run_pressline_6_voice() {
  set_has_car_run_pressline_6_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
  return car_run_pressline_6_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DcrkPressLine::release_car_run_pressline_6_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
  clear_has_car_run_pressline_6_voice();
  return car_run_pressline_6_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DcrkPressLine::set_allocated_car_run_pressline_6_voice(::std::string* car_run_pressline_6_voice) {
  if (car_run_pressline_6_voice != NULL) {
    set_has_car_run_pressline_6_voice();
  } else {
    clear_has_car_run_pressline_6_voice();
  }
  car_run_pressline_6_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_pressline_6_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.DcrkPressLine.car_run_pressline_6_voice)
}

// optional int32 car_run_pressline_6_deduction = 12;
bool DcrkPressLine::has_car_run_pressline_6_deduction() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void DcrkPressLine::set_has_car_run_pressline_6_deduction() {
  _has_bits_[0] |= 0x00000800u;
}
void DcrkPressLine::clear_has_car_run_pressline_6_deduction() {
  _has_bits_[0] &= ~0x00000800u;
}
void DcrkPressLine::clear_car_run_pressline_6_deduction() {
  car_run_pressline_6_deduction_ = 0;
  clear_has_car_run_pressline_6_deduction();
}
 ::google::protobuf::int32 DcrkPressLine::car_run_pressline_6_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_run_pressline_6_deduction)
  return car_run_pressline_6_deduction_;
}
 void DcrkPressLine::set_car_run_pressline_6_deduction(::google::protobuf::int32 value) {
  set_has_car_run_pressline_6_deduction();
  car_run_pressline_6_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_run_pressline_6_deduction)
}

// repeated int32 car_pressline_nums_mutex = 13;
int DcrkPressLine::car_pressline_nums_mutex_size() const {
  return car_pressline_nums_mutex_.size();
}
void DcrkPressLine::clear_car_pressline_nums_mutex() {
  car_pressline_nums_mutex_.Clear();
}
 ::google::protobuf::int32 DcrkPressLine::car_pressline_nums_mutex(int index) const {
  // @@protoc_insertion_point(field_get:OPMessage.DcrkPressLine.car_pressline_nums_mutex)
  return car_pressline_nums_mutex_.Get(index);
}
 void DcrkPressLine::set_car_pressline_nums_mutex(int index, ::google::protobuf::int32 value) {
  car_pressline_nums_mutex_.Set(index, value);
  // @@protoc_insertion_point(field_set:OPMessage.DcrkPressLine.car_pressline_nums_mutex)
}
 void DcrkPressLine::add_car_pressline_nums_mutex(::google::protobuf::int32 value) {
  car_pressline_nums_mutex_.Add(value);
  // @@protoc_insertion_point(field_add:OPMessage.DcrkPressLine.car_pressline_nums_mutex)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DcrkPressLine::car_pressline_nums_mutex() const {
  // @@protoc_insertion_point(field_list:OPMessage.DcrkPressLine.car_pressline_nums_mutex)
  return car_pressline_nums_mutex_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DcrkPressLine::mutable_car_pressline_nums_mutex() {
  // @@protoc_insertion_point(field_mutable_list:OPMessage.DcrkPressLine.car_pressline_nums_mutex)
  return &car_pressline_nums_mutex_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemJudgeRuleDcrk::kBasicEventCheckFieldNumber;
const int ItemJudgeRuleDcrk::kItemEnterVoiceFieldNumber;
const int ItemJudgeRuleDcrk::kItemLeaveVoiceFieldNumber;
const int ItemJudgeRuleDcrk::kItemStartVoiceFieldNumber;
const int ItemJudgeRuleDcrk::kItemEndVoiceFieldNumber;
const int ItemJudgeRuleDcrk::kJudgePointsTypeFieldNumber;
const int ItemJudgeRuleDcrk::kCheckStartTypeFieldNumber;
const int ItemJudgeRuleDcrk::kCheckFinishTypeFieldNumber;
const int ItemJudgeRuleDcrk::kCarRunErrorWhetherCheckFieldNumber;
const int ItemJudgeRuleDcrk::kCarRunErrorVoiceFieldNumber;
const int ItemJudgeRuleDcrk::kCarRunErrorDeductionFieldNumber;
const int ItemJudgeRuleDcrk::kCarRkCheckRightVoiceFieldNumber;
const int ItemJudgeRuleDcrk::kCarRkCheckFailVoiceFieldNumber;
const int ItemJudgeRuleDcrk::kCarRkCheckFailDeductionFieldNumber;
const int ItemJudgeRuleDcrk::kForwardingPresslineFieldNumber;
const int ItemJudgeRuleDcrk::kRking1PresslineFieldNumber;
const int ItemJudgeRuleDcrk::kCking1PresslineFieldNumber;
const int ItemJudgeRuleDcrk::kRking2PresslineFieldNumber;
const int ItemJudgeRuleDcrk::kCking2PresslineFieldNumber;
const int ItemJudgeRuleDcrk::kCarRunNotStaffCommandVoiceFieldNumber;
const int ItemJudgeRuleDcrk::kCarRunNotStaffCommandDeductionFieldNumber;
const int ItemJudgeRuleDcrk::kEventCheckCking1LeftTurnLampFieldNumber;
const int ItemJudgeRuleDcrk::kEventCheckCking2RightTurnLampFieldNumber;
const int ItemJudgeRuleDcrk::kInAreaAgainFieldNumber;
const int ItemJudgeRuleDcrk::kCarRkCheckDelayTimeFieldNumber;
const int ItemJudgeRuleDcrk::kEventCheckForwardingRightTurnLampFieldNumber;
const int ItemJudgeRuleDcrk::kEventCheckCking1RightTurnLampFieldNumber;
const int ItemJudgeRuleDcrk::kEventCheckCking2LeftTurnLampFieldNumber;
const int ItemJudgeRuleDcrk::kEventCheckWaitrk1LeftTurnLampFieldNumber;
const int ItemJudgeRuleDcrk::kEventCheckWaitrk1RightTurnLampFieldNumber;
const int ItemJudgeRuleDcrk::kEventCheckRkend1LeftTurnLampFieldNumber;
const int ItemJudgeRuleDcrk::kEventCheckRkend1RightTurnLampFieldNumber;
const int ItemJudgeRuleDcrk::kEventCheckWaitrk2LeftTurnLampFieldNumber;
const int ItemJudgeRuleDcrk::kEventCheckWaitrk2RightTurnLampFieldNumber;
const int ItemJudgeRuleDcrk::kEventCheckRkend2LeftTurnLampFieldNumber;
const int ItemJudgeRuleDcrk::kEventCheckRkend2RightTurnLampFieldNumber;
const int ItemJudgeRuleDcrk::kCarRking1FrontwheelOverControllineCheckFieldNumber;
const int ItemJudgeRuleDcrk::kCarRking1FrontwheelOverControllineDeductionFieldNumber;
const int ItemJudgeRuleDcrk::kCarRking1FrontwheelOverControllineVoiceFieldNumber;
const int ItemJudgeRuleDcrk::kCarRking2FrontwheelOverControllineCheckFieldNumber;
const int ItemJudgeRuleDcrk::kCarRking2FrontwheelOverControllineDeductionFieldNumber;
const int ItemJudgeRuleDcrk::kCarRking2FrontwheelOverControllineVoiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemJudgeRuleDcrk::ItemJudgeRuleDcrk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemJudgeRuleDcrk)
}

void ItemJudgeRuleDcrk::InitAsDefaultInstance() {
  basic_event_check_ = const_cast< ::OPMessage::ItemJudgeBasic*>(&::OPMessage::ItemJudgeBasic::default_instance());
  forwarding_pressline_ = const_cast< ::OPMessage::DcrkPressLine*>(&::OPMessage::DcrkPressLine::default_instance());
  rking_1_pressline_ = const_cast< ::OPMessage::DcrkPressLine*>(&::OPMessage::DcrkPressLine::default_instance());
  cking_1_pressline_ = const_cast< ::OPMessage::DcrkPressLine*>(&::OPMessage::DcrkPressLine::default_instance());
  rking_2_pressline_ = const_cast< ::OPMessage::DcrkPressLine*>(&::OPMessage::DcrkPressLine::default_instance());
  cking_2_pressline_ = const_cast< ::OPMessage::DcrkPressLine*>(&::OPMessage::DcrkPressLine::default_instance());
  event_check_cking_1_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  event_check_cking_2_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  event_check_forwarding_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  event_check_cking_1_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  event_check_cking_2_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  event_check_waitrk_1_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  event_check_waitrk_1_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  event_check_rkend_1_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  event_check_rkend_1_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  event_check_waitrk_2_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  event_check_waitrk_2_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
  event_check_rkend_2_leftturnlamp_ = const_cast< ::OPMessage::BasicLeftTurnLamp*>(&::OPMessage::BasicLeftTurnLamp::default_instance());
  event_check_rkend_2_rightturnlamp_ = const_cast< ::OPMessage::BasicRightTurnLamp*>(&::OPMessage::BasicRightTurnLamp::default_instance());
}

ItemJudgeRuleDcrk::ItemJudgeRuleDcrk(const ItemJudgeRuleDcrk& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemJudgeRuleDcrk)
}

void ItemJudgeRuleDcrk::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  basic_event_check_ = NULL;
  item_enter_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  judge_points_type_ = 0;
  check_start_type_ = 0;
  check_finish_type_ = 0;
  car_run_error_whether_check_ = true;
  car_run_error_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_error_deduction_ = 0;
  car_rk_check_right_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_rk_check_fail_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_rk_check_fail_deduction_ = 0;
  forwarding_pressline_ = NULL;
  rking_1_pressline_ = NULL;
  cking_1_pressline_ = NULL;
  rking_2_pressline_ = NULL;
  cking_2_pressline_ = NULL;
  car_run_not_staff_command_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_not_staff_command_deduction_ = 0;
  event_check_cking_1_leftturnlamp_ = NULL;
  event_check_cking_2_rightturnlamp_ = NULL;
  in_area_again_ = false;
  car_rk_check_delay_time_ = 0;
  event_check_forwarding_rightturnlamp_ = NULL;
  event_check_cking_1_rightturnlamp_ = NULL;
  event_check_cking_2_leftturnlamp_ = NULL;
  event_check_waitrk_1_leftturnlamp_ = NULL;
  event_check_waitrk_1_rightturnlamp_ = NULL;
  event_check_rkend_1_leftturnlamp_ = NULL;
  event_check_rkend_1_rightturnlamp_ = NULL;
  event_check_waitrk_2_leftturnlamp_ = NULL;
  event_check_waitrk_2_rightturnlamp_ = NULL;
  event_check_rkend_2_leftturnlamp_ = NULL;
  event_check_rkend_2_rightturnlamp_ = NULL;
  car_rking_1_frontwheel_over_controlline_check_ = true;
  car_rking_1_frontwheel_over_controlline_deduction_ = 100;
  car_rking_1_frontwheel_over_controlline_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_rking_2_frontwheel_over_controlline_check_ = true;
  car_rking_2_frontwheel_over_controlline_deduction_ = 100;
  car_rking_2_frontwheel_over_controlline_voice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemJudgeRuleDcrk::~ItemJudgeRuleDcrk() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemJudgeRuleDcrk)
  SharedDtor();
}

void ItemJudgeRuleDcrk::SharedDtor() {
  item_enter_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_leave_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_start_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_end_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_error_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_rk_check_right_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_rk_check_fail_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_run_not_staff_command_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_rking_1_frontwheel_over_controlline_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_rking_2_frontwheel_over_controlline_voice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete basic_event_check_;
    delete forwarding_pressline_;
    delete rking_1_pressline_;
    delete cking_1_pressline_;
    delete rking_2_pressline_;
    delete cking_2_pressline_;
    delete event_check_cking_1_leftturnlamp_;
    delete event_check_cking_2_rightturnlamp_;
    delete event_check_forwarding_rightturnlamp_;
    delete event_check_cking_1_rightturnlamp_;
    delete event_check_cking_2_leftturnlamp_;
    delete event_check_waitrk_1_leftturnlamp_;
    delete event_check_waitrk_1_rightturnlamp_;
    delete event_check_rkend_1_leftturnlamp_;
    delete event_check_rkend_1_rightturnlamp_;
    delete event_check_waitrk_2_leftturnlamp_;
    delete event_check_waitrk_2_rightturnlamp_;
    delete event_check_rkend_2_leftturnlamp_;
    delete event_check_rkend_2_rightturnlamp_;
  }
}

void ItemJudgeRuleDcrk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemJudgeRuleDcrk::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemJudgeRuleDcrk_descriptor_;
}

const ItemJudgeRuleDcrk& ItemJudgeRuleDcrk::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemJudgeRuleDcrk* ItemJudgeRuleDcrk::default_instance_ = NULL;

ItemJudgeRuleDcrk* ItemJudgeRuleDcrk::New(::google::protobuf::Arena* arena) const {
  ItemJudgeRuleDcrk* n = new ItemJudgeRuleDcrk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemJudgeRuleDcrk::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemJudgeRuleDcrk)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemJudgeRuleDcrk, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemJudgeRuleDcrk*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(judge_points_type_, check_finish_type_);
    if (has_basic_event_check()) {
      if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
    }
    if (has_item_enter_voice()) {
      item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_leave_voice()) {
      item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_start_voice()) {
      item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_item_end_voice()) {
      item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    car_run_error_whether_check_ = true;
    if (has_car_run_error_voice()) {
      car_run_error_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_run_error_deduction_ = 0;
    if (has_car_rk_check_right_voice()) {
      car_rk_check_right_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_car_rk_check_fail_voice()) {
      car_rk_check_fail_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_rk_check_fail_deduction_ = 0;
    if (has_forwarding_pressline()) {
      if (forwarding_pressline_ != NULL) forwarding_pressline_->::OPMessage::DcrkPressLine::Clear();
    }
    if (has_rking_1_pressline()) {
      if (rking_1_pressline_ != NULL) rking_1_pressline_->::OPMessage::DcrkPressLine::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 16711680u) {
    if (has_cking_1_pressline()) {
      if (cking_1_pressline_ != NULL) cking_1_pressline_->::OPMessage::DcrkPressLine::Clear();
    }
    if (has_rking_2_pressline()) {
      if (rking_2_pressline_ != NULL) rking_2_pressline_->::OPMessage::DcrkPressLine::Clear();
    }
    if (has_cking_2_pressline()) {
      if (cking_2_pressline_ != NULL) cking_2_pressline_->::OPMessage::DcrkPressLine::Clear();
    }
    if (has_car_run_not_staff_command_voice()) {
      car_run_not_staff_command_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_run_not_staff_command_deduction_ = 0;
    if (has_event_check_cking_1_leftturnlamp()) {
      if (event_check_cking_1_leftturnlamp_ != NULL) event_check_cking_1_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_event_check_cking_2_rightturnlamp()) {
      if (event_check_cking_2_rightturnlamp_ != NULL) event_check_cking_2_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
    in_area_again_ = false;
  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    car_rk_check_delay_time_ = 0;
    if (has_event_check_forwarding_rightturnlamp()) {
      if (event_check_forwarding_rightturnlamp_ != NULL) event_check_forwarding_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
    if (has_event_check_cking_1_rightturnlamp()) {
      if (event_check_cking_1_rightturnlamp_ != NULL) event_check_cking_1_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
    if (has_event_check_cking_2_leftturnlamp()) {
      if (event_check_cking_2_leftturnlamp_ != NULL) event_check_cking_2_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_event_check_waitrk_1_leftturnlamp()) {
      if (event_check_waitrk_1_leftturnlamp_ != NULL) event_check_waitrk_1_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_event_check_waitrk_1_rightturnlamp()) {
      if (event_check_waitrk_1_rightturnlamp_ != NULL) event_check_waitrk_1_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
    if (has_event_check_rkend_1_leftturnlamp()) {
      if (event_check_rkend_1_leftturnlamp_ != NULL) event_check_rkend_1_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_event_check_rkend_1_rightturnlamp()) {
      if (event_check_rkend_1_rightturnlamp_ != NULL) event_check_rkend_1_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
  }
  if (_has_bits_[32 / 32] & 255u) {
    if (has_event_check_waitrk_2_leftturnlamp()) {
      if (event_check_waitrk_2_leftturnlamp_ != NULL) event_check_waitrk_2_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_event_check_waitrk_2_rightturnlamp()) {
      if (event_check_waitrk_2_rightturnlamp_ != NULL) event_check_waitrk_2_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
    if (has_event_check_rkend_2_leftturnlamp()) {
      if (event_check_rkend_2_leftturnlamp_ != NULL) event_check_rkend_2_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
    }
    if (has_event_check_rkend_2_rightturnlamp()) {
      if (event_check_rkend_2_rightturnlamp_ != NULL) event_check_rkend_2_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
    }
    car_rking_1_frontwheel_over_controlline_check_ = true;
    car_rking_1_frontwheel_over_controlline_deduction_ = 100;
    if (has_car_rking_1_frontwheel_over_controlline_voice()) {
      car_rking_1_frontwheel_over_controlline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    car_rking_2_frontwheel_over_controlline_check_ = true;
  }
  if (_has_bits_[40 / 32] & 768u) {
    car_rking_2_frontwheel_over_controlline_deduction_ = 100;
    if (has_car_rking_2_frontwheel_over_controlline_voice()) {
      car_rking_2_frontwheel_over_controlline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemJudgeRuleDcrk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemJudgeRuleDcrk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_event_check()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_enter_voice;
        break;
      }

      // optional string item_enter_voice = 2;
      case 2: {
        if (tag == 18) {
         parse_item_enter_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_enter_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_enter_voice().data(), this->item_enter_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDcrk.item_enter_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_leave_voice;
        break;
      }

      // optional string item_leave_voice = 3;
      case 3: {
        if (tag == 26) {
         parse_item_leave_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_leave_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_leave_voice().data(), this->item_leave_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDcrk.item_leave_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_start_voice;
        break;
      }

      // optional string item_start_voice = 4;
      case 4: {
        if (tag == 34) {
         parse_item_start_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_start_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_start_voice().data(), this->item_start_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDcrk.item_start_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_end_voice;
        break;
      }

      // optional string item_end_voice = 5;
      case 5: {
        if (tag == 42) {
         parse_item_end_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_end_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_end_voice().data(), this->item_end_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDcrk.item_end_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_judge_points_type;
        break;
      }

      // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
      case 6: {
        if (tag == 48) {
         parse_judge_points_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::enum_judge_points_IsValid(value)) {
            set_judge_points_type(static_cast< ::OPMessage::enum_judge_points >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_check_start_type;
        break;
      }

      // optional .OPMessage.CheckStartCarPositionDcrk check_start_type = 7;
      case 7: {
        if (tag == 56) {
         parse_check_start_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckStartCarPositionDcrk_IsValid(value)) {
            set_check_start_type(static_cast< ::OPMessage::CheckStartCarPositionDcrk >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_check_finish_type;
        break;
      }

      // optional .OPMessage.CheckFinishCarPositionDcrk check_finish_type = 8;
      case 8: {
        if (tag == 64) {
         parse_check_finish_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::OPMessage::CheckFinishCarPositionDcrk_IsValid(value)) {
            set_check_finish_type(static_cast< ::OPMessage::CheckFinishCarPositionDcrk >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_car_run_error_whether_check;
        break;
      }

      // optional bool car_run_error_whether_check = 9 [default = true];
      case 9: {
        if (tag == 72) {
         parse_car_run_error_whether_check:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &car_run_error_whether_check_)));
          set_has_car_run_error_whether_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_car_run_error_voice;
        break;
      }

      // optional string car_run_error_voice = 10;
      case 10: {
        if (tag == 82) {
         parse_car_run_error_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_error_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_error_voice().data(), this->car_run_error_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDcrk.car_run_error_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_car_run_error_deduction;
        break;
      }

      // optional int32 car_run_error_deduction = 11;
      case 11: {
        if (tag == 88) {
         parse_car_run_error_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_error_deduction_)));
          set_has_car_run_error_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_car_rk_check_right_voice;
        break;
      }

      // optional string car_rk_check_right_voice = 12;
      case 12: {
        if (tag == 98) {
         parse_car_rk_check_right_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_rk_check_right_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_rk_check_right_voice().data(), this->car_rk_check_right_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_car_rk_check_fail_voice;
        break;
      }

      // optional string car_rk_check_fail_voice = 13;
      case 13: {
        if (tag == 106) {
         parse_car_rk_check_fail_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_rk_check_fail_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_rk_check_fail_voice().data(), this->car_rk_check_fail_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_car_rk_check_fail_deduction;
        break;
      }

      // optional int32 car_rk_check_fail_deduction = 14;
      case 14: {
        if (tag == 112) {
         parse_car_rk_check_fail_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_rk_check_fail_deduction_)));
          set_has_car_rk_check_fail_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_forwarding_pressline;
        break;
      }

      // optional .OPMessage.DcrkPressLine forwarding_pressline = 15;
      case 15: {
        if (tag == 122) {
         parse_forwarding_pressline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_forwarding_pressline()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_rking_1_pressline;
        break;
      }

      // optional .OPMessage.DcrkPressLine rking_1_pressline = 16;
      case 16: {
        if (tag == 130) {
         parse_rking_1_pressline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rking_1_pressline()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_cking_1_pressline;
        break;
      }

      // optional .OPMessage.DcrkPressLine cking_1_pressline = 17;
      case 17: {
        if (tag == 138) {
         parse_cking_1_pressline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cking_1_pressline()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_rking_2_pressline;
        break;
      }

      // optional .OPMessage.DcrkPressLine rking_2_pressline = 18;
      case 18: {
        if (tag == 146) {
         parse_rking_2_pressline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rking_2_pressline()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_cking_2_pressline;
        break;
      }

      // optional .OPMessage.DcrkPressLine cking_2_pressline = 19;
      case 19: {
        if (tag == 154) {
         parse_cking_2_pressline:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cking_2_pressline()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_car_run_not_staff_command_voice;
        break;
      }

      // optional string car_run_not_staff_command_voice = 20;
      case 20: {
        if (tag == 162) {
         parse_car_run_not_staff_command_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_run_not_staff_command_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_run_not_staff_command_voice().data(), this->car_run_not_staff_command_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_car_run_not_staff_command_deduction;
        break;
      }

      // optional int32 car_run_not_staff_command_deduction = 21;
      case 21: {
        if (tag == 168) {
         parse_car_run_not_staff_command_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_run_not_staff_command_deduction_)));
          set_has_car_run_not_staff_command_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_event_check_cking_1_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp event_check_cking_1_leftTurnLamp = 22;
      case 22: {
        if (tag == 178) {
         parse_event_check_cking_1_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_cking_1_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_event_check_cking_2_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_cking_2_rightTurnLamp = 23;
      case 23: {
        if (tag == 186) {
         parse_event_check_cking_2_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_cking_2_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(192)) goto parse_in_area_again;
        break;
      }

      // optional bool in_area_again = 24 [default = false];
      case 24: {
        if (tag == 192) {
         parse_in_area_again:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_area_again_)));
          set_has_in_area_again();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(200)) goto parse_car_rk_check_delay_time;
        break;
      }

      // optional int32 car_rk_check_delay_time = 25 [default = 0];
      case 25: {
        if (tag == 200) {
         parse_car_rk_check_delay_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_rk_check_delay_time_)));
          set_has_car_rk_check_delay_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_event_check_forwarding_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 26;
      case 26: {
        if (tag == 210) {
         parse_event_check_forwarding_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_forwarding_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_event_check_cking_1_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_cking_1_rightTurnLamp = 27;
      case 27: {
        if (tag == 218) {
         parse_event_check_cking_1_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_cking_1_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_event_check_cking_2_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp event_check_cking_2_leftTurnLamp = 28;
      case 28: {
        if (tag == 226) {
         parse_event_check_cking_2_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_cking_2_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_event_check_waitrk_1_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_1_leftTurnLamp = 29;
      case 29: {
        if (tag == 234) {
         parse_event_check_waitrk_1_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_waitrk_1_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(242)) goto parse_event_check_waitrk_1_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_1_rightTurnLamp = 30;
      case 30: {
        if (tag == 242) {
         parse_event_check_waitrk_1_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_waitrk_1_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_event_check_rkend_1_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_1_leftTurnLamp = 31;
      case 31: {
        if (tag == 250) {
         parse_event_check_rkend_1_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_rkend_1_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(258)) goto parse_event_check_rkend_1_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_rkend_1_rightTurnLamp = 32;
      case 32: {
        if (tag == 258) {
         parse_event_check_rkend_1_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_rkend_1_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(266)) goto parse_event_check_waitrk_2_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_2_leftTurnLamp = 33;
      case 33: {
        if (tag == 266) {
         parse_event_check_waitrk_2_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_waitrk_2_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(274)) goto parse_event_check_waitrk_2_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_2_rightTurnLamp = 34;
      case 34: {
        if (tag == 274) {
         parse_event_check_waitrk_2_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_waitrk_2_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(282)) goto parse_event_check_rkend_2_leftTurnLamp;
        break;
      }

      // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_2_leftTurnLamp = 35;
      case 35: {
        if (tag == 282) {
         parse_event_check_rkend_2_leftTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_rkend_2_leftturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(290)) goto parse_event_check_rkend_2_rightTurnLamp;
        break;
      }

      // optional .OPMessage.BasicRightTurnLamp event_check_rkend_2_rightTurnLamp = 36;
      case 36: {
        if (tag == 290) {
         parse_event_check_rkend_2_rightTurnLamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_event_check_rkend_2_rightturnlamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(296)) goto parse_car_rking_1_frontwheel_over_controlline_check;
        break;
      }

      // optional bool car_rking_1_frontwheel_over_controlline_check = 37 [default = true];
      case 37: {
        if (tag == 296) {
         parse_car_rking_1_frontwheel_over_controlline_check:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &car_rking_1_frontwheel_over_controlline_check_)));
          set_has_car_rking_1_frontwheel_over_controlline_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(304)) goto parse_car_rking_1_frontwheel_over_controlline_deduction;
        break;
      }

      // optional int32 car_rking_1_frontwheel_over_controlline_deduction = 38 [default = 100];
      case 38: {
        if (tag == 304) {
         parse_car_rking_1_frontwheel_over_controlline_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_rking_1_frontwheel_over_controlline_deduction_)));
          set_has_car_rking_1_frontwheel_over_controlline_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(314)) goto parse_car_rking_1_frontwheel_over_controlline_voice;
        break;
      }

      // optional string car_rking_1_frontwheel_over_controlline_voice = 39;
      case 39: {
        if (tag == 314) {
         parse_car_rking_1_frontwheel_over_controlline_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_rking_1_frontwheel_over_controlline_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_rking_1_frontwheel_over_controlline_voice().data(), this->car_rking_1_frontwheel_over_controlline_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(320)) goto parse_car_rking_2_frontwheel_over_controlline_check;
        break;
      }

      // optional bool car_rking_2_frontwheel_over_controlline_check = 40 [default = true];
      case 40: {
        if (tag == 320) {
         parse_car_rking_2_frontwheel_over_controlline_check:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &car_rking_2_frontwheel_over_controlline_check_)));
          set_has_car_rking_2_frontwheel_over_controlline_check();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(328)) goto parse_car_rking_2_frontwheel_over_controlline_deduction;
        break;
      }

      // optional int32 car_rking_2_frontwheel_over_controlline_deduction = 41 [default = 100];
      case 41: {
        if (tag == 328) {
         parse_car_rking_2_frontwheel_over_controlline_deduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &car_rking_2_frontwheel_over_controlline_deduction_)));
          set_has_car_rking_2_frontwheel_over_controlline_deduction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(338)) goto parse_car_rking_2_frontwheel_over_controlline_voice;
        break;
      }

      // optional string car_rking_2_frontwheel_over_controlline_voice = 42;
      case 42: {
        if (tag == 338) {
         parse_car_rking_2_frontwheel_over_controlline_voice:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_rking_2_frontwheel_over_controlline_voice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_rking_2_frontwheel_over_controlline_voice().data(), this->car_rking_2_frontwheel_over_controlline_voice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemJudgeRuleDcrk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemJudgeRuleDcrk)
  return false;
#undef DO_
}

void ItemJudgeRuleDcrk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemJudgeRuleDcrk)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basic_event_check_, output);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.item_enter_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_enter_voice(), output);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.item_leave_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_leave_voice(), output);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.item_start_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->item_start_voice(), output);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.item_end_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->item_end_voice(), output);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->judge_points_type(), output);
  }

  // optional .OPMessage.CheckStartCarPositionDcrk check_start_type = 7;
  if (has_check_start_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->check_start_type(), output);
  }

  // optional .OPMessage.CheckFinishCarPositionDcrk check_finish_type = 8;
  if (has_check_finish_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->check_finish_type(), output);
  }

  // optional bool car_run_error_whether_check = 9 [default = true];
  if (has_car_run_error_whether_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->car_run_error_whether_check(), output);
  }

  // optional string car_run_error_voice = 10;
  if (has_car_run_error_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_error_voice().data(), this->car_run_error_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.car_run_error_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->car_run_error_voice(), output);
  }

  // optional int32 car_run_error_deduction = 11;
  if (has_car_run_error_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->car_run_error_deduction(), output);
  }

  // optional string car_rk_check_right_voice = 12;
  if (has_car_rk_check_right_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_rk_check_right_voice().data(), this->car_rk_check_right_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->car_rk_check_right_voice(), output);
  }

  // optional string car_rk_check_fail_voice = 13;
  if (has_car_rk_check_fail_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_rk_check_fail_voice().data(), this->car_rk_check_fail_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->car_rk_check_fail_voice(), output);
  }

  // optional int32 car_rk_check_fail_deduction = 14;
  if (has_car_rk_check_fail_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->car_rk_check_fail_deduction(), output);
  }

  // optional .OPMessage.DcrkPressLine forwarding_pressline = 15;
  if (has_forwarding_pressline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->forwarding_pressline_, output);
  }

  // optional .OPMessage.DcrkPressLine rking_1_pressline = 16;
  if (has_rking_1_pressline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->rking_1_pressline_, output);
  }

  // optional .OPMessage.DcrkPressLine cking_1_pressline = 17;
  if (has_cking_1_pressline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->cking_1_pressline_, output);
  }

  // optional .OPMessage.DcrkPressLine rking_2_pressline = 18;
  if (has_rking_2_pressline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->rking_2_pressline_, output);
  }

  // optional .OPMessage.DcrkPressLine cking_2_pressline = 19;
  if (has_cking_2_pressline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->cking_2_pressline_, output);
  }

  // optional string car_run_not_staff_command_voice = 20;
  if (has_car_run_not_staff_command_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_not_staff_command_voice().data(), this->car_run_not_staff_command_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->car_run_not_staff_command_voice(), output);
  }

  // optional int32 car_run_not_staff_command_deduction = 21;
  if (has_car_run_not_staff_command_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->car_run_not_staff_command_deduction(), output);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_cking_1_leftTurnLamp = 22;
  if (has_event_check_cking_1_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->event_check_cking_1_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_cking_2_rightTurnLamp = 23;
  if (has_event_check_cking_2_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->event_check_cking_2_rightturnlamp_, output);
  }

  // optional bool in_area_again = 24 [default = false];
  if (has_in_area_again()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(24, this->in_area_again(), output);
  }

  // optional int32 car_rk_check_delay_time = 25 [default = 0];
  if (has_car_rk_check_delay_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->car_rk_check_delay_time(), output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 26;
  if (has_event_check_forwarding_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, *this->event_check_forwarding_rightturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_cking_1_rightTurnLamp = 27;
  if (has_event_check_cking_1_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, *this->event_check_cking_1_rightturnlamp_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_cking_2_leftTurnLamp = 28;
  if (has_event_check_cking_2_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, *this->event_check_cking_2_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_1_leftTurnLamp = 29;
  if (has_event_check_waitrk_1_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, *this->event_check_waitrk_1_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_1_rightTurnLamp = 30;
  if (has_event_check_waitrk_1_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->event_check_waitrk_1_rightturnlamp_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_1_leftTurnLamp = 31;
  if (has_event_check_rkend_1_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, *this->event_check_rkend_1_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_rkend_1_rightTurnLamp = 32;
  if (has_event_check_rkend_1_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, *this->event_check_rkend_1_rightturnlamp_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_2_leftTurnLamp = 33;
  if (has_event_check_waitrk_2_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, *this->event_check_waitrk_2_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_2_rightTurnLamp = 34;
  if (has_event_check_waitrk_2_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, *this->event_check_waitrk_2_rightturnlamp_, output);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_2_leftTurnLamp = 35;
  if (has_event_check_rkend_2_leftturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, *this->event_check_rkend_2_leftturnlamp_, output);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_rkend_2_rightTurnLamp = 36;
  if (has_event_check_rkend_2_rightturnlamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, *this->event_check_rkend_2_rightturnlamp_, output);
  }

  // optional bool car_rking_1_frontwheel_over_controlline_check = 37 [default = true];
  if (has_car_rking_1_frontwheel_over_controlline_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(37, this->car_rking_1_frontwheel_over_controlline_check(), output);
  }

  // optional int32 car_rking_1_frontwheel_over_controlline_deduction = 38 [default = 100];
  if (has_car_rking_1_frontwheel_over_controlline_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->car_rking_1_frontwheel_over_controlline_deduction(), output);
  }

  // optional string car_rking_1_frontwheel_over_controlline_voice = 39;
  if (has_car_rking_1_frontwheel_over_controlline_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_rking_1_frontwheel_over_controlline_voice().data(), this->car_rking_1_frontwheel_over_controlline_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      39, this->car_rking_1_frontwheel_over_controlline_voice(), output);
  }

  // optional bool car_rking_2_frontwheel_over_controlline_check = 40 [default = true];
  if (has_car_rking_2_frontwheel_over_controlline_check()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(40, this->car_rking_2_frontwheel_over_controlline_check(), output);
  }

  // optional int32 car_rking_2_frontwheel_over_controlline_deduction = 41 [default = 100];
  if (has_car_rking_2_frontwheel_over_controlline_deduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->car_rking_2_frontwheel_over_controlline_deduction(), output);
  }

  // optional string car_rking_2_frontwheel_over_controlline_voice = 42;
  if (has_car_rking_2_frontwheel_over_controlline_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_rking_2_frontwheel_over_controlline_voice().data(), this->car_rking_2_frontwheel_over_controlline_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      42, this->car_rking_2_frontwheel_over_controlline_voice(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemJudgeRuleDcrk)
}

::google::protobuf::uint8* ItemJudgeRuleDcrk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemJudgeRuleDcrk)
  // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
  if (has_basic_event_check()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basic_event_check_, false, target);
  }

  // optional string item_enter_voice = 2;
  if (has_item_enter_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_enter_voice().data(), this->item_enter_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.item_enter_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_enter_voice(), target);
  }

  // optional string item_leave_voice = 3;
  if (has_item_leave_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_leave_voice().data(), this->item_leave_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.item_leave_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_leave_voice(), target);
  }

  // optional string item_start_voice = 4;
  if (has_item_start_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_start_voice().data(), this->item_start_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.item_start_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->item_start_voice(), target);
  }

  // optional string item_end_voice = 5;
  if (has_item_end_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_end_voice().data(), this->item_end_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.item_end_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->item_end_voice(), target);
  }

  // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
  if (has_judge_points_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->judge_points_type(), target);
  }

  // optional .OPMessage.CheckStartCarPositionDcrk check_start_type = 7;
  if (has_check_start_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->check_start_type(), target);
  }

  // optional .OPMessage.CheckFinishCarPositionDcrk check_finish_type = 8;
  if (has_check_finish_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->check_finish_type(), target);
  }

  // optional bool car_run_error_whether_check = 9 [default = true];
  if (has_car_run_error_whether_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->car_run_error_whether_check(), target);
  }

  // optional string car_run_error_voice = 10;
  if (has_car_run_error_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_error_voice().data(), this->car_run_error_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.car_run_error_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->car_run_error_voice(), target);
  }

  // optional int32 car_run_error_deduction = 11;
  if (has_car_run_error_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->car_run_error_deduction(), target);
  }

  // optional string car_rk_check_right_voice = 12;
  if (has_car_rk_check_right_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_rk_check_right_voice().data(), this->car_rk_check_right_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->car_rk_check_right_voice(), target);
  }

  // optional string car_rk_check_fail_voice = 13;
  if (has_car_rk_check_fail_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_rk_check_fail_voice().data(), this->car_rk_check_fail_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->car_rk_check_fail_voice(), target);
  }

  // optional int32 car_rk_check_fail_deduction = 14;
  if (has_car_rk_check_fail_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->car_rk_check_fail_deduction(), target);
  }

  // optional .OPMessage.DcrkPressLine forwarding_pressline = 15;
  if (has_forwarding_pressline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->forwarding_pressline_, false, target);
  }

  // optional .OPMessage.DcrkPressLine rking_1_pressline = 16;
  if (has_rking_1_pressline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->rking_1_pressline_, false, target);
  }

  // optional .OPMessage.DcrkPressLine cking_1_pressline = 17;
  if (has_cking_1_pressline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->cking_1_pressline_, false, target);
  }

  // optional .OPMessage.DcrkPressLine rking_2_pressline = 18;
  if (has_rking_2_pressline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->rking_2_pressline_, false, target);
  }

  // optional .OPMessage.DcrkPressLine cking_2_pressline = 19;
  if (has_cking_2_pressline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *this->cking_2_pressline_, false, target);
  }

  // optional string car_run_not_staff_command_voice = 20;
  if (has_car_run_not_staff_command_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_run_not_staff_command_voice().data(), this->car_run_not_staff_command_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->car_run_not_staff_command_voice(), target);
  }

  // optional int32 car_run_not_staff_command_deduction = 21;
  if (has_car_run_not_staff_command_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->car_run_not_staff_command_deduction(), target);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_cking_1_leftTurnLamp = 22;
  if (has_event_check_cking_1_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->event_check_cking_1_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_cking_2_rightTurnLamp = 23;
  if (has_event_check_cking_2_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, *this->event_check_cking_2_rightturnlamp_, false, target);
  }

  // optional bool in_area_again = 24 [default = false];
  if (has_in_area_again()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(24, this->in_area_again(), target);
  }

  // optional int32 car_rk_check_delay_time = 25 [default = 0];
  if (has_car_rk_check_delay_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->car_rk_check_delay_time(), target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 26;
  if (has_event_check_forwarding_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        26, *this->event_check_forwarding_rightturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_cking_1_rightTurnLamp = 27;
  if (has_event_check_cking_1_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, *this->event_check_cking_1_rightturnlamp_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_cking_2_leftTurnLamp = 28;
  if (has_event_check_cking_2_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        28, *this->event_check_cking_2_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_1_leftTurnLamp = 29;
  if (has_event_check_waitrk_1_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        29, *this->event_check_waitrk_1_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_1_rightTurnLamp = 30;
  if (has_event_check_waitrk_1_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        30, *this->event_check_waitrk_1_rightturnlamp_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_1_leftTurnLamp = 31;
  if (has_event_check_rkend_1_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        31, *this->event_check_rkend_1_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_rkend_1_rightTurnLamp = 32;
  if (has_event_check_rkend_1_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        32, *this->event_check_rkend_1_rightturnlamp_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_2_leftTurnLamp = 33;
  if (has_event_check_waitrk_2_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        33, *this->event_check_waitrk_2_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_2_rightTurnLamp = 34;
  if (has_event_check_waitrk_2_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        34, *this->event_check_waitrk_2_rightturnlamp_, false, target);
  }

  // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_2_leftTurnLamp = 35;
  if (has_event_check_rkend_2_leftturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        35, *this->event_check_rkend_2_leftturnlamp_, false, target);
  }

  // optional .OPMessage.BasicRightTurnLamp event_check_rkend_2_rightTurnLamp = 36;
  if (has_event_check_rkend_2_rightturnlamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        36, *this->event_check_rkend_2_rightturnlamp_, false, target);
  }

  // optional bool car_rking_1_frontwheel_over_controlline_check = 37 [default = true];
  if (has_car_rking_1_frontwheel_over_controlline_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(37, this->car_rking_1_frontwheel_over_controlline_check(), target);
  }

  // optional int32 car_rking_1_frontwheel_over_controlline_deduction = 38 [default = 100];
  if (has_car_rking_1_frontwheel_over_controlline_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(38, this->car_rking_1_frontwheel_over_controlline_deduction(), target);
  }

  // optional string car_rking_1_frontwheel_over_controlline_voice = 39;
  if (has_car_rking_1_frontwheel_over_controlline_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_rking_1_frontwheel_over_controlline_voice().data(), this->car_rking_1_frontwheel_over_controlline_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        39, this->car_rking_1_frontwheel_over_controlline_voice(), target);
  }

  // optional bool car_rking_2_frontwheel_over_controlline_check = 40 [default = true];
  if (has_car_rking_2_frontwheel_over_controlline_check()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(40, this->car_rking_2_frontwheel_over_controlline_check(), target);
  }

  // optional int32 car_rking_2_frontwheel_over_controlline_deduction = 41 [default = 100];
  if (has_car_rking_2_frontwheel_over_controlline_deduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->car_rking_2_frontwheel_over_controlline_deduction(), target);
  }

  // optional string car_rking_2_frontwheel_over_controlline_voice = 42;
  if (has_car_rking_2_frontwheel_over_controlline_voice()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_rking_2_frontwheel_over_controlline_voice().data(), this->car_rking_2_frontwheel_over_controlline_voice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        42, this->car_rking_2_frontwheel_over_controlline_voice(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemJudgeRuleDcrk)
  return target;
}

int ItemJudgeRuleDcrk::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemJudgeRuleDcrk)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
    if (has_basic_event_check()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basic_event_check_);
    }

    // optional string item_enter_voice = 2;
    if (has_item_enter_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_enter_voice());
    }

    // optional string item_leave_voice = 3;
    if (has_item_leave_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_leave_voice());
    }

    // optional string item_start_voice = 4;
    if (has_item_start_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_start_voice());
    }

    // optional string item_end_voice = 5;
    if (has_item_end_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_end_voice());
    }

    // optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
    if (has_judge_points_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->judge_points_type());
    }

    // optional .OPMessage.CheckStartCarPositionDcrk check_start_type = 7;
    if (has_check_start_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_start_type());
    }

    // optional .OPMessage.CheckFinishCarPositionDcrk check_finish_type = 8;
    if (has_check_finish_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->check_finish_type());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool car_run_error_whether_check = 9 [default = true];
    if (has_car_run_error_whether_check()) {
      total_size += 1 + 1;
    }

    // optional string car_run_error_voice = 10;
    if (has_car_run_error_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_error_voice());
    }

    // optional int32 car_run_error_deduction = 11;
    if (has_car_run_error_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_error_deduction());
    }

    // optional string car_rk_check_right_voice = 12;
    if (has_car_rk_check_right_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_rk_check_right_voice());
    }

    // optional string car_rk_check_fail_voice = 13;
    if (has_car_rk_check_fail_voice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_rk_check_fail_voice());
    }

    // optional int32 car_rk_check_fail_deduction = 14;
    if (has_car_rk_check_fail_deduction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_rk_check_fail_deduction());
    }

    // optional .OPMessage.DcrkPressLine forwarding_pressline = 15;
    if (has_forwarding_pressline()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->forwarding_pressline_);
    }

    // optional .OPMessage.DcrkPressLine rking_1_pressline = 16;
    if (has_rking_1_pressline()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->rking_1_pressline_);
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional .OPMessage.DcrkPressLine cking_1_pressline = 17;
    if (has_cking_1_pressline()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cking_1_pressline_);
    }

    // optional .OPMessage.DcrkPressLine rking_2_pressline = 18;
    if (has_rking_2_pressline()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->rking_2_pressline_);
    }

    // optional .OPMessage.DcrkPressLine cking_2_pressline = 19;
    if (has_cking_2_pressline()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cking_2_pressline_);
    }

    // optional string car_run_not_staff_command_voice = 20;
    if (has_car_run_not_staff_command_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_run_not_staff_command_voice());
    }

    // optional int32 car_run_not_staff_command_deduction = 21;
    if (has_car_run_not_staff_command_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_run_not_staff_command_deduction());
    }

    // optional .OPMessage.BasicLeftTurnLamp event_check_cking_1_leftTurnLamp = 22;
    if (has_event_check_cking_1_leftturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_cking_1_leftturnlamp_);
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_cking_2_rightTurnLamp = 23;
    if (has_event_check_cking_2_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_cking_2_rightturnlamp_);
    }

    // optional bool in_area_again = 24 [default = false];
    if (has_in_area_again()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    // optional int32 car_rk_check_delay_time = 25 [default = 0];
    if (has_car_rk_check_delay_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_rk_check_delay_time());
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 26;
    if (has_event_check_forwarding_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_forwarding_rightturnlamp_);
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_cking_1_rightTurnLamp = 27;
    if (has_event_check_cking_1_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_cking_1_rightturnlamp_);
    }

    // optional .OPMessage.BasicLeftTurnLamp event_check_cking_2_leftTurnLamp = 28;
    if (has_event_check_cking_2_leftturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_cking_2_leftturnlamp_);
    }

    // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_1_leftTurnLamp = 29;
    if (has_event_check_waitrk_1_leftturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_waitrk_1_leftturnlamp_);
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_1_rightTurnLamp = 30;
    if (has_event_check_waitrk_1_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_waitrk_1_rightturnlamp_);
    }

    // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_1_leftTurnLamp = 31;
    if (has_event_check_rkend_1_leftturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_rkend_1_leftturnlamp_);
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_rkend_1_rightTurnLamp = 32;
    if (has_event_check_rkend_1_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_rkend_1_rightturnlamp_);
    }

  }
  if (_has_bits_[32 / 32] & 255u) {
    // optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_2_leftTurnLamp = 33;
    if (has_event_check_waitrk_2_leftturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_waitrk_2_leftturnlamp_);
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_waitrk_2_rightTurnLamp = 34;
    if (has_event_check_waitrk_2_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_waitrk_2_rightturnlamp_);
    }

    // optional .OPMessage.BasicLeftTurnLamp event_check_rkend_2_leftTurnLamp = 35;
    if (has_event_check_rkend_2_leftturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_rkend_2_leftturnlamp_);
    }

    // optional .OPMessage.BasicRightTurnLamp event_check_rkend_2_rightTurnLamp = 36;
    if (has_event_check_rkend_2_rightturnlamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->event_check_rkend_2_rightturnlamp_);
    }

    // optional bool car_rking_1_frontwheel_over_controlline_check = 37 [default = true];
    if (has_car_rking_1_frontwheel_over_controlline_check()) {
      total_size += 2 + 1;
    }

    // optional int32 car_rking_1_frontwheel_over_controlline_deduction = 38 [default = 100];
    if (has_car_rking_1_frontwheel_over_controlline_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_rking_1_frontwheel_over_controlline_deduction());
    }

    // optional string car_rking_1_frontwheel_over_controlline_voice = 39;
    if (has_car_rking_1_frontwheel_over_controlline_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_rking_1_frontwheel_over_controlline_voice());
    }

    // optional bool car_rking_2_frontwheel_over_controlline_check = 40 [default = true];
    if (has_car_rking_2_frontwheel_over_controlline_check()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[40 / 32] & 768u) {
    // optional int32 car_rking_2_frontwheel_over_controlline_deduction = 41 [default = 100];
    if (has_car_rking_2_frontwheel_over_controlline_deduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->car_rking_2_frontwheel_over_controlline_deduction());
    }

    // optional string car_rking_2_frontwheel_over_controlline_voice = 42;
    if (has_car_rking_2_frontwheel_over_controlline_voice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->car_rking_2_frontwheel_over_controlline_voice());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemJudgeRuleDcrk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemJudgeRuleDcrk)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemJudgeRuleDcrk* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemJudgeRuleDcrk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemJudgeRuleDcrk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemJudgeRuleDcrk)
    MergeFrom(*source);
  }
}

void ItemJudgeRuleDcrk::MergeFrom(const ItemJudgeRuleDcrk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemJudgeRuleDcrk)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_basic_event_check()) {
      mutable_basic_event_check()->::OPMessage::ItemJudgeBasic::MergeFrom(from.basic_event_check());
    }
    if (from.has_item_enter_voice()) {
      set_has_item_enter_voice();
      item_enter_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_enter_voice_);
    }
    if (from.has_item_leave_voice()) {
      set_has_item_leave_voice();
      item_leave_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_leave_voice_);
    }
    if (from.has_item_start_voice()) {
      set_has_item_start_voice();
      item_start_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_start_voice_);
    }
    if (from.has_item_end_voice()) {
      set_has_item_end_voice();
      item_end_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_end_voice_);
    }
    if (from.has_judge_points_type()) {
      set_judge_points_type(from.judge_points_type());
    }
    if (from.has_check_start_type()) {
      set_check_start_type(from.check_start_type());
    }
    if (from.has_check_finish_type()) {
      set_check_finish_type(from.check_finish_type());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_car_run_error_whether_check()) {
      set_car_run_error_whether_check(from.car_run_error_whether_check());
    }
    if (from.has_car_run_error_voice()) {
      set_has_car_run_error_voice();
      car_run_error_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_error_voice_);
    }
    if (from.has_car_run_error_deduction()) {
      set_car_run_error_deduction(from.car_run_error_deduction());
    }
    if (from.has_car_rk_check_right_voice()) {
      set_has_car_rk_check_right_voice();
      car_rk_check_right_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_rk_check_right_voice_);
    }
    if (from.has_car_rk_check_fail_voice()) {
      set_has_car_rk_check_fail_voice();
      car_rk_check_fail_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_rk_check_fail_voice_);
    }
    if (from.has_car_rk_check_fail_deduction()) {
      set_car_rk_check_fail_deduction(from.car_rk_check_fail_deduction());
    }
    if (from.has_forwarding_pressline()) {
      mutable_forwarding_pressline()->::OPMessage::DcrkPressLine::MergeFrom(from.forwarding_pressline());
    }
    if (from.has_rking_1_pressline()) {
      mutable_rking_1_pressline()->::OPMessage::DcrkPressLine::MergeFrom(from.rking_1_pressline());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_cking_1_pressline()) {
      mutable_cking_1_pressline()->::OPMessage::DcrkPressLine::MergeFrom(from.cking_1_pressline());
    }
    if (from.has_rking_2_pressline()) {
      mutable_rking_2_pressline()->::OPMessage::DcrkPressLine::MergeFrom(from.rking_2_pressline());
    }
    if (from.has_cking_2_pressline()) {
      mutable_cking_2_pressline()->::OPMessage::DcrkPressLine::MergeFrom(from.cking_2_pressline());
    }
    if (from.has_car_run_not_staff_command_voice()) {
      set_has_car_run_not_staff_command_voice();
      car_run_not_staff_command_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_run_not_staff_command_voice_);
    }
    if (from.has_car_run_not_staff_command_deduction()) {
      set_car_run_not_staff_command_deduction(from.car_run_not_staff_command_deduction());
    }
    if (from.has_event_check_cking_1_leftturnlamp()) {
      mutable_event_check_cking_1_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.event_check_cking_1_leftturnlamp());
    }
    if (from.has_event_check_cking_2_rightturnlamp()) {
      mutable_event_check_cking_2_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_cking_2_rightturnlamp());
    }
    if (from.has_in_area_again()) {
      set_in_area_again(from.in_area_again());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_car_rk_check_delay_time()) {
      set_car_rk_check_delay_time(from.car_rk_check_delay_time());
    }
    if (from.has_event_check_forwarding_rightturnlamp()) {
      mutable_event_check_forwarding_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_forwarding_rightturnlamp());
    }
    if (from.has_event_check_cking_1_rightturnlamp()) {
      mutable_event_check_cking_1_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_cking_1_rightturnlamp());
    }
    if (from.has_event_check_cking_2_leftturnlamp()) {
      mutable_event_check_cking_2_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.event_check_cking_2_leftturnlamp());
    }
    if (from.has_event_check_waitrk_1_leftturnlamp()) {
      mutable_event_check_waitrk_1_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.event_check_waitrk_1_leftturnlamp());
    }
    if (from.has_event_check_waitrk_1_rightturnlamp()) {
      mutable_event_check_waitrk_1_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_waitrk_1_rightturnlamp());
    }
    if (from.has_event_check_rkend_1_leftturnlamp()) {
      mutable_event_check_rkend_1_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.event_check_rkend_1_leftturnlamp());
    }
    if (from.has_event_check_rkend_1_rightturnlamp()) {
      mutable_event_check_rkend_1_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_rkend_1_rightturnlamp());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_event_check_waitrk_2_leftturnlamp()) {
      mutable_event_check_waitrk_2_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.event_check_waitrk_2_leftturnlamp());
    }
    if (from.has_event_check_waitrk_2_rightturnlamp()) {
      mutable_event_check_waitrk_2_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_waitrk_2_rightturnlamp());
    }
    if (from.has_event_check_rkend_2_leftturnlamp()) {
      mutable_event_check_rkend_2_leftturnlamp()->::OPMessage::BasicLeftTurnLamp::MergeFrom(from.event_check_rkend_2_leftturnlamp());
    }
    if (from.has_event_check_rkend_2_rightturnlamp()) {
      mutable_event_check_rkend_2_rightturnlamp()->::OPMessage::BasicRightTurnLamp::MergeFrom(from.event_check_rkend_2_rightturnlamp());
    }
    if (from.has_car_rking_1_frontwheel_over_controlline_check()) {
      set_car_rking_1_frontwheel_over_controlline_check(from.car_rking_1_frontwheel_over_controlline_check());
    }
    if (from.has_car_rking_1_frontwheel_over_controlline_deduction()) {
      set_car_rking_1_frontwheel_over_controlline_deduction(from.car_rking_1_frontwheel_over_controlline_deduction());
    }
    if (from.has_car_rking_1_frontwheel_over_controlline_voice()) {
      set_has_car_rking_1_frontwheel_over_controlline_voice();
      car_rking_1_frontwheel_over_controlline_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_rking_1_frontwheel_over_controlline_voice_);
    }
    if (from.has_car_rking_2_frontwheel_over_controlline_check()) {
      set_car_rking_2_frontwheel_over_controlline_check(from.car_rking_2_frontwheel_over_controlline_check());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_car_rking_2_frontwheel_over_controlline_deduction()) {
      set_car_rking_2_frontwheel_over_controlline_deduction(from.car_rking_2_frontwheel_over_controlline_deduction());
    }
    if (from.has_car_rking_2_frontwheel_over_controlline_voice()) {
      set_has_car_rking_2_frontwheel_over_controlline_voice();
      car_rking_2_frontwheel_over_controlline_voice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_rking_2_frontwheel_over_controlline_voice_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemJudgeRuleDcrk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemJudgeRuleDcrk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemJudgeRuleDcrk::CopyFrom(const ItemJudgeRuleDcrk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemJudgeRuleDcrk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemJudgeRuleDcrk::IsInitialized() const {

  return true;
}

void ItemJudgeRuleDcrk::Swap(ItemJudgeRuleDcrk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemJudgeRuleDcrk::InternalSwap(ItemJudgeRuleDcrk* other) {
  std::swap(basic_event_check_, other->basic_event_check_);
  item_enter_voice_.Swap(&other->item_enter_voice_);
  item_leave_voice_.Swap(&other->item_leave_voice_);
  item_start_voice_.Swap(&other->item_start_voice_);
  item_end_voice_.Swap(&other->item_end_voice_);
  std::swap(judge_points_type_, other->judge_points_type_);
  std::swap(check_start_type_, other->check_start_type_);
  std::swap(check_finish_type_, other->check_finish_type_);
  std::swap(car_run_error_whether_check_, other->car_run_error_whether_check_);
  car_run_error_voice_.Swap(&other->car_run_error_voice_);
  std::swap(car_run_error_deduction_, other->car_run_error_deduction_);
  car_rk_check_right_voice_.Swap(&other->car_rk_check_right_voice_);
  car_rk_check_fail_voice_.Swap(&other->car_rk_check_fail_voice_);
  std::swap(car_rk_check_fail_deduction_, other->car_rk_check_fail_deduction_);
  std::swap(forwarding_pressline_, other->forwarding_pressline_);
  std::swap(rking_1_pressline_, other->rking_1_pressline_);
  std::swap(cking_1_pressline_, other->cking_1_pressline_);
  std::swap(rking_2_pressline_, other->rking_2_pressline_);
  std::swap(cking_2_pressline_, other->cking_2_pressline_);
  car_run_not_staff_command_voice_.Swap(&other->car_run_not_staff_command_voice_);
  std::swap(car_run_not_staff_command_deduction_, other->car_run_not_staff_command_deduction_);
  std::swap(event_check_cking_1_leftturnlamp_, other->event_check_cking_1_leftturnlamp_);
  std::swap(event_check_cking_2_rightturnlamp_, other->event_check_cking_2_rightturnlamp_);
  std::swap(in_area_again_, other->in_area_again_);
  std::swap(car_rk_check_delay_time_, other->car_rk_check_delay_time_);
  std::swap(event_check_forwarding_rightturnlamp_, other->event_check_forwarding_rightturnlamp_);
  std::swap(event_check_cking_1_rightturnlamp_, other->event_check_cking_1_rightturnlamp_);
  std::swap(event_check_cking_2_leftturnlamp_, other->event_check_cking_2_leftturnlamp_);
  std::swap(event_check_waitrk_1_leftturnlamp_, other->event_check_waitrk_1_leftturnlamp_);
  std::swap(event_check_waitrk_1_rightturnlamp_, other->event_check_waitrk_1_rightturnlamp_);
  std::swap(event_check_rkend_1_leftturnlamp_, other->event_check_rkend_1_leftturnlamp_);
  std::swap(event_check_rkend_1_rightturnlamp_, other->event_check_rkend_1_rightturnlamp_);
  std::swap(event_check_waitrk_2_leftturnlamp_, other->event_check_waitrk_2_leftturnlamp_);
  std::swap(event_check_waitrk_2_rightturnlamp_, other->event_check_waitrk_2_rightturnlamp_);
  std::swap(event_check_rkend_2_leftturnlamp_, other->event_check_rkend_2_leftturnlamp_);
  std::swap(event_check_rkend_2_rightturnlamp_, other->event_check_rkend_2_rightturnlamp_);
  std::swap(car_rking_1_frontwheel_over_controlline_check_, other->car_rking_1_frontwheel_over_controlline_check_);
  std::swap(car_rking_1_frontwheel_over_controlline_deduction_, other->car_rking_1_frontwheel_over_controlline_deduction_);
  car_rking_1_frontwheel_over_controlline_voice_.Swap(&other->car_rking_1_frontwheel_over_controlline_voice_);
  std::swap(car_rking_2_frontwheel_over_controlline_check_, other->car_rking_2_frontwheel_over_controlline_check_);
  std::swap(car_rking_2_frontwheel_over_controlline_deduction_, other->car_rking_2_frontwheel_over_controlline_deduction_);
  car_rking_2_frontwheel_over_controlline_voice_.Swap(&other->car_rking_2_frontwheel_over_controlline_voice_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  std::swap(_has_bits_[1], other->_has_bits_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemJudgeRuleDcrk::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemJudgeRuleDcrk_descriptor_;
  metadata.reflection = ItemJudgeRuleDcrk_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemJudgeRuleDcrk

// optional .OPMessage.ItemJudgeBasic basic_event_check = 1;
bool ItemJudgeRuleDcrk::has_basic_event_check() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemJudgeRuleDcrk::set_has_basic_event_check() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemJudgeRuleDcrk::clear_has_basic_event_check() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemJudgeRuleDcrk::clear_basic_event_check() {
  if (basic_event_check_ != NULL) basic_event_check_->::OPMessage::ItemJudgeBasic::Clear();
  clear_has_basic_event_check();
}
const ::OPMessage::ItemJudgeBasic& ItemJudgeRuleDcrk::basic_event_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.basic_event_check)
  return basic_event_check_ != NULL ? *basic_event_check_ : *default_instance_->basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleDcrk::mutable_basic_event_check() {
  set_has_basic_event_check();
  if (basic_event_check_ == NULL) {
    basic_event_check_ = new ::OPMessage::ItemJudgeBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.basic_event_check)
  return basic_event_check_;
}
::OPMessage::ItemJudgeBasic* ItemJudgeRuleDcrk::release_basic_event_check() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.basic_event_check)
  clear_has_basic_event_check();
  ::OPMessage::ItemJudgeBasic* temp = basic_event_check_;
  basic_event_check_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_basic_event_check(::OPMessage::ItemJudgeBasic* basic_event_check) {
  delete basic_event_check_;
  basic_event_check_ = basic_event_check;
  if (basic_event_check) {
    set_has_basic_event_check();
  } else {
    clear_has_basic_event_check();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.basic_event_check)
}

// optional string item_enter_voice = 2;
bool ItemJudgeRuleDcrk::has_item_enter_voice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemJudgeRuleDcrk::set_has_item_enter_voice() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemJudgeRuleDcrk::clear_has_item_enter_voice() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemJudgeRuleDcrk::clear_item_enter_voice() {
  item_enter_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_enter_voice();
}
 const ::std::string& ItemJudgeRuleDcrk::item_enter_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
  return item_enter_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_item_enter_voice(const ::std::string& value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
}
 void ItemJudgeRuleDcrk::set_item_enter_voice(const char* value) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
}
 void ItemJudgeRuleDcrk::set_item_enter_voice(const char* value, size_t size) {
  set_has_item_enter_voice();
  item_enter_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
}
 ::std::string* ItemJudgeRuleDcrk::mutable_item_enter_voice() {
  set_has_item_enter_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
  return item_enter_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDcrk::release_item_enter_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
  clear_has_item_enter_voice();
  return item_enter_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_allocated_item_enter_voice(::std::string* item_enter_voice) {
  if (item_enter_voice != NULL) {
    set_has_item_enter_voice();
  } else {
    clear_has_item_enter_voice();
  }
  item_enter_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_enter_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.item_enter_voice)
}

// optional string item_leave_voice = 3;
bool ItemJudgeRuleDcrk::has_item_leave_voice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemJudgeRuleDcrk::set_has_item_leave_voice() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemJudgeRuleDcrk::clear_has_item_leave_voice() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemJudgeRuleDcrk::clear_item_leave_voice() {
  item_leave_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_leave_voice();
}
 const ::std::string& ItemJudgeRuleDcrk::item_leave_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
  return item_leave_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_item_leave_voice(const ::std::string& value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
}
 void ItemJudgeRuleDcrk::set_item_leave_voice(const char* value) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
}
 void ItemJudgeRuleDcrk::set_item_leave_voice(const char* value, size_t size) {
  set_has_item_leave_voice();
  item_leave_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
}
 ::std::string* ItemJudgeRuleDcrk::mutable_item_leave_voice() {
  set_has_item_leave_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
  return item_leave_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDcrk::release_item_leave_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
  clear_has_item_leave_voice();
  return item_leave_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_allocated_item_leave_voice(::std::string* item_leave_voice) {
  if (item_leave_voice != NULL) {
    set_has_item_leave_voice();
  } else {
    clear_has_item_leave_voice();
  }
  item_leave_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_leave_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.item_leave_voice)
}

// optional string item_start_voice = 4;
bool ItemJudgeRuleDcrk::has_item_start_voice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemJudgeRuleDcrk::set_has_item_start_voice() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemJudgeRuleDcrk::clear_has_item_start_voice() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemJudgeRuleDcrk::clear_item_start_voice() {
  item_start_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_start_voice();
}
 const ::std::string& ItemJudgeRuleDcrk::item_start_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
  return item_start_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_item_start_voice(const ::std::string& value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
}
 void ItemJudgeRuleDcrk::set_item_start_voice(const char* value) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
}
 void ItemJudgeRuleDcrk::set_item_start_voice(const char* value, size_t size) {
  set_has_item_start_voice();
  item_start_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
}
 ::std::string* ItemJudgeRuleDcrk::mutable_item_start_voice() {
  set_has_item_start_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
  return item_start_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDcrk::release_item_start_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
  clear_has_item_start_voice();
  return item_start_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_allocated_item_start_voice(::std::string* item_start_voice) {
  if (item_start_voice != NULL) {
    set_has_item_start_voice();
  } else {
    clear_has_item_start_voice();
  }
  item_start_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_start_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.item_start_voice)
}

// optional string item_end_voice = 5;
bool ItemJudgeRuleDcrk::has_item_end_voice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemJudgeRuleDcrk::set_has_item_end_voice() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemJudgeRuleDcrk::clear_has_item_end_voice() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemJudgeRuleDcrk::clear_item_end_voice() {
  item_end_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_end_voice();
}
 const ::std::string& ItemJudgeRuleDcrk::item_end_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
  return item_end_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_item_end_voice(const ::std::string& value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
}
 void ItemJudgeRuleDcrk::set_item_end_voice(const char* value) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
}
 void ItemJudgeRuleDcrk::set_item_end_voice(const char* value, size_t size) {
  set_has_item_end_voice();
  item_end_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
}
 ::std::string* ItemJudgeRuleDcrk::mutable_item_end_voice() {
  set_has_item_end_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
  return item_end_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDcrk::release_item_end_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
  clear_has_item_end_voice();
  return item_end_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_allocated_item_end_voice(::std::string* item_end_voice) {
  if (item_end_voice != NULL) {
    set_has_item_end_voice();
  } else {
    clear_has_item_end_voice();
  }
  item_end_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_end_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.item_end_voice)
}

// optional .OPMessage.enum_judge_points judge_points_type = 6 [default = points_car_all];
bool ItemJudgeRuleDcrk::has_judge_points_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemJudgeRuleDcrk::set_has_judge_points_type() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemJudgeRuleDcrk::clear_has_judge_points_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemJudgeRuleDcrk::clear_judge_points_type() {
  judge_points_type_ = 0;
  clear_has_judge_points_type();
}
 ::OPMessage::enum_judge_points ItemJudgeRuleDcrk::judge_points_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.judge_points_type)
  return static_cast< ::OPMessage::enum_judge_points >(judge_points_type_);
}
 void ItemJudgeRuleDcrk::set_judge_points_type(::OPMessage::enum_judge_points value) {
  assert(::OPMessage::enum_judge_points_IsValid(value));
  set_has_judge_points_type();
  judge_points_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.judge_points_type)
}

// optional .OPMessage.CheckStartCarPositionDcrk check_start_type = 7;
bool ItemJudgeRuleDcrk::has_check_start_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemJudgeRuleDcrk::set_has_check_start_type() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemJudgeRuleDcrk::clear_has_check_start_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemJudgeRuleDcrk::clear_check_start_type() {
  check_start_type_ = 0;
  clear_has_check_start_type();
}
 ::OPMessage::CheckStartCarPositionDcrk ItemJudgeRuleDcrk::check_start_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.check_start_type)
  return static_cast< ::OPMessage::CheckStartCarPositionDcrk >(check_start_type_);
}
 void ItemJudgeRuleDcrk::set_check_start_type(::OPMessage::CheckStartCarPositionDcrk value) {
  assert(::OPMessage::CheckStartCarPositionDcrk_IsValid(value));
  set_has_check_start_type();
  check_start_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.check_start_type)
}

// optional .OPMessage.CheckFinishCarPositionDcrk check_finish_type = 8;
bool ItemJudgeRuleDcrk::has_check_finish_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemJudgeRuleDcrk::set_has_check_finish_type() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemJudgeRuleDcrk::clear_has_check_finish_type() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemJudgeRuleDcrk::clear_check_finish_type() {
  check_finish_type_ = 0;
  clear_has_check_finish_type();
}
 ::OPMessage::CheckFinishCarPositionDcrk ItemJudgeRuleDcrk::check_finish_type() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.check_finish_type)
  return static_cast< ::OPMessage::CheckFinishCarPositionDcrk >(check_finish_type_);
}
 void ItemJudgeRuleDcrk::set_check_finish_type(::OPMessage::CheckFinishCarPositionDcrk value) {
  assert(::OPMessage::CheckFinishCarPositionDcrk_IsValid(value));
  set_has_check_finish_type();
  check_finish_type_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.check_finish_type)
}

// optional bool car_run_error_whether_check = 9 [default = true];
bool ItemJudgeRuleDcrk::has_car_run_error_whether_check() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_run_error_whether_check() {
  _has_bits_[0] |= 0x00000100u;
}
void ItemJudgeRuleDcrk::clear_has_car_run_error_whether_check() {
  _has_bits_[0] &= ~0x00000100u;
}
void ItemJudgeRuleDcrk::clear_car_run_error_whether_check() {
  car_run_error_whether_check_ = true;
  clear_has_car_run_error_whether_check();
}
 bool ItemJudgeRuleDcrk::car_run_error_whether_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_run_error_whether_check)
  return car_run_error_whether_check_;
}
 void ItemJudgeRuleDcrk::set_car_run_error_whether_check(bool value) {
  set_has_car_run_error_whether_check();
  car_run_error_whether_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_run_error_whether_check)
}

// optional string car_run_error_voice = 10;
bool ItemJudgeRuleDcrk::has_car_run_error_voice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_run_error_voice() {
  _has_bits_[0] |= 0x00000200u;
}
void ItemJudgeRuleDcrk::clear_has_car_run_error_voice() {
  _has_bits_[0] &= ~0x00000200u;
}
void ItemJudgeRuleDcrk::clear_car_run_error_voice() {
  car_run_error_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_error_voice();
}
 const ::std::string& ItemJudgeRuleDcrk::car_run_error_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
  return car_run_error_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_car_run_error_voice(const ::std::string& value) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
}
 void ItemJudgeRuleDcrk::set_car_run_error_voice(const char* value) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
}
 void ItemJudgeRuleDcrk::set_car_run_error_voice(const char* value, size_t size) {
  set_has_car_run_error_voice();
  car_run_error_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
}
 ::std::string* ItemJudgeRuleDcrk::mutable_car_run_error_voice() {
  set_has_car_run_error_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
  return car_run_error_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDcrk::release_car_run_error_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
  clear_has_car_run_error_voice();
  return car_run_error_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_allocated_car_run_error_voice(::std::string* car_run_error_voice) {
  if (car_run_error_voice != NULL) {
    set_has_car_run_error_voice();
  } else {
    clear_has_car_run_error_voice();
  }
  car_run_error_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_error_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.car_run_error_voice)
}

// optional int32 car_run_error_deduction = 11;
bool ItemJudgeRuleDcrk::has_car_run_error_deduction() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_run_error_deduction() {
  _has_bits_[0] |= 0x00000400u;
}
void ItemJudgeRuleDcrk::clear_has_car_run_error_deduction() {
  _has_bits_[0] &= ~0x00000400u;
}
void ItemJudgeRuleDcrk::clear_car_run_error_deduction() {
  car_run_error_deduction_ = 0;
  clear_has_car_run_error_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleDcrk::car_run_error_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_run_error_deduction)
  return car_run_error_deduction_;
}
 void ItemJudgeRuleDcrk::set_car_run_error_deduction(::google::protobuf::int32 value) {
  set_has_car_run_error_deduction();
  car_run_error_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_run_error_deduction)
}

// optional string car_rk_check_right_voice = 12;
bool ItemJudgeRuleDcrk::has_car_rk_check_right_voice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_rk_check_right_voice() {
  _has_bits_[0] |= 0x00000800u;
}
void ItemJudgeRuleDcrk::clear_has_car_rk_check_right_voice() {
  _has_bits_[0] &= ~0x00000800u;
}
void ItemJudgeRuleDcrk::clear_car_rk_check_right_voice() {
  car_rk_check_right_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_rk_check_right_voice();
}
 const ::std::string& ItemJudgeRuleDcrk::car_rk_check_right_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
  return car_rk_check_right_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_car_rk_check_right_voice(const ::std::string& value) {
  set_has_car_rk_check_right_voice();
  car_rk_check_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
}
 void ItemJudgeRuleDcrk::set_car_rk_check_right_voice(const char* value) {
  set_has_car_rk_check_right_voice();
  car_rk_check_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
}
 void ItemJudgeRuleDcrk::set_car_rk_check_right_voice(const char* value, size_t size) {
  set_has_car_rk_check_right_voice();
  car_rk_check_right_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
}
 ::std::string* ItemJudgeRuleDcrk::mutable_car_rk_check_right_voice() {
  set_has_car_rk_check_right_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
  return car_rk_check_right_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDcrk::release_car_rk_check_right_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
  clear_has_car_rk_check_right_voice();
  return car_rk_check_right_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_allocated_car_rk_check_right_voice(::std::string* car_rk_check_right_voice) {
  if (car_rk_check_right_voice != NULL) {
    set_has_car_rk_check_right_voice();
  } else {
    clear_has_car_rk_check_right_voice();
  }
  car_rk_check_right_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_rk_check_right_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.car_rk_check_right_voice)
}

// optional string car_rk_check_fail_voice = 13;
bool ItemJudgeRuleDcrk::has_car_rk_check_fail_voice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_rk_check_fail_voice() {
  _has_bits_[0] |= 0x00001000u;
}
void ItemJudgeRuleDcrk::clear_has_car_rk_check_fail_voice() {
  _has_bits_[0] &= ~0x00001000u;
}
void ItemJudgeRuleDcrk::clear_car_rk_check_fail_voice() {
  car_rk_check_fail_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_rk_check_fail_voice();
}
 const ::std::string& ItemJudgeRuleDcrk::car_rk_check_fail_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
  return car_rk_check_fail_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_car_rk_check_fail_voice(const ::std::string& value) {
  set_has_car_rk_check_fail_voice();
  car_rk_check_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
}
 void ItemJudgeRuleDcrk::set_car_rk_check_fail_voice(const char* value) {
  set_has_car_rk_check_fail_voice();
  car_rk_check_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
}
 void ItemJudgeRuleDcrk::set_car_rk_check_fail_voice(const char* value, size_t size) {
  set_has_car_rk_check_fail_voice();
  car_rk_check_fail_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
}
 ::std::string* ItemJudgeRuleDcrk::mutable_car_rk_check_fail_voice() {
  set_has_car_rk_check_fail_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
  return car_rk_check_fail_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDcrk::release_car_rk_check_fail_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
  clear_has_car_rk_check_fail_voice();
  return car_rk_check_fail_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_allocated_car_rk_check_fail_voice(::std::string* car_rk_check_fail_voice) {
  if (car_rk_check_fail_voice != NULL) {
    set_has_car_rk_check_fail_voice();
  } else {
    clear_has_car_rk_check_fail_voice();
  }
  car_rk_check_fail_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_rk_check_fail_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_voice)
}

// optional int32 car_rk_check_fail_deduction = 14;
bool ItemJudgeRuleDcrk::has_car_rk_check_fail_deduction() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_rk_check_fail_deduction() {
  _has_bits_[0] |= 0x00002000u;
}
void ItemJudgeRuleDcrk::clear_has_car_rk_check_fail_deduction() {
  _has_bits_[0] &= ~0x00002000u;
}
void ItemJudgeRuleDcrk::clear_car_rk_check_fail_deduction() {
  car_rk_check_fail_deduction_ = 0;
  clear_has_car_rk_check_fail_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleDcrk::car_rk_check_fail_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_deduction)
  return car_rk_check_fail_deduction_;
}
 void ItemJudgeRuleDcrk::set_car_rk_check_fail_deduction(::google::protobuf::int32 value) {
  set_has_car_rk_check_fail_deduction();
  car_rk_check_fail_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rk_check_fail_deduction)
}

// optional .OPMessage.DcrkPressLine forwarding_pressline = 15;
bool ItemJudgeRuleDcrk::has_forwarding_pressline() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_forwarding_pressline() {
  _has_bits_[0] |= 0x00004000u;
}
void ItemJudgeRuleDcrk::clear_has_forwarding_pressline() {
  _has_bits_[0] &= ~0x00004000u;
}
void ItemJudgeRuleDcrk::clear_forwarding_pressline() {
  if (forwarding_pressline_ != NULL) forwarding_pressline_->::OPMessage::DcrkPressLine::Clear();
  clear_has_forwarding_pressline();
}
const ::OPMessage::DcrkPressLine& ItemJudgeRuleDcrk::forwarding_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.forwarding_pressline)
  return forwarding_pressline_ != NULL ? *forwarding_pressline_ : *default_instance_->forwarding_pressline_;
}
::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::mutable_forwarding_pressline() {
  set_has_forwarding_pressline();
  if (forwarding_pressline_ == NULL) {
    forwarding_pressline_ = new ::OPMessage::DcrkPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.forwarding_pressline)
  return forwarding_pressline_;
}
::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::release_forwarding_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.forwarding_pressline)
  clear_has_forwarding_pressline();
  ::OPMessage::DcrkPressLine* temp = forwarding_pressline_;
  forwarding_pressline_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_forwarding_pressline(::OPMessage::DcrkPressLine* forwarding_pressline) {
  delete forwarding_pressline_;
  forwarding_pressline_ = forwarding_pressline;
  if (forwarding_pressline) {
    set_has_forwarding_pressline();
  } else {
    clear_has_forwarding_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.forwarding_pressline)
}

// optional .OPMessage.DcrkPressLine rking_1_pressline = 16;
bool ItemJudgeRuleDcrk::has_rking_1_pressline() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_rking_1_pressline() {
  _has_bits_[0] |= 0x00008000u;
}
void ItemJudgeRuleDcrk::clear_has_rking_1_pressline() {
  _has_bits_[0] &= ~0x00008000u;
}
void ItemJudgeRuleDcrk::clear_rking_1_pressline() {
  if (rking_1_pressline_ != NULL) rking_1_pressline_->::OPMessage::DcrkPressLine::Clear();
  clear_has_rking_1_pressline();
}
const ::OPMessage::DcrkPressLine& ItemJudgeRuleDcrk::rking_1_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.rking_1_pressline)
  return rking_1_pressline_ != NULL ? *rking_1_pressline_ : *default_instance_->rking_1_pressline_;
}
::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::mutable_rking_1_pressline() {
  set_has_rking_1_pressline();
  if (rking_1_pressline_ == NULL) {
    rking_1_pressline_ = new ::OPMessage::DcrkPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.rking_1_pressline)
  return rking_1_pressline_;
}
::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::release_rking_1_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.rking_1_pressline)
  clear_has_rking_1_pressline();
  ::OPMessage::DcrkPressLine* temp = rking_1_pressline_;
  rking_1_pressline_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_rking_1_pressline(::OPMessage::DcrkPressLine* rking_1_pressline) {
  delete rking_1_pressline_;
  rking_1_pressline_ = rking_1_pressline;
  if (rking_1_pressline) {
    set_has_rking_1_pressline();
  } else {
    clear_has_rking_1_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.rking_1_pressline)
}

// optional .OPMessage.DcrkPressLine cking_1_pressline = 17;
bool ItemJudgeRuleDcrk::has_cking_1_pressline() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_cking_1_pressline() {
  _has_bits_[0] |= 0x00010000u;
}
void ItemJudgeRuleDcrk::clear_has_cking_1_pressline() {
  _has_bits_[0] &= ~0x00010000u;
}
void ItemJudgeRuleDcrk::clear_cking_1_pressline() {
  if (cking_1_pressline_ != NULL) cking_1_pressline_->::OPMessage::DcrkPressLine::Clear();
  clear_has_cking_1_pressline();
}
const ::OPMessage::DcrkPressLine& ItemJudgeRuleDcrk::cking_1_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.cking_1_pressline)
  return cking_1_pressline_ != NULL ? *cking_1_pressline_ : *default_instance_->cking_1_pressline_;
}
::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::mutable_cking_1_pressline() {
  set_has_cking_1_pressline();
  if (cking_1_pressline_ == NULL) {
    cking_1_pressline_ = new ::OPMessage::DcrkPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.cking_1_pressline)
  return cking_1_pressline_;
}
::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::release_cking_1_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.cking_1_pressline)
  clear_has_cking_1_pressline();
  ::OPMessage::DcrkPressLine* temp = cking_1_pressline_;
  cking_1_pressline_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_cking_1_pressline(::OPMessage::DcrkPressLine* cking_1_pressline) {
  delete cking_1_pressline_;
  cking_1_pressline_ = cking_1_pressline;
  if (cking_1_pressline) {
    set_has_cking_1_pressline();
  } else {
    clear_has_cking_1_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.cking_1_pressline)
}

// optional .OPMessage.DcrkPressLine rking_2_pressline = 18;
bool ItemJudgeRuleDcrk::has_rking_2_pressline() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_rking_2_pressline() {
  _has_bits_[0] |= 0x00020000u;
}
void ItemJudgeRuleDcrk::clear_has_rking_2_pressline() {
  _has_bits_[0] &= ~0x00020000u;
}
void ItemJudgeRuleDcrk::clear_rking_2_pressline() {
  if (rking_2_pressline_ != NULL) rking_2_pressline_->::OPMessage::DcrkPressLine::Clear();
  clear_has_rking_2_pressline();
}
const ::OPMessage::DcrkPressLine& ItemJudgeRuleDcrk::rking_2_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.rking_2_pressline)
  return rking_2_pressline_ != NULL ? *rking_2_pressline_ : *default_instance_->rking_2_pressline_;
}
::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::mutable_rking_2_pressline() {
  set_has_rking_2_pressline();
  if (rking_2_pressline_ == NULL) {
    rking_2_pressline_ = new ::OPMessage::DcrkPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.rking_2_pressline)
  return rking_2_pressline_;
}
::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::release_rking_2_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.rking_2_pressline)
  clear_has_rking_2_pressline();
  ::OPMessage::DcrkPressLine* temp = rking_2_pressline_;
  rking_2_pressline_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_rking_2_pressline(::OPMessage::DcrkPressLine* rking_2_pressline) {
  delete rking_2_pressline_;
  rking_2_pressline_ = rking_2_pressline;
  if (rking_2_pressline) {
    set_has_rking_2_pressline();
  } else {
    clear_has_rking_2_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.rking_2_pressline)
}

// optional .OPMessage.DcrkPressLine cking_2_pressline = 19;
bool ItemJudgeRuleDcrk::has_cking_2_pressline() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_cking_2_pressline() {
  _has_bits_[0] |= 0x00040000u;
}
void ItemJudgeRuleDcrk::clear_has_cking_2_pressline() {
  _has_bits_[0] &= ~0x00040000u;
}
void ItemJudgeRuleDcrk::clear_cking_2_pressline() {
  if (cking_2_pressline_ != NULL) cking_2_pressline_->::OPMessage::DcrkPressLine::Clear();
  clear_has_cking_2_pressline();
}
const ::OPMessage::DcrkPressLine& ItemJudgeRuleDcrk::cking_2_pressline() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.cking_2_pressline)
  return cking_2_pressline_ != NULL ? *cking_2_pressline_ : *default_instance_->cking_2_pressline_;
}
::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::mutable_cking_2_pressline() {
  set_has_cking_2_pressline();
  if (cking_2_pressline_ == NULL) {
    cking_2_pressline_ = new ::OPMessage::DcrkPressLine;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.cking_2_pressline)
  return cking_2_pressline_;
}
::OPMessage::DcrkPressLine* ItemJudgeRuleDcrk::release_cking_2_pressline() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.cking_2_pressline)
  clear_has_cking_2_pressline();
  ::OPMessage::DcrkPressLine* temp = cking_2_pressline_;
  cking_2_pressline_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_cking_2_pressline(::OPMessage::DcrkPressLine* cking_2_pressline) {
  delete cking_2_pressline_;
  cking_2_pressline_ = cking_2_pressline;
  if (cking_2_pressline) {
    set_has_cking_2_pressline();
  } else {
    clear_has_cking_2_pressline();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.cking_2_pressline)
}

// optional string car_run_not_staff_command_voice = 20;
bool ItemJudgeRuleDcrk::has_car_run_not_staff_command_voice() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_run_not_staff_command_voice() {
  _has_bits_[0] |= 0x00080000u;
}
void ItemJudgeRuleDcrk::clear_has_car_run_not_staff_command_voice() {
  _has_bits_[0] &= ~0x00080000u;
}
void ItemJudgeRuleDcrk::clear_car_run_not_staff_command_voice() {
  car_run_not_staff_command_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_run_not_staff_command_voice();
}
 const ::std::string& ItemJudgeRuleDcrk::car_run_not_staff_command_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
  return car_run_not_staff_command_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_car_run_not_staff_command_voice(const ::std::string& value) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
}
 void ItemJudgeRuleDcrk::set_car_run_not_staff_command_voice(const char* value) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
}
 void ItemJudgeRuleDcrk::set_car_run_not_staff_command_voice(const char* value, size_t size) {
  set_has_car_run_not_staff_command_voice();
  car_run_not_staff_command_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
}
 ::std::string* ItemJudgeRuleDcrk::mutable_car_run_not_staff_command_voice() {
  set_has_car_run_not_staff_command_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
  return car_run_not_staff_command_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDcrk::release_car_run_not_staff_command_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
  clear_has_car_run_not_staff_command_voice();
  return car_run_not_staff_command_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_allocated_car_run_not_staff_command_voice(::std::string* car_run_not_staff_command_voice) {
  if (car_run_not_staff_command_voice != NULL) {
    set_has_car_run_not_staff_command_voice();
  } else {
    clear_has_car_run_not_staff_command_voice();
  }
  car_run_not_staff_command_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_run_not_staff_command_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_voice)
}

// optional int32 car_run_not_staff_command_deduction = 21;
bool ItemJudgeRuleDcrk::has_car_run_not_staff_command_deduction() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_run_not_staff_command_deduction() {
  _has_bits_[0] |= 0x00100000u;
}
void ItemJudgeRuleDcrk::clear_has_car_run_not_staff_command_deduction() {
  _has_bits_[0] &= ~0x00100000u;
}
void ItemJudgeRuleDcrk::clear_car_run_not_staff_command_deduction() {
  car_run_not_staff_command_deduction_ = 0;
  clear_has_car_run_not_staff_command_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleDcrk::car_run_not_staff_command_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_deduction)
  return car_run_not_staff_command_deduction_;
}
 void ItemJudgeRuleDcrk::set_car_run_not_staff_command_deduction(::google::protobuf::int32 value) {
  set_has_car_run_not_staff_command_deduction();
  car_run_not_staff_command_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_run_not_staff_command_deduction)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_cking_1_leftTurnLamp = 22;
bool ItemJudgeRuleDcrk::has_event_check_cking_1_leftturnlamp() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_event_check_cking_1_leftturnlamp() {
  _has_bits_[0] |= 0x00200000u;
}
void ItemJudgeRuleDcrk::clear_has_event_check_cking_1_leftturnlamp() {
  _has_bits_[0] &= ~0x00200000u;
}
void ItemJudgeRuleDcrk::clear_event_check_cking_1_leftturnlamp() {
  if (event_check_cking_1_leftturnlamp_ != NULL) event_check_cking_1_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_cking_1_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDcrk::event_check_cking_1_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_leftTurnLamp)
  return event_check_cking_1_leftturnlamp_ != NULL ? *event_check_cking_1_leftturnlamp_ : *default_instance_->event_check_cking_1_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_cking_1_leftturnlamp() {
  set_has_event_check_cking_1_leftturnlamp();
  if (event_check_cking_1_leftturnlamp_ == NULL) {
    event_check_cking_1_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_leftTurnLamp)
  return event_check_cking_1_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::release_event_check_cking_1_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_leftTurnLamp)
  clear_has_event_check_cking_1_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_cking_1_leftturnlamp_;
  event_check_cking_1_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_event_check_cking_1_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_cking_1_leftturnlamp) {
  delete event_check_cking_1_leftturnlamp_;
  event_check_cking_1_leftturnlamp_ = event_check_cking_1_leftturnlamp;
  if (event_check_cking_1_leftturnlamp) {
    set_has_event_check_cking_1_leftturnlamp();
  } else {
    clear_has_event_check_cking_1_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_cking_2_rightTurnLamp = 23;
bool ItemJudgeRuleDcrk::has_event_check_cking_2_rightturnlamp() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_event_check_cking_2_rightturnlamp() {
  _has_bits_[0] |= 0x00400000u;
}
void ItemJudgeRuleDcrk::clear_has_event_check_cking_2_rightturnlamp() {
  _has_bits_[0] &= ~0x00400000u;
}
void ItemJudgeRuleDcrk::clear_event_check_cking_2_rightturnlamp() {
  if (event_check_cking_2_rightturnlamp_ != NULL) event_check_cking_2_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_cking_2_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_cking_2_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_rightTurnLamp)
  return event_check_cking_2_rightturnlamp_ != NULL ? *event_check_cking_2_rightturnlamp_ : *default_instance_->event_check_cking_2_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_cking_2_rightturnlamp() {
  set_has_event_check_cking_2_rightturnlamp();
  if (event_check_cking_2_rightturnlamp_ == NULL) {
    event_check_cking_2_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_rightTurnLamp)
  return event_check_cking_2_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_cking_2_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_rightTurnLamp)
  clear_has_event_check_cking_2_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_cking_2_rightturnlamp_;
  event_check_cking_2_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_event_check_cking_2_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_cking_2_rightturnlamp) {
  delete event_check_cking_2_rightturnlamp_;
  event_check_cking_2_rightturnlamp_ = event_check_cking_2_rightturnlamp;
  if (event_check_cking_2_rightturnlamp) {
    set_has_event_check_cking_2_rightturnlamp();
  } else {
    clear_has_event_check_cking_2_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_rightTurnLamp)
}

// optional bool in_area_again = 24 [default = false];
bool ItemJudgeRuleDcrk::has_in_area_again() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_in_area_again() {
  _has_bits_[0] |= 0x00800000u;
}
void ItemJudgeRuleDcrk::clear_has_in_area_again() {
  _has_bits_[0] &= ~0x00800000u;
}
void ItemJudgeRuleDcrk::clear_in_area_again() {
  in_area_again_ = false;
  clear_has_in_area_again();
}
 bool ItemJudgeRuleDcrk::in_area_again() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.in_area_again)
  return in_area_again_;
}
 void ItemJudgeRuleDcrk::set_in_area_again(bool value) {
  set_has_in_area_again();
  in_area_again_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.in_area_again)
}

// optional int32 car_rk_check_delay_time = 25 [default = 0];
bool ItemJudgeRuleDcrk::has_car_rk_check_delay_time() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_rk_check_delay_time() {
  _has_bits_[0] |= 0x01000000u;
}
void ItemJudgeRuleDcrk::clear_has_car_rk_check_delay_time() {
  _has_bits_[0] &= ~0x01000000u;
}
void ItemJudgeRuleDcrk::clear_car_rk_check_delay_time() {
  car_rk_check_delay_time_ = 0;
  clear_has_car_rk_check_delay_time();
}
 ::google::protobuf::int32 ItemJudgeRuleDcrk::car_rk_check_delay_time() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rk_check_delay_time)
  return car_rk_check_delay_time_;
}
 void ItemJudgeRuleDcrk::set_car_rk_check_delay_time(::google::protobuf::int32 value) {
  set_has_car_rk_check_delay_time();
  car_rk_check_delay_time_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rk_check_delay_time)
}

// optional .OPMessage.BasicRightTurnLamp event_check_forwarding_rightTurnLamp = 26;
bool ItemJudgeRuleDcrk::has_event_check_forwarding_rightturnlamp() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_event_check_forwarding_rightturnlamp() {
  _has_bits_[0] |= 0x02000000u;
}
void ItemJudgeRuleDcrk::clear_has_event_check_forwarding_rightturnlamp() {
  _has_bits_[0] &= ~0x02000000u;
}
void ItemJudgeRuleDcrk::clear_event_check_forwarding_rightturnlamp() {
  if (event_check_forwarding_rightturnlamp_ != NULL) event_check_forwarding_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_forwarding_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_forwarding_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_forwarding_rightTurnLamp)
  return event_check_forwarding_rightturnlamp_ != NULL ? *event_check_forwarding_rightturnlamp_ : *default_instance_->event_check_forwarding_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_forwarding_rightturnlamp() {
  set_has_event_check_forwarding_rightturnlamp();
  if (event_check_forwarding_rightturnlamp_ == NULL) {
    event_check_forwarding_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_forwarding_rightTurnLamp)
  return event_check_forwarding_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_forwarding_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_forwarding_rightTurnLamp)
  clear_has_event_check_forwarding_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_forwarding_rightturnlamp_;
  event_check_forwarding_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_event_check_forwarding_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_forwarding_rightturnlamp) {
  delete event_check_forwarding_rightturnlamp_;
  event_check_forwarding_rightturnlamp_ = event_check_forwarding_rightturnlamp;
  if (event_check_forwarding_rightturnlamp) {
    set_has_event_check_forwarding_rightturnlamp();
  } else {
    clear_has_event_check_forwarding_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_forwarding_rightTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_cking_1_rightTurnLamp = 27;
bool ItemJudgeRuleDcrk::has_event_check_cking_1_rightturnlamp() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_event_check_cking_1_rightturnlamp() {
  _has_bits_[0] |= 0x04000000u;
}
void ItemJudgeRuleDcrk::clear_has_event_check_cking_1_rightturnlamp() {
  _has_bits_[0] &= ~0x04000000u;
}
void ItemJudgeRuleDcrk::clear_event_check_cking_1_rightturnlamp() {
  if (event_check_cking_1_rightturnlamp_ != NULL) event_check_cking_1_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_cking_1_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_cking_1_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_rightTurnLamp)
  return event_check_cking_1_rightturnlamp_ != NULL ? *event_check_cking_1_rightturnlamp_ : *default_instance_->event_check_cking_1_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_cking_1_rightturnlamp() {
  set_has_event_check_cking_1_rightturnlamp();
  if (event_check_cking_1_rightturnlamp_ == NULL) {
    event_check_cking_1_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_rightTurnLamp)
  return event_check_cking_1_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_cking_1_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_rightTurnLamp)
  clear_has_event_check_cking_1_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_cking_1_rightturnlamp_;
  event_check_cking_1_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_event_check_cking_1_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_cking_1_rightturnlamp) {
  delete event_check_cking_1_rightturnlamp_;
  event_check_cking_1_rightturnlamp_ = event_check_cking_1_rightturnlamp;
  if (event_check_cking_1_rightturnlamp) {
    set_has_event_check_cking_1_rightturnlamp();
  } else {
    clear_has_event_check_cking_1_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_cking_1_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_cking_2_leftTurnLamp = 28;
bool ItemJudgeRuleDcrk::has_event_check_cking_2_leftturnlamp() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_event_check_cking_2_leftturnlamp() {
  _has_bits_[0] |= 0x08000000u;
}
void ItemJudgeRuleDcrk::clear_has_event_check_cking_2_leftturnlamp() {
  _has_bits_[0] &= ~0x08000000u;
}
void ItemJudgeRuleDcrk::clear_event_check_cking_2_leftturnlamp() {
  if (event_check_cking_2_leftturnlamp_ != NULL) event_check_cking_2_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_cking_2_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDcrk::event_check_cking_2_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_leftTurnLamp)
  return event_check_cking_2_leftturnlamp_ != NULL ? *event_check_cking_2_leftturnlamp_ : *default_instance_->event_check_cking_2_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_cking_2_leftturnlamp() {
  set_has_event_check_cking_2_leftturnlamp();
  if (event_check_cking_2_leftturnlamp_ == NULL) {
    event_check_cking_2_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_leftTurnLamp)
  return event_check_cking_2_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::release_event_check_cking_2_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_leftTurnLamp)
  clear_has_event_check_cking_2_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_cking_2_leftturnlamp_;
  event_check_cking_2_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_event_check_cking_2_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_cking_2_leftturnlamp) {
  delete event_check_cking_2_leftturnlamp_;
  event_check_cking_2_leftturnlamp_ = event_check_cking_2_leftturnlamp;
  if (event_check_cking_2_leftturnlamp) {
    set_has_event_check_cking_2_leftturnlamp();
  } else {
    clear_has_event_check_cking_2_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_cking_2_leftTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_1_leftTurnLamp = 29;
bool ItemJudgeRuleDcrk::has_event_check_waitrk_1_leftturnlamp() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_event_check_waitrk_1_leftturnlamp() {
  _has_bits_[0] |= 0x10000000u;
}
void ItemJudgeRuleDcrk::clear_has_event_check_waitrk_1_leftturnlamp() {
  _has_bits_[0] &= ~0x10000000u;
}
void ItemJudgeRuleDcrk::clear_event_check_waitrk_1_leftturnlamp() {
  if (event_check_waitrk_1_leftturnlamp_ != NULL) event_check_waitrk_1_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_waitrk_1_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDcrk::event_check_waitrk_1_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_leftTurnLamp)
  return event_check_waitrk_1_leftturnlamp_ != NULL ? *event_check_waitrk_1_leftturnlamp_ : *default_instance_->event_check_waitrk_1_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_waitrk_1_leftturnlamp() {
  set_has_event_check_waitrk_1_leftturnlamp();
  if (event_check_waitrk_1_leftturnlamp_ == NULL) {
    event_check_waitrk_1_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_leftTurnLamp)
  return event_check_waitrk_1_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::release_event_check_waitrk_1_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_leftTurnLamp)
  clear_has_event_check_waitrk_1_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_waitrk_1_leftturnlamp_;
  event_check_waitrk_1_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_event_check_waitrk_1_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_waitrk_1_leftturnlamp) {
  delete event_check_waitrk_1_leftturnlamp_;
  event_check_waitrk_1_leftturnlamp_ = event_check_waitrk_1_leftturnlamp;
  if (event_check_waitrk_1_leftturnlamp) {
    set_has_event_check_waitrk_1_leftturnlamp();
  } else {
    clear_has_event_check_waitrk_1_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_waitrk_1_rightTurnLamp = 30;
bool ItemJudgeRuleDcrk::has_event_check_waitrk_1_rightturnlamp() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_event_check_waitrk_1_rightturnlamp() {
  _has_bits_[0] |= 0x20000000u;
}
void ItemJudgeRuleDcrk::clear_has_event_check_waitrk_1_rightturnlamp() {
  _has_bits_[0] &= ~0x20000000u;
}
void ItemJudgeRuleDcrk::clear_event_check_waitrk_1_rightturnlamp() {
  if (event_check_waitrk_1_rightturnlamp_ != NULL) event_check_waitrk_1_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_waitrk_1_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_waitrk_1_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_rightTurnLamp)
  return event_check_waitrk_1_rightturnlamp_ != NULL ? *event_check_waitrk_1_rightturnlamp_ : *default_instance_->event_check_waitrk_1_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_waitrk_1_rightturnlamp() {
  set_has_event_check_waitrk_1_rightturnlamp();
  if (event_check_waitrk_1_rightturnlamp_ == NULL) {
    event_check_waitrk_1_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_rightTurnLamp)
  return event_check_waitrk_1_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_waitrk_1_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_rightTurnLamp)
  clear_has_event_check_waitrk_1_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_waitrk_1_rightturnlamp_;
  event_check_waitrk_1_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_event_check_waitrk_1_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_waitrk_1_rightturnlamp) {
  delete event_check_waitrk_1_rightturnlamp_;
  event_check_waitrk_1_rightturnlamp_ = event_check_waitrk_1_rightturnlamp;
  if (event_check_waitrk_1_rightturnlamp) {
    set_has_event_check_waitrk_1_rightturnlamp();
  } else {
    clear_has_event_check_waitrk_1_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_1_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_rkend_1_leftTurnLamp = 31;
bool ItemJudgeRuleDcrk::has_event_check_rkend_1_leftturnlamp() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_event_check_rkend_1_leftturnlamp() {
  _has_bits_[0] |= 0x40000000u;
}
void ItemJudgeRuleDcrk::clear_has_event_check_rkend_1_leftturnlamp() {
  _has_bits_[0] &= ~0x40000000u;
}
void ItemJudgeRuleDcrk::clear_event_check_rkend_1_leftturnlamp() {
  if (event_check_rkend_1_leftturnlamp_ != NULL) event_check_rkend_1_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_rkend_1_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDcrk::event_check_rkend_1_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_leftTurnLamp)
  return event_check_rkend_1_leftturnlamp_ != NULL ? *event_check_rkend_1_leftturnlamp_ : *default_instance_->event_check_rkend_1_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_rkend_1_leftturnlamp() {
  set_has_event_check_rkend_1_leftturnlamp();
  if (event_check_rkend_1_leftturnlamp_ == NULL) {
    event_check_rkend_1_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_leftTurnLamp)
  return event_check_rkend_1_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::release_event_check_rkend_1_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_leftTurnLamp)
  clear_has_event_check_rkend_1_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_rkend_1_leftturnlamp_;
  event_check_rkend_1_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_event_check_rkend_1_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_rkend_1_leftturnlamp) {
  delete event_check_rkend_1_leftturnlamp_;
  event_check_rkend_1_leftturnlamp_ = event_check_rkend_1_leftturnlamp;
  if (event_check_rkend_1_leftturnlamp) {
    set_has_event_check_rkend_1_leftturnlamp();
  } else {
    clear_has_event_check_rkend_1_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_rkend_1_rightTurnLamp = 32;
bool ItemJudgeRuleDcrk::has_event_check_rkend_1_rightturnlamp() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
void ItemJudgeRuleDcrk::set_has_event_check_rkend_1_rightturnlamp() {
  _has_bits_[0] |= 0x80000000u;
}
void ItemJudgeRuleDcrk::clear_has_event_check_rkend_1_rightturnlamp() {
  _has_bits_[0] &= ~0x80000000u;
}
void ItemJudgeRuleDcrk::clear_event_check_rkend_1_rightturnlamp() {
  if (event_check_rkend_1_rightturnlamp_ != NULL) event_check_rkend_1_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_rkend_1_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_rkend_1_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_rightTurnLamp)
  return event_check_rkend_1_rightturnlamp_ != NULL ? *event_check_rkend_1_rightturnlamp_ : *default_instance_->event_check_rkend_1_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_rkend_1_rightturnlamp() {
  set_has_event_check_rkend_1_rightturnlamp();
  if (event_check_rkend_1_rightturnlamp_ == NULL) {
    event_check_rkend_1_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_rightTurnLamp)
  return event_check_rkend_1_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_rkend_1_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_rightTurnLamp)
  clear_has_event_check_rkend_1_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_rkend_1_rightturnlamp_;
  event_check_rkend_1_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_event_check_rkend_1_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rkend_1_rightturnlamp) {
  delete event_check_rkend_1_rightturnlamp_;
  event_check_rkend_1_rightturnlamp_ = event_check_rkend_1_rightturnlamp;
  if (event_check_rkend_1_rightturnlamp) {
    set_has_event_check_rkend_1_rightturnlamp();
  } else {
    clear_has_event_check_rkend_1_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_1_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_waitrk_2_leftTurnLamp = 33;
bool ItemJudgeRuleDcrk::has_event_check_waitrk_2_leftturnlamp() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
void ItemJudgeRuleDcrk::set_has_event_check_waitrk_2_leftturnlamp() {
  _has_bits_[1] |= 0x00000001u;
}
void ItemJudgeRuleDcrk::clear_has_event_check_waitrk_2_leftturnlamp() {
  _has_bits_[1] &= ~0x00000001u;
}
void ItemJudgeRuleDcrk::clear_event_check_waitrk_2_leftturnlamp() {
  if (event_check_waitrk_2_leftturnlamp_ != NULL) event_check_waitrk_2_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_waitrk_2_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDcrk::event_check_waitrk_2_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_leftTurnLamp)
  return event_check_waitrk_2_leftturnlamp_ != NULL ? *event_check_waitrk_2_leftturnlamp_ : *default_instance_->event_check_waitrk_2_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_waitrk_2_leftturnlamp() {
  set_has_event_check_waitrk_2_leftturnlamp();
  if (event_check_waitrk_2_leftturnlamp_ == NULL) {
    event_check_waitrk_2_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_leftTurnLamp)
  return event_check_waitrk_2_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::release_event_check_waitrk_2_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_leftTurnLamp)
  clear_has_event_check_waitrk_2_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_waitrk_2_leftturnlamp_;
  event_check_waitrk_2_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_event_check_waitrk_2_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_waitrk_2_leftturnlamp) {
  delete event_check_waitrk_2_leftturnlamp_;
  event_check_waitrk_2_leftturnlamp_ = event_check_waitrk_2_leftturnlamp;
  if (event_check_waitrk_2_leftturnlamp) {
    set_has_event_check_waitrk_2_leftturnlamp();
  } else {
    clear_has_event_check_waitrk_2_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_waitrk_2_rightTurnLamp = 34;
bool ItemJudgeRuleDcrk::has_event_check_waitrk_2_rightturnlamp() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
void ItemJudgeRuleDcrk::set_has_event_check_waitrk_2_rightturnlamp() {
  _has_bits_[1] |= 0x00000002u;
}
void ItemJudgeRuleDcrk::clear_has_event_check_waitrk_2_rightturnlamp() {
  _has_bits_[1] &= ~0x00000002u;
}
void ItemJudgeRuleDcrk::clear_event_check_waitrk_2_rightturnlamp() {
  if (event_check_waitrk_2_rightturnlamp_ != NULL) event_check_waitrk_2_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_waitrk_2_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_waitrk_2_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_rightTurnLamp)
  return event_check_waitrk_2_rightturnlamp_ != NULL ? *event_check_waitrk_2_rightturnlamp_ : *default_instance_->event_check_waitrk_2_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_waitrk_2_rightturnlamp() {
  set_has_event_check_waitrk_2_rightturnlamp();
  if (event_check_waitrk_2_rightturnlamp_ == NULL) {
    event_check_waitrk_2_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_rightTurnLamp)
  return event_check_waitrk_2_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_waitrk_2_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_rightTurnLamp)
  clear_has_event_check_waitrk_2_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_waitrk_2_rightturnlamp_;
  event_check_waitrk_2_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_event_check_waitrk_2_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_waitrk_2_rightturnlamp) {
  delete event_check_waitrk_2_rightturnlamp_;
  event_check_waitrk_2_rightturnlamp_ = event_check_waitrk_2_rightturnlamp;
  if (event_check_waitrk_2_rightturnlamp) {
    set_has_event_check_waitrk_2_rightturnlamp();
  } else {
    clear_has_event_check_waitrk_2_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_waitrk_2_rightTurnLamp)
}

// optional .OPMessage.BasicLeftTurnLamp event_check_rkend_2_leftTurnLamp = 35;
bool ItemJudgeRuleDcrk::has_event_check_rkend_2_leftturnlamp() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
void ItemJudgeRuleDcrk::set_has_event_check_rkend_2_leftturnlamp() {
  _has_bits_[1] |= 0x00000004u;
}
void ItemJudgeRuleDcrk::clear_has_event_check_rkend_2_leftturnlamp() {
  _has_bits_[1] &= ~0x00000004u;
}
void ItemJudgeRuleDcrk::clear_event_check_rkend_2_leftturnlamp() {
  if (event_check_rkend_2_leftturnlamp_ != NULL) event_check_rkend_2_leftturnlamp_->::OPMessage::BasicLeftTurnLamp::Clear();
  clear_has_event_check_rkend_2_leftturnlamp();
}
const ::OPMessage::BasicLeftTurnLamp& ItemJudgeRuleDcrk::event_check_rkend_2_leftturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_leftTurnLamp)
  return event_check_rkend_2_leftturnlamp_ != NULL ? *event_check_rkend_2_leftturnlamp_ : *default_instance_->event_check_rkend_2_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_rkend_2_leftturnlamp() {
  set_has_event_check_rkend_2_leftturnlamp();
  if (event_check_rkend_2_leftturnlamp_ == NULL) {
    event_check_rkend_2_leftturnlamp_ = new ::OPMessage::BasicLeftTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_leftTurnLamp)
  return event_check_rkend_2_leftturnlamp_;
}
::OPMessage::BasicLeftTurnLamp* ItemJudgeRuleDcrk::release_event_check_rkend_2_leftturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_leftTurnLamp)
  clear_has_event_check_rkend_2_leftturnlamp();
  ::OPMessage::BasicLeftTurnLamp* temp = event_check_rkend_2_leftturnlamp_;
  event_check_rkend_2_leftturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_event_check_rkend_2_leftturnlamp(::OPMessage::BasicLeftTurnLamp* event_check_rkend_2_leftturnlamp) {
  delete event_check_rkend_2_leftturnlamp_;
  event_check_rkend_2_leftturnlamp_ = event_check_rkend_2_leftturnlamp;
  if (event_check_rkend_2_leftturnlamp) {
    set_has_event_check_rkend_2_leftturnlamp();
  } else {
    clear_has_event_check_rkend_2_leftturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_leftTurnLamp)
}

// optional .OPMessage.BasicRightTurnLamp event_check_rkend_2_rightTurnLamp = 36;
bool ItemJudgeRuleDcrk::has_event_check_rkend_2_rightturnlamp() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
void ItemJudgeRuleDcrk::set_has_event_check_rkend_2_rightturnlamp() {
  _has_bits_[1] |= 0x00000008u;
}
void ItemJudgeRuleDcrk::clear_has_event_check_rkend_2_rightturnlamp() {
  _has_bits_[1] &= ~0x00000008u;
}
void ItemJudgeRuleDcrk::clear_event_check_rkend_2_rightturnlamp() {
  if (event_check_rkend_2_rightturnlamp_ != NULL) event_check_rkend_2_rightturnlamp_->::OPMessage::BasicRightTurnLamp::Clear();
  clear_has_event_check_rkend_2_rightturnlamp();
}
const ::OPMessage::BasicRightTurnLamp& ItemJudgeRuleDcrk::event_check_rkend_2_rightturnlamp() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_rightTurnLamp)
  return event_check_rkend_2_rightturnlamp_ != NULL ? *event_check_rkend_2_rightturnlamp_ : *default_instance_->event_check_rkend_2_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::mutable_event_check_rkend_2_rightturnlamp() {
  set_has_event_check_rkend_2_rightturnlamp();
  if (event_check_rkend_2_rightturnlamp_ == NULL) {
    event_check_rkend_2_rightturnlamp_ = new ::OPMessage::BasicRightTurnLamp;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_rightTurnLamp)
  return event_check_rkend_2_rightturnlamp_;
}
::OPMessage::BasicRightTurnLamp* ItemJudgeRuleDcrk::release_event_check_rkend_2_rightturnlamp() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_rightTurnLamp)
  clear_has_event_check_rkend_2_rightturnlamp();
  ::OPMessage::BasicRightTurnLamp* temp = event_check_rkend_2_rightturnlamp_;
  event_check_rkend_2_rightturnlamp_ = NULL;
  return temp;
}
void ItemJudgeRuleDcrk::set_allocated_event_check_rkend_2_rightturnlamp(::OPMessage::BasicRightTurnLamp* event_check_rkend_2_rightturnlamp) {
  delete event_check_rkend_2_rightturnlamp_;
  event_check_rkend_2_rightturnlamp_ = event_check_rkend_2_rightturnlamp;
  if (event_check_rkend_2_rightturnlamp) {
    set_has_event_check_rkend_2_rightturnlamp();
  } else {
    clear_has_event_check_rkend_2_rightturnlamp();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.event_check_rkend_2_rightTurnLamp)
}

// optional bool car_rking_1_frontwheel_over_controlline_check = 37 [default = true];
bool ItemJudgeRuleDcrk::has_car_rking_1_frontwheel_over_controlline_check() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_rking_1_frontwheel_over_controlline_check() {
  _has_bits_[1] |= 0x00000010u;
}
void ItemJudgeRuleDcrk::clear_has_car_rking_1_frontwheel_over_controlline_check() {
  _has_bits_[1] &= ~0x00000010u;
}
void ItemJudgeRuleDcrk::clear_car_rking_1_frontwheel_over_controlline_check() {
  car_rking_1_frontwheel_over_controlline_check_ = true;
  clear_has_car_rking_1_frontwheel_over_controlline_check();
}
 bool ItemJudgeRuleDcrk::car_rking_1_frontwheel_over_controlline_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_check)
  return car_rking_1_frontwheel_over_controlline_check_;
}
 void ItemJudgeRuleDcrk::set_car_rking_1_frontwheel_over_controlline_check(bool value) {
  set_has_car_rking_1_frontwheel_over_controlline_check();
  car_rking_1_frontwheel_over_controlline_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_check)
}

// optional int32 car_rking_1_frontwheel_over_controlline_deduction = 38 [default = 100];
bool ItemJudgeRuleDcrk::has_car_rking_1_frontwheel_over_controlline_deduction() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_rking_1_frontwheel_over_controlline_deduction() {
  _has_bits_[1] |= 0x00000020u;
}
void ItemJudgeRuleDcrk::clear_has_car_rking_1_frontwheel_over_controlline_deduction() {
  _has_bits_[1] &= ~0x00000020u;
}
void ItemJudgeRuleDcrk::clear_car_rking_1_frontwheel_over_controlline_deduction() {
  car_rking_1_frontwheel_over_controlline_deduction_ = 100;
  clear_has_car_rking_1_frontwheel_over_controlline_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleDcrk::car_rking_1_frontwheel_over_controlline_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_deduction)
  return car_rking_1_frontwheel_over_controlline_deduction_;
}
 void ItemJudgeRuleDcrk::set_car_rking_1_frontwheel_over_controlline_deduction(::google::protobuf::int32 value) {
  set_has_car_rking_1_frontwheel_over_controlline_deduction();
  car_rking_1_frontwheel_over_controlline_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_deduction)
}

// optional string car_rking_1_frontwheel_over_controlline_voice = 39;
bool ItemJudgeRuleDcrk::has_car_rking_1_frontwheel_over_controlline_voice() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_rking_1_frontwheel_over_controlline_voice() {
  _has_bits_[1] |= 0x00000040u;
}
void ItemJudgeRuleDcrk::clear_has_car_rking_1_frontwheel_over_controlline_voice() {
  _has_bits_[1] &= ~0x00000040u;
}
void ItemJudgeRuleDcrk::clear_car_rking_1_frontwheel_over_controlline_voice() {
  car_rking_1_frontwheel_over_controlline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_rking_1_frontwheel_over_controlline_voice();
}
 const ::std::string& ItemJudgeRuleDcrk::car_rking_1_frontwheel_over_controlline_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
  return car_rking_1_frontwheel_over_controlline_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_car_rking_1_frontwheel_over_controlline_voice(const ::std::string& value) {
  set_has_car_rking_1_frontwheel_over_controlline_voice();
  car_rking_1_frontwheel_over_controlline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
}
 void ItemJudgeRuleDcrk::set_car_rking_1_frontwheel_over_controlline_voice(const char* value) {
  set_has_car_rking_1_frontwheel_over_controlline_voice();
  car_rking_1_frontwheel_over_controlline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
}
 void ItemJudgeRuleDcrk::set_car_rking_1_frontwheel_over_controlline_voice(const char* value, size_t size) {
  set_has_car_rking_1_frontwheel_over_controlline_voice();
  car_rking_1_frontwheel_over_controlline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
}
 ::std::string* ItemJudgeRuleDcrk::mutable_car_rking_1_frontwheel_over_controlline_voice() {
  set_has_car_rking_1_frontwheel_over_controlline_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
  return car_rking_1_frontwheel_over_controlline_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDcrk::release_car_rking_1_frontwheel_over_controlline_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
  clear_has_car_rking_1_frontwheel_over_controlline_voice();
  return car_rking_1_frontwheel_over_controlline_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_allocated_car_rking_1_frontwheel_over_controlline_voice(::std::string* car_rking_1_frontwheel_over_controlline_voice) {
  if (car_rking_1_frontwheel_over_controlline_voice != NULL) {
    set_has_car_rking_1_frontwheel_over_controlline_voice();
  } else {
    clear_has_car_rking_1_frontwheel_over_controlline_voice();
  }
  car_rking_1_frontwheel_over_controlline_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_rking_1_frontwheel_over_controlline_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.car_rking_1_frontwheel_over_controlline_voice)
}

// optional bool car_rking_2_frontwheel_over_controlline_check = 40 [default = true];
bool ItemJudgeRuleDcrk::has_car_rking_2_frontwheel_over_controlline_check() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_rking_2_frontwheel_over_controlline_check() {
  _has_bits_[1] |= 0x00000080u;
}
void ItemJudgeRuleDcrk::clear_has_car_rking_2_frontwheel_over_controlline_check() {
  _has_bits_[1] &= ~0x00000080u;
}
void ItemJudgeRuleDcrk::clear_car_rking_2_frontwheel_over_controlline_check() {
  car_rking_2_frontwheel_over_controlline_check_ = true;
  clear_has_car_rking_2_frontwheel_over_controlline_check();
}
 bool ItemJudgeRuleDcrk::car_rking_2_frontwheel_over_controlline_check() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_check)
  return car_rking_2_frontwheel_over_controlline_check_;
}
 void ItemJudgeRuleDcrk::set_car_rking_2_frontwheel_over_controlline_check(bool value) {
  set_has_car_rking_2_frontwheel_over_controlline_check();
  car_rking_2_frontwheel_over_controlline_check_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_check)
}

// optional int32 car_rking_2_frontwheel_over_controlline_deduction = 41 [default = 100];
bool ItemJudgeRuleDcrk::has_car_rking_2_frontwheel_over_controlline_deduction() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_rking_2_frontwheel_over_controlline_deduction() {
  _has_bits_[1] |= 0x00000100u;
}
void ItemJudgeRuleDcrk::clear_has_car_rking_2_frontwheel_over_controlline_deduction() {
  _has_bits_[1] &= ~0x00000100u;
}
void ItemJudgeRuleDcrk::clear_car_rking_2_frontwheel_over_controlline_deduction() {
  car_rking_2_frontwheel_over_controlline_deduction_ = 100;
  clear_has_car_rking_2_frontwheel_over_controlline_deduction();
}
 ::google::protobuf::int32 ItemJudgeRuleDcrk::car_rking_2_frontwheel_over_controlline_deduction() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_deduction)
  return car_rking_2_frontwheel_over_controlline_deduction_;
}
 void ItemJudgeRuleDcrk::set_car_rking_2_frontwheel_over_controlline_deduction(::google::protobuf::int32 value) {
  set_has_car_rking_2_frontwheel_over_controlline_deduction();
  car_rking_2_frontwheel_over_controlline_deduction_ = value;
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_deduction)
}

// optional string car_rking_2_frontwheel_over_controlline_voice = 42;
bool ItemJudgeRuleDcrk::has_car_rking_2_frontwheel_over_controlline_voice() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
void ItemJudgeRuleDcrk::set_has_car_rking_2_frontwheel_over_controlline_voice() {
  _has_bits_[1] |= 0x00000200u;
}
void ItemJudgeRuleDcrk::clear_has_car_rking_2_frontwheel_over_controlline_voice() {
  _has_bits_[1] &= ~0x00000200u;
}
void ItemJudgeRuleDcrk::clear_car_rking_2_frontwheel_over_controlline_voice() {
  car_rking_2_frontwheel_over_controlline_voice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_rking_2_frontwheel_over_controlline_voice();
}
 const ::std::string& ItemJudgeRuleDcrk::car_rking_2_frontwheel_over_controlline_voice() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
  return car_rking_2_frontwheel_over_controlline_voice_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_car_rking_2_frontwheel_over_controlline_voice(const ::std::string& value) {
  set_has_car_rking_2_frontwheel_over_controlline_voice();
  car_rking_2_frontwheel_over_controlline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
}
 void ItemJudgeRuleDcrk::set_car_rking_2_frontwheel_over_controlline_voice(const char* value) {
  set_has_car_rking_2_frontwheel_over_controlline_voice();
  car_rking_2_frontwheel_over_controlline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
}
 void ItemJudgeRuleDcrk::set_car_rking_2_frontwheel_over_controlline_voice(const char* value, size_t size) {
  set_has_car_rking_2_frontwheel_over_controlline_voice();
  car_rking_2_frontwheel_over_controlline_voice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
}
 ::std::string* ItemJudgeRuleDcrk::mutable_car_rking_2_frontwheel_over_controlline_voice() {
  set_has_car_rking_2_frontwheel_over_controlline_voice();
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
  return car_rking_2_frontwheel_over_controlline_voice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ItemJudgeRuleDcrk::release_car_rking_2_frontwheel_over_controlline_voice() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
  clear_has_car_rking_2_frontwheel_over_controlline_voice();
  return car_rking_2_frontwheel_over_controlline_voice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ItemJudgeRuleDcrk::set_allocated_car_rking_2_frontwheel_over_controlline_voice(::std::string* car_rking_2_frontwheel_over_controlline_voice) {
  if (car_rking_2_frontwheel_over_controlline_voice != NULL) {
    set_has_car_rking_2_frontwheel_over_controlline_voice();
  } else {
    clear_has_car_rking_2_frontwheel_over_controlline_voice();
  }
  car_rking_2_frontwheel_over_controlline_voice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_rking_2_frontwheel_over_controlline_voice);
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemJudgeRuleDcrk.car_rking_2_frontwheel_over_controlline_voice)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemsJudgeRules::kItemGlobalFieldNumber;
const int ItemsJudgeRules::kItemZeroFieldNumber;
const int ItemsJudgeRules::kItemDkFieldNumber;
const int ItemsJudgeRules::kItemZjzwFieldNumber;
const int ItemsJudgeRules::kItemQxxsFieldNumber;
const int ItemsJudgeRules::kItemCftcFieldNumber;
const int ItemsJudgeRules::kItemSpqbFieldNumber;
const int ItemsJudgeRules::kItemDcrkFieldNumber;
const int ItemsJudgeRules::kItemShangchezhunbeiFieldNumber;
const int ItemsJudgeRules::kItemDengguangmoniFieldNumber;
const int ItemsJudgeRules::kItemQibuFieldNumber;
const int ItemsJudgeRules::kItemXuexiaoquyuFieldNumber;
const int ItemsJudgeRules::kItemLukouzuozhuanFieldNumber;
const int ItemsJudgeRules::kItemLukouyouzhuanFieldNumber;
const int ItemsJudgeRules::kItemZhixiantongguolukouFieldNumber;
const int ItemsJudgeRules::kItemGonggongqichezhanFieldNumber;
const int ItemsJudgeRules::kItemRenxinghengdaoFieldNumber;
const int ItemsJudgeRules::kItemZhixianxingshiFieldNumber;
const int ItemsJudgeRules::kItemJiajiandangFieldNumber;
const int ItemsJudgeRules::kItemDiaotouFieldNumber;
const int ItemsJudgeRules::kItemBiangengchedaoFieldNumber;
const int ItemsJudgeRules::kItemChaocheFieldNumber;
const int ItemsJudgeRules::kItemHuicheFieldNumber;
const int ItemsJudgeRules::kItemKaobiantingcheFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemsJudgeRules::ItemsJudgeRules()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.ItemsJudgeRules)
}

void ItemsJudgeRules::InitAsDefaultInstance() {
  item_global_ = const_cast< ::OPMessage::GlobalJudgeRule*>(&::OPMessage::GlobalJudgeRule::default_instance());
  item_zero_ = const_cast< ::OPMessage::ItemJudgeRuleZero*>(&::OPMessage::ItemJudgeRuleZero::default_instance());
  item_dk_ = const_cast< ::OPMessage::ItemJudgeRuleDk*>(&::OPMessage::ItemJudgeRuleDk::default_instance());
  item_zjzw_ = const_cast< ::OPMessage::ItemJudgeRuleZjzw*>(&::OPMessage::ItemJudgeRuleZjzw::default_instance());
  item_qxxs_ = const_cast< ::OPMessage::ItemJudgeRuleQxxs*>(&::OPMessage::ItemJudgeRuleQxxs::default_instance());
  item_cftc_ = const_cast< ::OPMessage::ItemJudgeRuleCftc*>(&::OPMessage::ItemJudgeRuleCftc::default_instance());
  item_spqb_ = const_cast< ::OPMessage::ItemJudgeRuleSpqb*>(&::OPMessage::ItemJudgeRuleSpqb::default_instance());
  item_dcrk_ = const_cast< ::OPMessage::ItemJudgeRuleDcrk*>(&::OPMessage::ItemJudgeRuleDcrk::default_instance());
  item_shangchezhunbei_ = const_cast< ::OPMessage::ItemJudgeRuleShangCheZhunBei*>(&::OPMessage::ItemJudgeRuleShangCheZhunBei::default_instance());
  item_dengguangmoni_ = const_cast< ::OPMessage::ItemJudgeRuleDengGuangMoNi*>(&::OPMessage::ItemJudgeRuleDengGuangMoNi::default_instance());
  item_qibu_ = const_cast< ::OPMessage::ItemJudgeRuleQiBu*>(&::OPMessage::ItemJudgeRuleQiBu::default_instance());
  item_xuexiaoquyu_ = const_cast< ::OPMessage::ItemJudgeRuleXueXiaoQuYu*>(&::OPMessage::ItemJudgeRuleXueXiaoQuYu::default_instance());
  item_lukouzuozhuan_ = const_cast< ::OPMessage::ItemJudgeRuleLuKouZuoZhuan*>(&::OPMessage::ItemJudgeRuleLuKouZuoZhuan::default_instance());
  item_lukouyouzhuan_ = const_cast< ::OPMessage::ItemJudgeRuleLuKouYouZhuan*>(&::OPMessage::ItemJudgeRuleLuKouYouZhuan::default_instance());
  item_zhixiantongguolukou_ = const_cast< ::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou*>(&::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou::default_instance());
  item_gonggongqichezhan_ = const_cast< ::OPMessage::ItemJudgeRuleGongGongQiCheZhan*>(&::OPMessage::ItemJudgeRuleGongGongQiCheZhan::default_instance());
  item_renxinghengdao_ = const_cast< ::OPMessage::ItemJudgeRuleRenXingHengDao*>(&::OPMessage::ItemJudgeRuleRenXingHengDao::default_instance());
  item_zhixianxingshi_ = const_cast< ::OPMessage::ItemJudgeRuleZhiXianXingShi*>(&::OPMessage::ItemJudgeRuleZhiXianXingShi::default_instance());
  item_jiajiandang_ = const_cast< ::OPMessage::ItemJudgeRuleJiaJianDang*>(&::OPMessage::ItemJudgeRuleJiaJianDang::default_instance());
  item_diaotou_ = const_cast< ::OPMessage::ItemJudgeRuleDiaoTou*>(&::OPMessage::ItemJudgeRuleDiaoTou::default_instance());
  item_biangengchedao_ = const_cast< ::OPMessage::ItemJudgeRuleBianGengCheDao*>(&::OPMessage::ItemJudgeRuleBianGengCheDao::default_instance());
  item_chaoche_ = const_cast< ::OPMessage::ItemJudgeRuleChaoChe*>(&::OPMessage::ItemJudgeRuleChaoChe::default_instance());
  item_huiche_ = const_cast< ::OPMessage::ItemJudgeRuleHuiChe*>(&::OPMessage::ItemJudgeRuleHuiChe::default_instance());
  item_kaobiantingche_ = const_cast< ::OPMessage::ItemJudgeRuleKaoBianTingChe*>(&::OPMessage::ItemJudgeRuleKaoBianTingChe::default_instance());
}

ItemsJudgeRules::ItemsJudgeRules(const ItemsJudgeRules& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.ItemsJudgeRules)
}

void ItemsJudgeRules::SharedCtor() {
  _cached_size_ = 0;
  item_global_ = NULL;
  item_zero_ = NULL;
  item_dk_ = NULL;
  item_zjzw_ = NULL;
  item_qxxs_ = NULL;
  item_cftc_ = NULL;
  item_spqb_ = NULL;
  item_dcrk_ = NULL;
  item_shangchezhunbei_ = NULL;
  item_dengguangmoni_ = NULL;
  item_qibu_ = NULL;
  item_xuexiaoquyu_ = NULL;
  item_lukouzuozhuan_ = NULL;
  item_lukouyouzhuan_ = NULL;
  item_zhixiantongguolukou_ = NULL;
  item_gonggongqichezhan_ = NULL;
  item_renxinghengdao_ = NULL;
  item_zhixianxingshi_ = NULL;
  item_jiajiandang_ = NULL;
  item_diaotou_ = NULL;
  item_biangengchedao_ = NULL;
  item_chaoche_ = NULL;
  item_huiche_ = NULL;
  item_kaobiantingche_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemsJudgeRules::~ItemsJudgeRules() {
  // @@protoc_insertion_point(destructor:OPMessage.ItemsJudgeRules)
  SharedDtor();
}

void ItemsJudgeRules::SharedDtor() {
  if (this != default_instance_) {
    delete item_global_;
    delete item_zero_;
    delete item_dk_;
    delete item_zjzw_;
    delete item_qxxs_;
    delete item_cftc_;
    delete item_spqb_;
    delete item_dcrk_;
    delete item_shangchezhunbei_;
    delete item_dengguangmoni_;
    delete item_qibu_;
    delete item_xuexiaoquyu_;
    delete item_lukouzuozhuan_;
    delete item_lukouyouzhuan_;
    delete item_zhixiantongguolukou_;
    delete item_gonggongqichezhan_;
    delete item_renxinghengdao_;
    delete item_zhixianxingshi_;
    delete item_jiajiandang_;
    delete item_diaotou_;
    delete item_biangengchedao_;
    delete item_chaoche_;
    delete item_huiche_;
    delete item_kaobiantingche_;
  }
}

void ItemsJudgeRules::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemsJudgeRules::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemsJudgeRules_descriptor_;
}

const ItemsJudgeRules& ItemsJudgeRules::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

ItemsJudgeRules* ItemsJudgeRules::default_instance_ = NULL;

ItemsJudgeRules* ItemsJudgeRules::New(::google::protobuf::Arena* arena) const {
  ItemsJudgeRules* n = new ItemsJudgeRules;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemsJudgeRules::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.ItemsJudgeRules)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_item_global()) {
      if (item_global_ != NULL) item_global_->::OPMessage::GlobalJudgeRule::Clear();
    }
    if (has_item_zero()) {
      if (item_zero_ != NULL) item_zero_->::OPMessage::ItemJudgeRuleZero::Clear();
    }
    if (has_item_dk()) {
      if (item_dk_ != NULL) item_dk_->::OPMessage::ItemJudgeRuleDk::Clear();
    }
    if (has_item_zjzw()) {
      if (item_zjzw_ != NULL) item_zjzw_->::OPMessage::ItemJudgeRuleZjzw::Clear();
    }
    if (has_item_qxxs()) {
      if (item_qxxs_ != NULL) item_qxxs_->::OPMessage::ItemJudgeRuleQxxs::Clear();
    }
    if (has_item_cftc()) {
      if (item_cftc_ != NULL) item_cftc_->::OPMessage::ItemJudgeRuleCftc::Clear();
    }
    if (has_item_spqb()) {
      if (item_spqb_ != NULL) item_spqb_->::OPMessage::ItemJudgeRuleSpqb::Clear();
    }
    if (has_item_dcrk()) {
      if (item_dcrk_ != NULL) item_dcrk_->::OPMessage::ItemJudgeRuleDcrk::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_item_shangchezhunbei()) {
      if (item_shangchezhunbei_ != NULL) item_shangchezhunbei_->::OPMessage::ItemJudgeRuleShangCheZhunBei::Clear();
    }
    if (has_item_dengguangmoni()) {
      if (item_dengguangmoni_ != NULL) item_dengguangmoni_->::OPMessage::ItemJudgeRuleDengGuangMoNi::Clear();
    }
    if (has_item_qibu()) {
      if (item_qibu_ != NULL) item_qibu_->::OPMessage::ItemJudgeRuleQiBu::Clear();
    }
    if (has_item_xuexiaoquyu()) {
      if (item_xuexiaoquyu_ != NULL) item_xuexiaoquyu_->::OPMessage::ItemJudgeRuleXueXiaoQuYu::Clear();
    }
    if (has_item_lukouzuozhuan()) {
      if (item_lukouzuozhuan_ != NULL) item_lukouzuozhuan_->::OPMessage::ItemJudgeRuleLuKouZuoZhuan::Clear();
    }
    if (has_item_lukouyouzhuan()) {
      if (item_lukouyouzhuan_ != NULL) item_lukouyouzhuan_->::OPMessage::ItemJudgeRuleLuKouYouZhuan::Clear();
    }
    if (has_item_zhixiantongguolukou()) {
      if (item_zhixiantongguolukou_ != NULL) item_zhixiantongguolukou_->::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou::Clear();
    }
    if (has_item_gonggongqichezhan()) {
      if (item_gonggongqichezhan_ != NULL) item_gonggongqichezhan_->::OPMessage::ItemJudgeRuleGongGongQiCheZhan::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 16711680u) {
    if (has_item_renxinghengdao()) {
      if (item_renxinghengdao_ != NULL) item_renxinghengdao_->::OPMessage::ItemJudgeRuleRenXingHengDao::Clear();
    }
    if (has_item_zhixianxingshi()) {
      if (item_zhixianxingshi_ != NULL) item_zhixianxingshi_->::OPMessage::ItemJudgeRuleZhiXianXingShi::Clear();
    }
    if (has_item_jiajiandang()) {
      if (item_jiajiandang_ != NULL) item_jiajiandang_->::OPMessage::ItemJudgeRuleJiaJianDang::Clear();
    }
    if (has_item_diaotou()) {
      if (item_diaotou_ != NULL) item_diaotou_->::OPMessage::ItemJudgeRuleDiaoTou::Clear();
    }
    if (has_item_biangengchedao()) {
      if (item_biangengchedao_ != NULL) item_biangengchedao_->::OPMessage::ItemJudgeRuleBianGengCheDao::Clear();
    }
    if (has_item_chaoche()) {
      if (item_chaoche_ != NULL) item_chaoche_->::OPMessage::ItemJudgeRuleChaoChe::Clear();
    }
    if (has_item_huiche()) {
      if (item_huiche_ != NULL) item_huiche_->::OPMessage::ItemJudgeRuleHuiChe::Clear();
    }
    if (has_item_kaobiantingche()) {
      if (item_kaobiantingche_ != NULL) item_kaobiantingche_->::OPMessage::ItemJudgeRuleKaoBianTingChe::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ItemsJudgeRules::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.ItemsJudgeRules)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OPMessage.GlobalJudgeRule item_global = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_global()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item_zero;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleZero item_zero = 2;
      case 2: {
        if (tag == 18) {
         parse_item_zero:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_zero()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_item_dk;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleDk item_dk = 3;
      case 3: {
        if (tag == 26) {
         parse_item_dk:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_dk()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_item_zjzw;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleZjzw item_zjzw = 4;
      case 4: {
        if (tag == 34) {
         parse_item_zjzw:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_zjzw()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_item_qxxs;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleQxxs item_qxxs = 5;
      case 5: {
        if (tag == 42) {
         parse_item_qxxs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_qxxs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_item_cftc;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleCftc item_cftc = 6;
      case 6: {
        if (tag == 50) {
         parse_item_cftc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_cftc()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_item_spqb;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleSpqb item_spqb = 7;
      case 7: {
        if (tag == 58) {
         parse_item_spqb:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_spqb()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_item_dcrk;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleDcrk item_dcrk = 8;
      case 8: {
        if (tag == 66) {
         parse_item_dcrk:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_dcrk()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_item_shangchezhunbei;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleShangCheZhunBei item_shangchezhunbei = 9;
      case 9: {
        if (tag == 74) {
         parse_item_shangchezhunbei:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_shangchezhunbei()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_item_dengguangmoni;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleDengGuangMoNi item_dengguangmoni = 10;
      case 10: {
        if (tag == 82) {
         parse_item_dengguangmoni:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_dengguangmoni()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_item_qibu;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleQiBu item_qibu = 11;
      case 11: {
        if (tag == 90) {
         parse_item_qibu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_qibu()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_item_xuexiaoquyu;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleXueXiaoQuYu item_xuexiaoquyu = 12;
      case 12: {
        if (tag == 98) {
         parse_item_xuexiaoquyu:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_xuexiaoquyu()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_item_lukouzuozhuan;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleLuKouZuoZhuan item_lukouzuozhuan = 13;
      case 13: {
        if (tag == 106) {
         parse_item_lukouzuozhuan:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_lukouzuozhuan()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_item_lukouyouzhuan;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleLuKouYouZhuan item_lukouyouzhuan = 14;
      case 14: {
        if (tag == 114) {
         parse_item_lukouyouzhuan:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_lukouyouzhuan()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_item_zhixiantongguolukou;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou item_zhixiantongguolukou = 15;
      case 15: {
        if (tag == 122) {
         parse_item_zhixiantongguolukou:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_zhixiantongguolukou()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_item_gonggongqichezhan;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleGongGongQiCheZhan item_gonggongqichezhan = 16;
      case 16: {
        if (tag == 130) {
         parse_item_gonggongqichezhan:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_gonggongqichezhan()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_item_renxinghengdao;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleRenXingHengDao item_renxinghengdao = 17;
      case 17: {
        if (tag == 138) {
         parse_item_renxinghengdao:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_renxinghengdao()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_item_zhixianxingshi;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleZhiXianXingShi item_zhixianxingshi = 18;
      case 18: {
        if (tag == 146) {
         parse_item_zhixianxingshi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_zhixianxingshi()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_item_jiajiandang;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleJiaJianDang item_jiajiandang = 19;
      case 19: {
        if (tag == 154) {
         parse_item_jiajiandang:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_jiajiandang()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_item_diaotou;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleDiaoTou item_diaotou = 20;
      case 20: {
        if (tag == 162) {
         parse_item_diaotou:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_diaotou()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_item_biangengchedao;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleBianGengCheDao item_biangengchedao = 21;
      case 21: {
        if (tag == 170) {
         parse_item_biangengchedao:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_biangengchedao()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_item_chaoche;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleChaoChe item_chaoche = 22;
      case 22: {
        if (tag == 178) {
         parse_item_chaoche:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_chaoche()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_item_huiche;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleHuiChe item_huiche = 23;
      case 23: {
        if (tag == 186) {
         parse_item_huiche:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_huiche()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_item_kaobiantingche;
        break;
      }

      // optional .OPMessage.ItemJudgeRuleKaoBianTingChe item_kaobiantingche = 24;
      case 24: {
        if (tag == 194) {
         parse_item_kaobiantingche:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_kaobiantingche()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.ItemsJudgeRules)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.ItemsJudgeRules)
  return false;
#undef DO_
}

void ItemsJudgeRules::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.ItemsJudgeRules)
  // optional .OPMessage.GlobalJudgeRule item_global = 1;
  if (has_item_global()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->item_global_, output);
  }

  // optional .OPMessage.ItemJudgeRuleZero item_zero = 2;
  if (has_item_zero()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->item_zero_, output);
  }

  // optional .OPMessage.ItemJudgeRuleDk item_dk = 3;
  if (has_item_dk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->item_dk_, output);
  }

  // optional .OPMessage.ItemJudgeRuleZjzw item_zjzw = 4;
  if (has_item_zjzw()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->item_zjzw_, output);
  }

  // optional .OPMessage.ItemJudgeRuleQxxs item_qxxs = 5;
  if (has_item_qxxs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->item_qxxs_, output);
  }

  // optional .OPMessage.ItemJudgeRuleCftc item_cftc = 6;
  if (has_item_cftc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->item_cftc_, output);
  }

  // optional .OPMessage.ItemJudgeRuleSpqb item_spqb = 7;
  if (has_item_spqb()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->item_spqb_, output);
  }

  // optional .OPMessage.ItemJudgeRuleDcrk item_dcrk = 8;
  if (has_item_dcrk()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->item_dcrk_, output);
  }

  // optional .OPMessage.ItemJudgeRuleShangCheZhunBei item_shangchezhunbei = 9;
  if (has_item_shangchezhunbei()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->item_shangchezhunbei_, output);
  }

  // optional .OPMessage.ItemJudgeRuleDengGuangMoNi item_dengguangmoni = 10;
  if (has_item_dengguangmoni()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->item_dengguangmoni_, output);
  }

  // optional .OPMessage.ItemJudgeRuleQiBu item_qibu = 11;
  if (has_item_qibu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->item_qibu_, output);
  }

  // optional .OPMessage.ItemJudgeRuleXueXiaoQuYu item_xuexiaoquyu = 12;
  if (has_item_xuexiaoquyu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->item_xuexiaoquyu_, output);
  }

  // optional .OPMessage.ItemJudgeRuleLuKouZuoZhuan item_lukouzuozhuan = 13;
  if (has_item_lukouzuozhuan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->item_lukouzuozhuan_, output);
  }

  // optional .OPMessage.ItemJudgeRuleLuKouYouZhuan item_lukouyouzhuan = 14;
  if (has_item_lukouyouzhuan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->item_lukouyouzhuan_, output);
  }

  // optional .OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou item_zhixiantongguolukou = 15;
  if (has_item_zhixiantongguolukou()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->item_zhixiantongguolukou_, output);
  }

  // optional .OPMessage.ItemJudgeRuleGongGongQiCheZhan item_gonggongqichezhan = 16;
  if (has_item_gonggongqichezhan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->item_gonggongqichezhan_, output);
  }

  // optional .OPMessage.ItemJudgeRuleRenXingHengDao item_renxinghengdao = 17;
  if (has_item_renxinghengdao()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->item_renxinghengdao_, output);
  }

  // optional .OPMessage.ItemJudgeRuleZhiXianXingShi item_zhixianxingshi = 18;
  if (has_item_zhixianxingshi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->item_zhixianxingshi_, output);
  }

  // optional .OPMessage.ItemJudgeRuleJiaJianDang item_jiajiandang = 19;
  if (has_item_jiajiandang()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->item_jiajiandang_, output);
  }

  // optional .OPMessage.ItemJudgeRuleDiaoTou item_diaotou = 20;
  if (has_item_diaotou()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->item_diaotou_, output);
  }

  // optional .OPMessage.ItemJudgeRuleBianGengCheDao item_biangengchedao = 21;
  if (has_item_biangengchedao()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->item_biangengchedao_, output);
  }

  // optional .OPMessage.ItemJudgeRuleChaoChe item_chaoche = 22;
  if (has_item_chaoche()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->item_chaoche_, output);
  }

  // optional .OPMessage.ItemJudgeRuleHuiChe item_huiche = 23;
  if (has_item_huiche()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->item_huiche_, output);
  }

  // optional .OPMessage.ItemJudgeRuleKaoBianTingChe item_kaobiantingche = 24;
  if (has_item_kaobiantingche()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, *this->item_kaobiantingche_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.ItemsJudgeRules)
}

::google::protobuf::uint8* ItemsJudgeRules::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.ItemsJudgeRules)
  // optional .OPMessage.GlobalJudgeRule item_global = 1;
  if (has_item_global()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->item_global_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleZero item_zero = 2;
  if (has_item_zero()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->item_zero_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleDk item_dk = 3;
  if (has_item_dk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->item_dk_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleZjzw item_zjzw = 4;
  if (has_item_zjzw()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->item_zjzw_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleQxxs item_qxxs = 5;
  if (has_item_qxxs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->item_qxxs_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleCftc item_cftc = 6;
  if (has_item_cftc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->item_cftc_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleSpqb item_spqb = 7;
  if (has_item_spqb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->item_spqb_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleDcrk item_dcrk = 8;
  if (has_item_dcrk()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->item_dcrk_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleShangCheZhunBei item_shangchezhunbei = 9;
  if (has_item_shangchezhunbei()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->item_shangchezhunbei_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleDengGuangMoNi item_dengguangmoni = 10;
  if (has_item_dengguangmoni()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->item_dengguangmoni_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleQiBu item_qibu = 11;
  if (has_item_qibu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->item_qibu_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleXueXiaoQuYu item_xuexiaoquyu = 12;
  if (has_item_xuexiaoquyu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->item_xuexiaoquyu_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleLuKouZuoZhuan item_lukouzuozhuan = 13;
  if (has_item_lukouzuozhuan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->item_lukouzuozhuan_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleLuKouYouZhuan item_lukouyouzhuan = 14;
  if (has_item_lukouyouzhuan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->item_lukouyouzhuan_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou item_zhixiantongguolukou = 15;
  if (has_item_zhixiantongguolukou()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->item_zhixiantongguolukou_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleGongGongQiCheZhan item_gonggongqichezhan = 16;
  if (has_item_gonggongqichezhan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->item_gonggongqichezhan_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleRenXingHengDao item_renxinghengdao = 17;
  if (has_item_renxinghengdao()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->item_renxinghengdao_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleZhiXianXingShi item_zhixianxingshi = 18;
  if (has_item_zhixianxingshi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->item_zhixianxingshi_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleJiaJianDang item_jiajiandang = 19;
  if (has_item_jiajiandang()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *this->item_jiajiandang_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleDiaoTou item_diaotou = 20;
  if (has_item_diaotou()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->item_diaotou_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleBianGengCheDao item_biangengchedao = 21;
  if (has_item_biangengchedao()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->item_biangengchedao_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleChaoChe item_chaoche = 22;
  if (has_item_chaoche()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->item_chaoche_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleHuiChe item_huiche = 23;
  if (has_item_huiche()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, *this->item_huiche_, false, target);
  }

  // optional .OPMessage.ItemJudgeRuleKaoBianTingChe item_kaobiantingche = 24;
  if (has_item_kaobiantingche()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        24, *this->item_kaobiantingche_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.ItemsJudgeRules)
  return target;
}

int ItemsJudgeRules::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.ItemsJudgeRules)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .OPMessage.GlobalJudgeRule item_global = 1;
    if (has_item_global()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_global_);
    }

    // optional .OPMessage.ItemJudgeRuleZero item_zero = 2;
    if (has_item_zero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_zero_);
    }

    // optional .OPMessage.ItemJudgeRuleDk item_dk = 3;
    if (has_item_dk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_dk_);
    }

    // optional .OPMessage.ItemJudgeRuleZjzw item_zjzw = 4;
    if (has_item_zjzw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_zjzw_);
    }

    // optional .OPMessage.ItemJudgeRuleQxxs item_qxxs = 5;
    if (has_item_qxxs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_qxxs_);
    }

    // optional .OPMessage.ItemJudgeRuleCftc item_cftc = 6;
    if (has_item_cftc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_cftc_);
    }

    // optional .OPMessage.ItemJudgeRuleSpqb item_spqb = 7;
    if (has_item_spqb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_spqb_);
    }

    // optional .OPMessage.ItemJudgeRuleDcrk item_dcrk = 8;
    if (has_item_dcrk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_dcrk_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .OPMessage.ItemJudgeRuleShangCheZhunBei item_shangchezhunbei = 9;
    if (has_item_shangchezhunbei()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_shangchezhunbei_);
    }

    // optional .OPMessage.ItemJudgeRuleDengGuangMoNi item_dengguangmoni = 10;
    if (has_item_dengguangmoni()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_dengguangmoni_);
    }

    // optional .OPMessage.ItemJudgeRuleQiBu item_qibu = 11;
    if (has_item_qibu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_qibu_);
    }

    // optional .OPMessage.ItemJudgeRuleXueXiaoQuYu item_xuexiaoquyu = 12;
    if (has_item_xuexiaoquyu()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_xuexiaoquyu_);
    }

    // optional .OPMessage.ItemJudgeRuleLuKouZuoZhuan item_lukouzuozhuan = 13;
    if (has_item_lukouzuozhuan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_lukouzuozhuan_);
    }

    // optional .OPMessage.ItemJudgeRuleLuKouYouZhuan item_lukouyouzhuan = 14;
    if (has_item_lukouyouzhuan()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_lukouyouzhuan_);
    }

    // optional .OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou item_zhixiantongguolukou = 15;
    if (has_item_zhixiantongguolukou()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_zhixiantongguolukou_);
    }

    // optional .OPMessage.ItemJudgeRuleGongGongQiCheZhan item_gonggongqichezhan = 16;
    if (has_item_gonggongqichezhan()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_gonggongqichezhan_);
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional .OPMessage.ItemJudgeRuleRenXingHengDao item_renxinghengdao = 17;
    if (has_item_renxinghengdao()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_renxinghengdao_);
    }

    // optional .OPMessage.ItemJudgeRuleZhiXianXingShi item_zhixianxingshi = 18;
    if (has_item_zhixianxingshi()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_zhixianxingshi_);
    }

    // optional .OPMessage.ItemJudgeRuleJiaJianDang item_jiajiandang = 19;
    if (has_item_jiajiandang()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_jiajiandang_);
    }

    // optional .OPMessage.ItemJudgeRuleDiaoTou item_diaotou = 20;
    if (has_item_diaotou()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_diaotou_);
    }

    // optional .OPMessage.ItemJudgeRuleBianGengCheDao item_biangengchedao = 21;
    if (has_item_biangengchedao()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_biangengchedao_);
    }

    // optional .OPMessage.ItemJudgeRuleChaoChe item_chaoche = 22;
    if (has_item_chaoche()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_chaoche_);
    }

    // optional .OPMessage.ItemJudgeRuleHuiChe item_huiche = 23;
    if (has_item_huiche()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_huiche_);
    }

    // optional .OPMessage.ItemJudgeRuleKaoBianTingChe item_kaobiantingche = 24;
    if (has_item_kaobiantingche()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->item_kaobiantingche_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemsJudgeRules::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.ItemsJudgeRules)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemsJudgeRules* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemsJudgeRules>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.ItemsJudgeRules)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.ItemsJudgeRules)
    MergeFrom(*source);
  }
}

void ItemsJudgeRules::MergeFrom(const ItemsJudgeRules& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.ItemsJudgeRules)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_global()) {
      mutable_item_global()->::OPMessage::GlobalJudgeRule::MergeFrom(from.item_global());
    }
    if (from.has_item_zero()) {
      mutable_item_zero()->::OPMessage::ItemJudgeRuleZero::MergeFrom(from.item_zero());
    }
    if (from.has_item_dk()) {
      mutable_item_dk()->::OPMessage::ItemJudgeRuleDk::MergeFrom(from.item_dk());
    }
    if (from.has_item_zjzw()) {
      mutable_item_zjzw()->::OPMessage::ItemJudgeRuleZjzw::MergeFrom(from.item_zjzw());
    }
    if (from.has_item_qxxs()) {
      mutable_item_qxxs()->::OPMessage::ItemJudgeRuleQxxs::MergeFrom(from.item_qxxs());
    }
    if (from.has_item_cftc()) {
      mutable_item_cftc()->::OPMessage::ItemJudgeRuleCftc::MergeFrom(from.item_cftc());
    }
    if (from.has_item_spqb()) {
      mutable_item_spqb()->::OPMessage::ItemJudgeRuleSpqb::MergeFrom(from.item_spqb());
    }
    if (from.has_item_dcrk()) {
      mutable_item_dcrk()->::OPMessage::ItemJudgeRuleDcrk::MergeFrom(from.item_dcrk());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_item_shangchezhunbei()) {
      mutable_item_shangchezhunbei()->::OPMessage::ItemJudgeRuleShangCheZhunBei::MergeFrom(from.item_shangchezhunbei());
    }
    if (from.has_item_dengguangmoni()) {
      mutable_item_dengguangmoni()->::OPMessage::ItemJudgeRuleDengGuangMoNi::MergeFrom(from.item_dengguangmoni());
    }
    if (from.has_item_qibu()) {
      mutable_item_qibu()->::OPMessage::ItemJudgeRuleQiBu::MergeFrom(from.item_qibu());
    }
    if (from.has_item_xuexiaoquyu()) {
      mutable_item_xuexiaoquyu()->::OPMessage::ItemJudgeRuleXueXiaoQuYu::MergeFrom(from.item_xuexiaoquyu());
    }
    if (from.has_item_lukouzuozhuan()) {
      mutable_item_lukouzuozhuan()->::OPMessage::ItemJudgeRuleLuKouZuoZhuan::MergeFrom(from.item_lukouzuozhuan());
    }
    if (from.has_item_lukouyouzhuan()) {
      mutable_item_lukouyouzhuan()->::OPMessage::ItemJudgeRuleLuKouYouZhuan::MergeFrom(from.item_lukouyouzhuan());
    }
    if (from.has_item_zhixiantongguolukou()) {
      mutable_item_zhixiantongguolukou()->::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou::MergeFrom(from.item_zhixiantongguolukou());
    }
    if (from.has_item_gonggongqichezhan()) {
      mutable_item_gonggongqichezhan()->::OPMessage::ItemJudgeRuleGongGongQiCheZhan::MergeFrom(from.item_gonggongqichezhan());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_item_renxinghengdao()) {
      mutable_item_renxinghengdao()->::OPMessage::ItemJudgeRuleRenXingHengDao::MergeFrom(from.item_renxinghengdao());
    }
    if (from.has_item_zhixianxingshi()) {
      mutable_item_zhixianxingshi()->::OPMessage::ItemJudgeRuleZhiXianXingShi::MergeFrom(from.item_zhixianxingshi());
    }
    if (from.has_item_jiajiandang()) {
      mutable_item_jiajiandang()->::OPMessage::ItemJudgeRuleJiaJianDang::MergeFrom(from.item_jiajiandang());
    }
    if (from.has_item_diaotou()) {
      mutable_item_diaotou()->::OPMessage::ItemJudgeRuleDiaoTou::MergeFrom(from.item_diaotou());
    }
    if (from.has_item_biangengchedao()) {
      mutable_item_biangengchedao()->::OPMessage::ItemJudgeRuleBianGengCheDao::MergeFrom(from.item_biangengchedao());
    }
    if (from.has_item_chaoche()) {
      mutable_item_chaoche()->::OPMessage::ItemJudgeRuleChaoChe::MergeFrom(from.item_chaoche());
    }
    if (from.has_item_huiche()) {
      mutable_item_huiche()->::OPMessage::ItemJudgeRuleHuiChe::MergeFrom(from.item_huiche());
    }
    if (from.has_item_kaobiantingche()) {
      mutable_item_kaobiantingche()->::OPMessage::ItemJudgeRuleKaoBianTingChe::MergeFrom(from.item_kaobiantingche());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ItemsJudgeRules::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.ItemsJudgeRules)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemsJudgeRules::CopyFrom(const ItemsJudgeRules& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.ItemsJudgeRules)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemsJudgeRules::IsInitialized() const {

  return true;
}

void ItemsJudgeRules::Swap(ItemsJudgeRules* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemsJudgeRules::InternalSwap(ItemsJudgeRules* other) {
  std::swap(item_global_, other->item_global_);
  std::swap(item_zero_, other->item_zero_);
  std::swap(item_dk_, other->item_dk_);
  std::swap(item_zjzw_, other->item_zjzw_);
  std::swap(item_qxxs_, other->item_qxxs_);
  std::swap(item_cftc_, other->item_cftc_);
  std::swap(item_spqb_, other->item_spqb_);
  std::swap(item_dcrk_, other->item_dcrk_);
  std::swap(item_shangchezhunbei_, other->item_shangchezhunbei_);
  std::swap(item_dengguangmoni_, other->item_dengguangmoni_);
  std::swap(item_qibu_, other->item_qibu_);
  std::swap(item_xuexiaoquyu_, other->item_xuexiaoquyu_);
  std::swap(item_lukouzuozhuan_, other->item_lukouzuozhuan_);
  std::swap(item_lukouyouzhuan_, other->item_lukouyouzhuan_);
  std::swap(item_zhixiantongguolukou_, other->item_zhixiantongguolukou_);
  std::swap(item_gonggongqichezhan_, other->item_gonggongqichezhan_);
  std::swap(item_renxinghengdao_, other->item_renxinghengdao_);
  std::swap(item_zhixianxingshi_, other->item_zhixianxingshi_);
  std::swap(item_jiajiandang_, other->item_jiajiandang_);
  std::swap(item_diaotou_, other->item_diaotou_);
  std::swap(item_biangengchedao_, other->item_biangengchedao_);
  std::swap(item_chaoche_, other->item_chaoche_);
  std::swap(item_huiche_, other->item_huiche_);
  std::swap(item_kaobiantingche_, other->item_kaobiantingche_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemsJudgeRules::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemsJudgeRules_descriptor_;
  metadata.reflection = ItemsJudgeRules_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemsJudgeRules

// optional .OPMessage.GlobalJudgeRule item_global = 1;
bool ItemsJudgeRules::has_item_global() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ItemsJudgeRules::set_has_item_global() {
  _has_bits_[0] |= 0x00000001u;
}
void ItemsJudgeRules::clear_has_item_global() {
  _has_bits_[0] &= ~0x00000001u;
}
void ItemsJudgeRules::clear_item_global() {
  if (item_global_ != NULL) item_global_->::OPMessage::GlobalJudgeRule::Clear();
  clear_has_item_global();
}
const ::OPMessage::GlobalJudgeRule& ItemsJudgeRules::item_global() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_global)
  return item_global_ != NULL ? *item_global_ : *default_instance_->item_global_;
}
::OPMessage::GlobalJudgeRule* ItemsJudgeRules::mutable_item_global() {
  set_has_item_global();
  if (item_global_ == NULL) {
    item_global_ = new ::OPMessage::GlobalJudgeRule;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_global)
  return item_global_;
}
::OPMessage::GlobalJudgeRule* ItemsJudgeRules::release_item_global() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_global)
  clear_has_item_global();
  ::OPMessage::GlobalJudgeRule* temp = item_global_;
  item_global_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_global(::OPMessage::GlobalJudgeRule* item_global) {
  delete item_global_;
  item_global_ = item_global;
  if (item_global) {
    set_has_item_global();
  } else {
    clear_has_item_global();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_global)
}

// optional .OPMessage.ItemJudgeRuleZero item_zero = 2;
bool ItemsJudgeRules::has_item_zero() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ItemsJudgeRules::set_has_item_zero() {
  _has_bits_[0] |= 0x00000002u;
}
void ItemsJudgeRules::clear_has_item_zero() {
  _has_bits_[0] &= ~0x00000002u;
}
void ItemsJudgeRules::clear_item_zero() {
  if (item_zero_ != NULL) item_zero_->::OPMessage::ItemJudgeRuleZero::Clear();
  clear_has_item_zero();
}
const ::OPMessage::ItemJudgeRuleZero& ItemsJudgeRules::item_zero() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_zero)
  return item_zero_ != NULL ? *item_zero_ : *default_instance_->item_zero_;
}
::OPMessage::ItemJudgeRuleZero* ItemsJudgeRules::mutable_item_zero() {
  set_has_item_zero();
  if (item_zero_ == NULL) {
    item_zero_ = new ::OPMessage::ItemJudgeRuleZero;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_zero)
  return item_zero_;
}
::OPMessage::ItemJudgeRuleZero* ItemsJudgeRules::release_item_zero() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_zero)
  clear_has_item_zero();
  ::OPMessage::ItemJudgeRuleZero* temp = item_zero_;
  item_zero_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_zero(::OPMessage::ItemJudgeRuleZero* item_zero) {
  delete item_zero_;
  item_zero_ = item_zero;
  if (item_zero) {
    set_has_item_zero();
  } else {
    clear_has_item_zero();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_zero)
}

// optional .OPMessage.ItemJudgeRuleDk item_dk = 3;
bool ItemsJudgeRules::has_item_dk() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ItemsJudgeRules::set_has_item_dk() {
  _has_bits_[0] |= 0x00000004u;
}
void ItemsJudgeRules::clear_has_item_dk() {
  _has_bits_[0] &= ~0x00000004u;
}
void ItemsJudgeRules::clear_item_dk() {
  if (item_dk_ != NULL) item_dk_->::OPMessage::ItemJudgeRuleDk::Clear();
  clear_has_item_dk();
}
const ::OPMessage::ItemJudgeRuleDk& ItemsJudgeRules::item_dk() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_dk)
  return item_dk_ != NULL ? *item_dk_ : *default_instance_->item_dk_;
}
::OPMessage::ItemJudgeRuleDk* ItemsJudgeRules::mutable_item_dk() {
  set_has_item_dk();
  if (item_dk_ == NULL) {
    item_dk_ = new ::OPMessage::ItemJudgeRuleDk;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_dk)
  return item_dk_;
}
::OPMessage::ItemJudgeRuleDk* ItemsJudgeRules::release_item_dk() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_dk)
  clear_has_item_dk();
  ::OPMessage::ItemJudgeRuleDk* temp = item_dk_;
  item_dk_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_dk(::OPMessage::ItemJudgeRuleDk* item_dk) {
  delete item_dk_;
  item_dk_ = item_dk;
  if (item_dk) {
    set_has_item_dk();
  } else {
    clear_has_item_dk();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_dk)
}

// optional .OPMessage.ItemJudgeRuleZjzw item_zjzw = 4;
bool ItemsJudgeRules::has_item_zjzw() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ItemsJudgeRules::set_has_item_zjzw() {
  _has_bits_[0] |= 0x00000008u;
}
void ItemsJudgeRules::clear_has_item_zjzw() {
  _has_bits_[0] &= ~0x00000008u;
}
void ItemsJudgeRules::clear_item_zjzw() {
  if (item_zjzw_ != NULL) item_zjzw_->::OPMessage::ItemJudgeRuleZjzw::Clear();
  clear_has_item_zjzw();
}
const ::OPMessage::ItemJudgeRuleZjzw& ItemsJudgeRules::item_zjzw() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_zjzw)
  return item_zjzw_ != NULL ? *item_zjzw_ : *default_instance_->item_zjzw_;
}
::OPMessage::ItemJudgeRuleZjzw* ItemsJudgeRules::mutable_item_zjzw() {
  set_has_item_zjzw();
  if (item_zjzw_ == NULL) {
    item_zjzw_ = new ::OPMessage::ItemJudgeRuleZjzw;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_zjzw)
  return item_zjzw_;
}
::OPMessage::ItemJudgeRuleZjzw* ItemsJudgeRules::release_item_zjzw() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_zjzw)
  clear_has_item_zjzw();
  ::OPMessage::ItemJudgeRuleZjzw* temp = item_zjzw_;
  item_zjzw_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_zjzw(::OPMessage::ItemJudgeRuleZjzw* item_zjzw) {
  delete item_zjzw_;
  item_zjzw_ = item_zjzw;
  if (item_zjzw) {
    set_has_item_zjzw();
  } else {
    clear_has_item_zjzw();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_zjzw)
}

// optional .OPMessage.ItemJudgeRuleQxxs item_qxxs = 5;
bool ItemsJudgeRules::has_item_qxxs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ItemsJudgeRules::set_has_item_qxxs() {
  _has_bits_[0] |= 0x00000010u;
}
void ItemsJudgeRules::clear_has_item_qxxs() {
  _has_bits_[0] &= ~0x00000010u;
}
void ItemsJudgeRules::clear_item_qxxs() {
  if (item_qxxs_ != NULL) item_qxxs_->::OPMessage::ItemJudgeRuleQxxs::Clear();
  clear_has_item_qxxs();
}
const ::OPMessage::ItemJudgeRuleQxxs& ItemsJudgeRules::item_qxxs() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_qxxs)
  return item_qxxs_ != NULL ? *item_qxxs_ : *default_instance_->item_qxxs_;
}
::OPMessage::ItemJudgeRuleQxxs* ItemsJudgeRules::mutable_item_qxxs() {
  set_has_item_qxxs();
  if (item_qxxs_ == NULL) {
    item_qxxs_ = new ::OPMessage::ItemJudgeRuleQxxs;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_qxxs)
  return item_qxxs_;
}
::OPMessage::ItemJudgeRuleQxxs* ItemsJudgeRules::release_item_qxxs() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_qxxs)
  clear_has_item_qxxs();
  ::OPMessage::ItemJudgeRuleQxxs* temp = item_qxxs_;
  item_qxxs_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_qxxs(::OPMessage::ItemJudgeRuleQxxs* item_qxxs) {
  delete item_qxxs_;
  item_qxxs_ = item_qxxs;
  if (item_qxxs) {
    set_has_item_qxxs();
  } else {
    clear_has_item_qxxs();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_qxxs)
}

// optional .OPMessage.ItemJudgeRuleCftc item_cftc = 6;
bool ItemsJudgeRules::has_item_cftc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ItemsJudgeRules::set_has_item_cftc() {
  _has_bits_[0] |= 0x00000020u;
}
void ItemsJudgeRules::clear_has_item_cftc() {
  _has_bits_[0] &= ~0x00000020u;
}
void ItemsJudgeRules::clear_item_cftc() {
  if (item_cftc_ != NULL) item_cftc_->::OPMessage::ItemJudgeRuleCftc::Clear();
  clear_has_item_cftc();
}
const ::OPMessage::ItemJudgeRuleCftc& ItemsJudgeRules::item_cftc() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_cftc)
  return item_cftc_ != NULL ? *item_cftc_ : *default_instance_->item_cftc_;
}
::OPMessage::ItemJudgeRuleCftc* ItemsJudgeRules::mutable_item_cftc() {
  set_has_item_cftc();
  if (item_cftc_ == NULL) {
    item_cftc_ = new ::OPMessage::ItemJudgeRuleCftc;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_cftc)
  return item_cftc_;
}
::OPMessage::ItemJudgeRuleCftc* ItemsJudgeRules::release_item_cftc() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_cftc)
  clear_has_item_cftc();
  ::OPMessage::ItemJudgeRuleCftc* temp = item_cftc_;
  item_cftc_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_cftc(::OPMessage::ItemJudgeRuleCftc* item_cftc) {
  delete item_cftc_;
  item_cftc_ = item_cftc;
  if (item_cftc) {
    set_has_item_cftc();
  } else {
    clear_has_item_cftc();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_cftc)
}

// optional .OPMessage.ItemJudgeRuleSpqb item_spqb = 7;
bool ItemsJudgeRules::has_item_spqb() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ItemsJudgeRules::set_has_item_spqb() {
  _has_bits_[0] |= 0x00000040u;
}
void ItemsJudgeRules::clear_has_item_spqb() {
  _has_bits_[0] &= ~0x00000040u;
}
void ItemsJudgeRules::clear_item_spqb() {
  if (item_spqb_ != NULL) item_spqb_->::OPMessage::ItemJudgeRuleSpqb::Clear();
  clear_has_item_spqb();
}
const ::OPMessage::ItemJudgeRuleSpqb& ItemsJudgeRules::item_spqb() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_spqb)
  return item_spqb_ != NULL ? *item_spqb_ : *default_instance_->item_spqb_;
}
::OPMessage::ItemJudgeRuleSpqb* ItemsJudgeRules::mutable_item_spqb() {
  set_has_item_spqb();
  if (item_spqb_ == NULL) {
    item_spqb_ = new ::OPMessage::ItemJudgeRuleSpqb;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_spqb)
  return item_spqb_;
}
::OPMessage::ItemJudgeRuleSpqb* ItemsJudgeRules::release_item_spqb() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_spqb)
  clear_has_item_spqb();
  ::OPMessage::ItemJudgeRuleSpqb* temp = item_spqb_;
  item_spqb_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_spqb(::OPMessage::ItemJudgeRuleSpqb* item_spqb) {
  delete item_spqb_;
  item_spqb_ = item_spqb;
  if (item_spqb) {
    set_has_item_spqb();
  } else {
    clear_has_item_spqb();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_spqb)
}

// optional .OPMessage.ItemJudgeRuleDcrk item_dcrk = 8;
bool ItemsJudgeRules::has_item_dcrk() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ItemsJudgeRules::set_has_item_dcrk() {
  _has_bits_[0] |= 0x00000080u;
}
void ItemsJudgeRules::clear_has_item_dcrk() {
  _has_bits_[0] &= ~0x00000080u;
}
void ItemsJudgeRules::clear_item_dcrk() {
  if (item_dcrk_ != NULL) item_dcrk_->::OPMessage::ItemJudgeRuleDcrk::Clear();
  clear_has_item_dcrk();
}
const ::OPMessage::ItemJudgeRuleDcrk& ItemsJudgeRules::item_dcrk() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_dcrk)
  return item_dcrk_ != NULL ? *item_dcrk_ : *default_instance_->item_dcrk_;
}
::OPMessage::ItemJudgeRuleDcrk* ItemsJudgeRules::mutable_item_dcrk() {
  set_has_item_dcrk();
  if (item_dcrk_ == NULL) {
    item_dcrk_ = new ::OPMessage::ItemJudgeRuleDcrk;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_dcrk)
  return item_dcrk_;
}
::OPMessage::ItemJudgeRuleDcrk* ItemsJudgeRules::release_item_dcrk() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_dcrk)
  clear_has_item_dcrk();
  ::OPMessage::ItemJudgeRuleDcrk* temp = item_dcrk_;
  item_dcrk_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_dcrk(::OPMessage::ItemJudgeRuleDcrk* item_dcrk) {
  delete item_dcrk_;
  item_dcrk_ = item_dcrk;
  if (item_dcrk) {
    set_has_item_dcrk();
  } else {
    clear_has_item_dcrk();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_dcrk)
}

// optional .OPMessage.ItemJudgeRuleShangCheZhunBei item_shangchezhunbei = 9;
bool ItemsJudgeRules::has_item_shangchezhunbei() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ItemsJudgeRules::set_has_item_shangchezhunbei() {
  _has_bits_[0] |= 0x00000100u;
}
void ItemsJudgeRules::clear_has_item_shangchezhunbei() {
  _has_bits_[0] &= ~0x00000100u;
}
void ItemsJudgeRules::clear_item_shangchezhunbei() {
  if (item_shangchezhunbei_ != NULL) item_shangchezhunbei_->::OPMessage::ItemJudgeRuleShangCheZhunBei::Clear();
  clear_has_item_shangchezhunbei();
}
const ::OPMessage::ItemJudgeRuleShangCheZhunBei& ItemsJudgeRules::item_shangchezhunbei() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_shangchezhunbei)
  return item_shangchezhunbei_ != NULL ? *item_shangchezhunbei_ : *default_instance_->item_shangchezhunbei_;
}
::OPMessage::ItemJudgeRuleShangCheZhunBei* ItemsJudgeRules::mutable_item_shangchezhunbei() {
  set_has_item_shangchezhunbei();
  if (item_shangchezhunbei_ == NULL) {
    item_shangchezhunbei_ = new ::OPMessage::ItemJudgeRuleShangCheZhunBei;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_shangchezhunbei)
  return item_shangchezhunbei_;
}
::OPMessage::ItemJudgeRuleShangCheZhunBei* ItemsJudgeRules::release_item_shangchezhunbei() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_shangchezhunbei)
  clear_has_item_shangchezhunbei();
  ::OPMessage::ItemJudgeRuleShangCheZhunBei* temp = item_shangchezhunbei_;
  item_shangchezhunbei_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_shangchezhunbei(::OPMessage::ItemJudgeRuleShangCheZhunBei* item_shangchezhunbei) {
  delete item_shangchezhunbei_;
  item_shangchezhunbei_ = item_shangchezhunbei;
  if (item_shangchezhunbei) {
    set_has_item_shangchezhunbei();
  } else {
    clear_has_item_shangchezhunbei();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_shangchezhunbei)
}

// optional .OPMessage.ItemJudgeRuleDengGuangMoNi item_dengguangmoni = 10;
bool ItemsJudgeRules::has_item_dengguangmoni() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ItemsJudgeRules::set_has_item_dengguangmoni() {
  _has_bits_[0] |= 0x00000200u;
}
void ItemsJudgeRules::clear_has_item_dengguangmoni() {
  _has_bits_[0] &= ~0x00000200u;
}
void ItemsJudgeRules::clear_item_dengguangmoni() {
  if (item_dengguangmoni_ != NULL) item_dengguangmoni_->::OPMessage::ItemJudgeRuleDengGuangMoNi::Clear();
  clear_has_item_dengguangmoni();
}
const ::OPMessage::ItemJudgeRuleDengGuangMoNi& ItemsJudgeRules::item_dengguangmoni() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_dengguangmoni)
  return item_dengguangmoni_ != NULL ? *item_dengguangmoni_ : *default_instance_->item_dengguangmoni_;
}
::OPMessage::ItemJudgeRuleDengGuangMoNi* ItemsJudgeRules::mutable_item_dengguangmoni() {
  set_has_item_dengguangmoni();
  if (item_dengguangmoni_ == NULL) {
    item_dengguangmoni_ = new ::OPMessage::ItemJudgeRuleDengGuangMoNi;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_dengguangmoni)
  return item_dengguangmoni_;
}
::OPMessage::ItemJudgeRuleDengGuangMoNi* ItemsJudgeRules::release_item_dengguangmoni() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_dengguangmoni)
  clear_has_item_dengguangmoni();
  ::OPMessage::ItemJudgeRuleDengGuangMoNi* temp = item_dengguangmoni_;
  item_dengguangmoni_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_dengguangmoni(::OPMessage::ItemJudgeRuleDengGuangMoNi* item_dengguangmoni) {
  delete item_dengguangmoni_;
  item_dengguangmoni_ = item_dengguangmoni;
  if (item_dengguangmoni) {
    set_has_item_dengguangmoni();
  } else {
    clear_has_item_dengguangmoni();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_dengguangmoni)
}

// optional .OPMessage.ItemJudgeRuleQiBu item_qibu = 11;
bool ItemsJudgeRules::has_item_qibu() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ItemsJudgeRules::set_has_item_qibu() {
  _has_bits_[0] |= 0x00000400u;
}
void ItemsJudgeRules::clear_has_item_qibu() {
  _has_bits_[0] &= ~0x00000400u;
}
void ItemsJudgeRules::clear_item_qibu() {
  if (item_qibu_ != NULL) item_qibu_->::OPMessage::ItemJudgeRuleQiBu::Clear();
  clear_has_item_qibu();
}
const ::OPMessage::ItemJudgeRuleQiBu& ItemsJudgeRules::item_qibu() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_qibu)
  return item_qibu_ != NULL ? *item_qibu_ : *default_instance_->item_qibu_;
}
::OPMessage::ItemJudgeRuleQiBu* ItemsJudgeRules::mutable_item_qibu() {
  set_has_item_qibu();
  if (item_qibu_ == NULL) {
    item_qibu_ = new ::OPMessage::ItemJudgeRuleQiBu;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_qibu)
  return item_qibu_;
}
::OPMessage::ItemJudgeRuleQiBu* ItemsJudgeRules::release_item_qibu() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_qibu)
  clear_has_item_qibu();
  ::OPMessage::ItemJudgeRuleQiBu* temp = item_qibu_;
  item_qibu_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_qibu(::OPMessage::ItemJudgeRuleQiBu* item_qibu) {
  delete item_qibu_;
  item_qibu_ = item_qibu;
  if (item_qibu) {
    set_has_item_qibu();
  } else {
    clear_has_item_qibu();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_qibu)
}

// optional .OPMessage.ItemJudgeRuleXueXiaoQuYu item_xuexiaoquyu = 12;
bool ItemsJudgeRules::has_item_xuexiaoquyu() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ItemsJudgeRules::set_has_item_xuexiaoquyu() {
  _has_bits_[0] |= 0x00000800u;
}
void ItemsJudgeRules::clear_has_item_xuexiaoquyu() {
  _has_bits_[0] &= ~0x00000800u;
}
void ItemsJudgeRules::clear_item_xuexiaoquyu() {
  if (item_xuexiaoquyu_ != NULL) item_xuexiaoquyu_->::OPMessage::ItemJudgeRuleXueXiaoQuYu::Clear();
  clear_has_item_xuexiaoquyu();
}
const ::OPMessage::ItemJudgeRuleXueXiaoQuYu& ItemsJudgeRules::item_xuexiaoquyu() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_xuexiaoquyu)
  return item_xuexiaoquyu_ != NULL ? *item_xuexiaoquyu_ : *default_instance_->item_xuexiaoquyu_;
}
::OPMessage::ItemJudgeRuleXueXiaoQuYu* ItemsJudgeRules::mutable_item_xuexiaoquyu() {
  set_has_item_xuexiaoquyu();
  if (item_xuexiaoquyu_ == NULL) {
    item_xuexiaoquyu_ = new ::OPMessage::ItemJudgeRuleXueXiaoQuYu;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_xuexiaoquyu)
  return item_xuexiaoquyu_;
}
::OPMessage::ItemJudgeRuleXueXiaoQuYu* ItemsJudgeRules::release_item_xuexiaoquyu() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_xuexiaoquyu)
  clear_has_item_xuexiaoquyu();
  ::OPMessage::ItemJudgeRuleXueXiaoQuYu* temp = item_xuexiaoquyu_;
  item_xuexiaoquyu_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_xuexiaoquyu(::OPMessage::ItemJudgeRuleXueXiaoQuYu* item_xuexiaoquyu) {
  delete item_xuexiaoquyu_;
  item_xuexiaoquyu_ = item_xuexiaoquyu;
  if (item_xuexiaoquyu) {
    set_has_item_xuexiaoquyu();
  } else {
    clear_has_item_xuexiaoquyu();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_xuexiaoquyu)
}

// optional .OPMessage.ItemJudgeRuleLuKouZuoZhuan item_lukouzuozhuan = 13;
bool ItemsJudgeRules::has_item_lukouzuozhuan() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ItemsJudgeRules::set_has_item_lukouzuozhuan() {
  _has_bits_[0] |= 0x00001000u;
}
void ItemsJudgeRules::clear_has_item_lukouzuozhuan() {
  _has_bits_[0] &= ~0x00001000u;
}
void ItemsJudgeRules::clear_item_lukouzuozhuan() {
  if (item_lukouzuozhuan_ != NULL) item_lukouzuozhuan_->::OPMessage::ItemJudgeRuleLuKouZuoZhuan::Clear();
  clear_has_item_lukouzuozhuan();
}
const ::OPMessage::ItemJudgeRuleLuKouZuoZhuan& ItemsJudgeRules::item_lukouzuozhuan() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_lukouzuozhuan)
  return item_lukouzuozhuan_ != NULL ? *item_lukouzuozhuan_ : *default_instance_->item_lukouzuozhuan_;
}
::OPMessage::ItemJudgeRuleLuKouZuoZhuan* ItemsJudgeRules::mutable_item_lukouzuozhuan() {
  set_has_item_lukouzuozhuan();
  if (item_lukouzuozhuan_ == NULL) {
    item_lukouzuozhuan_ = new ::OPMessage::ItemJudgeRuleLuKouZuoZhuan;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_lukouzuozhuan)
  return item_lukouzuozhuan_;
}
::OPMessage::ItemJudgeRuleLuKouZuoZhuan* ItemsJudgeRules::release_item_lukouzuozhuan() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_lukouzuozhuan)
  clear_has_item_lukouzuozhuan();
  ::OPMessage::ItemJudgeRuleLuKouZuoZhuan* temp = item_lukouzuozhuan_;
  item_lukouzuozhuan_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_lukouzuozhuan(::OPMessage::ItemJudgeRuleLuKouZuoZhuan* item_lukouzuozhuan) {
  delete item_lukouzuozhuan_;
  item_lukouzuozhuan_ = item_lukouzuozhuan;
  if (item_lukouzuozhuan) {
    set_has_item_lukouzuozhuan();
  } else {
    clear_has_item_lukouzuozhuan();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_lukouzuozhuan)
}

// optional .OPMessage.ItemJudgeRuleLuKouYouZhuan item_lukouyouzhuan = 14;
bool ItemsJudgeRules::has_item_lukouyouzhuan() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ItemsJudgeRules::set_has_item_lukouyouzhuan() {
  _has_bits_[0] |= 0x00002000u;
}
void ItemsJudgeRules::clear_has_item_lukouyouzhuan() {
  _has_bits_[0] &= ~0x00002000u;
}
void ItemsJudgeRules::clear_item_lukouyouzhuan() {
  if (item_lukouyouzhuan_ != NULL) item_lukouyouzhuan_->::OPMessage::ItemJudgeRuleLuKouYouZhuan::Clear();
  clear_has_item_lukouyouzhuan();
}
const ::OPMessage::ItemJudgeRuleLuKouYouZhuan& ItemsJudgeRules::item_lukouyouzhuan() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_lukouyouzhuan)
  return item_lukouyouzhuan_ != NULL ? *item_lukouyouzhuan_ : *default_instance_->item_lukouyouzhuan_;
}
::OPMessage::ItemJudgeRuleLuKouYouZhuan* ItemsJudgeRules::mutable_item_lukouyouzhuan() {
  set_has_item_lukouyouzhuan();
  if (item_lukouyouzhuan_ == NULL) {
    item_lukouyouzhuan_ = new ::OPMessage::ItemJudgeRuleLuKouYouZhuan;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_lukouyouzhuan)
  return item_lukouyouzhuan_;
}
::OPMessage::ItemJudgeRuleLuKouYouZhuan* ItemsJudgeRules::release_item_lukouyouzhuan() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_lukouyouzhuan)
  clear_has_item_lukouyouzhuan();
  ::OPMessage::ItemJudgeRuleLuKouYouZhuan* temp = item_lukouyouzhuan_;
  item_lukouyouzhuan_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_lukouyouzhuan(::OPMessage::ItemJudgeRuleLuKouYouZhuan* item_lukouyouzhuan) {
  delete item_lukouyouzhuan_;
  item_lukouyouzhuan_ = item_lukouyouzhuan;
  if (item_lukouyouzhuan) {
    set_has_item_lukouyouzhuan();
  } else {
    clear_has_item_lukouyouzhuan();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_lukouyouzhuan)
}

// optional .OPMessage.ItemJudgeRuleZhiXianTongGuoLuKou item_zhixiantongguolukou = 15;
bool ItemsJudgeRules::has_item_zhixiantongguolukou() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void ItemsJudgeRules::set_has_item_zhixiantongguolukou() {
  _has_bits_[0] |= 0x00004000u;
}
void ItemsJudgeRules::clear_has_item_zhixiantongguolukou() {
  _has_bits_[0] &= ~0x00004000u;
}
void ItemsJudgeRules::clear_item_zhixiantongguolukou() {
  if (item_zhixiantongguolukou_ != NULL) item_zhixiantongguolukou_->::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou::Clear();
  clear_has_item_zhixiantongguolukou();
}
const ::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou& ItemsJudgeRules::item_zhixiantongguolukou() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_zhixiantongguolukou)
  return item_zhixiantongguolukou_ != NULL ? *item_zhixiantongguolukou_ : *default_instance_->item_zhixiantongguolukou_;
}
::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou* ItemsJudgeRules::mutable_item_zhixiantongguolukou() {
  set_has_item_zhixiantongguolukou();
  if (item_zhixiantongguolukou_ == NULL) {
    item_zhixiantongguolukou_ = new ::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_zhixiantongguolukou)
  return item_zhixiantongguolukou_;
}
::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou* ItemsJudgeRules::release_item_zhixiantongguolukou() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_zhixiantongguolukou)
  clear_has_item_zhixiantongguolukou();
  ::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou* temp = item_zhixiantongguolukou_;
  item_zhixiantongguolukou_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_zhixiantongguolukou(::OPMessage::ItemJudgeRuleZhiXianTongGuoLuKou* item_zhixiantongguolukou) {
  delete item_zhixiantongguolukou_;
  item_zhixiantongguolukou_ = item_zhixiantongguolukou;
  if (item_zhixiantongguolukou) {
    set_has_item_zhixiantongguolukou();
  } else {
    clear_has_item_zhixiantongguolukou();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_zhixiantongguolukou)
}

// optional .OPMessage.ItemJudgeRuleGongGongQiCheZhan item_gonggongqichezhan = 16;
bool ItemsJudgeRules::has_item_gonggongqichezhan() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void ItemsJudgeRules::set_has_item_gonggongqichezhan() {
  _has_bits_[0] |= 0x00008000u;
}
void ItemsJudgeRules::clear_has_item_gonggongqichezhan() {
  _has_bits_[0] &= ~0x00008000u;
}
void ItemsJudgeRules::clear_item_gonggongqichezhan() {
  if (item_gonggongqichezhan_ != NULL) item_gonggongqichezhan_->::OPMessage::ItemJudgeRuleGongGongQiCheZhan::Clear();
  clear_has_item_gonggongqichezhan();
}
const ::OPMessage::ItemJudgeRuleGongGongQiCheZhan& ItemsJudgeRules::item_gonggongqichezhan() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_gonggongqichezhan)
  return item_gonggongqichezhan_ != NULL ? *item_gonggongqichezhan_ : *default_instance_->item_gonggongqichezhan_;
}
::OPMessage::ItemJudgeRuleGongGongQiCheZhan* ItemsJudgeRules::mutable_item_gonggongqichezhan() {
  set_has_item_gonggongqichezhan();
  if (item_gonggongqichezhan_ == NULL) {
    item_gonggongqichezhan_ = new ::OPMessage::ItemJudgeRuleGongGongQiCheZhan;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_gonggongqichezhan)
  return item_gonggongqichezhan_;
}
::OPMessage::ItemJudgeRuleGongGongQiCheZhan* ItemsJudgeRules::release_item_gonggongqichezhan() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_gonggongqichezhan)
  clear_has_item_gonggongqichezhan();
  ::OPMessage::ItemJudgeRuleGongGongQiCheZhan* temp = item_gonggongqichezhan_;
  item_gonggongqichezhan_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_gonggongqichezhan(::OPMessage::ItemJudgeRuleGongGongQiCheZhan* item_gonggongqichezhan) {
  delete item_gonggongqichezhan_;
  item_gonggongqichezhan_ = item_gonggongqichezhan;
  if (item_gonggongqichezhan) {
    set_has_item_gonggongqichezhan();
  } else {
    clear_has_item_gonggongqichezhan();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_gonggongqichezhan)
}

// optional .OPMessage.ItemJudgeRuleRenXingHengDao item_renxinghengdao = 17;
bool ItemsJudgeRules::has_item_renxinghengdao() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void ItemsJudgeRules::set_has_item_renxinghengdao() {
  _has_bits_[0] |= 0x00010000u;
}
void ItemsJudgeRules::clear_has_item_renxinghengdao() {
  _has_bits_[0] &= ~0x00010000u;
}
void ItemsJudgeRules::clear_item_renxinghengdao() {
  if (item_renxinghengdao_ != NULL) item_renxinghengdao_->::OPMessage::ItemJudgeRuleRenXingHengDao::Clear();
  clear_has_item_renxinghengdao();
}
const ::OPMessage::ItemJudgeRuleRenXingHengDao& ItemsJudgeRules::item_renxinghengdao() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_renxinghengdao)
  return item_renxinghengdao_ != NULL ? *item_renxinghengdao_ : *default_instance_->item_renxinghengdao_;
}
::OPMessage::ItemJudgeRuleRenXingHengDao* ItemsJudgeRules::mutable_item_renxinghengdao() {
  set_has_item_renxinghengdao();
  if (item_renxinghengdao_ == NULL) {
    item_renxinghengdao_ = new ::OPMessage::ItemJudgeRuleRenXingHengDao;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_renxinghengdao)
  return item_renxinghengdao_;
}
::OPMessage::ItemJudgeRuleRenXingHengDao* ItemsJudgeRules::release_item_renxinghengdao() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_renxinghengdao)
  clear_has_item_renxinghengdao();
  ::OPMessage::ItemJudgeRuleRenXingHengDao* temp = item_renxinghengdao_;
  item_renxinghengdao_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_renxinghengdao(::OPMessage::ItemJudgeRuleRenXingHengDao* item_renxinghengdao) {
  delete item_renxinghengdao_;
  item_renxinghengdao_ = item_renxinghengdao;
  if (item_renxinghengdao) {
    set_has_item_renxinghengdao();
  } else {
    clear_has_item_renxinghengdao();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_renxinghengdao)
}

// optional .OPMessage.ItemJudgeRuleZhiXianXingShi item_zhixianxingshi = 18;
bool ItemsJudgeRules::has_item_zhixianxingshi() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void ItemsJudgeRules::set_has_item_zhixianxingshi() {
  _has_bits_[0] |= 0x00020000u;
}
void ItemsJudgeRules::clear_has_item_zhixianxingshi() {
  _has_bits_[0] &= ~0x00020000u;
}
void ItemsJudgeRules::clear_item_zhixianxingshi() {
  if (item_zhixianxingshi_ != NULL) item_zhixianxingshi_->::OPMessage::ItemJudgeRuleZhiXianXingShi::Clear();
  clear_has_item_zhixianxingshi();
}
const ::OPMessage::ItemJudgeRuleZhiXianXingShi& ItemsJudgeRules::item_zhixianxingshi() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_zhixianxingshi)
  return item_zhixianxingshi_ != NULL ? *item_zhixianxingshi_ : *default_instance_->item_zhixianxingshi_;
}
::OPMessage::ItemJudgeRuleZhiXianXingShi* ItemsJudgeRules::mutable_item_zhixianxingshi() {
  set_has_item_zhixianxingshi();
  if (item_zhixianxingshi_ == NULL) {
    item_zhixianxingshi_ = new ::OPMessage::ItemJudgeRuleZhiXianXingShi;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_zhixianxingshi)
  return item_zhixianxingshi_;
}
::OPMessage::ItemJudgeRuleZhiXianXingShi* ItemsJudgeRules::release_item_zhixianxingshi() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_zhixianxingshi)
  clear_has_item_zhixianxingshi();
  ::OPMessage::ItemJudgeRuleZhiXianXingShi* temp = item_zhixianxingshi_;
  item_zhixianxingshi_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_zhixianxingshi(::OPMessage::ItemJudgeRuleZhiXianXingShi* item_zhixianxingshi) {
  delete item_zhixianxingshi_;
  item_zhixianxingshi_ = item_zhixianxingshi;
  if (item_zhixianxingshi) {
    set_has_item_zhixianxingshi();
  } else {
    clear_has_item_zhixianxingshi();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_zhixianxingshi)
}

// optional .OPMessage.ItemJudgeRuleJiaJianDang item_jiajiandang = 19;
bool ItemsJudgeRules::has_item_jiajiandang() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void ItemsJudgeRules::set_has_item_jiajiandang() {
  _has_bits_[0] |= 0x00040000u;
}
void ItemsJudgeRules::clear_has_item_jiajiandang() {
  _has_bits_[0] &= ~0x00040000u;
}
void ItemsJudgeRules::clear_item_jiajiandang() {
  if (item_jiajiandang_ != NULL) item_jiajiandang_->::OPMessage::ItemJudgeRuleJiaJianDang::Clear();
  clear_has_item_jiajiandang();
}
const ::OPMessage::ItemJudgeRuleJiaJianDang& ItemsJudgeRules::item_jiajiandang() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_jiajiandang)
  return item_jiajiandang_ != NULL ? *item_jiajiandang_ : *default_instance_->item_jiajiandang_;
}
::OPMessage::ItemJudgeRuleJiaJianDang* ItemsJudgeRules::mutable_item_jiajiandang() {
  set_has_item_jiajiandang();
  if (item_jiajiandang_ == NULL) {
    item_jiajiandang_ = new ::OPMessage::ItemJudgeRuleJiaJianDang;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_jiajiandang)
  return item_jiajiandang_;
}
::OPMessage::ItemJudgeRuleJiaJianDang* ItemsJudgeRules::release_item_jiajiandang() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_jiajiandang)
  clear_has_item_jiajiandang();
  ::OPMessage::ItemJudgeRuleJiaJianDang* temp = item_jiajiandang_;
  item_jiajiandang_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_jiajiandang(::OPMessage::ItemJudgeRuleJiaJianDang* item_jiajiandang) {
  delete item_jiajiandang_;
  item_jiajiandang_ = item_jiajiandang;
  if (item_jiajiandang) {
    set_has_item_jiajiandang();
  } else {
    clear_has_item_jiajiandang();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_jiajiandang)
}

// optional .OPMessage.ItemJudgeRuleDiaoTou item_diaotou = 20;
bool ItemsJudgeRules::has_item_diaotou() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void ItemsJudgeRules::set_has_item_diaotou() {
  _has_bits_[0] |= 0x00080000u;
}
void ItemsJudgeRules::clear_has_item_diaotou() {
  _has_bits_[0] &= ~0x00080000u;
}
void ItemsJudgeRules::clear_item_diaotou() {
  if (item_diaotou_ != NULL) item_diaotou_->::OPMessage::ItemJudgeRuleDiaoTou::Clear();
  clear_has_item_diaotou();
}
const ::OPMessage::ItemJudgeRuleDiaoTou& ItemsJudgeRules::item_diaotou() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_diaotou)
  return item_diaotou_ != NULL ? *item_diaotou_ : *default_instance_->item_diaotou_;
}
::OPMessage::ItemJudgeRuleDiaoTou* ItemsJudgeRules::mutable_item_diaotou() {
  set_has_item_diaotou();
  if (item_diaotou_ == NULL) {
    item_diaotou_ = new ::OPMessage::ItemJudgeRuleDiaoTou;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_diaotou)
  return item_diaotou_;
}
::OPMessage::ItemJudgeRuleDiaoTou* ItemsJudgeRules::release_item_diaotou() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_diaotou)
  clear_has_item_diaotou();
  ::OPMessage::ItemJudgeRuleDiaoTou* temp = item_diaotou_;
  item_diaotou_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_diaotou(::OPMessage::ItemJudgeRuleDiaoTou* item_diaotou) {
  delete item_diaotou_;
  item_diaotou_ = item_diaotou;
  if (item_diaotou) {
    set_has_item_diaotou();
  } else {
    clear_has_item_diaotou();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_diaotou)
}

// optional .OPMessage.ItemJudgeRuleBianGengCheDao item_biangengchedao = 21;
bool ItemsJudgeRules::has_item_biangengchedao() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void ItemsJudgeRules::set_has_item_biangengchedao() {
  _has_bits_[0] |= 0x00100000u;
}
void ItemsJudgeRules::clear_has_item_biangengchedao() {
  _has_bits_[0] &= ~0x00100000u;
}
void ItemsJudgeRules::clear_item_biangengchedao() {
  if (item_biangengchedao_ != NULL) item_biangengchedao_->::OPMessage::ItemJudgeRuleBianGengCheDao::Clear();
  clear_has_item_biangengchedao();
}
const ::OPMessage::ItemJudgeRuleBianGengCheDao& ItemsJudgeRules::item_biangengchedao() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_biangengchedao)
  return item_biangengchedao_ != NULL ? *item_biangengchedao_ : *default_instance_->item_biangengchedao_;
}
::OPMessage::ItemJudgeRuleBianGengCheDao* ItemsJudgeRules::mutable_item_biangengchedao() {
  set_has_item_biangengchedao();
  if (item_biangengchedao_ == NULL) {
    item_biangengchedao_ = new ::OPMessage::ItemJudgeRuleBianGengCheDao;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_biangengchedao)
  return item_biangengchedao_;
}
::OPMessage::ItemJudgeRuleBianGengCheDao* ItemsJudgeRules::release_item_biangengchedao() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_biangengchedao)
  clear_has_item_biangengchedao();
  ::OPMessage::ItemJudgeRuleBianGengCheDao* temp = item_biangengchedao_;
  item_biangengchedao_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_biangengchedao(::OPMessage::ItemJudgeRuleBianGengCheDao* item_biangengchedao) {
  delete item_biangengchedao_;
  item_biangengchedao_ = item_biangengchedao;
  if (item_biangengchedao) {
    set_has_item_biangengchedao();
  } else {
    clear_has_item_biangengchedao();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_biangengchedao)
}

// optional .OPMessage.ItemJudgeRuleChaoChe item_chaoche = 22;
bool ItemsJudgeRules::has_item_chaoche() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void ItemsJudgeRules::set_has_item_chaoche() {
  _has_bits_[0] |= 0x00200000u;
}
void ItemsJudgeRules::clear_has_item_chaoche() {
  _has_bits_[0] &= ~0x00200000u;
}
void ItemsJudgeRules::clear_item_chaoche() {
  if (item_chaoche_ != NULL) item_chaoche_->::OPMessage::ItemJudgeRuleChaoChe::Clear();
  clear_has_item_chaoche();
}
const ::OPMessage::ItemJudgeRuleChaoChe& ItemsJudgeRules::item_chaoche() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_chaoche)
  return item_chaoche_ != NULL ? *item_chaoche_ : *default_instance_->item_chaoche_;
}
::OPMessage::ItemJudgeRuleChaoChe* ItemsJudgeRules::mutable_item_chaoche() {
  set_has_item_chaoche();
  if (item_chaoche_ == NULL) {
    item_chaoche_ = new ::OPMessage::ItemJudgeRuleChaoChe;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_chaoche)
  return item_chaoche_;
}
::OPMessage::ItemJudgeRuleChaoChe* ItemsJudgeRules::release_item_chaoche() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_chaoche)
  clear_has_item_chaoche();
  ::OPMessage::ItemJudgeRuleChaoChe* temp = item_chaoche_;
  item_chaoche_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_chaoche(::OPMessage::ItemJudgeRuleChaoChe* item_chaoche) {
  delete item_chaoche_;
  item_chaoche_ = item_chaoche;
  if (item_chaoche) {
    set_has_item_chaoche();
  } else {
    clear_has_item_chaoche();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_chaoche)
}

// optional .OPMessage.ItemJudgeRuleHuiChe item_huiche = 23;
bool ItemsJudgeRules::has_item_huiche() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void ItemsJudgeRules::set_has_item_huiche() {
  _has_bits_[0] |= 0x00400000u;
}
void ItemsJudgeRules::clear_has_item_huiche() {
  _has_bits_[0] &= ~0x00400000u;
}
void ItemsJudgeRules::clear_item_huiche() {
  if (item_huiche_ != NULL) item_huiche_->::OPMessage::ItemJudgeRuleHuiChe::Clear();
  clear_has_item_huiche();
}
const ::OPMessage::ItemJudgeRuleHuiChe& ItemsJudgeRules::item_huiche() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_huiche)
  return item_huiche_ != NULL ? *item_huiche_ : *default_instance_->item_huiche_;
}
::OPMessage::ItemJudgeRuleHuiChe* ItemsJudgeRules::mutable_item_huiche() {
  set_has_item_huiche();
  if (item_huiche_ == NULL) {
    item_huiche_ = new ::OPMessage::ItemJudgeRuleHuiChe;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_huiche)
  return item_huiche_;
}
::OPMessage::ItemJudgeRuleHuiChe* ItemsJudgeRules::release_item_huiche() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_huiche)
  clear_has_item_huiche();
  ::OPMessage::ItemJudgeRuleHuiChe* temp = item_huiche_;
  item_huiche_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_huiche(::OPMessage::ItemJudgeRuleHuiChe* item_huiche) {
  delete item_huiche_;
  item_huiche_ = item_huiche;
  if (item_huiche) {
    set_has_item_huiche();
  } else {
    clear_has_item_huiche();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_huiche)
}

// optional .OPMessage.ItemJudgeRuleKaoBianTingChe item_kaobiantingche = 24;
bool ItemsJudgeRules::has_item_kaobiantingche() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void ItemsJudgeRules::set_has_item_kaobiantingche() {
  _has_bits_[0] |= 0x00800000u;
}
void ItemsJudgeRules::clear_has_item_kaobiantingche() {
  _has_bits_[0] &= ~0x00800000u;
}
void ItemsJudgeRules::clear_item_kaobiantingche() {
  if (item_kaobiantingche_ != NULL) item_kaobiantingche_->::OPMessage::ItemJudgeRuleKaoBianTingChe::Clear();
  clear_has_item_kaobiantingche();
}
const ::OPMessage::ItemJudgeRuleKaoBianTingChe& ItemsJudgeRules::item_kaobiantingche() const {
  // @@protoc_insertion_point(field_get:OPMessage.ItemsJudgeRules.item_kaobiantingche)
  return item_kaobiantingche_ != NULL ? *item_kaobiantingche_ : *default_instance_->item_kaobiantingche_;
}
::OPMessage::ItemJudgeRuleKaoBianTingChe* ItemsJudgeRules::mutable_item_kaobiantingche() {
  set_has_item_kaobiantingche();
  if (item_kaobiantingche_ == NULL) {
    item_kaobiantingche_ = new ::OPMessage::ItemJudgeRuleKaoBianTingChe;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.ItemsJudgeRules.item_kaobiantingche)
  return item_kaobiantingche_;
}
::OPMessage::ItemJudgeRuleKaoBianTingChe* ItemsJudgeRules::release_item_kaobiantingche() {
  // @@protoc_insertion_point(field_release:OPMessage.ItemsJudgeRules.item_kaobiantingche)
  clear_has_item_kaobiantingche();
  ::OPMessage::ItemJudgeRuleKaoBianTingChe* temp = item_kaobiantingche_;
  item_kaobiantingche_ = NULL;
  return temp;
}
void ItemsJudgeRules::set_allocated_item_kaobiantingche(::OPMessage::ItemJudgeRuleKaoBianTingChe* item_kaobiantingche) {
  delete item_kaobiantingche_;
  item_kaobiantingche_ = item_kaobiantingche;
  if (item_kaobiantingche) {
    set_has_item_kaobiantingche();
  } else {
    clear_has_item_kaobiantingche();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.ItemsJudgeRules.item_kaobiantingche)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CoreInfo::kSoftwareStartInfoFieldNumber;
const int CoreInfo::kConfigInfoBasicFieldNumber;
const int CoreInfo::kItemsJudgeRulesFieldNumber;
const int CoreInfo::kOtherConfigInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CoreInfo::CoreInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OPMessage.CoreInfo)
}

void CoreInfo::InitAsDefaultInstance() {
  software_start_info_ = const_cast< ::OPMessage::SoftwareStartInfo*>(&::OPMessage::SoftwareStartInfo::default_instance());
  config_info_basic_ = const_cast< ::OPMessage::ConfigInfoBasic*>(&::OPMessage::ConfigInfoBasic::default_instance());
  items_judge_rules_ = const_cast< ::OPMessage::ItemsJudgeRules*>(&::OPMessage::ItemsJudgeRules::default_instance());
  other_config_info_ = const_cast< ::OPMessage::OtherConfigInfo*>(&::OPMessage::OtherConfigInfo::default_instance());
}

CoreInfo::CoreInfo(const CoreInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OPMessage.CoreInfo)
}

void CoreInfo::SharedCtor() {
  _cached_size_ = 0;
  software_start_info_ = NULL;
  config_info_basic_ = NULL;
  items_judge_rules_ = NULL;
  other_config_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CoreInfo::~CoreInfo() {
  // @@protoc_insertion_point(destructor:OPMessage.CoreInfo)
  SharedDtor();
}

void CoreInfo::SharedDtor() {
  if (this != default_instance_) {
    delete software_start_info_;
    delete config_info_basic_;
    delete items_judge_rules_;
    delete other_config_info_;
  }
}

void CoreInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CoreInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CoreInfo_descriptor_;
}

const CoreInfo& CoreInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageJkConfig_2eproto();
  return *default_instance_;
}

CoreInfo* CoreInfo::default_instance_ = NULL;

CoreInfo* CoreInfo::New(::google::protobuf::Arena* arena) const {
  CoreInfo* n = new CoreInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CoreInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:OPMessage.CoreInfo)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_software_start_info()) {
      if (software_start_info_ != NULL) software_start_info_->::OPMessage::SoftwareStartInfo::Clear();
    }
    if (has_config_info_basic()) {
      if (config_info_basic_ != NULL) config_info_basic_->::OPMessage::ConfigInfoBasic::Clear();
    }
    if (has_items_judge_rules()) {
      if (items_judge_rules_ != NULL) items_judge_rules_->::OPMessage::ItemsJudgeRules::Clear();
    }
    if (has_other_config_info()) {
      if (other_config_info_ != NULL) other_config_info_->::OPMessage::OtherConfigInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CoreInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OPMessage.CoreInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .OPMessage.SoftwareStartInfo software_start_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_software_start_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_config_info_basic;
        break;
      }

      // optional .OPMessage.ConfigInfoBasic config_info_basic = 2;
      case 2: {
        if (tag == 18) {
         parse_config_info_basic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config_info_basic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_items_judge_rules;
        break;
      }

      // optional .OPMessage.ItemsJudgeRules items_judge_rules = 3;
      case 3: {
        if (tag == 26) {
         parse_items_judge_rules:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_items_judge_rules()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_other_config_info;
        break;
      }

      // optional .OPMessage.OtherConfigInfo other_config_info = 4;
      case 4: {
        if (tag == 34) {
         parse_other_config_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_config_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OPMessage.CoreInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OPMessage.CoreInfo)
  return false;
#undef DO_
}

void CoreInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OPMessage.CoreInfo)
  // optional .OPMessage.SoftwareStartInfo software_start_info = 1;
  if (has_software_start_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->software_start_info_, output);
  }

  // optional .OPMessage.ConfigInfoBasic config_info_basic = 2;
  if (has_config_info_basic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_info_basic_, output);
  }

  // optional .OPMessage.ItemsJudgeRules items_judge_rules = 3;
  if (has_items_judge_rules()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->items_judge_rules_, output);
  }

  // optional .OPMessage.OtherConfigInfo other_config_info = 4;
  if (has_other_config_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->other_config_info_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OPMessage.CoreInfo)
}

::google::protobuf::uint8* CoreInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OPMessage.CoreInfo)
  // optional .OPMessage.SoftwareStartInfo software_start_info = 1;
  if (has_software_start_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->software_start_info_, false, target);
  }

  // optional .OPMessage.ConfigInfoBasic config_info_basic = 2;
  if (has_config_info_basic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->config_info_basic_, false, target);
  }

  // optional .OPMessage.ItemsJudgeRules items_judge_rules = 3;
  if (has_items_judge_rules()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->items_judge_rules_, false, target);
  }

  // optional .OPMessage.OtherConfigInfo other_config_info = 4;
  if (has_other_config_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->other_config_info_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OPMessage.CoreInfo)
  return target;
}

int CoreInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:OPMessage.CoreInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional .OPMessage.SoftwareStartInfo software_start_info = 1;
    if (has_software_start_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->software_start_info_);
    }

    // optional .OPMessage.ConfigInfoBasic config_info_basic = 2;
    if (has_config_info_basic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->config_info_basic_);
    }

    // optional .OPMessage.ItemsJudgeRules items_judge_rules = 3;
    if (has_items_judge_rules()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->items_judge_rules_);
    }

    // optional .OPMessage.OtherConfigInfo other_config_info = 4;
    if (has_other_config_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->other_config_info_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CoreInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OPMessage.CoreInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CoreInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CoreInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OPMessage.CoreInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OPMessage.CoreInfo)
    MergeFrom(*source);
  }
}

void CoreInfo::MergeFrom(const CoreInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OPMessage.CoreInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_software_start_info()) {
      mutable_software_start_info()->::OPMessage::SoftwareStartInfo::MergeFrom(from.software_start_info());
    }
    if (from.has_config_info_basic()) {
      mutable_config_info_basic()->::OPMessage::ConfigInfoBasic::MergeFrom(from.config_info_basic());
    }
    if (from.has_items_judge_rules()) {
      mutable_items_judge_rules()->::OPMessage::ItemsJudgeRules::MergeFrom(from.items_judge_rules());
    }
    if (from.has_other_config_info()) {
      mutable_other_config_info()->::OPMessage::OtherConfigInfo::MergeFrom(from.other_config_info());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CoreInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OPMessage.CoreInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CoreInfo::CopyFrom(const CoreInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OPMessage.CoreInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoreInfo::IsInitialized() const {

  return true;
}

void CoreInfo::Swap(CoreInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CoreInfo::InternalSwap(CoreInfo* other) {
  std::swap(software_start_info_, other->software_start_info_);
  std::swap(config_info_basic_, other->config_info_basic_);
  std::swap(items_judge_rules_, other->items_judge_rules_);
  std::swap(other_config_info_, other->other_config_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CoreInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CoreInfo_descriptor_;
  metadata.reflection = CoreInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CoreInfo

// optional .OPMessage.SoftwareStartInfo software_start_info = 1;
bool CoreInfo::has_software_start_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CoreInfo::set_has_software_start_info() {
  _has_bits_[0] |= 0x00000001u;
}
void CoreInfo::clear_has_software_start_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void CoreInfo::clear_software_start_info() {
  if (software_start_info_ != NULL) software_start_info_->::OPMessage::SoftwareStartInfo::Clear();
  clear_has_software_start_info();
}
const ::OPMessage::SoftwareStartInfo& CoreInfo::software_start_info() const {
  // @@protoc_insertion_point(field_get:OPMessage.CoreInfo.software_start_info)
  return software_start_info_ != NULL ? *software_start_info_ : *default_instance_->software_start_info_;
}
::OPMessage::SoftwareStartInfo* CoreInfo::mutable_software_start_info() {
  set_has_software_start_info();
  if (software_start_info_ == NULL) {
    software_start_info_ = new ::OPMessage::SoftwareStartInfo;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.CoreInfo.software_start_info)
  return software_start_info_;
}
::OPMessage::SoftwareStartInfo* CoreInfo::release_software_start_info() {
  // @@protoc_insertion_point(field_release:OPMessage.CoreInfo.software_start_info)
  clear_has_software_start_info();
  ::OPMessage::SoftwareStartInfo* temp = software_start_info_;
  software_start_info_ = NULL;
  return temp;
}
void CoreInfo::set_allocated_software_start_info(::OPMessage::SoftwareStartInfo* software_start_info) {
  delete software_start_info_;
  software_start_info_ = software_start_info;
  if (software_start_info) {
    set_has_software_start_info();
  } else {
    clear_has_software_start_info();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CoreInfo.software_start_info)
}

// optional .OPMessage.ConfigInfoBasic config_info_basic = 2;
bool CoreInfo::has_config_info_basic() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CoreInfo::set_has_config_info_basic() {
  _has_bits_[0] |= 0x00000002u;
}
void CoreInfo::clear_has_config_info_basic() {
  _has_bits_[0] &= ~0x00000002u;
}
void CoreInfo::clear_config_info_basic() {
  if (config_info_basic_ != NULL) config_info_basic_->::OPMessage::ConfigInfoBasic::Clear();
  clear_has_config_info_basic();
}
const ::OPMessage::ConfigInfoBasic& CoreInfo::config_info_basic() const {
  // @@protoc_insertion_point(field_get:OPMessage.CoreInfo.config_info_basic)
  return config_info_basic_ != NULL ? *config_info_basic_ : *default_instance_->config_info_basic_;
}
::OPMessage::ConfigInfoBasic* CoreInfo::mutable_config_info_basic() {
  set_has_config_info_basic();
  if (config_info_basic_ == NULL) {
    config_info_basic_ = new ::OPMessage::ConfigInfoBasic;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.CoreInfo.config_info_basic)
  return config_info_basic_;
}
::OPMessage::ConfigInfoBasic* CoreInfo::release_config_info_basic() {
  // @@protoc_insertion_point(field_release:OPMessage.CoreInfo.config_info_basic)
  clear_has_config_info_basic();
  ::OPMessage::ConfigInfoBasic* temp = config_info_basic_;
  config_info_basic_ = NULL;
  return temp;
}
void CoreInfo::set_allocated_config_info_basic(::OPMessage::ConfigInfoBasic* config_info_basic) {
  delete config_info_basic_;
  config_info_basic_ = config_info_basic;
  if (config_info_basic) {
    set_has_config_info_basic();
  } else {
    clear_has_config_info_basic();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CoreInfo.config_info_basic)
}

// optional .OPMessage.ItemsJudgeRules items_judge_rules = 3;
bool CoreInfo::has_items_judge_rules() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CoreInfo::set_has_items_judge_rules() {
  _has_bits_[0] |= 0x00000004u;
}
void CoreInfo::clear_has_items_judge_rules() {
  _has_bits_[0] &= ~0x00000004u;
}
void CoreInfo::clear_items_judge_rules() {
  if (items_judge_rules_ != NULL) items_judge_rules_->::OPMessage::ItemsJudgeRules::Clear();
  clear_has_items_judge_rules();
}
const ::OPMessage::ItemsJudgeRules& CoreInfo::items_judge_rules() const {
  // @@protoc_insertion_point(field_get:OPMessage.CoreInfo.items_judge_rules)
  return items_judge_rules_ != NULL ? *items_judge_rules_ : *default_instance_->items_judge_rules_;
}
::OPMessage::ItemsJudgeRules* CoreInfo::mutable_items_judge_rules() {
  set_has_items_judge_rules();
  if (items_judge_rules_ == NULL) {
    items_judge_rules_ = new ::OPMessage::ItemsJudgeRules;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.CoreInfo.items_judge_rules)
  return items_judge_rules_;
}
::OPMessage::ItemsJudgeRules* CoreInfo::release_items_judge_rules() {
  // @@protoc_insertion_point(field_release:OPMessage.CoreInfo.items_judge_rules)
  clear_has_items_judge_rules();
  ::OPMessage::ItemsJudgeRules* temp = items_judge_rules_;
  items_judge_rules_ = NULL;
  return temp;
}
void CoreInfo::set_allocated_items_judge_rules(::OPMessage::ItemsJudgeRules* items_judge_rules) {
  delete items_judge_rules_;
  items_judge_rules_ = items_judge_rules;
  if (items_judge_rules) {
    set_has_items_judge_rules();
  } else {
    clear_has_items_judge_rules();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CoreInfo.items_judge_rules)
}

// optional .OPMessage.OtherConfigInfo other_config_info = 4;
bool CoreInfo::has_other_config_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CoreInfo::set_has_other_config_info() {
  _has_bits_[0] |= 0x00000008u;
}
void CoreInfo::clear_has_other_config_info() {
  _has_bits_[0] &= ~0x00000008u;
}
void CoreInfo::clear_other_config_info() {
  if (other_config_info_ != NULL) other_config_info_->::OPMessage::OtherConfigInfo::Clear();
  clear_has_other_config_info();
}
const ::OPMessage::OtherConfigInfo& CoreInfo::other_config_info() const {
  // @@protoc_insertion_point(field_get:OPMessage.CoreInfo.other_config_info)
  return other_config_info_ != NULL ? *other_config_info_ : *default_instance_->other_config_info_;
}
::OPMessage::OtherConfigInfo* CoreInfo::mutable_other_config_info() {
  set_has_other_config_info();
  if (other_config_info_ == NULL) {
    other_config_info_ = new ::OPMessage::OtherConfigInfo;
  }
  // @@protoc_insertion_point(field_mutable:OPMessage.CoreInfo.other_config_info)
  return other_config_info_;
}
::OPMessage::OtherConfigInfo* CoreInfo::release_other_config_info() {
  // @@protoc_insertion_point(field_release:OPMessage.CoreInfo.other_config_info)
  clear_has_other_config_info();
  ::OPMessage::OtherConfigInfo* temp = other_config_info_;
  other_config_info_ = NULL;
  return temp;
}
void CoreInfo::set_allocated_other_config_info(::OPMessage::OtherConfigInfo* other_config_info) {
  delete other_config_info_;
  other_config_info_ = other_config_info;
  if (other_config_info) {
    set_has_other_config_info();
  } else {
    clear_has_other_config_info();
  }
  // @@protoc_insertion_point(field_set_allocated:OPMessage.CoreInfo.other_config_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace OPMessage

// @@protoc_insertion_point(global_scope)
